(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
var _a;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ADNLAddress = void 0;
var symbol_inspect_1 = __importDefault(require("symbol.inspect"));
var base32_1 = require("../utils/base32");
var crc16_1 = require("../utils/crc16");
var ADNLAddress = /*#__PURE__*/function () {
  function ADNLAddress(address) {
    var _this = this;
    _classCallCheck(this, ADNLAddress);
    this.toRaw = function () {
      return _this.address.toString('hex').toUpperCase();
    };
    this.toString = function () {
      var data = Buffer.concat([Buffer.from([0x2D]), _this.address]);
      var hash = (0, crc16_1.crc16)(data);
      data = Buffer.concat([data, hash]);
      return (0, base32_1.base32Encode)(data).slice(1);
    };
    this[_a] = function () {
      return _this.toString();
    };
    if (address.length !== 32) {
      throw Error('Invalid address');
    }
    this.address = address;
  }
  return _createClass(ADNLAddress, [{
    key: "equals",
    value: function equals(b) {
      return this.address.equals(b.address);
    }
  }], [{
    key: "parseFriendly",
    value: function parseFriendly(src) {
      if (src.length !== 55) {
        throw Error('Invalid address');
      }
      // Decoding
      src = 'f' + src;
      var decoded = (0, base32_1.base32Decode)(src);
      if (decoded[0] !== 0x2d) {
        throw Error('Invalid address');
      }
      var gotHash = decoded.slice(33);
      var hash = (0, crc16_1.crc16)(decoded.slice(0, 33));
      if (!hash.equals(gotHash)) {
        throw Error('Invalid address');
      }
      return new ADNLAddress(decoded.slice(1, 33));
    }
  }, {
    key: "parseRaw",
    value: function parseRaw(src) {
      var data = Buffer.from(src, 'base64');
      return new ADNLAddress(data);
    }
  }]);
}();
exports.ADNLAddress = ADNLAddress;
_a = symbol_inspect_1["default"];

}).call(this)}).call(this,require("buffer").Buffer)
},{"../utils/base32":77,"../utils/crc16":80,"buffer":196,"symbol.inspect":204}],2:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
var _a;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.address = exports.Address = void 0;
var symbol_inspect_1 = __importDefault(require("symbol.inspect"));
var crc16_1 = require("../utils/crc16");
var bounceable_tag = 0x11;
var non_bounceable_tag = 0x51;
var test_flag = 0x80;
function parseFriendlyAddress(src) {
  if (typeof src === 'string' && !Address.isFriendly(src)) {
    throw new Error('Unknown address type');
  }
  var data = Buffer.isBuffer(src) ? src : Buffer.from(src, 'base64');
  // 1byte tag + 1byte workchain + 32 bytes hash + 2 byte crc
  if (data.length !== 36) {
    throw new Error('Unknown address type: byte length is not equal to 36');
  }
  // Prepare data
  var addr = data.subarray(0, 34);
  var crc = data.subarray(34, 36);
  var calcedCrc = (0, crc16_1.crc16)(addr);
  if (!(calcedCrc[0] === crc[0] && calcedCrc[1] === crc[1])) {
    throw new Error('Invalid checksum: ' + src);
  }
  // Parse tag
  var tag = addr[0];
  var isTestOnly = false;
  var isBounceable = false;
  if (tag & test_flag) {
    isTestOnly = true;
    tag = tag ^ test_flag;
  }
  if (tag !== bounceable_tag && tag !== non_bounceable_tag) throw "Unknown address tag";
  isBounceable = tag === bounceable_tag;
  var workchain = null;
  if (addr[1] === 0xff) {
    // TODO we should read signed integer here
    workchain = -1;
  } else {
    workchain = addr[1];
  }
  var hashPart = addr.subarray(2, 34);
  return {
    isTestOnly: isTestOnly,
    isBounceable: isBounceable,
    workchain: workchain,
    hashPart: hashPart
  };
}
var Address = /*#__PURE__*/function () {
  function Address(workChain, hash) {
    var _this = this;
    _classCallCheck(this, Address);
    this.toRawString = function () {
      return _this.workChain + ':' + _this.hash.toString('hex');
    };
    this.toRaw = function () {
      var addressWithChecksum = Buffer.alloc(36);
      addressWithChecksum.set(_this.hash);
      addressWithChecksum.set([_this.workChain, _this.workChain, _this.workChain, _this.workChain], 32);
      return addressWithChecksum;
    };
    this.toStringBuffer = function (args) {
      var testOnly = args && args.testOnly !== undefined ? args.testOnly : false;
      var bounceable = args && args.bounceable !== undefined ? args.bounceable : true;
      var tag = bounceable ? bounceable_tag : non_bounceable_tag;
      if (testOnly) {
        tag |= test_flag;
      }
      var addr = Buffer.alloc(34);
      addr[0] = tag;
      addr[1] = _this.workChain;
      addr.set(_this.hash, 2);
      var addressWithChecksum = Buffer.alloc(36);
      addressWithChecksum.set(addr);
      addressWithChecksum.set((0, crc16_1.crc16)(addr), 34);
      return addressWithChecksum;
    };
    this.toString = function (args) {
      var urlSafe = args && args.urlSafe !== undefined ? args.urlSafe : true;
      var buffer = _this.toStringBuffer(args);
      if (urlSafe) {
        return buffer.toString('base64').replace(/\+/g, '-').replace(/\//g, '_');
      } else {
        return buffer.toString('base64');
      }
    };
    this[_a] = function () {
      return _this.toString();
    };
    if (hash.length !== 32) {
      throw new Error('Invalid address hash length: ' + hash.length);
    }
    this.workChain = workChain;
    this.hash = hash;
    Object.freeze(this);
  }
  return _createClass(Address, [{
    key: "equals",
    value: function equals(src) {
      if (src.workChain !== this.workChain) {
        return false;
      }
      return src.hash.equals(this.hash);
    }
  }], [{
    key: "isAddress",
    value: function isAddress(src) {
      return src instanceof Address;
    }
  }, {
    key: "isFriendly",
    value: function isFriendly(source) {
      // Check length
      if (source.length !== 48) {
        return false;
      }
      // Check if address is valid base64
      if (!/[A-Za-z0-9+/_-]+/.test(source)) {
        return false;
      }
      return true;
    }
  }, {
    key: "isRaw",
    value: function isRaw(source) {
      // Check if has delimiter
      if (source.indexOf(':') === -1) {
        return false;
      }
      var _source$split = source.split(':'),
        _source$split2 = _slicedToArray(_source$split, 2),
        wc = _source$split2[0],
        hash = _source$split2[1];
      // wc is not valid
      if (!Number.isInteger(parseFloat(wc))) {
        return false;
      }
      // hash is not valid
      if (!/[a-f0-9]+/.test(hash.toLowerCase())) {
        return false;
      }
      // has is not correct
      if (hash.length !== 64) {
        return false;
      }
      return true;
    }
  }, {
    key: "normalize",
    value: function normalize(source) {
      if (typeof source === 'string') {
        return Address.parse(source).toString();
      } else {
        return source.toString();
      }
    }
  }, {
    key: "parse",
    value: function parse(source) {
      if (Address.isFriendly(source)) {
        return this.parseFriendly(source).address;
      } else if (Address.isRaw(source)) {
        return this.parseRaw(source);
      } else {
        throw new Error('Unknown address type: ' + source);
      }
    }
  }, {
    key: "parseRaw",
    value: function parseRaw(source) {
      var workChain = parseInt(source.split(":")[0]);
      var hash = Buffer.from(source.split(":")[1], 'hex');
      return new Address(workChain, hash);
    }
  }, {
    key: "parseFriendly",
    value: function parseFriendly(source) {
      if (Buffer.isBuffer(source)) {
        var r = parseFriendlyAddress(source);
        return {
          isBounceable: r.isBounceable,
          isTestOnly: r.isTestOnly,
          address: new Address(r.workchain, r.hashPart)
        };
      } else {
        var addr = source.replace(/\-/g, '+').replace(/_/g, '\/'); // Convert from url-friendly to true base64
        var _r = parseFriendlyAddress(addr);
        return {
          isBounceable: _r.isBounceable,
          isTestOnly: _r.isTestOnly,
          address: new Address(_r.workchain, _r.hashPart)
        };
      }
    }
  }]);
}();
exports.Address = Address;
_a = symbol_inspect_1["default"];
function address(src) {
  return Address.parse(src);
}
exports.address = address;

}).call(this)}).call(this,require("buffer").Buffer)
},{"../utils/crc16":80,"buffer":196,"symbol.inspect":204}],3:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
var _a;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ExternalAddress = void 0;
var symbol_inspect_1 = __importDefault(require("symbol.inspect"));
var ExternalAddress = /*#__PURE__*/function () {
  function ExternalAddress(value, bits) {
    var _this = this;
    _classCallCheck(this, ExternalAddress);
    this[_a] = function () {
      return _this.toString();
    };
    this.value = value;
    this.bits = bits;
  }
  return _createClass(ExternalAddress, [{
    key: "toString",
    value: function toString() {
      return "External<".concat(this.bits, ":").concat(this.value, ">");
    }
  }], [{
    key: "isAddress",
    value: function isAddress(src) {
      return src instanceof ExternalAddress;
    }
  }]);
}();
exports.ExternalAddress = ExternalAddress;
_a = symbol_inspect_1["default"];

},{"symbol.inspect":204}],4:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.contractAddress = void 0;
var Builder_1 = require("../boc/Builder");
var StateInit_1 = require("../types/StateInit");
var Address_1 = require("./Address");
function contractAddress(workchain, init) {
  var hash = (0, Builder_1.beginCell)().store((0, StateInit_1.storeStateInit)(init)).endCell().hash();
  return new Address_1.Address(workchain, hash);
}
exports.contractAddress = contractAddress;

},{"../boc/Builder":8,"../types/StateInit":63,"./Address":2}],5:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BitBuilder = void 0;
var Address_1 = require("../address/Address");
var ExternalAddress_1 = require("../address/ExternalAddress");
var BitString_1 = require("./BitString");
/**
 * Class for building bit strings
 */
var BitBuilder = /*#__PURE__*/function () {
  function BitBuilder() {
    var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1023;
    _classCallCheck(this, BitBuilder);
    this._buffer = Buffer.alloc(Math.ceil(size / 8));
    this._length = 0;
  }
  /**
   * Current number of bits written
   */
  return _createClass(BitBuilder, [{
    key: "length",
    get: function get() {
      return this._length;
    }
    /**
     * Write a single bit
     * @param value bit to write, true or positive number for 1, false or zero or negative for 0
     */
  }, {
    key: "writeBit",
    value: function writeBit(value) {
      // Check overflow
      var n = this._length;
      if (n > this._buffer.length * 8) {
        throw new Error("BitBuilder overflow");
      }
      // Set bit
      if (typeof value === 'boolean' && value === true || typeof value === 'number' && value > 0) {
        this._buffer[n / 8 | 0] |= 1 << 7 - n % 8;
      }
      // Advance
      this._length++;
    }
    /**
     * Copy bits from BitString
     * @param src source bits
     */
  }, {
    key: "writeBits",
    value: function writeBits(src) {
      for (var i = 0; i < src.length; i++) {
        this.writeBit(src.at(i));
      }
    }
    /**
     * Write bits from buffer
     * @param src source buffer
     */
  }, {
    key: "writeBuffer",
    value: function writeBuffer(src) {
      // Special case for aligned offsets
      if (this._length % 8 === 0) {
        if (this._length + src.length * 8 > this._buffer.length * 8) {
          throw new Error("BitBuilder overflow");
        }
        src.copy(this._buffer, this._length / 8);
        this._length += src.length * 8;
      } else {
        for (var i = 0; i < src.length; i++) {
          this.writeUint(src[i], 8);
        }
      }
    }
    /**
     * Write uint value
     * @param value value as bigint or number
     * @param bits number of bits to write
     */
  }, {
    key: "writeUint",
    value: function writeUint(value, bits) {
      if (bits < 0 || !Number.isSafeInteger(bits)) {
        throw Error("invalid bit length. Got ".concat(bits));
      }
      var v = BigInt(value);
      if (bits === 0) {
        if (v !== 0n) {
          throw Error("value is not zero for ".concat(bits, " bits. Got ").concat(value));
        } else {
          return;
        }
      }
      var vBits = 1n << BigInt(bits);
      if (v < 0 || v >= vBits) {
        throw Error("bitLength is too small for a value ".concat(value, ". Got ").concat(bits));
      }
      if (this._length + bits > this._buffer.length * 8) {
        throw new Error("BitBuilder overflow");
      }
      var tillByte = 8 - this._length % 8;
      if (tillByte > 0) {
        var bidx = Math.floor(this._length / 8);
        if (bits < tillByte) {
          var wb = Number(v);
          this._buffer[bidx] |= wb << tillByte - bits;
          this._length += bits;
        } else {
          var _wb = Number(v >> BigInt(bits - tillByte));
          this._buffer[bidx] |= _wb;
          this._length += tillByte;
        }
      }
      bits -= tillByte;
      while (bits > 0) {
        if (bits >= 8) {
          this._buffer[this._length / 8] = Number(v >> BigInt(bits - 8) & 0xffn);
          this._length += 8;
          bits -= 8;
        } else {
          this._buffer[this._length / 8] = Number(v << BigInt(8 - bits) & 0xffn);
          this._length += bits;
          bits = 0;
        }
      }
    }
    /**
     * Write int value
     * @param value value as bigint or number
     * @param bits number of bits to write
     */
  }, {
    key: "writeInt",
    value: function writeInt(value, bits) {
      var v = BigInt(value);
      if (bits < 0 || !Number.isSafeInteger(bits)) {
        throw Error("invalid bit length. Got ".concat(bits));
      }
      // Corner case for zero bits
      if (bits === 0) {
        if (value !== 0n) {
          throw Error("value is not zero for ".concat(bits, " bits. Got ").concat(value));
        } else {
          return;
        }
      }
      // Corner case for one bit
      if (bits === 1) {
        if (value !== -1n && value !== 0n) {
          throw Error("value is not zero or -1 for ".concat(bits, " bits. Got ").concat(value));
        } else {
          this.writeBit(value === -1n);
          return;
        }
      }
      // Check input
      var vBits = 1n << BigInt(bits) - 1n;
      if (v < -vBits || v >= vBits) {
        throw Error("value is out of range for ".concat(bits, " bits. Got ").concat(value));
      }
      // Write sign
      if (v < 0) {
        this.writeBit(true);
        v = vBits + v;
      } else {
        this.writeBit(false);
      }
      // Write value
      this.writeUint(v, bits - 1);
    }
    /**
     * Wrtie var uint value, used for serializing coins
     * @param value value to write as bigint or number
     * @param bits header bits to write size
     */
  }, {
    key: "writeVarUint",
    value: function writeVarUint(value, bits) {
      var v = BigInt(value);
      if (bits < 0 || !Number.isSafeInteger(bits)) {
        throw Error("invalid bit length. Got ".concat(bits));
      }
      if (v < 0) {
        throw Error("value is negative. Got ".concat(value));
      }
      // Corner case for zero
      if (v === 0n) {
        // Write zero size
        this.writeUint(0, bits);
        return;
      }
      // Calculate size
      var sizeBytes = Math.ceil(v.toString(2).length / 8); // Fastest way in most environments
      var sizeBits = sizeBytes * 8;
      // Write size
      this.writeUint(sizeBytes, bits);
      // Write number
      this.writeUint(v, sizeBits);
    }
    /**
     * Wrtie var int value, used for serializing coins
     * @param value value to write as bigint or number
     * @param bits header bits to write size
     */
  }, {
    key: "writeVarInt",
    value: function writeVarInt(value, bits) {
      var v = BigInt(value);
      if (bits < 0 || !Number.isSafeInteger(bits)) {
        throw Error("invalid bit length. Got ".concat(bits));
      }
      // Corner case for zero
      if (v === 0n) {
        // Write zero size
        this.writeUint(0, bits);
        return;
      }
      // Calculate size
      var v2 = v > 0 ? v : -v;
      var sizeBytes = 1 + Math.ceil(v2.toString(2).length / 8); // Fastest way in most environments
      var sizeBits = sizeBytes * 8;
      // Write size
      this.writeUint(sizeBytes, bits);
      // Write number
      this.writeInt(v, sizeBits);
    }
    /**
     * Write coins in var uint format
     * @param amount amount to write
     */
  }, {
    key: "writeCoins",
    value: function writeCoins(amount) {
      this.writeVarUint(amount, 4);
    }
    /**
     * Write address
     * @param address write address or address external
     */
  }, {
    key: "writeAddress",
    value: function writeAddress(address) {
      // Is empty address
      if (address === null || address === undefined) {
        this.writeUint(0, 2); // Empty address
        return;
      }
      // Is Internal Address
      if (Address_1.Address.isAddress(address)) {
        this.writeUint(2, 2); // Internal address
        this.writeUint(0, 1); // No anycast
        this.writeInt(address.workChain, 8);
        this.writeBuffer(address.hash);
        return;
      }
      // Is External Address
      if (ExternalAddress_1.ExternalAddress.isAddress(address)) {
        this.writeUint(1, 2); // External address
        this.writeUint(address.bits, 9);
        this.writeUint(address.value, address.bits);
        return;
      }
      // Invalid address
      throw Error("Invalid address. Got ".concat(address));
    }
    /**
     * Build BitString
     * @returns result bit string
     */
  }, {
    key: "build",
    value: function build() {
      return new BitString_1.BitString(this._buffer, 0, this._length);
    }
    /**
     * Build into Buffer
     * @returns result buffer
     */
  }, {
    key: "buffer",
    value: function buffer() {
      if (this._length % 8 !== 0) {
        throw new Error("BitBuilder buffer is not byte aligned");
      }
      return this._buffer.subarray(0, this._length / 8);
    }
  }]);
}();
exports.BitBuilder = BitBuilder;

}).call(this)}).call(this,require("buffer").Buffer)
},{"../address/Address":2,"../address/ExternalAddress":3,"./BitString":7,"buffer":196}],6:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BitReader = void 0;
var Address_1 = require("../address/Address");
var ExternalAddress_1 = require("../address/ExternalAddress");
/**
 * Class for reading bit strings
 */
var BitReader = /*#__PURE__*/function () {
  function BitReader(bits) {
    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    _classCallCheck(this, BitReader);
    this._checkpoints = [];
    this._bits = bits;
    this._offset = offset;
  }
  /**
   * Offset in source bit string
   */
  return _createClass(BitReader, [{
    key: "offset",
    get: function get() {
      return this._offset;
    }
    /**
     * Number of bits remaining
     */
  }, {
    key: "remaining",
    get: function get() {
      return this._bits.length - this._offset;
    }
    /**
     * Skip bits
     * @param bits number of bits to skip
     */
  }, {
    key: "skip",
    value: function skip(bits) {
      if (bits < 0 || this._offset + bits > this._bits.length) {
        throw new Error("Index ".concat(this._offset + bits, " is out of bounds"));
      }
      this._offset += bits;
    }
    /**
     * Reset to the beginning or latest checkpoint
     */
  }, {
    key: "reset",
    value: function reset() {
      if (this._checkpoints.length > 0) {
        this._offset = this._checkpoints.pop();
      } else {
        this._offset = 0;
      }
    }
    /**
     * Save checkpoint
     */
  }, {
    key: "save",
    value: function save() {
      this._checkpoints.push(this._offset);
    }
    /**
     * Load a single bit
     * @returns true if the bit is set, false otherwise
     */
  }, {
    key: "loadBit",
    value: function loadBit() {
      var r = this._bits.at(this._offset);
      this._offset++;
      return r;
    }
    /**
     * Preload bit
     * @returns true if the bit is set, false otherwise
     */
  }, {
    key: "preloadBit",
    value: function preloadBit() {
      return this._bits.at(this._offset);
    }
    /**
     * Load bit string
     * @param bits number of bits to read
     * @returns new bitstring
     */
  }, {
    key: "loadBits",
    value: function loadBits(bits) {
      var r = this._bits.substring(this._offset, bits);
      this._offset += bits;
      return r;
    }
    /**
     * Preload bit string
     * @param bits number of bits to read
     * @returns new bitstring
     */
  }, {
    key: "preloadBits",
    value: function preloadBits(bits) {
      return this._bits.substring(this._offset, bits);
    }
    /**
     * Load buffer
     * @param bytes number of bytes
     * @returns new buffer
     */
  }, {
    key: "loadBuffer",
    value: function loadBuffer(bytes) {
      var buf = this._preloadBuffer(bytes, this._offset);
      this._offset += bytes * 8;
      return buf;
    }
    /**
     * Preload buffer
     * @param bytes number of bytes
     * @returns new buffer
     */
  }, {
    key: "preloadBuffer",
    value: function preloadBuffer(bytes) {
      return this._preloadBuffer(bytes, this._offset);
    }
    /**
     * Load uint value
     * @param bits uint bits
     * @returns read value as number
     */
  }, {
    key: "loadUint",
    value: function loadUint(bits) {
      return this._toSafeInteger(this.loadUintBig(bits), 'loadUintBig');
    }
    /**
     * Load uint value as bigint
     * @param bits uint bits
     * @returns read value as bigint
     */
  }, {
    key: "loadUintBig",
    value: function loadUintBig(bits) {
      var loaded = this.preloadUintBig(bits);
      this._offset += bits;
      return loaded;
    }
    /**
     * Preload uint value
     * @param bits uint bits
     * @returns read value as number
     */
  }, {
    key: "preloadUint",
    value: function preloadUint(bits) {
      return this._toSafeInteger(this._preloadUint(bits, this._offset), 'preloadUintBig');
    }
    /**
     * Preload uint value as bigint
     * @param bits uint bits
     * @returns read value as bigint
     */
  }, {
    key: "preloadUintBig",
    value: function preloadUintBig(bits) {
      return this._preloadUint(bits, this._offset);
    }
    /**
     * Load int value
     * @param bits int bits
     * @returns read value as bigint
     */
  }, {
    key: "loadInt",
    value: function loadInt(bits) {
      var res = this._preloadInt(bits, this._offset);
      this._offset += bits;
      return this._toSafeInteger(res, 'loadUintBig');
    }
    /**
     * Load int value as bigint
     * @param bits int bits
     * @returns read value as bigint
     */
  }, {
    key: "loadIntBig",
    value: function loadIntBig(bits) {
      var res = this._preloadInt(bits, this._offset);
      this._offset += bits;
      return res;
    }
    /**
     * Preload int value
     * @param bits int bits
     * @returns read value as bigint
     */
  }, {
    key: "preloadInt",
    value: function preloadInt(bits) {
      return this._toSafeInteger(this._preloadInt(bits, this._offset), 'preloadIntBig');
    }
    /**
     * Preload int value
     * @param bits int bits
     * @returns read value as bigint
     */
  }, {
    key: "preloadIntBig",
    value: function preloadIntBig(bits) {
      return this._preloadInt(bits, this._offset);
    }
    /**
     * Load varuint value
     * @param bits number of bits to read the size
     * @returns read value as bigint
     */
  }, {
    key: "loadVarUint",
    value: function loadVarUint(bits) {
      var size = Number(this.loadUint(bits));
      return this._toSafeInteger(this.loadUintBig(size * 8), 'loadVarUintBig');
    }
    /**
     * Load varuint value
     * @param bits number of bits to read the size
     * @returns read value as bigint
     */
  }, {
    key: "loadVarUintBig",
    value: function loadVarUintBig(bits) {
      var size = Number(this.loadUint(bits));
      return this.loadUintBig(size * 8);
    }
    /**
     * Preload varuint value
     * @param bits number of bits to read the size
     * @returns read value as bigint
     */
  }, {
    key: "preloadVarUint",
    value: function preloadVarUint(bits) {
      var size = Number(this._preloadUint(bits, this._offset));
      return this._toSafeInteger(this._preloadUint(size * 8, this._offset + bits), 'preloadVarUintBig');
    }
    /**
     * Preload varuint value
     * @param bits number of bits to read the size
     * @returns read value as bigint
     */
  }, {
    key: "preloadVarUintBig",
    value: function preloadVarUintBig(bits) {
      var size = Number(this._preloadUint(bits, this._offset));
      return this._preloadUint(size * 8, this._offset + bits);
    }
    /**
     * Load varint value
     * @param bits number of bits to read the size
     * @returns read value as bigint
     */
  }, {
    key: "loadVarInt",
    value: function loadVarInt(bits) {
      var size = Number(this.loadUint(bits));
      return this._toSafeInteger(this.loadIntBig(size * 8), 'loadVarIntBig');
    }
    /**
     * Load varint value
     * @param bits number of bits to read the size
     * @returns read value as bigint
     */
  }, {
    key: "loadVarIntBig",
    value: function loadVarIntBig(bits) {
      var size = Number(this.loadUint(bits));
      return this.loadIntBig(size * 8);
    }
    /**
     * Preload varint value
     * @param bits number of bits to read the size
     * @returns read value as bigint
     */
  }, {
    key: "preloadVarInt",
    value: function preloadVarInt(bits) {
      var size = Number(this._preloadUint(bits, this._offset));
      return this._toSafeInteger(this._preloadInt(size * 8, this._offset + bits), 'preloadVarIntBig');
    }
    /**
     * Preload varint value
     * @param bits number of bits to read the size
     * @returns read value as bigint
     */
  }, {
    key: "preloadVarIntBig",
    value: function preloadVarIntBig(bits) {
      var size = Number(this._preloadUint(bits, this._offset));
      return this._preloadInt(size * 8, this._offset + bits);
    }
    /**
     * Load coins value
     * @returns read value as bigint
     */
  }, {
    key: "loadCoins",
    value: function loadCoins() {
      return this.loadVarUintBig(4);
    }
    /**
     * Preload coins value
     * @returns read value as bigint
     */
  }, {
    key: "preloadCoins",
    value: function preloadCoins() {
      return this.preloadVarUintBig(4);
    }
    /**
     * Load Address
     * @returns Address
     */
  }, {
    key: "loadAddress",
    value: function loadAddress() {
      var type = Number(this._preloadUint(2, this._offset));
      if (type === 2) {
        return this._loadInternalAddress();
      } else {
        throw new Error("Invalid address: " + type);
      }
    }
    /**
     * Load internal address
     * @returns Address or null
     */
  }, {
    key: "loadMaybeAddress",
    value: function loadMaybeAddress() {
      var type = Number(this._preloadUint(2, this._offset));
      if (type === 0) {
        this._offset += 2;
        return null;
      } else if (type === 2) {
        return this._loadInternalAddress();
      } else {
        throw new Error("Invalid address");
      }
    }
    /**
     * Load external address
     * @returns ExternalAddress
     */
  }, {
    key: "loadExternalAddress",
    value: function loadExternalAddress() {
      var type = Number(this._preloadUint(2, this._offset));
      if (type === 1) {
        return this._loadExternalAddress();
      } else {
        throw new Error("Invalid address");
      }
    }
    /**
     * Load external address
     * @returns ExternalAddress or null
     */
  }, {
    key: "loadMaybeExternalAddress",
    value: function loadMaybeExternalAddress() {
      var type = Number(this._preloadUint(2, this._offset));
      if (type === 0) {
        this._offset += 2;
        return null;
      } else if (type === 1) {
        return this._loadExternalAddress();
      } else {
        throw new Error("Invalid address");
      }
    }
    /**
     * Read address of any type
     * @returns Address or ExternalAddress or null
     */
  }, {
    key: "loadAddressAny",
    value: function loadAddressAny() {
      var type = Number(this._preloadUint(2, this._offset));
      if (type === 0) {
        this._offset += 2;
        return null;
      } else if (type === 2) {
        return this._loadInternalAddress();
      } else if (type === 1) {
        return this._loadExternalAddress();
      } else if (type === 3) {
        throw Error('Unsupported');
      } else {
        throw Error('Unreachable');
      }
    }
    /**
     * Load bit string that was padded to make it byte alligned. Used in BOC serialization
     * @param bytes number of bytes to read
     */
  }, {
    key: "loadPaddedBits",
    value: function loadPaddedBits(bits) {
      // Check that number of bits is byte alligned
      if (bits % 8 !== 0) {
        throw new Error("Invalid number of bits");
      }
      // Skip padding
      var length = bits;
      while (true) {
        if (this._bits.at(this._offset + length - 1)) {
          length--;
          break;
        } else {
          length--;
        }
      }
      // Read substring
      var r = this._bits.substring(this._offset, length);
      this._offset += bits;
      return r;
    }
    /**
     * Clone BitReader
     */
  }, {
    key: "clone",
    value: function clone() {
      return new BitReader(this._bits, this._offset);
    }
    /**
     * Preload int from specific offset
     * @param bits bits to preload
     * @param offset offset to start from
     * @returns read value as bigint
     */
  }, {
    key: "_preloadInt",
    value: function _preloadInt(bits, offset) {
      if (bits == 0) {
        return 0n;
      }
      var sign = this._bits.at(offset);
      var res = 0n;
      for (var i = 0; i < bits - 1; i++) {
        if (this._bits.at(offset + 1 + i)) {
          res += 1n << BigInt(bits - i - 1 - 1);
        }
      }
      if (sign) {
        res = res - (1n << BigInt(bits - 1));
      }
      return res;
    }
    /**
     * Preload uint from specific offset
     * @param bits bits to preload
     * @param offset offset to start from
     * @returns read value as bigint
     */
  }, {
    key: "_preloadUint",
    value: function _preloadUint(bits, offset) {
      if (bits == 0) {
        return 0n;
      }
      var res = 0n;
      for (var i = 0; i < bits; i++) {
        if (this._bits.at(offset + i)) {
          res += 1n << BigInt(bits - i - 1);
        }
      }
      return res;
    }
  }, {
    key: "_preloadBuffer",
    value: function _preloadBuffer(bytes, offset) {
      // Try to load fast
      var fastBuffer = this._bits.subbuffer(offset, bytes * 8);
      if (fastBuffer) {
        return fastBuffer;
      }
      // Load slow
      var buf = Buffer.alloc(bytes);
      for (var i = 0; i < bytes; i++) {
        buf[i] = Number(this._preloadUint(8, offset + i * 8));
      }
      return buf;
    }
  }, {
    key: "_loadInternalAddress",
    value: function _loadInternalAddress() {
      var type = Number(this._preloadUint(2, this._offset));
      if (type !== 2) {
        throw Error('Invalid address');
      }
      // No Anycast supported
      if (this._preloadUint(1, this._offset + 2) !== 0n) {
        throw Error('Invalid address');
      }
      // Read address
      var wc = Number(this._preloadInt(8, this._offset + 3));
      var hash = this._preloadBuffer(32, this._offset + 11);
      // Update offset
      this._offset += 267;
      return new Address_1.Address(wc, hash);
    }
  }, {
    key: "_loadExternalAddress",
    value: function _loadExternalAddress() {
      var type = Number(this._preloadUint(2, this._offset));
      if (type !== 1) {
        throw Error('Invalid address');
      }
      // Load length
      var bits = Number(this._preloadUint(9, this._offset + 2));
      // Load address
      var value = this._preloadUint(bits, this._offset + 11);
      // Update offset
      this._offset += 11 + bits;
      return new ExternalAddress_1.ExternalAddress(value, bits);
    }
  }, {
    key: "_toSafeInteger",
    value: function _toSafeInteger(src, alt) {
      if (BigInt(Number.MAX_SAFE_INTEGER) < src || src < BigInt(Number.MIN_SAFE_INTEGER)) {
        throw new TypeError("".concat(src, " is out of safe integer range. Use ").concat(alt, " instead"));
      }
      return Number(src);
    }
  }]);
}();
exports.BitReader = BitReader;

}).call(this)}).call(this,require("buffer").Buffer)
},{"../address/Address":2,"../address/ExternalAddress":3,"buffer":196}],7:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
var _a;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BitString = void 0;
var paddedBits_1 = require("./utils/paddedBits");
var symbol_inspect_1 = __importDefault(require("symbol.inspect"));
/**
 * BitString is a class that represents a bitstring in a buffer with a specified offset and length
 */
var BitString = /*#__PURE__*/function () {
  /**
   * Constructing BitString from a buffer
   * @param data data that contains the bitstring data. NOTE: We are expecting this buffer to be NOT modified
   * @param offset offset in bits from the start of the buffer
   * @param length length of the bitstring in bits
   */
  function BitString(data, offset, length) {
    var _this = this;
    _classCallCheck(this, BitString);
    this[_a] = function () {
      return _this.toString();
    };
    // Check bounds
    if (length < 0) {
      throw new Error("Length ".concat(length, " is out of bounds"));
    }
    this._length = length;
    this._data = data;
    this._offset = offset;
  }
  /**
   * Returns the length of the bitstring
   */
  return _createClass(BitString, [{
    key: "length",
    get: function get() {
      return this._length;
    }
    /**
     * Returns the bit at the specified index
     * @param index index of the bit
     * @throws Error if index is out of bounds
     * @returns true if the bit is set, false otherwise
     */
  }, {
    key: "at",
    value: function at(index) {
      // Check bounds
      if (index >= this._length) {
        throw new Error("Index ".concat(index, " > ").concat(this._length, " is out of bounds"));
      }
      if (index < 0) {
        throw new Error("Index ".concat(index, " < 0 is out of bounds"));
      }
      // Calculcate offsets
      var byteIndex = this._offset + index >> 3;
      var bitIndex = 7 - (this._offset + index) % 8; // NOTE: We are using big endian
      // Return the bit
      return (this._data[byteIndex] & 1 << bitIndex) !== 0;
    }
    /**
     * Get a subscring of the bitstring
     * @param offset
     * @param length
     * @returns
     */
  }, {
    key: "substring",
    value: function substring(offset, length) {
      // Check offset
      if (offset > this._length) {
        throw new Error("Offset(".concat(offset, ") > ").concat(this._length, " is out of bounds"));
      }
      if (offset < 0) {
        throw new Error("Offset(".concat(offset, ") < 0 is out of bounds"));
      }
      // Corner case of empty string
      if (length === 0) {
        return BitString.EMPTY;
      }
      if (offset + length > this._length) {
        throw new Error("Offset ".concat(offset, " + Length ").concat(length, " > ").concat(this._length, " is out of bounds"));
      }
      // Create substring
      return new BitString(this._data, this._offset + offset, length);
    }
    /**
     * Try to get a buffer from the bitstring without allocations
     * @param offset offset in bits
     * @param length length in bits
     * @returns buffer if the bitstring is aligned to bytes, null otherwise
     */
  }, {
    key: "subbuffer",
    value: function subbuffer(offset, length) {
      // Check offset
      if (offset > this._length) {
        throw new Error("Offset ".concat(offset, " is out of bounds"));
      }
      if (offset < 0) {
        throw new Error("Offset ".concat(offset, " is out of bounds"));
      }
      if (offset + length > this._length) {
        throw new Error("Offset + Lenght = ".concat(offset + length, " is out of bounds"));
      }
      // Check alignment
      if (length % 8 !== 0) {
        return null;
      }
      if ((this._offset + offset) % 8 !== 0) {
        return null;
      }
      // Create substring
      var start = this._offset + offset >> 3;
      var end = start + (length >> 3);
      return this._data.subarray(start, end);
    }
    /**
     * Checks for equality
     * @param b other bitstring
     * @returns true if the bitstrings are equal, false otherwise
     */
  }, {
    key: "equals",
    value: function equals(b) {
      if (this._length !== b._length) {
        return false;
      }
      for (var i = 0; i < this._length; i++) {
        if (this.at(i) !== b.at(i)) {
          return false;
        }
      }
      return true;
    }
    /**
     * Format to canonical string
     * @returns formatted bits as a string
     */
  }, {
    key: "toString",
    value: function toString() {
      var padded = (0, paddedBits_1.bitsToPaddedBuffer)(this);
      if (this._length % 4 === 0) {
        var s = padded.subarray(0, Math.ceil(this._length / 8)).toString('hex').toUpperCase();
        if (this._length % 8 === 0) {
          return s;
        } else {
          return s.substring(0, s.length - 1);
        }
      } else {
        var hex = padded.toString('hex').toUpperCase();
        if (this._length % 8 <= 4) {
          return hex.substring(0, hex.length - 1) + '_';
        } else {
          return hex + '_';
        }
      }
    }
  }], [{
    key: "isBitString",
    value:
    /**
     * Checks if supplied object is BitString
     * @param src is unknow object
     * @returns true if object is BitString and false otherwise
     **/
    function isBitString(src) {
      return src instanceof BitString;
    }
  }]);
}();
exports.BitString = BitString;
_a = symbol_inspect_1["default"];
BitString.EMPTY = new BitString(Buffer.alloc(0), 0, 0);

}).call(this)}).call(this,require("buffer").Buffer)
},{"./utils/paddedBits":22,"buffer":196,"symbol.inspect":204}],8:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Builder = exports.beginCell = void 0;
var BitBuilder_1 = require("./BitBuilder");
var Cell_1 = require("./Cell");
var strings_1 = require("./utils/strings");
/**
 * Start building a cell
 * @returns a new builder
 */
function beginCell() {
  return new Builder();
}
exports.beginCell = beginCell;
/**
 * Builder for Cells
 */
var Builder = /*#__PURE__*/function () {
  function Builder() {
    _classCallCheck(this, Builder);
    this._bits = new BitBuilder_1.BitBuilder();
    this._refs = [];
  }
  /**
   * Bits written so far
   */
  return _createClass(Builder, [{
    key: "bits",
    get: function get() {
      return this._bits.length;
    }
    /**
     * References written so far
     */
  }, {
    key: "refs",
    get: function get() {
      return this._refs.length;
    }
    /**
     * Available bits
     */
  }, {
    key: "availableBits",
    get: function get() {
      return 1023 - this.bits;
    }
    /**
     * Available references
     */
  }, {
    key: "availableRefs",
    get: function get() {
      return 4 - this.refs;
    }
    /**
     * Write a single bit
     * @param value bit to write, true or positive number for 1, false or zero or negative for 0
     * @returns this builder
     */
  }, {
    key: "storeBit",
    value: function storeBit(value) {
      this._bits.writeBit(value);
      return this;
    }
    /**
     * Write bits from BitString
     * @param src source bits
     * @returns this builder
     */
  }, {
    key: "storeBits",
    value: function storeBits(src) {
      this._bits.writeBits(src);
      return this;
    }
    /**
     * Store Buffer
     * @param src source buffer
     * @param bytes optional number of bytes to write
     * @returns this builder
     */
  }, {
    key: "storeBuffer",
    value: function storeBuffer(src, bytes) {
      if (bytes !== undefined && bytes !== null) {
        if (src.length !== bytes) {
          throw Error("Buffer length ".concat(src.length, " is not equal to ").concat(bytes));
        }
      }
      this._bits.writeBuffer(src);
      return this;
    }
    /**
     * Store Maybe Buffer
     * @param src source buffer or null
     * @param bytes optional number of bytes to write
     * @returns this builder
     */
  }, {
    key: "storeMaybeBuffer",
    value: function storeMaybeBuffer(src, bytes) {
      if (src !== null) {
        this.storeBit(1);
        this.storeBuffer(src, bytes);
      } else {
        this.storeBit(0);
      }
      return this;
    }
    /**
     * Store uint value
     * @param value value as bigint or number
     * @param bits number of bits to write
     * @returns this builder
     */
  }, {
    key: "storeUint",
    value: function storeUint(value, bits) {
      this._bits.writeUint(value, bits);
      return this;
    }
    /**
     * Store maybe uint value
     * @param value value as bigint or number, null or undefined
     * @param bits number of bits to write
     * @returns this builder
     */
  }, {
    key: "storeMaybeUint",
    value: function storeMaybeUint(value, bits) {
      if (value !== null && value !== undefined) {
        this.storeBit(1);
        this.storeUint(value, bits);
      } else {
        this.storeBit(0);
      }
      return this;
    }
    /**
     * Store int value
     * @param value value as bigint or number
     * @param bits number of bits to write
     * @returns this builder
     */
  }, {
    key: "storeInt",
    value: function storeInt(value, bits) {
      this._bits.writeInt(value, bits);
      return this;
    }
    /**
     * Store maybe int value
     * @param value value as bigint or number, null or undefined
     * @param bits number of bits to write
     * @returns this builder
     */
  }, {
    key: "storeMaybeInt",
    value: function storeMaybeInt(value, bits) {
      if (value !== null && value !== undefined) {
        this.storeBit(1);
        this.storeInt(value, bits);
      } else {
        this.storeBit(0);
      }
      return this;
    }
    /**
     * Store varuint value
     * @param value value as bigint or number
     * @param bits number of bits to write to header
     * @returns this builder
     */
  }, {
    key: "storeVarUint",
    value: function storeVarUint(value, bits) {
      this._bits.writeVarUint(value, bits);
      return this;
    }
    /**
     * Store maybe varuint value
     * @param value value as bigint or number, null or undefined
     * @param bits number of bits to write to header
     * @returns this builder
     */
  }, {
    key: "storeMaybeVarUint",
    value: function storeMaybeVarUint(value, bits) {
      if (value !== null && value !== undefined) {
        this.storeBit(1);
        this.storeVarUint(value, bits);
      } else {
        this.storeBit(0);
      }
      return this;
    }
    /**
     * Store varint value
     * @param value value as bigint or number
     * @param bits number of bits to write to header
     * @returns this builder
     */
  }, {
    key: "storeVarInt",
    value: function storeVarInt(value, bits) {
      this._bits.writeVarInt(value, bits);
      return this;
    }
    /**
     * Store maybe varint value
     * @param value value as bigint or number, null or undefined
     * @param bits number of bits to write to header
     * @returns this builder
     */
  }, {
    key: "storeMaybeVarInt",
    value: function storeMaybeVarInt(value, bits) {
      if (value !== null && value !== undefined) {
        this.storeBit(1);
        this.storeVarInt(value, bits);
      } else {
        this.storeBit(0);
      }
      return this;
    }
    /**
     * Store coins value
     * @param amount amount of coins
     * @returns this builder
     */
  }, {
    key: "storeCoins",
    value: function storeCoins(amount) {
      this._bits.writeCoins(amount);
      return this;
    }
    /**
     * Store maybe coins value
     * @param amount amount of coins, null or undefined
     * @returns this builder
     */
  }, {
    key: "storeMaybeCoins",
    value: function storeMaybeCoins(amount) {
      if (amount !== null && amount !== undefined) {
        this.storeBit(1);
        this.storeCoins(amount);
      } else {
        this.storeBit(0);
      }
      return this;
    }
    /**
     * Store address
     * @param addres address to store
     * @returns this builder
     */
  }, {
    key: "storeAddress",
    value: function storeAddress(address) {
      this._bits.writeAddress(address);
      return this;
    }
    /**
     * Store reference
     * @param cell cell or builder to store
     * @returns this builder
     */
  }, {
    key: "storeRef",
    value: function storeRef(cell) {
      // Check refs
      if (this._refs.length >= 4) {
        throw new Error("Too many references");
      }
      // Store reference
      if (cell instanceof Cell_1.Cell) {
        this._refs.push(cell);
      } else if (cell instanceof Builder) {
        this._refs.push(cell.endCell());
      } else {
        throw new Error("Invalid argument");
      }
      return this;
    }
    /**
     * Store reference if not null
     * @param cell cell or builder to store
     * @returns this builder
     */
  }, {
    key: "storeMaybeRef",
    value: function storeMaybeRef(cell) {
      if (cell) {
        this.storeBit(1);
        this.storeRef(cell);
      } else {
        this.storeBit(0);
      }
      return this;
    }
    /**
     * Store slice it in this builder
     * @param src source slice
     */
  }, {
    key: "storeSlice",
    value: function storeSlice(src) {
      var c = src.clone();
      if (c.remainingBits > 0) {
        this.storeBits(c.loadBits(c.remainingBits));
      }
      while (c.remainingRefs > 0) {
        this.storeRef(c.loadRef());
      }
      return this;
    }
    /**
     * Store slice in this builder if not null
     * @param src source slice
     */
  }, {
    key: "storeMaybeSlice",
    value: function storeMaybeSlice(src) {
      if (src) {
        this.storeBit(1);
        this.storeSlice(src);
      } else {
        this.storeBit(0);
      }
      return this;
    }
    /**
     * Store builder
     * @param src builder to store
     * @returns this builder
     */
  }, {
    key: "storeBuilder",
    value: function storeBuilder(src) {
      return this.storeSlice(src.endCell().beginParse());
    }
    /**
     * Store builder if not null
     * @param src builder to store
     * @returns this builder
     */
  }, {
    key: "storeMaybeBuilder",
    value: function storeMaybeBuilder(src) {
      if (src) {
        this.storeBit(1);
        this.storeBuilder(src);
      } else {
        this.storeBit(0);
      }
      return this;
    }
    /**
     * Store writer or builder
     * @param writer writer or builder to store
     * @returns this builder
     */
  }, {
    key: "storeWritable",
    value: function storeWritable(writer) {
      if (_typeof(writer) === 'object') {
        writer.writeTo(this);
      } else {
        writer(this);
      }
      return this;
    }
    /**
     * Store writer or builder if not null
     * @param writer writer or builder to store
     * @returns this builder
     */
  }, {
    key: "storeMaybeWritable",
    value: function storeMaybeWritable(writer) {
      if (writer) {
        this.storeBit(1);
        this.storeWritable(writer);
      } else {
        this.storeBit(0);
      }
      return this;
    }
    /**
     * Store object in this builder
     * @param writer Writable or writer functuin
     */
  }, {
    key: "store",
    value: function store(writer) {
      this.storeWritable(writer);
      return this;
    }
    /**
     * Store string tail
     * @param src source string
     * @returns this builder
     */
  }, {
    key: "storeStringTail",
    value: function storeStringTail(src) {
      (0, strings_1.writeString)(src, this);
      return this;
    }
    /**
     * Store string tail
     * @param src source string
     * @returns this builder
     */
  }, {
    key: "storeMaybeStringTail",
    value: function storeMaybeStringTail(src) {
      if (src !== null && src !== undefined) {
        this.storeBit(1);
        (0, strings_1.writeString)(src, this);
      } else {
        this.storeBit(0);
      }
      return this;
    }
    /**
     * Store string tail in ref
     * @param src source string
     * @returns this builder
     */
  }, {
    key: "storeStringRefTail",
    value: function storeStringRefTail(src) {
      this.storeRef(beginCell().storeStringTail(src));
      return this;
    }
    /**
     * Store maybe string tail in ref
     * @param src source string
     * @returns this builder
     */
  }, {
    key: "storeMaybeStringRefTail",
    value: function storeMaybeStringRefTail(src) {
      if (src !== null && src !== undefined) {
        this.storeBit(1);
        this.storeStringRefTail(src);
      } else {
        this.storeBit(0);
      }
      return this;
    }
    /**
     * Store dictionary in this builder
     * @param dict dictionary to store
     * @returns this builder
     */
  }, {
    key: "storeDict",
    value: function storeDict(dict, key, value) {
      if (dict) {
        dict.store(this, key, value);
      } else {
        this.storeBit(0);
      }
      return this;
    }
    /**
     * Store dictionary in this builder directly
     * @param dict dictionary to store
     * @returns this builder
     */
  }, {
    key: "storeDictDirect",
    value: function storeDictDirect(dict, key, value) {
      dict.storeDirect(this, key, value);
      return this;
    }
    /**
     * Complete cell
     * @param opts options
     * @returns cell
     */
  }, {
    key: "endCell",
    value: function endCell(opts) {
      return new Cell_1.Cell({
        bits: this._bits.build(),
        refs: this._refs,
        exotic: opts === null || opts === void 0 ? void 0 : opts.exotic
      });
    }
    /**
     * Convert to cell
     * @returns cell
     */
  }, {
    key: "asCell",
    value: function asCell() {
      return this.endCell();
    }
    /**
     * Convert to slice
     * @returns slice
     */
  }, {
    key: "asSlice",
    value: function asSlice() {
      return this.endCell().beginParse();
    }
  }]);
}();
exports.Builder = Builder;

},{"./BitBuilder":5,"./Cell":9,"./utils/strings":23}],9:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
var _a;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Cell = void 0;
var symbol_inspect_1 = __importDefault(require("symbol.inspect"));
var BitString_1 = require("./BitString");
var CellType_1 = require("./CellType");
var Slice_1 = require("./Slice");
var resolveExotic_1 = require("./cell/resolveExotic");
var wonderCalculator_1 = require("./cell/wonderCalculator");
var serialization_1 = require("./cell/serialization");
var BitReader_1 = require("./BitReader");
var Builder_1 = require("./Builder");
/**
 * Cell as described in TVM spec
 */
var Cell = /*#__PURE__*/function () {
  function Cell(opts) {
    var _this = this;
    _classCallCheck(this, Cell);
    // Level and depth information
    this._hashes = [];
    this._depths = [];
    /**
     * Beging cell parsing
     * @returns a new slice
     */
    this.beginParse = function () {
      var allowExotic = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      if (_this.isExotic && !allowExotic) {
        throw new Error("Exotic cells cannot be parsed");
      }
      return new Slice_1.Slice(new BitReader_1.BitReader(_this.bits), _this.refs);
    };
    /**
     * Get cell hash
     * @param level level
     * @returns cell hash
     */
    this.hash = function () {
      var level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;
      return _this._hashes[Math.min(_this._hashes.length - 1, level)];
    };
    /**
     * Get cell depth
     * @param level level
     * @returns cell depth
     */
    this.depth = function () {
      var level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;
      return _this._depths[Math.min(_this._depths.length - 1, level)];
    };
    /**
     * Get cell level
     * @returns cell level
     */
    this.level = function () {
      return _this.mask.level;
    };
    /**
     * Checks cell to be euqal to another cell
     * @param other other cell
     * @returns true if cells are equal
     */
    this.equals = function (other) {
      return _this.hash().equals(other.hash());
    };
    this[_a] = function () {
      return _this.toString();
    };
    // Resolve bits
    var bits = BitString_1.BitString.EMPTY;
    if (opts && opts.bits) {
      bits = opts.bits;
    }
    // Resolve refs
    var refs = [];
    if (opts && opts.refs) {
      refs = _toConsumableArray(opts.refs);
    }
    // Resolve type
    var hashes;
    var depths;
    var mask;
    var type = CellType_1.CellType.Ordinary;
    if (opts && opts.exotic) {
      // Resolve exotic cell
      var resolved = (0, resolveExotic_1.resolveExotic)(bits, refs);
      // Perform wonders
      var wonders = (0, wonderCalculator_1.wonderCalculator)(resolved.type, bits, refs);
      // Copy results
      mask = wonders.mask;
      depths = wonders.depths;
      hashes = wonders.hashes;
      type = resolved.type;
    } else {
      // Check correctness
      if (refs.length > 4) {
        throw new Error("Invalid number of references");
      }
      if (bits.length > 1023) {
        throw new Error("Bits overflow: ".concat(bits.length, " > 1023"));
      }
      // Perform wonders
      var _wonders = (0, wonderCalculator_1.wonderCalculator)(CellType_1.CellType.Ordinary, bits, refs);
      // Copy results
      mask = _wonders.mask;
      depths = _wonders.depths;
      hashes = _wonders.hashes;
      type = CellType_1.CellType.Ordinary;
    }
    // Set fields
    this.type = type;
    this.bits = bits;
    this.refs = refs;
    this.mask = mask;
    this._depths = depths;
    this._hashes = hashes;
    Object.freeze(this);
    Object.freeze(this.refs);
    Object.freeze(this.bits);
    Object.freeze(this.mask);
    Object.freeze(this._depths);
    Object.freeze(this._hashes);
  }
  /**
   * Check if cell is exotic
   */
  return _createClass(Cell, [{
    key: "isExotic",
    get: function get() {
      return this.type !== CellType_1.CellType.Ordinary;
    }
    /**
     * Serializes cell to BOC
     * @param opts options
     */
  }, {
    key: "toBoc",
    value: function toBoc(opts) {
      var idx = opts && opts.idx !== null && opts.idx !== undefined ? opts.idx : false;
      var crc32 = opts && opts.crc32 !== null && opts.crc32 !== undefined ? opts.crc32 : true;
      return (0, serialization_1.serializeBoc)(this, {
        idx: idx,
        crc32: crc32
      });
    }
    /**
     * Format cell to string
     * @param indent indentation
     * @returns string representation
     */
  }, {
    key: "toString",
    value: function toString(indent) {
      var id = indent || '';
      var t = 'x';
      if (this.isExotic) {
        if (this.type === CellType_1.CellType.MerkleProof) {
          t = 'p';
        } else if (this.type === CellType_1.CellType.MerkleUpdate) {
          t = 'u';
        } else if (this.type === CellType_1.CellType.PrunedBranch) {
          t = 'p';
        }
      }
      var s = id + (this.isExotic ? t : 'x') + '{' + this.bits.toString() + '}';
      for (var k in this.refs) {
        var i = this.refs[k];
        s += '\n' + i.toString(id + ' ');
      }
      return s;
    }
    /**
     * Covnert cell to slice
     * @returns slice
     */
  }, {
    key: "asSlice",
    value: function asSlice() {
      return this.beginParse();
    }
    /**
     * Convert cell to a builder that has this cell stored
     * @returns builder
     */
  }, {
    key: "asBuilder",
    value: function asBuilder() {
      return (0, Builder_1.beginCell)().storeSlice(this.asSlice());
    }
  }], [{
    key: "fromBoc",
    value:
    /**
     * Deserialize cells from BOC
     * @param src source buffer
     * @returns array of cells
     */
    function fromBoc(src) {
      return (0, serialization_1.deserializeBoc)(src);
    }
    /**
     * Helper function that deserializes a single cell from BOC in base64
     * @param src source string
     */
  }, {
    key: "fromBase64",
    value: function fromBase64(src) {
      var parsed = Cell.fromBoc(Buffer.from(src, 'base64'));
      if (parsed.length !== 1) {
        throw new Error("Deserialized more than one cell");
      }
      return parsed[0];
    }
    /**
     * Helper function that deserializes a single cell from BOC in hex
     * @param src source string
     */
  }, {
    key: "fromHex",
    value: function fromHex(src) {
      var parsed = Cell.fromBoc(Buffer.from(src, 'hex'));
      if (parsed.length !== 1) {
        throw new Error("Deserialized more than one cell");
      }
      return parsed[0];
    }
  }]);
}();
exports.Cell = Cell;
_a = symbol_inspect_1["default"];
Cell.EMPTY = new Cell();

}).call(this)}).call(this,require("buffer").Buffer)
},{"./BitReader":6,"./BitString":7,"./Builder":8,"./CellType":10,"./Slice":11,"./cell/resolveExotic":18,"./cell/serialization":19,"./cell/wonderCalculator":21,"buffer":196,"symbol.inspect":204}],10:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CellType = void 0;
var CellType;
(function (CellType) {
  CellType[CellType["Ordinary"] = -1] = "Ordinary";
  CellType[CellType["PrunedBranch"] = 1] = "PrunedBranch";
  CellType[CellType["Library"] = 2] = "Library";
  CellType[CellType["MerkleProof"] = 3] = "MerkleProof";
  CellType[CellType["MerkleUpdate"] = 4] = "MerkleUpdate";
})(CellType || (exports.CellType = CellType = {}));

},{}],11:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
var _a;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Slice = void 0;
var symbol_inspect_1 = __importDefault(require("symbol.inspect"));
var Dictionary_1 = require("../dict/Dictionary");
var Builder_1 = require("./Builder");
var strings_1 = require("./utils/strings");
/**
 * Slice is a class that allows to read cell data
 */
var Slice = /*#__PURE__*/function () {
  function Slice(reader, refs) {
    var _this = this;
    _classCallCheck(this, Slice);
    this[_a] = function () {
      return _this.toString();
    };
    this._reader = reader.clone();
    this._refs = _toConsumableArray(refs);
    this._refsOffset = 0;
  }
  /**
   * Get remaining bits
   */
  return _createClass(Slice, [{
    key: "remainingBits",
    get: function get() {
      return this._reader.remaining;
    }
    /**
     * Get offset bits
     */
  }, {
    key: "offsetBits",
    get: function get() {
      return this._reader.offset;
    }
    /**
     * Get remaining refs
     */
  }, {
    key: "remainingRefs",
    get: function get() {
      return this._refs.length - this._refsOffset;
    }
    /**
     * Get offset refs
     */
  }, {
    key: "offsetRefs",
    get: function get() {
      return this._refsOffset;
    }
    /**
     * Skip bits
     * @param bits
     */
  }, {
    key: "skip",
    value: function skip(bits) {
      this._reader.skip(bits);
      return this;
    }
    /**
     * Load a single bit
     * @returns true or false depending on the bit value
     */
  }, {
    key: "loadBit",
    value: function loadBit() {
      return this._reader.loadBit();
    }
    /**
     * Preload a signle bit
     * @returns true or false depending on the bit value
     */
  }, {
    key: "preloadBit",
    value: function preloadBit() {
      return this._reader.preloadBit();
    }
    /**
     * Load a boolean
     * @returns true or false depending on the bit value
     */
  }, {
    key: "loadBoolean",
    value: function loadBoolean() {
      return this.loadBit();
    }
    /**
     * Load maybe boolean
     * @returns true or false depending on the bit value or null
     */
  }, {
    key: "loadMaybeBoolean",
    value: function loadMaybeBoolean() {
      if (this.loadBit()) {
        return this.loadBoolean();
      } else {
        return null;
      }
    }
    /**
     * Load bits as a new BitString
     * @param bits number of bits to read
     * @returns new BitString
     */
  }, {
    key: "loadBits",
    value: function loadBits(bits) {
      return this._reader.loadBits(bits);
    }
    /**
     * Preload bits as a new BitString
     * @param bits number of bits to read
     * @returns new BitString
     */
  }, {
    key: "preloadBits",
    value: function preloadBits(bits) {
      return this._reader.preloadBits(bits);
    }
    /**
     * Load uint
     * @param bits number of bits to read
     * @returns uint value
     */
  }, {
    key: "loadUint",
    value: function loadUint(bits) {
      return this._reader.loadUint(bits);
    }
    /**
     * Load uint
     * @param bits number of bits to read
     * @returns uint value
     */
  }, {
    key: "loadUintBig",
    value: function loadUintBig(bits) {
      return this._reader.loadUintBig(bits);
    }
    /**
     * Preload uint
     * @param bits number of bits to read
     * @returns uint value
     */
  }, {
    key: "preloadUint",
    value: function preloadUint(bits) {
      return this._reader.preloadUint(bits);
    }
    /**
     * Preload uint
     * @param bits number of bits to read
     * @returns uint value
     */
  }, {
    key: "preloadUintBig",
    value: function preloadUintBig(bits) {
      return this._reader.preloadUintBig(bits);
    }
    /**
     * Load maybe uint
     * @param bits number of bits to read
     * @returns uint value or null
     */
  }, {
    key: "loadMaybeUint",
    value: function loadMaybeUint(bits) {
      if (this.loadBit()) {
        return this.loadUint(bits);
      } else {
        return null;
      }
    }
    /**
     * Load maybe uint
     * @param bits number of bits to read
     * @returns uint value or null
     */
  }, {
    key: "loadMaybeUintBig",
    value: function loadMaybeUintBig(bits) {
      if (this.loadBit()) {
        return this.loadUintBig(bits);
      } else {
        return null;
      }
    }
    /**
     * Load int
     * @param bits number of bits to read
     * @returns int value
     */
  }, {
    key: "loadInt",
    value: function loadInt(bits) {
      return this._reader.loadInt(bits);
    }
    /**
     * Load int
     * @param bits number of bits to read
     * @returns int value
     */
  }, {
    key: "loadIntBig",
    value: function loadIntBig(bits) {
      return this._reader.loadIntBig(bits);
    }
    /**
     * Preload int
     * @param bits number of bits to read
     * @returns int value
     */
  }, {
    key: "preloadInt",
    value: function preloadInt(bits) {
      return this._reader.preloadInt(bits);
    }
    /**
     * Preload int
     * @param bits number of bits to read
     * @returns int value
     */
  }, {
    key: "preloadIntBig",
    value: function preloadIntBig(bits) {
      return this._reader.preloadIntBig(bits);
    }
    /**
     * Load maybe uint
     * @param bits number of bits to read
     * @returns uint value or null
     */
  }, {
    key: "loadMaybeInt",
    value: function loadMaybeInt(bits) {
      if (this.loadBit()) {
        return this.loadInt(bits);
      } else {
        return null;
      }
    }
    /**
     * Load maybe uint
     * @param bits number of bits to read
     * @returns uint value or null
     */
  }, {
    key: "loadMaybeIntBig",
    value: function loadMaybeIntBig(bits) {
      if (this.loadBit()) {
        return this.loadIntBig(bits);
      } else {
        return null;
      }
    }
    /**
     * Load varuint
     * @param bits number of bits to read in header
     * @returns varuint value
     */
  }, {
    key: "loadVarUint",
    value: function loadVarUint(bits) {
      return this._reader.loadVarUint(bits);
    }
    /**
     * Load varuint
     * @param bits number of bits to read in header
     * @returns varuint value
     */
  }, {
    key: "loadVarUintBig",
    value: function loadVarUintBig(bits) {
      return this._reader.loadVarUintBig(bits);
    }
    /**
     * Preload varuint
     * @param bits number of bits to read in header
     * @returns varuint value
     */
  }, {
    key: "preloadVarUint",
    value: function preloadVarUint(bits) {
      return this._reader.preloadVarUint(bits);
    }
    /**
     * Preload varuint
     * @param bits number of bits to read in header
     * @returns varuint value
     */
  }, {
    key: "preloadVarUintBig",
    value: function preloadVarUintBig(bits) {
      return this._reader.preloadVarUintBig(bits);
    }
    /**
     * Load varint
     * @param bits number of bits to read in header
     * @returns varint value
     */
  }, {
    key: "loadVarInt",
    value: function loadVarInt(bits) {
      return this._reader.loadVarInt(bits);
    }
    /**
     * Load varint
     * @param bits number of bits to read in header
     * @returns varint value
     */
  }, {
    key: "loadVarIntBig",
    value: function loadVarIntBig(bits) {
      return this._reader.loadVarIntBig(bits);
    }
    /**
     * Preload varint
     * @param bits number of bits to read in header
     * @returns varint value
     */
  }, {
    key: "preloadVarInt",
    value: function preloadVarInt(bits) {
      return this._reader.preloadVarInt(bits);
    }
    /**
     * Preload varint
     * @param bits number of bits to read in header
     * @returns varint value
     */
  }, {
    key: "preloadVarIntBig",
    value: function preloadVarIntBig(bits) {
      return this._reader.preloadVarIntBig(bits);
    }
    /**
     * Load coins
     * @returns coins value
     */
  }, {
    key: "loadCoins",
    value: function loadCoins() {
      return this._reader.loadCoins();
    }
    /**
     * Preload coins
     * @returns coins value
     */
  }, {
    key: "preloadCoins",
    value: function preloadCoins() {
      return this._reader.preloadCoins();
    }
    /**
     * Load maybe coins
     * @returns coins value or null
     */
  }, {
    key: "loadMaybeCoins",
    value: function loadMaybeCoins() {
      if (this._reader.loadBit()) {
        return this._reader.loadCoins();
      } else {
        return null;
      }
    }
    /**
     * Load internal Address
     * @returns Address
     */
  }, {
    key: "loadAddress",
    value: function loadAddress() {
      return this._reader.loadAddress();
    }
    /**
     * Load optional internal Address
     * @returns Address or null
     */
  }, {
    key: "loadMaybeAddress",
    value: function loadMaybeAddress() {
      return this._reader.loadMaybeAddress();
    }
    /**
     * Load external address
     * @returns ExternalAddress
     */
  }, {
    key: "loadExternalAddress",
    value: function loadExternalAddress() {
      return this._reader.loadExternalAddress();
    }
    /**
     * Load optional external address
     * @returns ExternalAddress or null
     */
  }, {
    key: "loadMaybeExternalAddress",
    value: function loadMaybeExternalAddress() {
      return this._reader.loadMaybeExternalAddress();
    }
    /**
     * Load address
     * @returns Address, ExternalAddress or null
     */
  }, {
    key: "loadAddressAny",
    value: function loadAddressAny() {
      return this._reader.loadAddressAny();
    }
    /**
     * Load reference
     * @returns Cell
     */
  }, {
    key: "loadRef",
    value: function loadRef() {
      if (this._refsOffset >= this._refs.length) {
        throw new Error("No more references");
      }
      return this._refs[this._refsOffset++];
    }
    /**
     * Preload reference
     * @returns Cell
     */
  }, {
    key: "preloadRef",
    value: function preloadRef() {
      if (this._refsOffset >= this._refs.length) {
        throw new Error("No more references");
      }
      return this._refs[this._refsOffset];
    }
    /**
     * Load optional reference
     * @returns Cell or null
     */
  }, {
    key: "loadMaybeRef",
    value: function loadMaybeRef() {
      if (this.loadBit()) {
        return this.loadRef();
      } else {
        return null;
      }
    }
    /**
     * Preload optional reference
     * @returns Cell or null
     */
  }, {
    key: "preloadMaybeRef",
    value: function preloadMaybeRef() {
      if (this.preloadBit()) {
        return this.preloadRef();
      } else {
        return null;
      }
    }
    /**
     * Load byte buffer
     * @param bytes number of bytes to load
     * @returns Buffer
     */
  }, {
    key: "loadBuffer",
    value: function loadBuffer(bytes) {
      return this._reader.loadBuffer(bytes);
    }
    /**
     * Load byte buffer
     * @param bytes number of bytes to load
     * @returns Buffer
     */
  }, {
    key: "preloadBuffer",
    value: function preloadBuffer(bytes) {
      return this._reader.preloadBuffer(bytes);
    }
    /**
     * Load string tail
     */
  }, {
    key: "loadStringTail",
    value: function loadStringTail() {
      return (0, strings_1.readString)(this);
    }
    /**
     * Load maybe string tail
     * @returns string or null
     */
  }, {
    key: "loadMaybeStringTail",
    value: function loadMaybeStringTail() {
      if (this.loadBit()) {
        return (0, strings_1.readString)(this);
      } else {
        return null;
      }
    }
    /**
     * Load string tail from ref
     * @returns string
     */
  }, {
    key: "loadStringRefTail",
    value: function loadStringRefTail() {
      return (0, strings_1.readString)(this.loadRef().beginParse());
    }
    /**
     * Load maybe string tail from ref
     * @returns string or null
     */
  }, {
    key: "loadMaybeStringRefTail",
    value: function loadMaybeStringRefTail() {
      var ref = this.loadMaybeRef();
      if (ref) {
        return (0, strings_1.readString)(ref.beginParse());
      } else {
        return null;
      }
    }
    /**
     * Loads dictionary
     * @param key key description
     * @param value value description
     * @returns Dictionary<K, V>
     */
  }, {
    key: "loadDict",
    value: function loadDict(key, value) {
      return Dictionary_1.Dictionary.load(key, value, this);
    }
    /**
     * Loads dictionary directly from current slice
     * @param key key description
     * @param value value description
     * @returns Dictionary<K, V>
     */
  }, {
    key: "loadDictDirect",
    value: function loadDictDirect(key, value) {
      return Dictionary_1.Dictionary.loadDirect(key, value, this);
    }
    /**
     * Checks if slice is empty
     */
  }, {
    key: "endParse",
    value: function endParse() {
      if (this.remainingBits > 0 || this.remainingRefs > 0) {
        throw new Error("Slice is not empty");
      }
    }
    /**
     * Convert slice to cell
     */
  }, {
    key: "asCell",
    value: function asCell() {
      return (0, Builder_1.beginCell)().storeSlice(this).endCell();
    }
    /**
     *
     * @returns
     */
  }, {
    key: "asBuilder",
    value: function asBuilder() {
      return (0, Builder_1.beginCell)().storeSlice(this);
    }
    /**
     * Clone slice
     * @returns cloned slice
     */
  }, {
    key: "clone",
    value: function clone() {
      var fromStart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      if (fromStart) {
        var reader = this._reader.clone();
        reader.reset();
        return new Slice(reader, this._refs);
      } else {
        var res = new Slice(this._reader, this._refs);
        res._refsOffset = this._refsOffset;
        return res;
      }
    }
    /**
     * Print slice as string by converting it to cell
     * @returns string
     */
  }, {
    key: "toString",
    value: function toString() {
      return this.asCell().toString();
    }
  }]);
}();
exports.Slice = Slice;
_a = symbol_inspect_1["default"];

},{"../dict/Dictionary":27,"./Builder":8,"./utils/strings":23,"symbol.inspect":204}],12:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LevelMask = void 0;
var LevelMask = /*#__PURE__*/function () {
  function LevelMask() {
    var mask = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    _classCallCheck(this, LevelMask);
    this._mask = 0;
    this._mask = mask;
    this._hashIndex = countSetBits(this._mask);
    this._hashCount = this._hashIndex + 1;
  }
  return _createClass(LevelMask, [{
    key: "value",
    get: function get() {
      return this._mask;
    }
  }, {
    key: "level",
    get: function get() {
      return 32 - Math.clz32(this._mask);
    }
  }, {
    key: "hashIndex",
    get: function get() {
      return this._hashIndex;
    }
  }, {
    key: "hashCount",
    get: function get() {
      return this._hashCount;
    }
  }, {
    key: "apply",
    value: function apply(level) {
      return new LevelMask(this._mask & (1 << level) - 1);
    }
  }, {
    key: "isSignificant",
    value: function isSignificant(level) {
      var res = level === 0 || (this._mask >> level - 1) % 2 !== 0;
      return res;
      // bool res = level == 0 | | ( (mask_ >> (level -1)) % 2 != 0);
    }
  }]);
}();
exports.LevelMask = LevelMask;
function countSetBits(n) {
  n = n - (n >> 1 & 0x55555555);
  n = (n & 0x33333333) + (n >> 2 & 0x33333333);
  return (n + (n >> 4) & 0xF0F0F0F) * 0x1010101 >> 24;
}

},{}],13:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getRepr = exports.getBitsDescriptor = exports.getRefsDescriptor = void 0;
var CellType_1 = require("../CellType");
var paddedBits_1 = require("../utils/paddedBits");
function getRefsDescriptor(refs, levelMask, type) {
  return refs.length + (type !== CellType_1.CellType.Ordinary ? 1 : 0) * 8 + levelMask * 32;
}
exports.getRefsDescriptor = getRefsDescriptor;
function getBitsDescriptor(bits) {
  var len = bits.length;
  return Math.ceil(len / 8) + Math.floor(len / 8);
}
exports.getBitsDescriptor = getBitsDescriptor;
function getRepr(originalBits, bits, refs, level, levelMask, type) {
  // Allocate
  var bitsLen = Math.ceil(bits.length / 8);
  var repr = Buffer.alloc(2 + bitsLen + (2 + 32) * refs.length);
  // Write descriptors
  var reprCursor = 0;
  repr[reprCursor++] = getRefsDescriptor(refs, levelMask, type);
  repr[reprCursor++] = getBitsDescriptor(originalBits);
  // Write bits
  (0, paddedBits_1.bitsToPaddedBuffer)(bits).copy(repr, reprCursor);
  reprCursor += bitsLen;
  // Write refs
  var _iterator = _createForOfIteratorHelper(refs),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var c = _step.value;
      var childDepth = void 0;
      if (type == CellType_1.CellType.MerkleProof || type == CellType_1.CellType.MerkleUpdate) {
        childDepth = c.depth(level + 1);
      } else {
        childDepth = c.depth(level);
      }
      repr[reprCursor++] = Math.floor(childDepth / 256);
      repr[reprCursor++] = childDepth % 256;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var _iterator2 = _createForOfIteratorHelper(refs),
    _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var _c = _step2.value;
      var childHash = void 0;
      if (type == CellType_1.CellType.MerkleProof || type == CellType_1.CellType.MerkleUpdate) {
        childHash = _c.hash(level + 1);
      } else {
        childHash = _c.hash(level);
      }
      childHash.copy(repr, reprCursor);
      reprCursor += 32;
    }
    // Result
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  return repr;
}
exports.getRepr = getRepr;

}).call(this)}).call(this,require("buffer").Buffer)
},{"../CellType":10,"../utils/paddedBits":22,"buffer":196}],14:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.exoticLibrary = void 0;
var BitReader_1 = require("../BitReader");
function exoticLibrary(bits, refs) {
  var reader = new BitReader_1.BitReader(bits);
  // type + hash
  var size = 8 + 256;
  if (bits.length !== size) {
    throw new Error("Library cell must have exactly (8 + 256) bits, got \"".concat(bits.length, "\""));
  }
  // Check type
  var type = reader.loadUint(8);
  if (type !== 2) {
    throw new Error("Library cell must have type 2, got \"".concat(type, "\""));
  }
  return {};
}
exports.exoticLibrary = exoticLibrary;

},{"../BitReader":6}],15:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.convertToMerkleProof = exports.exoticMerkleProof = void 0;
var BitReader_1 = require("../BitReader");
var Builder_1 = require("../Builder");
function exoticMerkleProof(bits, refs) {
  var reader = new BitReader_1.BitReader(bits);
  // type + hash + depth
  var size = 8 + 256 + 16;
  if (bits.length !== size) {
    throw new Error("Merkle Proof cell must have exactly (8 + 256 + 16) bits, got \"".concat(bits.length, "\""));
  }
  if (refs.length !== 1) {
    throw new Error("Merkle Proof cell must have exactly 1 ref, got \"".concat(refs.length, "\""));
  }
  // Check type
  var type = reader.loadUint(8);
  if (type !== 3) {
    throw new Error("Merkle Proof cell must have type 3, got \"".concat(type, "\""));
  }
  // Check data
  var proofHash = reader.loadBuffer(32);
  var proofDepth = reader.loadUint(16);
  var refHash = refs[0].hash(0);
  var refDepth = refs[0].depth(0);
  if (proofDepth !== refDepth) {
    throw new Error("Merkle Proof cell ref depth must be exactly \"".concat(proofDepth, "\", got \"").concat(refDepth, "\""));
  }
  if (!proofHash.equals(refHash)) {
    throw new Error("Merkle Proof cell ref hash must be exactly \"".concat(proofHash.toString('hex'), "\", got \"").concat(refHash.toString('hex'), "\""));
  }
  return {
    proofDepth: proofDepth,
    proofHash: proofHash
  };
}
exports.exoticMerkleProof = exoticMerkleProof;
function convertToMerkleProof(c) {
  return (0, Builder_1.beginCell)().storeUint(3, 8).storeBuffer(c.hash(0)).storeUint(c.depth(0), 16).storeRef(c).endCell({
    exotic: true
  });
}
exports.convertToMerkleProof = convertToMerkleProof;

},{"../BitReader":6,"../Builder":8}],16:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.exoticMerkleUpdate = void 0;
var BitReader_1 = require("../BitReader");
function exoticMerkleUpdate(bits, refs) {
  var reader = new BitReader_1.BitReader(bits);
  // type + hash + hash + depth + depth
  var size = 8 + 2 * (256 + 16);
  if (bits.length !== size) {
    throw new Error("Merkle Update cell must have exactly (8 + (2 * (256 + 16))) bits, got \"".concat(bits.length, "\""));
  }
  if (refs.length !== 2) {
    throw new Error("Merkle Update cell must have exactly 2 refs, got \"".concat(refs.length, "\""));
  }
  var type = reader.loadUint(8);
  if (type !== 4) {
    throw new Error("Merkle Update cell type must be exactly 4, got \"".concat(type, "\""));
  }
  var proofHash1 = reader.loadBuffer(32);
  var proofHash2 = reader.loadBuffer(32);
  var proofDepth1 = reader.loadUint(16);
  var proofDepth2 = reader.loadUint(16);
  if (proofDepth1 !== refs[0].depth(0)) {
    throw new Error("Merkle Update cell ref depth must be exactly \"".concat(proofDepth1, "\", got \"").concat(refs[0].depth(0), "\""));
  }
  if (!proofHash1.equals(refs[0].hash(0))) {
    throw new Error("Merkle Update cell ref hash must be exactly \"".concat(proofHash1.toString('hex'), "\", got \"").concat(refs[0].hash(0).toString('hex'), "\""));
  }
  if (proofDepth2 !== refs[1].depth(0)) {
    throw new Error("Merkle Update cell ref depth must be exactly \"".concat(proofDepth2, "\", got \"").concat(refs[1].depth(0), "\""));
  }
  if (!proofHash2.equals(refs[1].hash(0))) {
    throw new Error("Merkle Update cell ref hash must be exactly \"".concat(proofHash2.toString('hex'), "\", got \"").concat(refs[1].hash(0).toString('hex'), "\""));
  }
  return {
    proofDepth1: proofDepth1,
    proofDepth2: proofDepth2,
    proofHash1: proofHash1,
    proofHash2: proofHash2
  };
}
exports.exoticMerkleUpdate = exoticMerkleUpdate;

},{"../BitReader":6}],17:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.exoticPruned = void 0;
var BitReader_1 = require("../BitReader");
var LevelMask_1 = require("./LevelMask");
function exoticPruned(bits, refs) {
  var reader = new BitReader_1.BitReader(bits);
  // Check type
  var type = reader.loadUint(8);
  if (type !== 1) {
    throw new Error("Pruned branch cell must have type 1, got \"".concat(type, "\""));
  }
  // Check refs
  if (refs.length !== 0) {
    throw new Error("Pruned Branch cell can't has refs, got \"".concat(refs.length, "\""));
  }
  // Resolve cell
  var mask;
  if (bits.length === 280) {
    // Special case for config proof
    // This test proof is generated in the moment of voting for a slashing
    // it seems that tools generate it incorrectly and therefore doesn't have mask in it
    // so we need to hardcode it equal to 1
    mask = new LevelMask_1.LevelMask(1);
  } else {
    // Check level
    mask = new LevelMask_1.LevelMask(reader.loadUint(8));
    if (mask.level < 1 || mask.level > 3) {
      throw new Error("Pruned Branch cell level must be >= 1 and <= 3, got \"".concat(mask.level, "/").concat(mask.value, "\""));
    }
    // Read pruned
    var size = 8 + 8 + mask.apply(mask.level - 1).hashCount * (256 /* Hash */ + 16 /* Depth */);
    if (bits.length !== size) {
      throw new Error("Pruned branch cell must have exactly ".concat(size, " bits, got \"").concat(bits.length, "\""));
    }
  }
  // Read pruned
  var pruned = [];
  var hashes = [];
  var depths = [];
  for (var i = 0; i < mask.level; i++) {
    hashes.push(reader.loadBuffer(32));
  }
  for (var _i = 0; _i < mask.level; _i++) {
    depths.push(reader.loadUint(16));
  }
  for (var _i2 = 0; _i2 < mask.level; _i2++) {
    pruned.push({
      depth: depths[_i2],
      hash: hashes[_i2]
    });
  }
  return {
    mask: mask.value,
    pruned: pruned
  };
}
exports.exoticPruned = exoticPruned;

},{"../BitReader":6,"./LevelMask":12}],18:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resolveExotic = void 0;
var BitReader_1 = require("../BitReader");
var CellType_1 = require("../CellType");
var exoticLibrary_1 = require("./exoticLibrary");
var exoticMerkleProof_1 = require("./exoticMerkleProof");
var exoticMerkleUpdate_1 = require("./exoticMerkleUpdate");
var exoticPruned_1 = require("./exoticPruned");
var LevelMask_1 = require("./LevelMask");
function resolvePruned(bits, refs) {
  // Parse pruned cell
  var pruned = (0, exoticPruned_1.exoticPruned)(bits, refs);
  // Calculate parameters
  var depths = [];
  var hashes = [];
  var mask = new LevelMask_1.LevelMask(pruned.mask);
  for (var i = 0; i < pruned.pruned.length; i++) {
    depths.push(pruned.pruned[i].depth);
    hashes.push(pruned.pruned[i].hash);
  }
  return {
    type: CellType_1.CellType.PrunedBranch,
    depths: depths,
    hashes: hashes,
    mask: mask
  };
}
function resolveLibrary(bits, refs) {
  // Parse library cell
  var pruned = (0, exoticLibrary_1.exoticLibrary)(bits, refs);
  // Calculate parameters
  var depths = [];
  var hashes = [];
  var mask = new LevelMask_1.LevelMask();
  return {
    type: CellType_1.CellType.Library,
    depths: depths,
    hashes: hashes,
    mask: mask
  };
}
function resolveMerkleProof(bits, refs) {
  // Parse merkle proof cell
  var merkleProof = (0, exoticMerkleProof_1.exoticMerkleProof)(bits, refs);
  // Calculate parameters
  var depths = [];
  var hashes = [];
  var mask = new LevelMask_1.LevelMask(refs[0].level() >> 1);
  return {
    type: CellType_1.CellType.MerkleProof,
    depths: depths,
    hashes: hashes,
    mask: mask
  };
}
function resolveMerkleUpdate(bits, refs) {
  // Parse merkle proof cell
  var merkleUpdate = (0, exoticMerkleUpdate_1.exoticMerkleUpdate)(bits, refs);
  // Calculate parameters
  var depths = [];
  var hashes = [];
  var mask = new LevelMask_1.LevelMask((refs[0].level() | refs[1].level()) >> 1);
  return {
    type: CellType_1.CellType.MerkleUpdate,
    depths: depths,
    hashes: hashes,
    mask: mask
  };
}
function resolveExotic(bits, refs) {
  var reader = new BitReader_1.BitReader(bits);
  var type = reader.preloadUint(8);
  if (type === 1) {
    return resolvePruned(bits, refs);
  }
  if (type === 2) {
    return resolveLibrary(bits, refs);
  }
  if (type === 3) {
    return resolveMerkleProof(bits, refs);
  }
  if (type === 4) {
    return resolveMerkleUpdate(bits, refs);
  }
  throw Error('Invalid exotic cell type: ' + type);
}
exports.resolveExotic = resolveExotic;

},{"../BitReader":6,"../CellType":10,"./LevelMask":12,"./exoticLibrary":14,"./exoticMerkleProof":15,"./exoticMerkleUpdate":16,"./exoticPruned":17}],19:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.serializeBoc = exports.deserializeBoc = exports.parseBoc = void 0;
var BitReader_1 = require("../BitReader");
var BitString_1 = require("../BitString");
var Cell_1 = require("../Cell");
var topologicalSort_1 = require("./utils/topologicalSort");
var bitsForNumber_1 = require("../../utils/bitsForNumber");
var BitBuilder_1 = require("../BitBuilder");
var descriptor_1 = require("./descriptor");
var paddedBits_1 = require("../utils/paddedBits");
var crc32c_1 = require("../../utils/crc32c");
function getHashesCount(levelMask) {
  return getHashesCountFromMask(levelMask & 7);
}
function getHashesCountFromMask(mask) {
  var n = 0;
  for (var i = 0; i < 3; i++) {
    n += mask & 1;
    mask = mask >> 1;
  }
  return n + 1; // 1 repr + up to 3 higher hashes
}
function readCell(reader, sizeBytes) {
  // D1
  var d1 = reader.loadUint(8);
  var refsCount = d1 % 8;
  var exotic = !!(d1 & 8);
  // D2
  var d2 = reader.loadUint(8);
  var dataBytesize = Math.ceil(d2 / 2);
  var paddingAdded = !!(d2 % 2);
  var levelMask = d1 >> 5;
  var hasHashes = (d1 & 16) != 0;
  var hash_bytes = 32;
  var hashesSize = hasHashes ? getHashesCount(levelMask) * hash_bytes : 0;
  var depthSize = hasHashes ? getHashesCount(levelMask) * 2 : 0;
  reader.skip(hashesSize * 8);
  reader.skip(depthSize * 8);
  // Bits
  var bits = BitString_1.BitString.EMPTY;
  if (dataBytesize > 0) {
    if (paddingAdded) {
      bits = reader.loadPaddedBits(dataBytesize * 8);
    } else {
      bits = reader.loadBits(dataBytesize * 8);
    }
  }
  // Refs
  var refs = [];
  for (var i = 0; i < refsCount; i++) {
    refs.push(reader.loadUint(sizeBytes * 8));
  }
  // Result
  return {
    bits: bits,
    refs: refs,
    exotic: exotic
  };
}
function calcCellSize(cell, sizeBytes) {
  return 2 /* D1+D2 */ + Math.ceil(cell.bits.length / 8) + cell.refs.length * sizeBytes;
}
function parseBoc(src) {
  var reader = new BitReader_1.BitReader(new BitString_1.BitString(src, 0, src.length * 8));
  var magic = reader.loadUint(32);
  if (magic === 0x68ff65f3) {
    var size = reader.loadUint(8);
    var offBytes = reader.loadUint(8);
    var cells = reader.loadUint(size * 8);
    var roots = reader.loadUint(size * 8); // Must be 1
    var absent = reader.loadUint(size * 8);
    var totalCellSize = reader.loadUint(offBytes * 8);
    var index = reader.loadBuffer(cells * offBytes);
    var cellData = reader.loadBuffer(totalCellSize);
    return {
      size: size,
      offBytes: offBytes,
      cells: cells,
      roots: roots,
      absent: absent,
      totalCellSize: totalCellSize,
      index: index,
      cellData: cellData,
      root: [0]
    };
  } else if (magic === 0xacc3a728) {
    var _size = reader.loadUint(8);
    var _offBytes = reader.loadUint(8);
    var _cells = reader.loadUint(_size * 8);
    var _roots = reader.loadUint(_size * 8); // Must be 1
    var _absent = reader.loadUint(_size * 8);
    var _totalCellSize = reader.loadUint(_offBytes * 8);
    var _index = reader.loadBuffer(_cells * _offBytes);
    var _cellData = reader.loadBuffer(_totalCellSize);
    var crc32 = reader.loadBuffer(4);
    if (!(0, crc32c_1.crc32c)(src.subarray(0, src.length - 4)).equals(crc32)) {
      throw Error('Invalid CRC32C');
    }
    return {
      size: _size,
      offBytes: _offBytes,
      cells: _cells,
      roots: _roots,
      absent: _absent,
      totalCellSize: _totalCellSize,
      index: _index,
      cellData: _cellData,
      root: [0]
    };
  } else if (magic === 0xb5ee9c72) {
    var hasIdx = reader.loadUint(1);
    var hasCrc32c = reader.loadUint(1);
    var hasCacheBits = reader.loadUint(1);
    var flags = reader.loadUint(2); // Must be 0
    var _size2 = reader.loadUint(3);
    var _offBytes2 = reader.loadUint(8);
    var _cells2 = reader.loadUint(_size2 * 8);
    var _roots2 = reader.loadUint(_size2 * 8);
    var _absent2 = reader.loadUint(_size2 * 8);
    var _totalCellSize2 = reader.loadUint(_offBytes2 * 8);
    var root = [];
    for (var i = 0; i < _roots2; i++) {
      root.push(reader.loadUint(_size2 * 8));
    }
    var _index2 = null;
    if (hasIdx) {
      _index2 = reader.loadBuffer(_cells2 * _offBytes2);
    }
    var _cellData2 = reader.loadBuffer(_totalCellSize2);
    if (hasCrc32c) {
      var _crc = reader.loadBuffer(4);
      if (!(0, crc32c_1.crc32c)(src.subarray(0, src.length - 4)).equals(_crc)) {
        throw Error('Invalid CRC32C');
      }
    }
    return {
      size: _size2,
      offBytes: _offBytes2,
      cells: _cells2,
      roots: _roots2,
      absent: _absent2,
      totalCellSize: _totalCellSize2,
      index: _index2,
      cellData: _cellData2,
      root: root
    };
  } else {
    throw Error('Invalid magic');
  }
}
exports.parseBoc = parseBoc;
function deserializeBoc(src) {
  //
  // Parse BOC
  //
  var boc = parseBoc(src);
  var reader = new BitReader_1.BitReader(new BitString_1.BitString(boc.cellData, 0, boc.cellData.length * 8));
  //
  // Load cells
  //
  var cells = [];
  for (var i = 0; i < boc.cells; i++) {
    var cll = readCell(reader, boc.size);
    cells.push(_objectSpread(_objectSpread({}, cll), {}, {
      result: null
    }));
  }
  //
  // Build cells
  //
  for (var _i = cells.length - 1; _i >= 0; _i--) {
    if (cells[_i].result) {
      throw Error('Impossible');
    }
    var refs = [];
    var _iterator = _createForOfIteratorHelper(cells[_i].refs),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var r = _step.value;
        if (!cells[r].result) {
          throw Error('Invalid BOC file');
        }
        refs.push(cells[r].result);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    cells[_i].result = new Cell_1.Cell({
      bits: cells[_i].bits,
      refs: refs,
      exotic: cells[_i].exotic
    });
  }
  //
  // Load roots
  //
  var roots = [];
  for (var _i2 = 0; _i2 < boc.root.length; _i2++) {
    roots.push(cells[boc.root[_i2]].result);
  }
  //
  // Return
  //
  return roots;
}
exports.deserializeBoc = deserializeBoc;
function writeCellToBuilder(cell, refs, sizeBytes, to) {
  var d1 = (0, descriptor_1.getRefsDescriptor)(cell.refs, cell.mask.value, cell.type);
  var d2 = (0, descriptor_1.getBitsDescriptor)(cell.bits);
  to.writeUint(d1, 8);
  to.writeUint(d2, 8);
  to.writeBuffer((0, paddedBits_1.bitsToPaddedBuffer)(cell.bits));
  var _iterator2 = _createForOfIteratorHelper(refs),
    _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var r = _step2.value;
      to.writeUint(r, sizeBytes * 8);
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
}
function serializeBoc(root, opts) {
  // Sort cells
  var allCells = (0, topologicalSort_1.topologicalSort)(root);
  // Calculcate parameters
  var cellsNum = allCells.length;
  var has_idx = opts.idx;
  var has_crc32c = opts.crc32;
  var has_cache_bits = false;
  var flags = 0;
  var sizeBytes = Math.max(Math.ceil((0, bitsForNumber_1.bitsForNumber)(cellsNum, 'uint') / 8), 1);
  var totalCellSize = 0;
  var index = [];
  var _iterator3 = _createForOfIteratorHelper(allCells),
    _step3;
  try {
    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
      var c = _step3.value;
      var sz = calcCellSize(c.cell, sizeBytes);
      totalCellSize += sz;
      index.push(totalCellSize);
    }
  } catch (err) {
    _iterator3.e(err);
  } finally {
    _iterator3.f();
  }
  var offsetBytes = Math.max(Math.ceil((0, bitsForNumber_1.bitsForNumber)(totalCellSize, 'uint') / 8), 1);
  var totalSize = (4 +
  // magic
  1 +
  // flags and s_bytes
  1 +
  // offset_bytes
  3 * sizeBytes +
  // cells_num, roots, complete
  offsetBytes +
  // full_size
  1 * sizeBytes + (
  // root_idx
  has_idx ? cellsNum * offsetBytes : 0) + totalCellSize + (has_crc32c ? 4 : 0)) * 8;
  // Serialize
  var builder = new BitBuilder_1.BitBuilder(totalSize);
  builder.writeUint(0xb5ee9c72, 32); // Magic
  builder.writeBit(has_idx); // Has index
  builder.writeBit(has_crc32c); // Has crc32c
  builder.writeBit(has_cache_bits); // Has cache bits
  builder.writeUint(flags, 2); // Flags
  builder.writeUint(sizeBytes, 3); // Size bytes
  builder.writeUint(offsetBytes, 8); // Offset bytes
  builder.writeUint(cellsNum, sizeBytes * 8); // Cells num
  builder.writeUint(1, sizeBytes * 8); // Roots num
  builder.writeUint(0, sizeBytes * 8); // Absent num
  builder.writeUint(totalCellSize, offsetBytes * 8); // Total cell size
  builder.writeUint(0, sizeBytes * 8); // Root id == 0
  if (has_idx) {
    // Index
    for (var i = 0; i < cellsNum; i++) {
      builder.writeUint(index[i], offsetBytes * 8);
    }
  }
  for (var _i3 = 0; _i3 < cellsNum; _i3++) {
    // Cells
    writeCellToBuilder(allCells[_i3].cell, allCells[_i3].refs, sizeBytes, builder);
  }
  if (has_crc32c) {
    var crc32 = (0, crc32c_1.crc32c)(builder.buffer()); // builder.buffer() is fast since it doesn't allocate new memory
    builder.writeBuffer(crc32);
  }
  // Sanity Check
  var res = builder.buffer();
  if (res.length !== totalSize / 8) {
    throw Error('Internal error');
  }
  return res;
}
exports.serializeBoc = serializeBoc;

},{"../../utils/bitsForNumber":78,"../../utils/crc32c":81,"../BitBuilder":5,"../BitReader":6,"../BitString":7,"../Cell":9,"../utils/paddedBits":22,"./descriptor":13,"./utils/topologicalSort":20}],20:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.topologicalSort = void 0;
function topologicalSort(src) {
  var pending = [src];
  var allCells = new Map();
  var notPermCells = new Set();
  var sorted = [];
  while (pending.length > 0) {
    var cells = _toConsumableArray(pending);
    pending = [];
    var _iterator = _createForOfIteratorHelper(cells),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var cell = _step.value;
        var hash = cell.hash().toString('hex');
        if (allCells.has(hash)) {
          continue;
        }
        notPermCells.add(hash);
        allCells.set(hash, {
          cell: cell,
          refs: cell.refs.map(function (v) {
            return v.hash().toString('hex');
          })
        });
        var _iterator2 = _createForOfIteratorHelper(cell.refs),
          _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var r = _step2.value;
            pending.push(r);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  var tempMark = new Set();
  function visit(hash) {
    if (!notPermCells.has(hash)) {
      return;
    }
    if (tempMark.has(hash)) {
      throw Error('Not a DAG');
    }
    tempMark.add(hash);
    var refs = allCells.get(hash).refs;
    for (var ci = refs.length - 1; ci >= 0; ci--) {
      visit(refs[ci]);
    }
    sorted.push(hash);
    tempMark["delete"](hash);
    notPermCells["delete"](hash);
  }
  while (notPermCells.size > 0) {
    var id = Array.from(notPermCells)[0];
    visit(id);
  }
  var indexes = new Map();
  for (var i = 0; i < sorted.length; i++) {
    indexes.set(sorted[sorted.length - i - 1], i);
  }
  var result = [];
  for (var _i = sorted.length - 1; _i >= 0; _i--) {
    var ent = sorted[_i];
    var rrr = allCells.get(ent);
    result.push({
      cell: rrr.cell,
      refs: rrr.refs.map(function (v) {
        return indexes.get(v);
      })
    });
  }
  return result;
}
exports.topologicalSort = topologicalSort;

},{}],21:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wonderCalculator = void 0;
var BitString_1 = require("../BitString");
var CellType_1 = require("../CellType");
var LevelMask_1 = require("./LevelMask");
var exoticPruned_1 = require("./exoticPruned");
var exoticMerkleProof_1 = require("./exoticMerkleProof");
var descriptor_1 = require("./descriptor");
var crypto_1 = require("@ton/crypto");
var exoticMerkleUpdate_1 = require("./exoticMerkleUpdate");
var exoticLibrary_1 = require("./exoticLibrary");
//
// This function replicates unknown logic of resolving cell data
// https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/crypto/vm/cells/DataCell.cpp#L214
//
function wonderCalculator(type, bits, refs) {
  //
  // Resolving level mask
  //
  var levelMask;
  var pruned = null;
  if (type === CellType_1.CellType.Ordinary) {
    var mask = 0;
    var _iterator = _createForOfIteratorHelper(refs),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var r = _step.value;
        mask = mask | r.mask.value;
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    levelMask = new LevelMask_1.LevelMask(mask);
  } else if (type === CellType_1.CellType.PrunedBranch) {
    // Parse pruned
    pruned = (0, exoticPruned_1.exoticPruned)(bits, refs);
    // Load level
    levelMask = new LevelMask_1.LevelMask(pruned.mask);
  } else if (type === CellType_1.CellType.MerkleProof) {
    // Parse proof
    var loaded = (0, exoticMerkleProof_1.exoticMerkleProof)(bits, refs);
    // Load level
    levelMask = new LevelMask_1.LevelMask(refs[0].mask.value >> 1);
  } else if (type === CellType_1.CellType.MerkleUpdate) {
    // Parse update
    var _loaded = (0, exoticMerkleUpdate_1.exoticMerkleUpdate)(bits, refs);
    // Load level
    levelMask = new LevelMask_1.LevelMask((refs[0].mask.value | refs[1].mask.value) >> 1);
  } else if (type === CellType_1.CellType.Library) {
    // Parse library
    var _loaded2 = (0, exoticLibrary_1.exoticLibrary)(bits, refs);
    // Load level
    levelMask = new LevelMask_1.LevelMask();
  } else {
    throw new Error("Unsupported exotic type");
  }
  //
  // Calculate hashes and depths
  // NOTE: https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/crypto/vm/cells/DataCell.cpp#L214
  //
  var depths = [];
  var hashes = [];
  var hashCount = type === CellType_1.CellType.PrunedBranch ? 1 : levelMask.hashCount;
  var totalHashCount = levelMask.hashCount;
  var hashIOffset = totalHashCount - hashCount;
  for (var levelI = 0, hashI = 0; levelI <= levelMask.level; levelI++) {
    if (!levelMask.isSignificant(levelI)) {
      continue;
    }
    if (hashI < hashIOffset) {
      hashI++;
      continue;
    }
    //
    // Bits
    //
    var currentBits = void 0;
    if (hashI === hashIOffset) {
      if (!(levelI === 0 || type === CellType_1.CellType.PrunedBranch)) {
        throw Error('Invalid');
      }
      currentBits = bits;
    } else {
      if (!(levelI !== 0 && type !== CellType_1.CellType.PrunedBranch)) {
        throw Error('Invalid: ' + levelI + ', ' + type);
      }
      currentBits = new BitString_1.BitString(hashes[hashI - hashIOffset - 1], 0, 256);
    }
    //
    // Depth
    //
    var currentDepth = 0;
    var _iterator2 = _createForOfIteratorHelper(refs),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var c = _step2.value;
        var childDepth = void 0;
        if (type == CellType_1.CellType.MerkleProof || type == CellType_1.CellType.MerkleUpdate) {
          childDepth = c.depth(levelI + 1);
        } else {
          childDepth = c.depth(levelI);
        }
        currentDepth = Math.max(currentDepth, childDepth);
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    if (refs.length > 0) {
      currentDepth++;
    }
    //
    // Hash
    //
    var repr = (0, descriptor_1.getRepr)(bits, currentBits, refs, levelI, levelMask.apply(levelI).value, type);
    var hash = (0, crypto_1.sha256_sync)(repr);
    //
    // Persist next
    //
    var destI = hashI - hashIOffset;
    depths[destI] = currentDepth;
    hashes[destI] = hash;
    //
    // Next
    //
    hashI++;
  }
  //
  // Calculate hash and depth for all levels
  //
  var resolvedHashes = [];
  var resolvedDepths = [];
  if (pruned) {
    for (var i = 0; i < 4; i++) {
      var _levelMask$apply = levelMask.apply(i),
        hashIndex = _levelMask$apply.hashIndex;
      var _levelMask = levelMask,
        thisHashIndex = _levelMask.hashIndex;
      if (hashIndex !== thisHashIndex) {
        resolvedHashes.push(pruned.pruned[hashIndex].hash);
        resolvedDepths.push(pruned.pruned[hashIndex].depth);
      } else {
        resolvedHashes.push(hashes[0]);
        resolvedDepths.push(depths[0]);
      }
    }
  } else {
    for (var _i = 0; _i < 4; _i++) {
      resolvedHashes.push(hashes[levelMask.apply(_i).hashIndex]);
      resolvedDepths.push(depths[levelMask.apply(_i).hashIndex]);
    }
  }
  //
  // Result
  //
  return {
    mask: levelMask,
    hashes: resolvedHashes,
    depths: resolvedDepths
  };
}
exports.wonderCalculator = wonderCalculator;

},{"../BitString":7,"../CellType":10,"./LevelMask":12,"./descriptor":13,"./exoticLibrary":14,"./exoticMerkleProof":15,"./exoticMerkleUpdate":16,"./exoticPruned":17,"@ton/crypto":92}],22:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.paddedBufferToBits = exports.bitsToPaddedBuffer = void 0;
var BitBuilder_1 = require("../BitBuilder");
var BitString_1 = require("../BitString");
function bitsToPaddedBuffer(bits) {
  // Create builder
  var builder = new BitBuilder_1.BitBuilder(Math.ceil(bits.length / 8) * 8);
  builder.writeBits(bits);
  // Apply padding
  var padding = Math.ceil(bits.length / 8) * 8 - bits.length;
  for (var i = 0; i < padding; i++) {
    if (i === 0) {
      builder.writeBit(1);
    } else {
      builder.writeBit(0);
    }
  }
  return builder.buffer();
}
exports.bitsToPaddedBuffer = bitsToPaddedBuffer;
function paddedBufferToBits(buff) {
  var bitLen = 0;
  // Finding rightmost non-zero byte in the buffer
  for (var i = buff.length - 1; i >= 0; i--) {
    if (buff[i] !== 0) {
      var testByte = buff[i];
      // Looking for a rightmost set padding bit
      var bitPos = testByte & -testByte;
      if ((bitPos & 1) == 0) {
        // It's power of 2 (only one bit set)
        bitPos = Math.log2(bitPos) + 1;
      }
      if (i > 0) {
        // If we are dealing with more than 1 byte buffer
        bitLen = i << 3; //Number of full bytes * 8
      }
      bitLen += 8 - bitPos;
      break;
    }
  }
  return new BitString_1.BitString(buff, 0, bitLen);
}
exports.paddedBufferToBits = paddedBufferToBits;

},{"../BitBuilder":5,"../BitString":7}],23:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.writeString = exports.stringToCell = exports.readString = void 0;
var Builder_1 = require("../Builder");
function readBuffer(slice) {
  // Check consistency
  if (slice.remainingBits % 8 !== 0) {
    throw new Error("Invalid string length: ".concat(slice.remainingBits));
  }
  if (slice.remainingRefs !== 0 && slice.remainingRefs !== 1) {
    throw new Error("invalid number of refs: ".concat(slice.remainingRefs));
  }
  // Read string
  var res;
  if (slice.remainingBits === 0) {
    res = Buffer.alloc(0);
  } else {
    res = slice.loadBuffer(slice.remainingBits / 8);
  }
  // Read tail
  if (slice.remainingRefs === 1) {
    res = Buffer.concat([res, readBuffer(slice.loadRef().beginParse())]);
  }
  return res;
}
function readString(slice) {
  return readBuffer(slice).toString();
}
exports.readString = readString;
function writeBuffer(src, builder) {
  if (src.length > 0) {
    var bytes = Math.floor(builder.availableBits / 8);
    if (src.length > bytes) {
      var a = src.subarray(0, bytes);
      var t = src.subarray(bytes);
      builder = builder.storeBuffer(a);
      var bb = (0, Builder_1.beginCell)();
      writeBuffer(t, bb);
      builder = builder.storeRef(bb.endCell());
    } else {
      builder = builder.storeBuffer(src);
    }
  }
}
function stringToCell(src) {
  var builder = (0, Builder_1.beginCell)();
  writeBuffer(Buffer.from(src), builder);
  return builder.endCell();
}
exports.stringToCell = stringToCell;
function writeString(src, builder) {
  writeBuffer(Buffer.from(src), builder);
}
exports.writeString = writeString;

}).call(this)}).call(this,require("buffer").Buffer)
},{"../Builder":8,"buffer":196}],24:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return _wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return _construct(t, arguments, _getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf(Wrapper, t); }, _wrapNativeSuper(t); }
function _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ComputeError = void 0;
var ComputeError = /*#__PURE__*/function (_Error) {
  function ComputeError(message, exitCode, opts) {
    var _this;
    _classCallCheck(this, ComputeError);
    _this = _callSuper(this, ComputeError, [message]);
    _this.exitCode = exitCode;
    _this.debugLogs = opts && opts.debugLogs ? opts.debugLogs : null;
    _this.logs = opts && opts.logs ? opts.logs : null;
    Object.setPrototypeOf(_this, ComputeError.prototype);
    return _this;
  }
  _inherits(ComputeError, _Error);
  return _createClass(ComputeError);
}(/*#__PURE__*/_wrapNativeSuper(Error));
exports.ComputeError = ComputeError;

},{}],25:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.openContract = void 0;
var Address_1 = require("../address/Address");
var Cell_1 = require("../boc/Cell");
function openContract(src, factory) {
  // Resolve parameters
  var address;
  var init = null;
  if (!Address_1.Address.isAddress(src.address)) {
    throw Error('Invalid address');
  }
  address = src.address;
  if (src.init) {
    if (!(src.init.code instanceof Cell_1.Cell)) {
      throw Error('Invalid init.code');
    }
    if (!(src.init.data instanceof Cell_1.Cell)) {
      throw Error('Invalid init.data');
    }
    init = src.init;
  }
  // Create executor
  var executor = factory({
    address: address,
    init: init
  });
  // Create proxy
  return new Proxy(src, {
    get: function get(target, prop) {
      var value = target[prop];
      if (typeof prop === 'string' && (prop.startsWith('get') || prop.startsWith('send') || prop.startsWith('is'))) {
        if (typeof value === 'function') {
          return function () {
            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            return value.apply(target, [executor].concat(args));
          };
        }
      }
      return value;
    }
  });
}
exports.openContract = openContract;

},{"../address/Address":2,"../boc/Cell":9}],26:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.safeSignVerify = exports.safeSign = void 0;
var crypto_1 = require("@ton/crypto");
var MIN_SEED_LENGTH = 8;
var MAX_SEED_LENGTH = 64;
function createSafeSignHash(cell, seed) {
  var seedData = Buffer.from(seed);
  if (seedData.length > MAX_SEED_LENGTH) {
    throw Error('Seed can\t be longer than 64 bytes');
  }
  if (seedData.length < MIN_SEED_LENGTH) {
    throw Error('Seed must be at least 8 bytes');
  }
  return (0, crypto_1.sha256_sync)(Buffer.concat([Buffer.from([0xff, 0xff]), seedData, cell.hash()]));
}
function safeSign(cell, secretKey) {
  var seed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'ton-safe-sign-magic';
  return (0, crypto_1.sign)(createSafeSignHash(cell, seed), secretKey);
}
exports.safeSign = safeSign;
function safeSignVerify(cell, signature, publicKey) {
  var seed = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'ton-safe-sign-magic';
  return (0, crypto_1.signVerify)(createSafeSignHash(cell, seed), signature, publicKey);
}
exports.safeSignVerify = safeSignVerify;

}).call(this)}).call(this,require("buffer").Buffer)
},{"@ton/crypto":92,"buffer":196}],27:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Dictionary = void 0;
var Address_1 = require("../address/Address");
var Builder_1 = require("../boc/Builder");
var Cell_1 = require("../boc/Cell");
var BitString_1 = require("../boc/BitString");
var generateMerkleProof_1 = require("./generateMerkleProof");
var generateMerkleUpdate_1 = require("./generateMerkleUpdate");
var parseDict_1 = require("./parseDict");
var serializeDict_1 = require("./serializeDict");
var internalKeySerializer_1 = require("./utils/internalKeySerializer");
var Dictionary = /*#__PURE__*/function () {
  function Dictionary(values, key, value) {
    _classCallCheck(this, Dictionary);
    this._key = key;
    this._value = value;
    this._map = values;
  }
  return _createClass(Dictionary, [{
    key: "size",
    get: function get() {
      return this._map.size;
    }
  }, {
    key: "get",
    value: function get(key) {
      return this._map.get((0, internalKeySerializer_1.serializeInternalKey)(key));
    }
  }, {
    key: "has",
    value: function has(key) {
      return this._map.has((0, internalKeySerializer_1.serializeInternalKey)(key));
    }
  }, {
    key: "set",
    value: function set(key, value) {
      this._map.set((0, internalKeySerializer_1.serializeInternalKey)(key), value);
      return this;
    }
  }, {
    key: "delete",
    value: function _delete(key) {
      var k = (0, internalKeySerializer_1.serializeInternalKey)(key);
      return this._map["delete"](k);
    }
  }, {
    key: "clear",
    value: function clear() {
      this._map.clear();
    }
  }, {
    key: Symbol.iterator,
    value: /*#__PURE__*/_regeneratorRuntime().mark(function value() {
      var _iterator, _step, _step$value, k, v, key;
      return _regeneratorRuntime().wrap(function value$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _iterator = _createForOfIteratorHelper(this._map);
            _context.prev = 1;
            _iterator.s();
          case 3:
            if ((_step = _iterator.n()).done) {
              _context.next = 10;
              break;
            }
            _step$value = _slicedToArray(_step.value, 2), k = _step$value[0], v = _step$value[1];
            key = (0, internalKeySerializer_1.deserializeInternalKey)(k);
            _context.next = 8;
            return [key, v];
          case 8:
            _context.next = 3;
            break;
          case 10:
            _context.next = 15;
            break;
          case 12:
            _context.prev = 12;
            _context.t0 = _context["catch"](1);
            _iterator.e(_context.t0);
          case 15:
            _context.prev = 15;
            _iterator.f();
            return _context.finish(15);
          case 18:
          case "end":
            return _context.stop();
        }
      }, value, this, [[1, 12, 15, 18]]);
    })
  }, {
    key: "keys",
    value: function keys() {
      return Array.from(this._map.keys()).map(function (v) {
        return (0, internalKeySerializer_1.deserializeInternalKey)(v);
      });
    }
  }, {
    key: "values",
    value: function values() {
      return Array.from(this._map.values());
    }
  }, {
    key: "store",
    value: function store(builder, key, value) {
      if (this._map.size === 0) {
        builder.storeBit(0);
      } else {
        // Resolve serializer
        var resolvedKey = this._key;
        if (key !== null && key !== undefined) {
          resolvedKey = key;
        }
        var resolvedValue = this._value;
        if (value !== null && value !== undefined) {
          resolvedValue = value;
        }
        if (!resolvedKey) {
          throw Error('Key serializer is not defined');
        }
        if (!resolvedValue) {
          throw Error('Value serializer is not defined');
        }
        // Prepare map
        var prepared = new Map();
        var _iterator2 = _createForOfIteratorHelper(this._map),
          _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var _step2$value = _slicedToArray(_step2.value, 2),
              k = _step2$value[0],
              v = _step2$value[1];
            prepared.set(resolvedKey.serialize((0, internalKeySerializer_1.deserializeInternalKey)(k)), v);
          }
          // Store
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
        builder.storeBit(1);
        var dd = (0, Builder_1.beginCell)();
        (0, serializeDict_1.serializeDict)(prepared, resolvedKey.bits, resolvedValue.serialize, dd);
        builder.storeRef(dd.endCell());
      }
    }
  }, {
    key: "storeDirect",
    value: function storeDirect(builder, key, value) {
      if (this._map.size === 0) {
        throw Error('Cannot store empty dictionary directly');
      }
      // Resolve serializer
      var resolvedKey = this._key;
      if (key !== null && key !== undefined) {
        resolvedKey = key;
      }
      var resolvedValue = this._value;
      if (value !== null && value !== undefined) {
        resolvedValue = value;
      }
      if (!resolvedKey) {
        throw Error('Key serializer is not defined');
      }
      if (!resolvedValue) {
        throw Error('Value serializer is not defined');
      }
      // Prepare map
      var prepared = new Map();
      var _iterator3 = _createForOfIteratorHelper(this._map),
        _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var _step3$value = _slicedToArray(_step3.value, 2),
            k = _step3$value[0],
            v = _step3$value[1];
          prepared.set(resolvedKey.serialize((0, internalKeySerializer_1.deserializeInternalKey)(k)), v);
        }
        // Store
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      (0, serializeDict_1.serializeDict)(prepared, resolvedKey.bits, resolvedValue.serialize, builder);
    }
    /**
     * Generate merkle proof for multiple keys in the dictionary
     * @param keys an array of the keys
     * @returns generated merkle proof cell
     */
  }, {
    key: "generateMerkleProof",
    value: function generateMerkleProof(keys) {
      return (0, generateMerkleProof_1.generateMerkleProof)(this, keys, this._key);
    }
    /**
     * Low level method for generating pruned dictionary directly.
     * The result can be used as a part of a bigger merkle proof
     * @param keys an array of the keys
     * @returns cell that contains the pruned dictionary
     */
  }, {
    key: "generateMerkleProofDirect",
    value: function generateMerkleProofDirect(keys) {
      return (0, generateMerkleProof_1.generateMerkleProofDirect)(this, keys, this._key);
    }
  }, {
    key: "generateMerkleUpdate",
    value: function generateMerkleUpdate(key, newValue) {
      return (0, generateMerkleUpdate_1.generateMerkleUpdate)(this, key, this._key, newValue);
    }
  }], [{
    key: "empty",
    value:
    /**
     * Create an empty map
     * @param key key type
     * @param value value type
     * @returns Dictionary<K, V>
     */
    function empty(key, value) {
      if (key && value) {
        return new Dictionary(new Map(), key, value);
      } else {
        return new Dictionary(new Map(), null, null);
      }
    }
    /**
     * Load dictionary from slice
     * @param key key description
     * @param value value description
     * @param src slice
     * @returns Dictionary<K, V>
     */
  }, {
    key: "load",
    value: function load(key, value, sc) {
      var slice;
      if (sc instanceof Cell_1.Cell) {
        if (sc.isExotic) {
          return Dictionary.empty(key, value);
        }
        slice = sc.beginParse();
      } else {
        slice = sc;
      }
      var cell = slice.loadMaybeRef();
      if (cell && !cell.isExotic) {
        return Dictionary.loadDirect(key, value, cell.beginParse());
      } else {
        return Dictionary.empty(key, value);
      }
    }
    /**
     * Low level method for rare dictionaries from system contracts.
     * Loads dictionary from slice directly without going to the ref.
     *
     * @param key key description
     * @param value value description
     * @param sc slice
     * @returns Dictionary<K, V>
     */
  }, {
    key: "loadDirect",
    value: function loadDirect(key, value, sc) {
      if (!sc) {
        return Dictionary.empty(key, value);
      }
      var slice;
      if (sc instanceof Cell_1.Cell) {
        slice = sc.beginParse();
      } else {
        slice = sc;
      }
      var values = (0, parseDict_1.parseDict)(slice, key.bits, value.parse);
      var prepare = new Map();
      var _iterator4 = _createForOfIteratorHelper(values),
        _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var _step4$value = _slicedToArray(_step4.value, 2),
            k = _step4$value[0],
            v = _step4$value[1];
          prepare.set((0, internalKeySerializer_1.serializeInternalKey)(key.parse(k)), v);
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      return new Dictionary(prepare, key, value);
    }
  }]);
}();
exports.Dictionary = Dictionary;
Dictionary.Keys = {
  /**
   * Standard address key
   * @returns DictionaryKey<Address>
   */
  Address: function Address() {
    return createAddressKey();
  },
  /**
   * Create standard big integer key
   * @param bits number of bits
   * @returns DictionaryKey<bigint>
   */
  BigInt: function BigInt(bits) {
    return createBigIntKey(bits);
  },
  /**
   * Create integer key
   * @param bits bits of integer
   * @returns DictionaryKey<number>
   */
  Int: function Int(bits) {
    return createIntKey(bits);
  },
  /**
   * Create standard unsigned big integer key
   * @param bits number of bits
   * @returns DictionaryKey<bigint>
   */
  BigUint: function BigUint(bits) {
    return createBigUintKey(bits);
  },
  /**
   * Create standard unsigned integer key
   * @param bits number of bits
   * @returns DictionaryKey<number>
   */
  Uint: function Uint(bits) {
    return createUintKey(bits);
  },
  /**
   * Create standard buffer key
   * @param bytes number of bytes of a buffer
   * @returns DictionaryKey<Buffer>
   */
  Buffer: function Buffer(bytes) {
    return createBufferKey(bytes);
  },
  /**
   * Create BitString key
   * @param bits key length
   * @returns DictionaryKey<BitString>
   * Point is that Buffer has to be 8 bit aligned,
   * while key is TVM dictionary doesn't have to be
   * aligned at all.
   */
  BitString: function BitString(bits) {
    return createBitStringKey(bits);
  }
};
Dictionary.Values = {
  /**
   * Create standard integer value
   * @returns DictionaryValue<bigint>
   */
  BigInt: function BigInt(bits) {
    return createBigIntValue(bits);
  },
  /**
   * Create standard integer value
   * @returns DictionaryValue<number>
   */
  Int: function Int(bits) {
    return createIntValue(bits);
  },
  /**
   * Create big var int
   * @param bits nubmer of header bits
   * @returns DictionaryValue<bigint>
   */
  BigVarInt: function BigVarInt(bits) {
    return createBigVarIntValue(bits);
  },
  /**
   * Create standard unsigned integer value
   * @param bits number of bits
   * @returns DictionaryValue<bigint>
   */
  BigUint: function BigUint(bits) {
    return createBigUintValue(bits);
  },
  /**
   * Create standard unsigned integer value
   * @param bits number of bits
   * @returns DictionaryValue<bigint>
   */
  Uint: function Uint(bits) {
    return createUintValue(bits);
  },
  /**
   * Create big var int
   * @param bits nubmer of header bits
   * @returns DictionaryValue<bigint>
   */
  BigVarUint: function BigVarUint(bits) {
    return createBigVarUintValue(bits);
  },
  /**
   * Create standard boolean value
   * @returns DictionaryValue<boolean>
   */
  Bool: function Bool() {
    return createBooleanValue();
  },
  /**
   * Create standard address value
   * @returns DictionaryValue<Address>
   */
  Address: function Address() {
    return createAddressValue();
  },
  /**
   * Create standard cell value
   * @returns DictionaryValue<Cell>
   */
  Cell: function Cell() {
    return createCellValue();
  },
  /**
   * Create Builder value
   * @param bytes number of bytes of a buffer
   * @returns DictionaryValue<Builder>
   */
  Buffer: function Buffer(bytes) {
    return createBufferValue(bytes);
  },
  /**
   * Create BitString value
   * @param requested bit length
   * @returns DictionaryValue<BitString>
   * Point is that Buffer is not applicable
   * when length is not 8 bit alligned.
   */
  BitString: function BitString(bits) {
    return createBitStringValue(bits);
  },
  /**
   * Create dictionary value
   * @param key
   * @param value
   */
  Dictionary: function Dictionary(key, value) {
    return createDictionaryValue(key, value);
  }
};
//
// Keys and Values
//
function createAddressKey() {
  return {
    bits: 267,
    serialize: function serialize(src) {
      if (!Address_1.Address.isAddress(src)) {
        throw Error('Key is not an address');
      }
      return (0, Builder_1.beginCell)().storeAddress(src).endCell().beginParse().preloadUintBig(267);
    },
    parse: function parse(src) {
      return (0, Builder_1.beginCell)().storeUint(src, 267).endCell().beginParse().loadAddress();
    }
  };
}
function createBigIntKey(bits) {
  return {
    bits: bits,
    serialize: function serialize(src) {
      if (typeof src !== 'bigint') {
        throw Error('Key is not a bigint');
      }
      return (0, Builder_1.beginCell)().storeInt(src, bits).endCell().beginParse().loadUintBig(bits);
    },
    parse: function parse(src) {
      return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadIntBig(bits);
    }
  };
}
function createIntKey(bits) {
  return {
    bits: bits,
    serialize: function serialize(src) {
      if (typeof src !== 'number') {
        throw Error('Key is not a number');
      }
      if (!Number.isSafeInteger(src)) {
        throw Error('Key is not a safe integer: ' + src);
      }
      return (0, Builder_1.beginCell)().storeInt(src, bits).endCell().beginParse().loadUintBig(bits);
    },
    parse: function parse(src) {
      return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadInt(bits);
    }
  };
}
function createBigUintKey(bits) {
  return {
    bits: bits,
    serialize: function serialize(src) {
      if (typeof src !== 'bigint') {
        throw Error('Key is not a bigint');
      }
      if (src < 0) {
        throw Error('Key is negative: ' + src);
      }
      return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadUintBig(bits);
    },
    parse: function parse(src) {
      return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadUintBig(bits);
    }
  };
}
function createUintKey(bits) {
  return {
    bits: bits,
    serialize: function serialize(src) {
      if (typeof src !== 'number') {
        throw Error('Key is not a number');
      }
      if (!Number.isSafeInteger(src)) {
        throw Error('Key is not a safe integer: ' + src);
      }
      if (src < 0) {
        throw Error('Key is negative: ' + src);
      }
      return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadUintBig(bits);
    },
    parse: function parse(src) {
      return Number((0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadUint(bits));
    }
  };
}
function createBufferKey(bytes) {
  return {
    bits: bytes * 8,
    serialize: function serialize(src) {
      if (!Buffer.isBuffer(src)) {
        throw Error('Key is not a buffer');
      }
      return (0, Builder_1.beginCell)().storeBuffer(src).endCell().beginParse().loadUintBig(bytes * 8);
    },
    parse: function parse(src) {
      return (0, Builder_1.beginCell)().storeUint(src, bytes * 8).endCell().beginParse().loadBuffer(bytes);
    }
  };
}
function createBitStringKey(bits) {
  return {
    bits: bits,
    serialize: function serialize(src) {
      if (!BitString_1.BitString.isBitString(src)) throw Error('Key is not a BitString');
      return (0, Builder_1.beginCell)().storeBits(src).endCell().beginParse().loadUintBig(bits);
    },
    parse: function parse(src) {
      return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadBits(bits);
    }
  };
}
function createIntValue(bits) {
  return {
    serialize: function serialize(src, buidler) {
      buidler.storeInt(src, bits);
    },
    parse: function parse(src) {
      return src.loadInt(bits);
    }
  };
}
function createBigIntValue(bits) {
  return {
    serialize: function serialize(src, buidler) {
      buidler.storeInt(src, bits);
    },
    parse: function parse(src) {
      return src.loadIntBig(bits);
    }
  };
}
function createBigVarIntValue(bits) {
  return {
    serialize: function serialize(src, buidler) {
      buidler.storeVarInt(src, bits);
    },
    parse: function parse(src) {
      return src.loadVarIntBig(bits);
    }
  };
}
function createBigVarUintValue(bits) {
  return {
    serialize: function serialize(src, buidler) {
      buidler.storeVarUint(src, bits);
    },
    parse: function parse(src) {
      return src.loadVarUintBig(bits);
    }
  };
}
function createUintValue(bits) {
  return {
    serialize: function serialize(src, buidler) {
      buidler.storeUint(src, bits);
    },
    parse: function parse(src) {
      return src.loadUint(bits);
    }
  };
}
function createBigUintValue(bits) {
  return {
    serialize: function serialize(src, buidler) {
      buidler.storeUint(src, bits);
    },
    parse: function parse(src) {
      return src.loadUintBig(bits);
    }
  };
}
function createBooleanValue() {
  return {
    serialize: function serialize(src, buidler) {
      buidler.storeBit(src);
    },
    parse: function parse(src) {
      return src.loadBit();
    }
  };
}
function createAddressValue() {
  return {
    serialize: function serialize(src, buidler) {
      buidler.storeAddress(src);
    },
    parse: function parse(src) {
      return src.loadAddress();
    }
  };
}
function createCellValue() {
  return {
    serialize: function serialize(src, buidler) {
      buidler.storeRef(src);
    },
    parse: function parse(src) {
      return src.loadRef();
    }
  };
}
function createDictionaryValue(key, value) {
  return {
    serialize: function serialize(src, buidler) {
      src.store(buidler);
    },
    parse: function parse(src) {
      return Dictionary.load(key, value, src);
    }
  };
}
function createBufferValue(size) {
  return {
    serialize: function serialize(src, buidler) {
      if (src.length !== size) {
        throw Error('Invalid buffer size');
      }
      buidler.storeBuffer(src);
    },
    parse: function parse(src) {
      return src.loadBuffer(size);
    }
  };
}
function createBitStringValue(bits) {
  return {
    serialize: function serialize(src, builder) {
      if (src.length !== bits) {
        throw Error('Invalid BitString size');
      }
      builder.storeBits(src);
    },
    parse: function parse(src) {
      return src.loadBits(bits);
    }
  };
}

}).call(this)}).call(this,{"isBuffer":require("../../../../is-buffer/index.js")})
},{"../../../../is-buffer/index.js":201,"../address/Address":2,"../boc/BitString":7,"../boc/Builder":8,"../boc/Cell":9,"./generateMerkleProof":28,"./generateMerkleUpdate":29,"./parseDict":30,"./serializeDict":31,"./utils/internalKeySerializer":33}],28:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generateMerkleProof = exports.generateMerkleProofDirect = void 0;
var Builder_1 = require("../boc/Builder");
var readUnaryLength_1 = require("./utils/readUnaryLength");
var exoticMerkleProof_1 = require("../boc/cell/exoticMerkleProof");
function convertToPrunedBranch(c) {
  return (0, Builder_1.beginCell)().storeUint(1, 8).storeUint(1, 8).storeBuffer(c.hash(0)).storeUint(c.depth(0), 16).endCell({
    exotic: true
  });
}
function doGenerateMerkleProof(prefix, slice, n, keys) {
  // Reading label
  var originalCell = slice.asCell();
  if (keys.length == 0) {
    // no keys to prove, prune the whole subdict
    return convertToPrunedBranch(originalCell);
  }
  var lb0 = slice.loadBit() ? 1 : 0;
  var prefixLength = 0;
  var pp = prefix;
  if (lb0 === 0) {
    // Short label detected
    // Read
    prefixLength = (0, readUnaryLength_1.readUnaryLength)(slice);
    // Read prefix
    for (var i = 0; i < prefixLength; i++) {
      pp += slice.loadBit() ? '1' : '0';
    }
  } else {
    var lb1 = slice.loadBit() ? 1 : 0;
    if (lb1 === 0) {
      // Long label detected
      prefixLength = slice.loadUint(Math.ceil(Math.log2(n + 1)));
      for (var _i = 0; _i < prefixLength; _i++) {
        pp += slice.loadBit() ? '1' : '0';
      }
    } else {
      // Same label detected
      var bit = slice.loadBit() ? '1' : '0';
      prefixLength = slice.loadUint(Math.ceil(Math.log2(n + 1)));
      for (var _i2 = 0; _i2 < prefixLength; _i2++) {
        pp += bit;
      }
    }
  }
  if (n - prefixLength === 0) {
    return originalCell;
  } else {
    var sl = originalCell.beginParse();
    var left = sl.loadRef();
    var right = sl.loadRef();
    // NOTE: Left and right branches are implicitly contain prefixes '0' and '1'
    if (!left.isExotic) {
      var leftKeys = keys.filter(function (key) {
        return pp + '0' === key.slice(0, pp.length + 1);
      });
      left = doGenerateMerkleProof(pp + '0', left.beginParse(), n - prefixLength - 1, leftKeys);
    }
    if (!right.isExotic) {
      var rightKeys = keys.filter(function (key) {
        return pp + '1' === key.slice(0, pp.length + 1);
      });
      right = doGenerateMerkleProof(pp + '1', right.beginParse(), n - prefixLength - 1, rightKeys);
    }
    return (0, Builder_1.beginCell)().storeSlice(sl).storeRef(left).storeRef(right).endCell();
  }
}
function generateMerkleProofDirect(dict, keys, keyObject) {
  keys.forEach(function (key) {
    if (!dict.has(key)) {
      throw new Error("Trying to generate merkle proof for a missing key \"".concat(key, "\""));
    }
  });
  var s = (0, Builder_1.beginCell)().storeDictDirect(dict).asSlice();
  return doGenerateMerkleProof('', s, keyObject.bits, keys.map(function (key) {
    return keyObject.serialize(key).toString(2).padStart(keyObject.bits, '0');
  }));
}
exports.generateMerkleProofDirect = generateMerkleProofDirect;
function generateMerkleProof(dict, keys, keyObject) {
  return (0, exoticMerkleProof_1.convertToMerkleProof)(generateMerkleProofDirect(dict, keys, keyObject));
}
exports.generateMerkleProof = generateMerkleProof;

},{"../boc/Builder":8,"../boc/cell/exoticMerkleProof":15,"./utils/readUnaryLength":34}],29:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generateMerkleUpdate = void 0;
var Builder_1 = require("../boc/Builder");
var generateMerkleProof_1 = require("./generateMerkleProof");
function convertToMerkleUpdate(c1, c2) {
  return (0, Builder_1.beginCell)().storeUint(4, 8).storeBuffer(c1.hash(0)).storeBuffer(c2.hash(0)).storeUint(c1.depth(0), 16).storeUint(c2.depth(0), 16).storeRef(c1).storeRef(c2).endCell({
    exotic: true
  });
}
function generateMerkleUpdate(dict, key, keyObject, newValue) {
  var oldProof = (0, generateMerkleProof_1.generateMerkleProof)(dict, [key], keyObject).refs[0];
  dict.set(key, newValue);
  var newProof = (0, generateMerkleProof_1.generateMerkleProof)(dict, [key], keyObject).refs[0];
  return convertToMerkleUpdate(oldProof, newProof);
}
exports.generateMerkleUpdate = generateMerkleUpdate;

},{"../boc/Builder":8,"./generateMerkleProof":28}],30:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseDict = void 0;
function readUnaryLength(slice) {
  var res = 0;
  while (slice.loadBit()) {
    res++;
  }
  return res;
}
function doParse(prefix, slice, n, res, extractor) {
  // Reading label
  var lb0 = slice.loadBit() ? 1 : 0;
  var prefixLength = 0;
  var pp = prefix;
  if (lb0 === 0) {
    // Short label detected
    // Read 
    prefixLength = readUnaryLength(slice);
    // Read prefix
    for (var i = 0; i < prefixLength; i++) {
      pp += slice.loadBit() ? '1' : '0';
    }
  } else {
    var lb1 = slice.loadBit() ? 1 : 0;
    if (lb1 === 0) {
      // Long label detected
      prefixLength = slice.loadUint(Math.ceil(Math.log2(n + 1)));
      for (var _i = 0; _i < prefixLength; _i++) {
        pp += slice.loadBit() ? '1' : '0';
      }
    } else {
      // Same label detected
      var bit = slice.loadBit() ? '1' : '0';
      prefixLength = slice.loadUint(Math.ceil(Math.log2(n + 1)));
      for (var _i2 = 0; _i2 < prefixLength; _i2++) {
        pp += bit;
      }
    }
  }
  if (n - prefixLength === 0) {
    res.set(BigInt('0b' + pp), extractor(slice));
  } else {
    var left = slice.loadRef();
    var right = slice.loadRef();
    // NOTE: Left and right branches are implicitly contain prefixes '0' and '1'
    if (!left.isExotic) {
      doParse(pp + '0', left.beginParse(), n - prefixLength - 1, res, extractor);
    }
    if (!right.isExotic) {
      doParse(pp + '1', right.beginParse(), n - prefixLength - 1, res, extractor);
    }
  }
}
function parseDict(sc, keySize, extractor) {
  var res = new Map();
  if (sc) {
    doParse('', sc, keySize, res, extractor);
  }
  return res;
}
exports.parseDict = parseDict;

},{}],31:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.serializeDict = exports.detectLabelType = exports.writeLabelSame = exports.writeLabelLong = exports.writeLabelShort = exports.buildTree = void 0;
var Builder_1 = require("../boc/Builder");
var findCommonPrefix_1 = require("./utils/findCommonPrefix");
//
// Tree Build
//
function pad(src, size) {
  while (src.length < size) {
    src = '0' + src;
  }
  return src;
}
function removePrefixMap(src, length) {
  if (length === 0) {
    return src;
  } else {
    var res = new Map();
    var _iterator = _createForOfIteratorHelper(src.keys()),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var k = _step.value;
        var d = src.get(k);
        res.set(k.slice(length), d);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return res;
  }
}
function forkMap(src, prefixLen) {
  if (src.size === 0) {
    throw Error('Internal inconsistency');
  }
  var left = new Map();
  var right = new Map();
  var _iterator2 = _createForOfIteratorHelper(src.entries()),
    _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var _step2$value = _slicedToArray(_step2.value, 2),
        k = _step2$value[0],
        d = _step2$value[1];
      if (k[prefixLen] === '0') {
        left.set(k, d);
      } else {
        right.set(k, d);
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  if (left.size === 0) {
    throw Error('Internal inconsistency. Left emtpy.');
  }
  if (right.size === 0) {
    throw Error('Internal inconsistency. Right emtpy.');
  }
  return {
    left: left,
    right: right
  };
}
function buildNode(src, prefixLen) {
  if (src.size === 0) {
    throw Error('Internal inconsistency');
  }
  if (src.size === 1) {
    return {
      type: 'leaf',
      value: Array.from(src.values())[0]
    };
  }
  var _forkMap = forkMap(src, prefixLen),
    left = _forkMap.left,
    right = _forkMap.right;
  return {
    type: 'fork',
    left: buildEdge(left, prefixLen + 1),
    right: buildEdge(right, prefixLen + 1)
  };
}
function buildEdge(src) {
  var prefixLen = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  if (src.size === 0) {
    throw Error('Internal inconsistency');
  }
  var label = (0, findCommonPrefix_1.findCommonPrefix)(Array.from(src.keys()), prefixLen);
  return {
    label: label,
    node: buildNode(src, label.length + prefixLen)
  };
}
function buildTree(src, keyLength) {
  // Convert map keys
  var converted = new Map();
  for (var _i = 0, _Array$from = Array.from(src.keys()); _i < _Array$from.length; _i++) {
    var k = _Array$from[_i];
    var padded = pad(k.toString(2), keyLength);
    converted.set(padded, src.get(k));
  }
  // Calculate root label
  return buildEdge(converted);
}
exports.buildTree = buildTree;
//
// Serialization
//
function writeLabelShort(src, to) {
  // Header
  to.storeBit(0);
  // Unary length
  for (var i = 0; i < src.length; i++) {
    to.storeBit(1);
  }
  to.storeBit(0);
  // Value
  if (src.length > 0) {
    to.storeUint(BigInt('0b' + src), src.length);
  }
  return to;
}
exports.writeLabelShort = writeLabelShort;
function labelShortLength(src) {
  return 1 + src.length + 1 + src.length;
}
function writeLabelLong(src, keyLength, to) {
  // Header
  to.storeBit(1);
  to.storeBit(0);
  // Length
  var length = Math.ceil(Math.log2(keyLength + 1));
  to.storeUint(src.length, length);
  // Value
  if (src.length > 0) {
    to.storeUint(BigInt('0b' + src), src.length);
  }
  return to;
}
exports.writeLabelLong = writeLabelLong;
function labelLongLength(src, keyLength) {
  return 1 + 1 + Math.ceil(Math.log2(keyLength + 1)) + src.length;
}
function writeLabelSame(value, length, keyLength, to) {
  // Header
  to.storeBit(1);
  to.storeBit(1);
  // Value
  to.storeBit(value);
  // Length
  var lenLen = Math.ceil(Math.log2(keyLength + 1));
  to.storeUint(length, lenLen);
}
exports.writeLabelSame = writeLabelSame;
function labelSameLength(keyLength) {
  return 1 + 1 + 1 + Math.ceil(Math.log2(keyLength + 1));
}
function isSame(src) {
  if (src.length === 0 || src.length === 1) {
    return true;
  }
  for (var i = 1; i < src.length; i++) {
    if (src[i] !== src[0]) {
      return false;
    }
  }
  return true;
}
function detectLabelType(src, keyLength) {
  var kind = 'short';
  var kindLength = labelShortLength(src);
  var longLength = labelLongLength(src, keyLength);
  if (longLength < kindLength) {
    kindLength = longLength;
    kind = 'long';
  }
  if (isSame(src)) {
    var sameLength = labelSameLength(keyLength);
    if (sameLength < kindLength) {
      kindLength = sameLength;
      kind = 'same';
    }
  }
  return kind;
}
exports.detectLabelType = detectLabelType;
function writeLabel(src, keyLength, to) {
  var type = detectLabelType(src, keyLength);
  if (type === 'short') {
    writeLabelShort(src, to);
  } else if (type === 'long') {
    writeLabelLong(src, keyLength, to);
  } else if (type === 'same') {
    writeLabelSame(src[0] === '1', src.length, keyLength, to);
  }
}
function writeNode(src, keyLength, serializer, to) {
  if (src.type === 'leaf') {
    serializer(src.value, to);
  }
  if (src.type === 'fork') {
    var leftCell = (0, Builder_1.beginCell)();
    var rightCell = (0, Builder_1.beginCell)();
    writeEdge(src.left, keyLength - 1, serializer, leftCell);
    writeEdge(src.right, keyLength - 1, serializer, rightCell);
    to.storeRef(leftCell);
    to.storeRef(rightCell);
  }
}
function writeEdge(src, keyLength, serializer, to) {
  writeLabel(src.label, keyLength, to);
  writeNode(src.node, keyLength - src.label.length, serializer, to);
}
function serializeDict(src, keyLength, serializer, to) {
  var tree = buildTree(src, keyLength);
  writeEdge(tree, keyLength, serializer, to);
}
exports.serializeDict = serializeDict;

},{"../boc/Builder":8,"./utils/findCommonPrefix":32}],32:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findCommonPrefix = void 0;
function findCommonPrefix(src) {
  var startPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  // Corner cases
  if (src.length === 0) {
    return '';
  }
  var r = src[0].slice(startPos);
  for (var i = 1; i < src.length; i++) {
    var s = src[i];
    while (s.indexOf(r, startPos) !== startPos) {
      r = r.substring(0, r.length - 1);
      if (r === '') {
        return r;
      }
    }
  }
  return r;
}
exports.findCommonPrefix = findCommonPrefix;

},{}],33:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deserializeInternalKey = exports.serializeInternalKey = void 0;
var Address_1 = require("../../address/Address");
var BitString_1 = require("../../boc/BitString");
var paddedBits_1 = require("../../boc/utils/paddedBits");
function serializeInternalKey(value) {
  if (typeof value === 'number') {
    if (!Number.isSafeInteger(value)) {
      throw Error('Invalid key type: not a safe integer: ' + value);
    }
    return 'n:' + value.toString(10);
  } else if (typeof value === 'bigint') {
    return 'b:' + value.toString(10);
  } else if (Address_1.Address.isAddress(value)) {
    return 'a:' + value.toString();
  } else if (Buffer.isBuffer(value)) {
    return 'f:' + value.toString('hex');
  } else if (BitString_1.BitString.isBitString(value)) {
    return 'B:' + value.toString();
  } else {
    throw Error('Invalid key type');
  }
}
exports.serializeInternalKey = serializeInternalKey;
function deserializeInternalKey(value) {
  var k = value.slice(0, 2);
  var v = value.slice(2);
  if (k === 'n:') {
    return parseInt(v, 10);
  } else if (k === 'b:') {
    return BigInt(v);
  } else if (k === 'a:') {
    return Address_1.Address.parse(v);
  } else if (k === 'f:') {
    return Buffer.from(v, 'hex');
  } else if (k === 'B:') {
    var lastDash = v.slice(-1) == "_";
    var isPadded = lastDash || v.length % 2 != 0;
    if (isPadded) {
      var charLen = lastDash ? v.length - 1 : v.length;
      var padded = v.substr(0, charLen) + "0"; //Padding
      if (!lastDash && (charLen & 1) !== 0) {
        // Four bit nibmle without padding
        return new BitString_1.BitString(Buffer.from(padded, 'hex'), 0, charLen << 2);
      } else {
        return (0, paddedBits_1.paddedBufferToBits)(Buffer.from(padded, 'hex'));
      }
    } else {
      return new BitString_1.BitString(Buffer.from(v, 'hex'), 0, v.length << 2);
    }
  }
  throw Error('Invalid key type: ' + k);
}
exports.deserializeInternalKey = deserializeInternalKey;

}).call(this)}).call(this,require("buffer").Buffer)
},{"../../address/Address":2,"../../boc/BitString":7,"../../boc/utils/paddedBits":22,"buffer":196}],34:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.readUnaryLength = void 0;
function readUnaryLength(slice) {
  var res = 0;
  while (slice.loadBit()) {
    res++;
  }
  return res;
}
exports.readUnaryLength = readUnaryLength;

},{}],35:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var __createBinding = void 0 && (void 0).__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  var desc = Object.getOwnPropertyDescriptor(m, k);
  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
    desc = {
      enumerable: true,
      get: function get() {
        return m[k];
      }
    };
  }
  Object.defineProperty(o, k2, desc);
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});
var __exportStar = void 0 && (void 0).__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.safeSignVerify = exports.safeSign = exports.getMethodId = exports.base32Encode = exports.base32Decode = exports.crc32c = exports.crc16 = exports.fromNano = exports.toNano = exports.ComputeError = exports.openContract = exports.TupleBuilder = exports.TupleReader = exports.serializeTuple = exports.parseTuple = exports.generateMerkleUpdate = exports.generateMerkleProofDirect = exports.generateMerkleProof = exports.exoticPruned = exports.exoticMerkleUpdate = exports.convertToMerkleProof = exports.exoticMerkleProof = exports.Dictionary = exports.Cell = exports.CellType = exports.Slice = exports.beginCell = exports.Builder = exports.BitBuilder = exports.BitReader = exports.BitString = exports.contractAddress = exports.ADNLAddress = exports.ExternalAddress = exports.address = exports.Address = void 0;
// Address
var Address_1 = require("./address/Address");
Object.defineProperty(exports, "Address", {
  enumerable: true,
  get: function get() {
    return Address_1.Address;
  }
});
Object.defineProperty(exports, "address", {
  enumerable: true,
  get: function get() {
    return Address_1.address;
  }
});
var ExternalAddress_1 = require("./address/ExternalAddress");
Object.defineProperty(exports, "ExternalAddress", {
  enumerable: true,
  get: function get() {
    return ExternalAddress_1.ExternalAddress;
  }
});
var ADNLAddress_1 = require("./address/ADNLAddress");
Object.defineProperty(exports, "ADNLAddress", {
  enumerable: true,
  get: function get() {
    return ADNLAddress_1.ADNLAddress;
  }
});
var contractAddress_1 = require("./address/contractAddress");
Object.defineProperty(exports, "contractAddress", {
  enumerable: true,
  get: function get() {
    return contractAddress_1.contractAddress;
  }
});
// BitString
var BitString_1 = require("./boc/BitString");
Object.defineProperty(exports, "BitString", {
  enumerable: true,
  get: function get() {
    return BitString_1.BitString;
  }
});
var BitReader_1 = require("./boc/BitReader");
Object.defineProperty(exports, "BitReader", {
  enumerable: true,
  get: function get() {
    return BitReader_1.BitReader;
  }
});
var BitBuilder_1 = require("./boc/BitBuilder");
Object.defineProperty(exports, "BitBuilder", {
  enumerable: true,
  get: function get() {
    return BitBuilder_1.BitBuilder;
  }
});
// Cell
var Builder_1 = require("./boc/Builder");
Object.defineProperty(exports, "Builder", {
  enumerable: true,
  get: function get() {
    return Builder_1.Builder;
  }
});
Object.defineProperty(exports, "beginCell", {
  enumerable: true,
  get: function get() {
    return Builder_1.beginCell;
  }
});
var Slice_1 = require("./boc/Slice");
Object.defineProperty(exports, "Slice", {
  enumerable: true,
  get: function get() {
    return Slice_1.Slice;
  }
});
var CellType_1 = require("./boc/CellType");
Object.defineProperty(exports, "CellType", {
  enumerable: true,
  get: function get() {
    return CellType_1.CellType;
  }
});
var Cell_1 = require("./boc/Cell");
Object.defineProperty(exports, "Cell", {
  enumerable: true,
  get: function get() {
    return Cell_1.Cell;
  }
});
// Dict
var Dictionary_1 = require("./dict/Dictionary");
Object.defineProperty(exports, "Dictionary", {
  enumerable: true,
  get: function get() {
    return Dictionary_1.Dictionary;
  }
});
// Exotics
var exoticMerkleProof_1 = require("./boc/cell/exoticMerkleProof");
Object.defineProperty(exports, "exoticMerkleProof", {
  enumerable: true,
  get: function get() {
    return exoticMerkleProof_1.exoticMerkleProof;
  }
});
Object.defineProperty(exports, "convertToMerkleProof", {
  enumerable: true,
  get: function get() {
    return exoticMerkleProof_1.convertToMerkleProof;
  }
});
var exoticMerkleUpdate_1 = require("./boc/cell/exoticMerkleUpdate");
Object.defineProperty(exports, "exoticMerkleUpdate", {
  enumerable: true,
  get: function get() {
    return exoticMerkleUpdate_1.exoticMerkleUpdate;
  }
});
var exoticPruned_1 = require("./boc/cell/exoticPruned");
Object.defineProperty(exports, "exoticPruned", {
  enumerable: true,
  get: function get() {
    return exoticPruned_1.exoticPruned;
  }
});
// Merkle trees
var generateMerkleProof_1 = require("./dict/generateMerkleProof");
Object.defineProperty(exports, "generateMerkleProof", {
  enumerable: true,
  get: function get() {
    return generateMerkleProof_1.generateMerkleProof;
  }
});
Object.defineProperty(exports, "generateMerkleProofDirect", {
  enumerable: true,
  get: function get() {
    return generateMerkleProof_1.generateMerkleProofDirect;
  }
});
var generateMerkleUpdate_1 = require("./dict/generateMerkleUpdate");
Object.defineProperty(exports, "generateMerkleUpdate", {
  enumerable: true,
  get: function get() {
    return generateMerkleUpdate_1.generateMerkleUpdate;
  }
});
var tuple_1 = require("./tuple/tuple");
Object.defineProperty(exports, "parseTuple", {
  enumerable: true,
  get: function get() {
    return tuple_1.parseTuple;
  }
});
Object.defineProperty(exports, "serializeTuple", {
  enumerable: true,
  get: function get() {
    return tuple_1.serializeTuple;
  }
});
var reader_1 = require("./tuple/reader");
Object.defineProperty(exports, "TupleReader", {
  enumerable: true,
  get: function get() {
    return reader_1.TupleReader;
  }
});
var builder_1 = require("./tuple/builder");
Object.defineProperty(exports, "TupleBuilder", {
  enumerable: true,
  get: function get() {
    return builder_1.TupleBuilder;
  }
});
// Types
__exportStar(require("./types/_export"), exports);
var openContract_1 = require("./contract/openContract");
Object.defineProperty(exports, "openContract", {
  enumerable: true,
  get: function get() {
    return openContract_1.openContract;
  }
});
var ComputeError_1 = require("./contract/ComputeError");
Object.defineProperty(exports, "ComputeError", {
  enumerable: true,
  get: function get() {
    return ComputeError_1.ComputeError;
  }
});
// Utility
var convert_1 = require("./utils/convert");
Object.defineProperty(exports, "toNano", {
  enumerable: true,
  get: function get() {
    return convert_1.toNano;
  }
});
Object.defineProperty(exports, "fromNano", {
  enumerable: true,
  get: function get() {
    return convert_1.fromNano;
  }
});
var crc16_1 = require("./utils/crc16");
Object.defineProperty(exports, "crc16", {
  enumerable: true,
  get: function get() {
    return crc16_1.crc16;
  }
});
var crc32c_1 = require("./utils/crc32c");
Object.defineProperty(exports, "crc32c", {
  enumerable: true,
  get: function get() {
    return crc32c_1.crc32c;
  }
});
var base32_1 = require("./utils/base32");
Object.defineProperty(exports, "base32Decode", {
  enumerable: true,
  get: function get() {
    return base32_1.base32Decode;
  }
});
Object.defineProperty(exports, "base32Encode", {
  enumerable: true,
  get: function get() {
    return base32_1.base32Encode;
  }
});
var getMethodId_1 = require("./utils/getMethodId");
Object.defineProperty(exports, "getMethodId", {
  enumerable: true,
  get: function get() {
    return getMethodId_1.getMethodId;
  }
});
// Crypto
var safeSign_1 = require("./crypto/safeSign");
Object.defineProperty(exports, "safeSign", {
  enumerable: true,
  get: function get() {
    return safeSign_1.safeSign;
  }
});
Object.defineProperty(exports, "safeSignVerify", {
  enumerable: true,
  get: function get() {
    return safeSign_1.safeSignVerify;
  }
});

},{"./address/ADNLAddress":1,"./address/Address":2,"./address/ExternalAddress":3,"./address/contractAddress":4,"./boc/BitBuilder":5,"./boc/BitReader":6,"./boc/BitString":7,"./boc/Builder":8,"./boc/Cell":9,"./boc/CellType":10,"./boc/Slice":11,"./boc/cell/exoticMerkleProof":15,"./boc/cell/exoticMerkleUpdate":16,"./boc/cell/exoticPruned":17,"./contract/ComputeError":24,"./contract/openContract":25,"./crypto/safeSign":26,"./dict/Dictionary":27,"./dict/generateMerkleProof":28,"./dict/generateMerkleUpdate":29,"./tuple/builder":36,"./tuple/reader":37,"./tuple/tuple":38,"./types/_export":75,"./utils/base32":77,"./utils/convert":79,"./utils/crc16":80,"./utils/crc32c":81,"./utils/getMethodId":82}],36:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TupleBuilder = void 0;
var Builder_1 = require("../boc/Builder");
var Cell_1 = require("../boc/Cell");
var Slice_1 = require("../boc/Slice");
var TupleBuilder = /*#__PURE__*/function () {
  function TupleBuilder() {
    _classCallCheck(this, TupleBuilder);
    this._tuple = [];
  }
  return _createClass(TupleBuilder, [{
    key: "writeNumber",
    value: function writeNumber(v) {
      if (v === null || v === undefined) {
        this._tuple.push({
          type: 'null'
        });
      } else {
        this._tuple.push({
          type: 'int',
          value: BigInt(v)
        });
      }
    }
  }, {
    key: "writeBoolean",
    value: function writeBoolean(v) {
      if (v === null || v === undefined) {
        this._tuple.push({
          type: 'null'
        });
      } else {
        this._tuple.push({
          type: 'int',
          value: v ? -1n : 0n
        });
      }
    }
  }, {
    key: "writeBuffer",
    value: function writeBuffer(v) {
      if (v === null || v === undefined) {
        this._tuple.push({
          type: 'null'
        });
      } else {
        this._tuple.push({
          type: 'slice',
          cell: (0, Builder_1.beginCell)().storeBuffer(v).endCell()
        });
      }
    }
  }, {
    key: "writeString",
    value: function writeString(v) {
      if (v === null || v === undefined) {
        this._tuple.push({
          type: 'null'
        });
      } else {
        this._tuple.push({
          type: 'slice',
          cell: (0, Builder_1.beginCell)().storeStringTail(v).endCell()
        });
      }
    }
  }, {
    key: "writeCell",
    value: function writeCell(v) {
      if (v === null || v === undefined) {
        this._tuple.push({
          type: 'null'
        });
      } else {
        if (v instanceof Cell_1.Cell) {
          this._tuple.push({
            type: 'cell',
            cell: v
          });
        } else if (v instanceof Slice_1.Slice) {
          this._tuple.push({
            type: 'cell',
            cell: v.asCell()
          });
        }
      }
    }
  }, {
    key: "writeSlice",
    value: function writeSlice(v) {
      if (v === null || v === undefined) {
        this._tuple.push({
          type: 'null'
        });
      } else {
        if (v instanceof Cell_1.Cell) {
          this._tuple.push({
            type: 'slice',
            cell: v
          });
        } else if (v instanceof Slice_1.Slice) {
          this._tuple.push({
            type: 'slice',
            cell: v.asCell()
          });
        }
      }
    }
  }, {
    key: "writeBuilder",
    value: function writeBuilder(v) {
      if (v === null || v === undefined) {
        this._tuple.push({
          type: 'null'
        });
      } else {
        if (v instanceof Cell_1.Cell) {
          this._tuple.push({
            type: 'builder',
            cell: v
          });
        } else if (v instanceof Slice_1.Slice) {
          this._tuple.push({
            type: 'builder',
            cell: v.asCell()
          });
        }
      }
    }
  }, {
    key: "writeTuple",
    value: function writeTuple(v) {
      if (v === null || v === undefined) {
        this._tuple.push({
          type: 'null'
        });
      } else {
        this._tuple.push({
          type: 'tuple',
          items: v
        });
      }
    }
  }, {
    key: "writeAddress",
    value: function writeAddress(v) {
      if (v === null || v === undefined) {
        this._tuple.push({
          type: 'null'
        });
      } else {
        this._tuple.push({
          type: 'slice',
          cell: (0, Builder_1.beginCell)().storeAddress(v).endCell()
        });
      }
    }
  }, {
    key: "build",
    value: function build() {
      return _toConsumableArray(this._tuple);
    }
  }]);
}();
exports.TupleBuilder = TupleBuilder;

},{"../boc/Builder":8,"../boc/Cell":9,"../boc/Slice":11}],37:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TupleReader = void 0;
var TupleReader = /*#__PURE__*/function () {
  function TupleReader(items) {
    _classCallCheck(this, TupleReader);
    this.items = _toConsumableArray(items);
  }
  return _createClass(TupleReader, [{
    key: "remaining",
    get: function get() {
      return this.items.length;
    }
  }, {
    key: "peek",
    value: function peek() {
      if (this.items.length === 0) {
        throw Error('EOF');
      }
      return this.items[0];
    }
  }, {
    key: "pop",
    value: function pop() {
      if (this.items.length === 0) {
        throw Error('EOF');
      }
      var res = this.items[0];
      this.items.splice(0, 1);
      return res;
    }
  }, {
    key: "skip",
    value: function skip() {
      var num = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
      for (var i = 0; i < num; i++) {
        this.pop();
      }
      return this;
    }
  }, {
    key: "readBigNumber",
    value: function readBigNumber() {
      var popped = this.pop();
      if (popped.type !== 'int') {
        throw Error('Not a number');
      }
      return popped.value;
    }
  }, {
    key: "readBigNumberOpt",
    value: function readBigNumberOpt() {
      var popped = this.pop();
      if (popped.type === 'null') {
        return null;
      }
      if (popped.type !== 'int') {
        throw Error('Not a number');
      }
      return popped.value;
    }
  }, {
    key: "readNumber",
    value: function readNumber() {
      return Number(this.readBigNumber());
    }
  }, {
    key: "readNumberOpt",
    value: function readNumberOpt() {
      var r = this.readBigNumberOpt();
      if (r !== null) {
        return Number(r);
      } else {
        return null;
      }
    }
  }, {
    key: "readBoolean",
    value: function readBoolean() {
      var res = this.readNumber();
      return res === 0 ? false : true;
    }
  }, {
    key: "readBooleanOpt",
    value: function readBooleanOpt() {
      var res = this.readNumberOpt();
      if (res !== null) {
        return res === 0 ? false : true;
      } else {
        return null;
      }
    }
  }, {
    key: "readAddress",
    value: function readAddress() {
      var r = this.readCell().beginParse().loadAddress();
      if (r !== null) {
        return r;
      } else {
        throw Error('Not an address');
      }
    }
  }, {
    key: "readAddressOpt",
    value: function readAddressOpt() {
      var r = this.readCellOpt();
      if (r !== null) {
        return r.beginParse().loadMaybeAddress();
      } else {
        return null;
      }
    }
  }, {
    key: "readCell",
    value: function readCell() {
      var popped = this.pop();
      if (popped.type !== 'cell' && popped.type !== 'slice' && popped.type !== 'builder') {
        throw Error('Not a cell: ' + popped.type);
      }
      return popped.cell;
    }
  }, {
    key: "readCellOpt",
    value: function readCellOpt() {
      var popped = this.pop();
      if (popped.type === 'null') {
        return null;
      }
      if (popped.type !== 'cell' && popped.type !== 'slice' && popped.type !== 'builder') {
        throw Error('Not a cell');
      }
      return popped.cell;
    }
  }, {
    key: "readTuple",
    value: function readTuple() {
      var popped = this.pop();
      if (popped.type !== 'tuple') {
        throw Error('Not a tuple');
      }
      return new TupleReader(popped.items);
    }
  }, {
    key: "readTupleOpt",
    value: function readTupleOpt() {
      var popped = this.pop();
      if (popped.type === 'null') {
        return null;
      }
      if (popped.type !== 'tuple') {
        throw Error('Not a tuple');
      }
      return new TupleReader(popped.items);
    }
  }, {
    key: "readLispListDirect",
    value: function readLispListDirect() {
      if (this.items.length === 1 && this.items[0].type === 'null') {
        return [];
      }
      return TupleReader.readLispList(this);
    }
  }, {
    key: "readLispList",
    value: function readLispList() {
      return TupleReader.readLispList(this.readTupleOpt());
    }
  }, {
    key: "readBuffer",
    value: function readBuffer() {
      var s = this.readCell().beginParse();
      if (s.remainingRefs !== 0) {
        throw Error('Not a buffer');
      }
      if (s.remainingBits % 8 !== 0) {
        throw Error('Not a buffer');
      }
      return s.loadBuffer(s.remainingBits / 8);
    }
  }, {
    key: "readBufferOpt",
    value: function readBufferOpt() {
      var r = this.readCellOpt();
      if (r !== null) {
        var s = r.beginParse();
        if (s.remainingRefs !== 0 || s.remainingBits % 8 !== 0) {
          throw Error('Not a buffer');
        }
        return s.loadBuffer(s.remainingBits / 8);
      } else {
        return null;
      }
    }
  }, {
    key: "readString",
    value: function readString() {
      var s = this.readCell().beginParse();
      return s.loadStringTail();
    }
  }, {
    key: "readStringOpt",
    value: function readStringOpt() {
      var r = this.readCellOpt();
      if (r !== null) {
        var s = r.beginParse();
        return s.loadStringTail();
      } else {
        return null;
      }
    }
  }], [{
    key: "readLispList",
    value: function readLispList(reader) {
      var result = [];
      var tail = reader;
      while (tail !== null) {
        var head = tail.pop();
        if (tail.items.length === 0 || tail.items[0].type !== 'tuple' && tail.items[0].type !== 'null') {
          throw Error('Lisp list consists only from (any, tuple) elements and ends with null');
        }
        tail = tail.readTupleOpt();
        result.push(head);
      }
      return result;
    }
  }]);
}();
exports.TupleReader = TupleReader;

},{}],38:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseTuple = exports.serializeTuple = void 0;
var Builder_1 = require("../boc/Builder");
var INT64_MIN = BigInt('-9223372036854775808');
var INT64_MAX = BigInt('9223372036854775807');
// vm_stk_null#00 = VmStackValue;
// vm_stk_tinyint#01 value:int64 = VmStackValue;
// vm_stk_int#0201_ value:int257 = VmStackValue;
// vm_stk_nan#02ff = VmStackValue;
// vm_stk_cell#03 cell:^Cell = VmStackValue;
//_ cell:^Cell st_bits:(## 10) end_bits:(## 10) { st_bits <= end_bits }
//   st_ref:(#<= 4) end_ref:(#<= 4) { st_ref <= end_ref } = VmCellSlice;
// vm_stk_slice#04 _:VmCellSlice = VmStackValue;
// vm_stk_builder#05 cell:^Cell = VmStackValue;
// vm_stk_cont#06 cont:VmCont = VmStackValue;
// vm_tupref_nil$_ = VmTupleRef 0;
// vm_tupref_single$_ entry:^VmStackValue = VmTupleRef 1;
// vm_tupref_any$_ {n:#} ref:^(VmTuple (n + 2)) = VmTupleRef (n + 2);
// vm_tuple_nil$_ = VmTuple 0;
// vm_tuple_tcons$_ {n:#} head:(VmTupleRef n) tail:^VmStackValue = VmTuple (n + 1);
// vm_stk_tuple#07 len:(## 16) data:(VmTuple len) = VmStackValue;
function serializeTupleItem(src, builder) {
  if (src.type === 'null') {
    builder.storeUint(0x00, 8);
  } else if (src.type === 'int') {
    if (src.value <= INT64_MAX && src.value >= INT64_MIN) {
      builder.storeUint(0x01, 8);
      builder.storeInt(src.value, 64);
    } else {
      builder.storeUint(0x0100, 15);
      builder.storeInt(src.value, 257);
    }
  } else if (src.type === 'nan') {
    builder.storeInt(0x02ff, 16);
  } else if (src.type === 'cell') {
    builder.storeUint(0x03, 8);
    builder.storeRef(src.cell);
  } else if (src.type === 'slice') {
    builder.storeUint(0x04, 8);
    builder.storeUint(0, 10);
    builder.storeUint(src.cell.bits.length, 10);
    builder.storeUint(0, 3);
    builder.storeUint(src.cell.refs.length, 3);
    builder.storeRef(src.cell);
  } else if (src.type === 'builder') {
    builder.storeUint(0x05, 8);
    builder.storeRef(src.cell);
  } else if (src.type === 'tuple') {
    var head = null;
    var tail = null;
    for (var i = 0; i < src.items.length; i++) {
      // Swap
      var s = head;
      head = tail;
      tail = s;
      if (i > 1) {
        head = (0, Builder_1.beginCell)().storeRef(tail).storeRef(head).endCell();
      }
      var bc = (0, Builder_1.beginCell)();
      serializeTupleItem(src.items[i], bc);
      tail = bc.endCell();
    }
    builder.storeUint(0x07, 8);
    builder.storeUint(src.items.length, 16);
    if (head) {
      builder.storeRef(head);
    }
    if (tail) {
      builder.storeRef(tail);
    }
  } else {
    throw Error('Invalid value');
  }
}
function parseStackItem(cs) {
  var kind = cs.loadUint(8);
  if (kind === 0) {
    return {
      type: 'null'
    };
  } else if (kind === 1) {
    return {
      type: 'int',
      value: cs.loadIntBig(64)
    };
  } else if (kind === 2) {
    if (cs.loadUint(7) === 0) {
      return {
        type: 'int',
        value: cs.loadIntBig(257)
      };
    } else {
      cs.loadBit(); // must eq 1
      return {
        type: 'nan'
      };
    }
  } else if (kind === 3) {
    return {
      type: 'cell',
      cell: cs.loadRef()
    };
  } else if (kind === 4) {
    var startBits = cs.loadUint(10);
    var endBits = cs.loadUint(10);
    var startRefs = cs.loadUint(3);
    var endRefs = cs.loadUint(3);
    // Copy to new cell
    var rs = cs.loadRef().beginParse();
    rs.skip(startBits);
    var dt = rs.loadBits(endBits - startBits);
    var builder = (0, Builder_1.beginCell)().storeBits(dt);
    // Copy refs if exist
    if (startRefs < endRefs) {
      for (var i = 0; i < startRefs; i++) {
        rs.loadRef();
      }
      for (var _i = 0; _i < endRefs - startRefs; _i++) {
        builder.storeRef(rs.loadRef());
      }
    }
    return {
      type: 'slice',
      cell: builder.endCell()
    };
  } else if (kind === 5) {
    return {
      type: 'builder',
      cell: cs.loadRef()
    };
  } else if (kind === 7) {
    var length = cs.loadUint(16);
    var items = [];
    if (length > 1) {
      var head = cs.loadRef().beginParse();
      var tail = cs.loadRef().beginParse();
      items.unshift(parseStackItem(tail));
      for (var _i2 = 0; _i2 < length - 2; _i2++) {
        var ohead = head;
        head = ohead.loadRef().beginParse();
        tail = ohead.loadRef().beginParse();
        items.unshift(parseStackItem(tail));
      }
      items.unshift(parseStackItem(head));
    } else if (length === 1) {
      items.push(parseStackItem(cs.loadRef().beginParse()));
    }
    return {
      type: 'tuple',
      items: items
    };
  } else {
    throw Error('Unsupported stack item');
  }
}
//
// Stack parsing
// Source: https://github.com/ton-foundation/ton/blob/ae5c0720143e231c32c3d2034cfe4e533a16d969/crypto/block/block.tlb#L783
//
// vm_stack#_ depth:(## 24) stack:(VmStackList depth) = VmStack;
// vm_stk_cons#_ {n:#} rest:^(VmStackList n) tos:VmStackValue = VmStackList (n + 1);
// vm_stk_nil#_ = VmStackList 0;
//
function serializeTupleTail(src, builder) {
  if (src.length > 0) {
    // rest:^(VmStackList n)
    var tail = (0, Builder_1.beginCell)();
    serializeTupleTail(src.slice(0, src.length - 1), tail);
    builder.storeRef(tail.endCell());
    // tos
    serializeTupleItem(src[src.length - 1], builder);
  }
}
function serializeTuple(src) {
  var builder = (0, Builder_1.beginCell)();
  builder.storeUint(src.length, 24);
  var r = _toConsumableArray(src);
  serializeTupleTail(r, builder);
  return builder.endCell();
}
exports.serializeTuple = serializeTuple;
function parseTuple(src) {
  var res = [];
  var cs = src.beginParse();
  var size = cs.loadUint(24);
  for (var i = 0; i < size; i++) {
    var next = cs.loadRef();
    res.unshift(parseStackItem(cs));
    cs = next.beginParse();
  }
  return res;
}
exports.parseTuple = parseTuple;

},{"../boc/Builder":8}],39:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeAccount = exports.loadAccount = void 0;
var AccountStorage_1 = require("./AccountStorage");
var StorageInto_1 = require("./StorageInto");
function loadAccount(slice) {
  return {
    addr: slice.loadAddress(),
    storageStats: (0, StorageInto_1.loadStorageInfo)(slice),
    storage: (0, AccountStorage_1.loadAccountStorage)(slice)
  };
}
exports.loadAccount = loadAccount;
function storeAccount(src) {
  return function (builder) {
    builder.storeAddress(src.addr);
    builder.store((0, StorageInto_1.storeStorageInfo)(src.storageStats));
    builder.store((0, AccountStorage_1.storeAccountStorage)(src.storage));
  };
}
exports.storeAccount = storeAccount;

},{"./AccountStorage":43,"./StorageInto":64}],40:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeAccountState = exports.loadAccountState = void 0;
var StateInit_1 = require("./StateInit");
function loadAccountState(cs) {
  if (cs.loadBit()) {
    return {
      type: 'active',
      state: (0, StateInit_1.loadStateInit)(cs)
    };
  } else if (cs.loadBit()) {
    return {
      type: 'frozen',
      stateHash: cs.loadUintBig(256)
    };
  } else {
    return {
      type: 'uninit'
    };
  }
}
exports.loadAccountState = loadAccountState;
function storeAccountState(src) {
  return function (builder) {
    if (src.type === 'active') {
      builder.storeBit(true);
      builder.store((0, StateInit_1.storeStateInit)(src.state));
    } else if (src.type === 'frozen') {
      builder.storeBit(false);
      builder.storeBit(true);
      builder.storeUint(src.stateHash, 256);
    } else if (src.type === 'uninit') {
      builder.storeBit(false);
      builder.storeBit(false);
    }
  };
}
exports.storeAccountState = storeAccountState;

},{"./StateInit":63}],41:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeAccountStatus = exports.loadAccountStatus = void 0;
/**
 * Load account state from slice
 * @param slice
 * @returns AccountState
 */
function loadAccountStatus(slice) {
  var status = slice.loadUint(2);
  if (status === 0x00) {
    return 'uninitialized';
  }
  if (status === 0x01) {
    return 'frozen';
  }
  if (status === 0x02) {
    return 'active';
  }
  if (status === 0x03) {
    return 'non-existing';
  }
  throw Error('Invalid data');
}
exports.loadAccountStatus = loadAccountStatus;
/**
 * Store account state to builder
 * @param src account state
 * @param builder buidler
 */
function storeAccountStatus(src) {
  return function (builder) {
    if (src === 'uninitialized') {
      builder.storeUint(0x00, 2);
    } else if (src === 'frozen') {
      builder.storeUint(0x01, 2);
    } else if (src === 'active') {
      builder.storeUint(0x02, 2);
    } else if (src === 'non-existing') {
      builder.storeUint(0x03, 2);
    } else {
      throw Error('Invalid data');
    }
    return builder;
  };
}
exports.storeAccountStatus = storeAccountStatus;

},{}],42:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeAccountStatusChange = exports.loadAccountStatusChange = void 0;
function loadAccountStatusChange(slice) {
  if (!slice.loadBit()) {
    return 'unchanged';
  }
  if (slice.loadBit()) {
    return 'deleted';
  } else {
    return 'frozen';
  }
}
exports.loadAccountStatusChange = loadAccountStatusChange;
function storeAccountStatusChange(src) {
  return function (builder) {
    if (src == 'unchanged') {
      builder.storeBit(0);
    } else if (src === 'frozen') {
      builder.storeBit(1);
      builder.storeBit(0);
    } else if (src === 'deleted') {
      builder.storeBit(1);
      builder.storeBit(1);
    } else {
      throw Error('Invalid account status change');
    }
  };
}
exports.storeAccountStatusChange = storeAccountStatusChange;

},{}],43:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeAccountStorage = exports.loadAccountStorage = void 0;
var AccountState_1 = require("./AccountState");
var CurrencyCollection_1 = require("./CurrencyCollection");
function loadAccountStorage(slice) {
  return {
    lastTransLt: slice.loadUintBig(64),
    balance: (0, CurrencyCollection_1.loadCurrencyCollection)(slice),
    state: (0, AccountState_1.loadAccountState)(slice)
  };
}
exports.loadAccountStorage = loadAccountStorage;
function storeAccountStorage(src) {
  return function (builder) {
    builder.storeUint(src.lastTransLt, 64);
    builder.store((0, CurrencyCollection_1.storeCurrencyCollection)(src.balance));
    builder.store((0, AccountState_1.storeAccountState)(src.state));
  };
}
exports.storeAccountStorage = storeAccountStorage;

},{"./AccountState":40,"./CurrencyCollection":47}],44:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeCommonMessageInfo = exports.loadCommonMessageInfo = void 0;
var CurrencyCollection_1 = require("./CurrencyCollection");
function loadCommonMessageInfo(slice) {
  // Internal message
  if (!slice.loadBit()) {
    var ihrDisabled = slice.loadBit();
    var bounce = slice.loadBit();
    var bounced = slice.loadBit();
    var _src = slice.loadAddress();
    var _dest = slice.loadAddress();
    var value = (0, CurrencyCollection_1.loadCurrencyCollection)(slice);
    var ihrFee = slice.loadCoins();
    var forwardFee = slice.loadCoins();
    var _createdLt = slice.loadUintBig(64);
    var _createdAt = slice.loadUint(32);
    return {
      type: 'internal',
      ihrDisabled: ihrDisabled,
      bounce: bounce,
      bounced: bounced,
      src: _src,
      dest: _dest,
      value: value,
      ihrFee: ihrFee,
      forwardFee: forwardFee,
      createdLt: _createdLt,
      createdAt: _createdAt
    };
  }
  // External In mesage
  if (!slice.loadBit()) {
    var _src2 = slice.loadMaybeExternalAddress();
    var _dest2 = slice.loadAddress();
    var importFee = slice.loadCoins();
    return {
      type: 'external-in',
      src: _src2,
      dest: _dest2,
      importFee: importFee
    };
  }
  // External Out message
  var src = slice.loadAddress();
  var dest = slice.loadMaybeExternalAddress();
  var createdLt = slice.loadUintBig(64);
  var createdAt = slice.loadUint(32);
  return {
    type: 'external-out',
    src: src,
    dest: dest,
    createdLt: createdLt,
    createdAt: createdAt
  };
}
exports.loadCommonMessageInfo = loadCommonMessageInfo;
function storeCommonMessageInfo(source) {
  return function (builder) {
    if (source.type === 'internal') {
      builder.storeBit(0);
      builder.storeBit(source.ihrDisabled);
      builder.storeBit(source.bounce);
      builder.storeBit(source.bounced);
      builder.storeAddress(source.src);
      builder.storeAddress(source.dest);
      builder.store((0, CurrencyCollection_1.storeCurrencyCollection)(source.value));
      builder.storeCoins(source.ihrFee);
      builder.storeCoins(source.forwardFee);
      builder.storeUint(source.createdLt, 64);
      builder.storeUint(source.createdAt, 32);
    } else if (source.type === 'external-in') {
      builder.storeBit(1);
      builder.storeBit(0);
      builder.storeAddress(source.src);
      builder.storeAddress(source.dest);
      builder.storeCoins(source.importFee);
    } else if (source.type === 'external-out') {
      builder.storeBit(1);
      builder.storeBit(1);
      builder.storeAddress(source.src);
      builder.storeAddress(source.dest);
      builder.storeUint(source.createdLt, 64);
      builder.storeUint(source.createdAt, 32);
    } else {
      throw new Error('Unknown CommonMessageInfo type');
    }
  };
}
exports.storeCommonMessageInfo = storeCommonMessageInfo;

},{"./CurrencyCollection":47}],45:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeCommonMessageInfoRelaxed = exports.loadCommonMessageInfoRelaxed = void 0;
var CurrencyCollection_1 = require("./CurrencyCollection");
function loadCommonMessageInfoRelaxed(slice) {
  // Internal message
  if (!slice.loadBit()) {
    var ihrDisabled = slice.loadBit();
    var bounce = slice.loadBit();
    var bounced = slice.loadBit();
    var _src = slice.loadMaybeAddress();
    var _dest = slice.loadAddress();
    var value = (0, CurrencyCollection_1.loadCurrencyCollection)(slice);
    var ihrFee = slice.loadCoins();
    var forwardFee = slice.loadCoins();
    var _createdLt = slice.loadUintBig(64);
    var _createdAt = slice.loadUint(32);
    return {
      type: 'internal',
      ihrDisabled: ihrDisabled,
      bounce: bounce,
      bounced: bounced,
      src: _src,
      dest: _dest,
      value: value,
      ihrFee: ihrFee,
      forwardFee: forwardFee,
      createdLt: _createdLt,
      createdAt: _createdAt
    };
  }
  // External In mesage
  if (!slice.loadBit()) {
    throw Error('External In message is not possible for CommonMessageInfoRelaxed');
  }
  // External Out message
  var src = slice.loadMaybeAddress();
  var dest = slice.loadMaybeExternalAddress();
  var createdLt = slice.loadUintBig(64);
  var createdAt = slice.loadUint(32);
  return {
    type: 'external-out',
    src: src,
    dest: dest,
    createdLt: createdLt,
    createdAt: createdAt
  };
}
exports.loadCommonMessageInfoRelaxed = loadCommonMessageInfoRelaxed;
function storeCommonMessageInfoRelaxed(source) {
  return function (builder) {
    if (source.type === 'internal') {
      builder.storeBit(0);
      builder.storeBit(source.ihrDisabled);
      builder.storeBit(source.bounce);
      builder.storeBit(source.bounced);
      builder.storeAddress(source.src);
      builder.storeAddress(source.dest);
      builder.store((0, CurrencyCollection_1.storeCurrencyCollection)(source.value));
      builder.storeCoins(source.ihrFee);
      builder.storeCoins(source.forwardFee);
      builder.storeUint(source.createdLt, 64);
      builder.storeUint(source.createdAt, 32);
    } else if (source.type === 'external-out') {
      builder.storeBit(1);
      builder.storeBit(1);
      builder.storeAddress(source.src);
      builder.storeAddress(source.dest);
      builder.storeUint(source.createdLt, 64);
      builder.storeUint(source.createdAt, 32);
    } else {
      throw new Error('Unknown CommonMessageInfo type');
    }
  };
}
exports.storeCommonMessageInfoRelaxed = storeCommonMessageInfoRelaxed;

},{"./CurrencyCollection":47}],46:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeComputeSkipReason = exports.loadComputeSkipReason = void 0;
function loadComputeSkipReason(slice) {
  var reason = slice.loadUint(2);
  if (reason === 0x00) {
    return 'no-state';
  } else if (reason === 0x01) {
    return 'bad-state';
  } else if (reason === 0x02) {
    return 'no-gas';
  }
  throw new Error("Unknown ComputeSkipReason: ".concat(reason));
}
exports.loadComputeSkipReason = loadComputeSkipReason;
function storeComputeSkipReason(src) {
  return function (builder) {
    if (src === 'no-state') {
      builder.storeUint(0x00, 2);
    } else if (src === 'bad-state') {
      builder.storeUint(0x01, 2);
    } else if (src === 'no-gas') {
      builder.storeUint(0x02, 2);
    } else {
      throw new Error("Unknown ComputeSkipReason: ".concat(src));
    }
  };
}
exports.storeComputeSkipReason = storeComputeSkipReason;

},{}],47:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeCurrencyCollection = exports.loadCurrencyCollection = void 0;
var Dictionary_1 = require("../dict/Dictionary");
;
function loadCurrencyCollection(slice) {
  var coins = slice.loadCoins();
  var other = slice.loadDict(Dictionary_1.Dictionary.Keys.Uint(32), Dictionary_1.Dictionary.Values.BigVarUint(5 /* log2(32) */));
  if (other.size === 0) {
    return {
      coins: coins
    };
  } else {
    return {
      other: other,
      coins: coins
    };
  }
}
exports.loadCurrencyCollection = loadCurrencyCollection;
function storeCurrencyCollection(collection) {
  return function (builder) {
    builder.storeCoins(collection.coins);
    if (collection.other) {
      builder.storeDict(collection.other);
    } else {
      builder.storeBit(0);
    }
  };
}
exports.storeCurrencyCollection = storeCurrencyCollection;

},{"../dict/Dictionary":27}],48:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeDepthBalanceInfo = exports.loadDepthBalanceInfo = void 0;
var CurrencyCollection_1 = require("./CurrencyCollection");
function loadDepthBalanceInfo(slice) {
  var splitDepth = slice.loadUint(5);
  return {
    splitDepth: splitDepth,
    balance: (0, CurrencyCollection_1.loadCurrencyCollection)(slice)
  };
}
exports.loadDepthBalanceInfo = loadDepthBalanceInfo;
function storeDepthBalanceInfo(src) {
  return function (builder) {
    builder.storeUint(src.splitDepth, 5);
    builder.store((0, CurrencyCollection_1.storeCurrencyCollection)(src.balance));
  };
}
exports.storeDepthBalanceInfo = storeDepthBalanceInfo;

},{"./CurrencyCollection":47}],49:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeHashUpdate = exports.loadHashUpdate = void 0;
function loadHashUpdate(slice) {
  if (slice.loadUint(8) !== 0x72) {
    throw Error('Invalid data');
  }
  var oldHash = slice.loadBuffer(32);
  var newHash = slice.loadBuffer(32);
  return {
    oldHash: oldHash,
    newHash: newHash
  };
}
exports.loadHashUpdate = loadHashUpdate;
function storeHashUpdate(src) {
  return function (builder) {
    builder.storeUint(0x72, 8);
    builder.storeBuffer(src.oldHash);
    builder.storeBuffer(src.newHash);
  };
}
exports.storeHashUpdate = storeHashUpdate;

},{}],50:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeLibRef = exports.loadLibRef = void 0;
function loadLibRef(slice) {
  var type = slice.loadUint(1);
  if (type === 0) {
    return {
      type: 'hash',
      libHash: slice.loadBuffer(32)
    };
  } else {
    return {
      type: 'ref',
      library: slice.loadRef()
    };
  }
}
exports.loadLibRef = loadLibRef;
function storeLibRef(src) {
  return function (builder) {
    if (src.type === 'hash') {
      builder.storeUint(0, 1);
      builder.storeBuffer(src.libHash);
    } else {
      builder.storeUint(1, 1);
      builder.storeRef(src.library);
    }
  };
}
exports.storeLibRef = storeLibRef;

},{}],51:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loadMasterchainStateExtra = void 0;
var Dictionary_1 = require("../dict/Dictionary");
var CurrencyCollection_1 = require("./CurrencyCollection");
function loadMasterchainStateExtra(cs) {
  // Check magic
  if (cs.loadUint(16) !== 0xcc26) {
    throw Error('Invalid data');
  }
  // Skip shard_hashes
  if (cs.loadBit()) {
    cs.loadRef();
  }
  // Read config
  var configAddress = cs.loadUintBig(256);
  var config = Dictionary_1.Dictionary.load(Dictionary_1.Dictionary.Keys.Int(32), Dictionary_1.Dictionary.Values.Cell(), cs);
  // Rad global balance
  var globalBalance = (0, CurrencyCollection_1.loadCurrencyCollection)(cs);
  return {
    config: config,
    configAddress: configAddress,
    globalBalance: globalBalance
  };
}
exports.loadMasterchainStateExtra = loadMasterchainStateExtra;

},{"../dict/Dictionary":27,"./CurrencyCollection":47}],52:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MessageValue = exports.storeMessage = exports.loadMessage = void 0;
var Builder_1 = require("../boc/Builder");
var CommonMessageInfo_1 = require("./CommonMessageInfo");
var StateInit_1 = require("./StateInit");
function loadMessage(slice) {
  var info = (0, CommonMessageInfo_1.loadCommonMessageInfo)(slice);
  var init = null;
  if (slice.loadBit()) {
    if (!slice.loadBit()) {
      init = (0, StateInit_1.loadStateInit)(slice);
    } else {
      init = (0, StateInit_1.loadStateInit)(slice.loadRef().beginParse());
    }
  }
  var body = slice.loadBit() ? slice.loadRef() : slice.asCell();
  return {
    info: info,
    init: init,
    body: body
  };
}
exports.loadMessage = loadMessage;
function storeMessage(message, opts) {
  return function (builder) {
    // Store CommonMsgInfo
    builder.store((0, CommonMessageInfo_1.storeCommonMessageInfo)(message.info));
    // Store init
    if (message.init) {
      builder.storeBit(true);
      var initCell = (0, Builder_1.beginCell)().store((0, StateInit_1.storeStateInit)(message.init));
      // Check if need to store it in ref
      var _needRef = false;
      if (opts && opts.forceRef) {
        _needRef = true;
      } else {
        _needRef = builder.availableBits - 2 /* At least two bits for ref flags */ < initCell.bits + message.body.bits.length;
      }
      // Persist init
      if (_needRef) {
        builder.storeBit(true);
        builder.storeRef(initCell);
      } else {
        builder.storeBit(false);
        builder.storeBuilder(initCell);
      }
    } else {
      builder.storeBit(false);
    }
    // Store body
    var needRef = false;
    if (opts && opts.forceRef) {
      needRef = true;
    } else {
      needRef = builder.availableBits - 1 /* At least one bit for ref flag */ < message.body.bits.length || builder.refs + message.body.refs.length > 4;
    }
    if (needRef) {
      builder.storeBit(true);
      builder.storeRef(message.body);
    } else {
      builder.storeBit(false);
      builder.storeBuilder(message.body.asBuilder());
    }
  };
}
exports.storeMessage = storeMessage;
exports.MessageValue = {
  serialize: function serialize(src, builder) {
    builder.storeRef((0, Builder_1.beginCell)().store(storeMessage(src)));
  },
  parse: function parse(slice) {
    return loadMessage(slice.loadRef().beginParse());
  }
};

},{"../boc/Builder":8,"./CommonMessageInfo":44,"./StateInit":63}],53:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeMessageRelaxed = exports.loadMessageRelaxed = void 0;
var Builder_1 = require("../boc/Builder");
var CommonMessageInfoRelaxed_1 = require("./CommonMessageInfoRelaxed");
var StateInit_1 = require("./StateInit");
function loadMessageRelaxed(slice) {
  var info = (0, CommonMessageInfoRelaxed_1.loadCommonMessageInfoRelaxed)(slice);
  var init = null;
  if (slice.loadBit()) {
    if (!slice.loadBit()) {
      init = (0, StateInit_1.loadStateInit)(slice);
    } else {
      init = (0, StateInit_1.loadStateInit)(slice.loadRef().beginParse());
    }
  }
  var body = slice.loadBit() ? slice.loadRef() : slice.asCell();
  return {
    info: info,
    init: init,
    body: body
  };
}
exports.loadMessageRelaxed = loadMessageRelaxed;
function storeMessageRelaxed(message, opts) {
  return function (builder) {
    // Store CommonMsgInfo
    builder.store((0, CommonMessageInfoRelaxed_1.storeCommonMessageInfoRelaxed)(message.info));
    // Store init
    if (message.init) {
      builder.storeBit(true);
      var initCell = (0, Builder_1.beginCell)().store((0, StateInit_1.storeStateInit)(message.init));
      // Check if ref is needed
      var _needRef = false;
      if (opts && opts.forceRef) {
        _needRef = true;
      } else {
        if (builder.availableBits - 2 /* At least on byte for ref flag */ >= initCell.bits) {
          _needRef = false;
        } else {
          _needRef = true;
        }
      }
      // Store ref
      if (_needRef) {
        builder.storeBit(true);
        builder.storeRef(initCell);
      } else {
        builder.storeBit(false);
        builder.storeBuilder(initCell);
      }
    } else {
      builder.storeBit(false);
    }
    // Store body
    var needRef = false;
    if (opts && opts.forceRef) {
      needRef = true;
    } else {
      /*
       1. If at least one bit for ref flag
       2. If enough space for refs
       3. If not exotic
      */
      if (builder.availableBits - 1 >= message.body.bits.length && builder.refs + message.body.refs.length <= 4 && !message.body.isExotic) {
        needRef = false;
      } else {
        needRef = true;
      }
    }
    if (needRef) {
      builder.storeBit(true);
      builder.storeRef(message.body);
    } else {
      builder.storeBit(false);
      builder.storeBuilder(message.body.asBuilder());
    }
  };
}
exports.storeMessageRelaxed = storeMessageRelaxed;

},{"../boc/Builder":8,"./CommonMessageInfoRelaxed":45,"./StateInit":63}],54:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loadOutList = exports.storeOutList = exports.loadOutAction = exports.storeOutAction = void 0;
var MessageRelaxed_1 = require("./MessageRelaxed");
var Builder_1 = require("../boc/Builder");
var CurrencyCollection_1 = require("./CurrencyCollection");
var LibRef_1 = require("./LibRef");
function storeOutAction(action) {
  switch (action.type) {
    case 'sendMsg':
      return storeOutActionSendMsg(action);
    case 'setCode':
      return storeOutActionSetCode(action);
    case 'reserve':
      return storeOutActionReserve(action);
    case 'changeLibrary':
      return storeOutActionChangeLibrary(action);
    default:
      throw new Error("Unknown action type ".concat(action.type));
  }
}
exports.storeOutAction = storeOutAction;
/*
action_send_msg#0ec3c86d mode:(## 8)
  out_msg:^(MessageRelaxed Any) = OutAction;
*/
var outActionSendMsgTag = 0x0ec3c86d;
function storeOutActionSendMsg(action) {
  return function (builder) {
    builder.storeUint(outActionSendMsgTag, 32).storeUint(action.mode, 8).storeRef((0, Builder_1.beginCell)().store((0, MessageRelaxed_1.storeMessageRelaxed)(action.outMsg)).endCell());
  };
}
/*
action_set_code#ad4de08e new_code:^Cell = OutAction;
 */
var outActionSetCodeTag = 0xad4de08e;
function storeOutActionSetCode(action) {
  return function (builder) {
    builder.storeUint(outActionSetCodeTag, 32).storeRef(action.newCode);
  };
}
/*
action_reserve_currency#36e6b809 mode:(## 8)
  currency:CurrencyCollection = OutAction;
 */
var outActionReserveTag = 0x36e6b809;
function storeOutActionReserve(action) {
  return function (builder) {
    builder.storeUint(outActionReserveTag, 32).storeUint(action.mode, 8).store((0, CurrencyCollection_1.storeCurrencyCollection)(action.currency));
  };
}
/*
action_change_library#26fa1dd4 mode:(## 7)
  libref:LibRef = OutAction;
 */
var outActionChangeLibraryTag = 0x26fa1dd4;
function storeOutActionChangeLibrary(action) {
  return function (builder) {
    builder.storeUint(outActionChangeLibraryTag, 32).storeUint(action.mode, 7).store((0, LibRef_1.storeLibRef)(action.libRef));
  };
}
function loadOutAction(slice) {
  var tag = slice.loadUint(32);
  if (tag === outActionSendMsgTag) {
    var mode = slice.loadUint(8);
    var outMsg = (0, MessageRelaxed_1.loadMessageRelaxed)(slice.loadRef().beginParse());
    return {
      type: 'sendMsg',
      mode: mode,
      outMsg: outMsg
    };
  }
  if (tag === outActionSetCodeTag) {
    var newCode = slice.loadRef();
    return {
      type: 'setCode',
      newCode: newCode
    };
  }
  if (tag === outActionReserveTag) {
    var _mode = slice.loadUint(8);
    var currency = (0, CurrencyCollection_1.loadCurrencyCollection)(slice);
    return {
      type: 'reserve',
      mode: _mode,
      currency: currency
    };
  }
  if (tag === outActionChangeLibraryTag) {
    var _mode2 = slice.loadUint(7);
    var libRef = (0, LibRef_1.loadLibRef)(slice);
    return {
      type: 'changeLibrary',
      mode: _mode2,
      libRef: libRef
    };
  }
  throw new Error("Unknown out action tag 0x".concat(tag.toString(16)));
}
exports.loadOutAction = loadOutAction;
/*
out_list_empty$_ = OutList 0;
out_list$_ {n:#} prev:^(OutList n) action:OutAction
  = OutList (n + 1);
 */
function storeOutList(actions) {
  var cell = actions.reduce(function (cell, action) {
    return (0, Builder_1.beginCell)().storeRef(cell).store(storeOutAction(action)).endCell();
  }, (0, Builder_1.beginCell)().endCell());
  return function (builder) {
    builder.storeSlice(cell.beginParse());
  };
}
exports.storeOutList = storeOutList;
function loadOutList(slice) {
  var actions = [];
  while (slice.remainingRefs) {
    var nextCell = slice.loadRef();
    actions.push(loadOutAction(slice));
    slice = nextCell.beginParse();
  }
  return actions.reverse();
}
exports.loadOutList = loadOutList;

},{"../boc/Builder":8,"./CurrencyCollection":47,"./LibRef":50,"./MessageRelaxed":53}],55:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ReserveMode = void 0;
var ReserveMode;
(function (ReserveMode) {
  ReserveMode[ReserveMode["THIS_AMOUNT"] = 0] = "THIS_AMOUNT";
  ReserveMode[ReserveMode["LEAVE_THIS_AMOUNT"] = 1] = "LEAVE_THIS_AMOUNT";
  ReserveMode[ReserveMode["AT_MOST_THIS_AMOUNT"] = 2] = "AT_MOST_THIS_AMOUNT";
  ReserveMode[ReserveMode["LEAVE_MAX_THIS_AMOUNT"] = 3] = "LEAVE_MAX_THIS_AMOUNT";
  ReserveMode[ReserveMode["BEFORE_BALANCE_PLUS_THIS_AMOUNT"] = 4] = "BEFORE_BALANCE_PLUS_THIS_AMOUNT";
  ReserveMode[ReserveMode["LEAVE_BBALANCE_PLUS_THIS_AMOUNT"] = 5] = "LEAVE_BBALANCE_PLUS_THIS_AMOUNT";
  ReserveMode[ReserveMode["BEFORE_BALANCE_MINUS_THIS_AMOUNT"] = 12] = "BEFORE_BALANCE_MINUS_THIS_AMOUNT";
  ReserveMode[ReserveMode["LEAVE_BEFORE_BALANCE_MINUS_THIS_AMOUNT"] = 13] = "LEAVE_BEFORE_BALANCE_MINUS_THIS_AMOUNT";
})(ReserveMode || (exports.ReserveMode = ReserveMode = {}));

},{}],56:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SendMode = void 0;
var SendMode;
(function (SendMode) {
  SendMode[SendMode["CARRY_ALL_REMAINING_BALANCE"] = 128] = "CARRY_ALL_REMAINING_BALANCE";
  SendMode[SendMode["CARRY_ALL_REMAINING_INCOMING_VALUE"] = 64] = "CARRY_ALL_REMAINING_INCOMING_VALUE";
  SendMode[SendMode["DESTROY_ACCOUNT_IF_ZERO"] = 32] = "DESTROY_ACCOUNT_IF_ZERO";
  SendMode[SendMode["PAY_GAS_SEPARATELY"] = 1] = "PAY_GAS_SEPARATELY";
  SendMode[SendMode["IGNORE_ERRORS"] = 2] = "IGNORE_ERRORS";
  SendMode[SendMode["NONE"] = 0] = "NONE";
})(SendMode || (exports.SendMode = SendMode = {}));

},{}],57:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeShardAccount = exports.loadShardAccount = void 0;
var Builder_1 = require("../boc/Builder");
var Account_1 = require("./Account");
function loadShardAccount(slice) {
  var accountRef = slice.loadRef();
  var account = undefined;
  if (!accountRef.isExotic) {
    var accountSlice = accountRef.beginParse();
    if (accountSlice.loadBit()) {
      account = (0, Account_1.loadAccount)(accountSlice);
    }
  }
  return {
    account: account,
    lastTransactionHash: slice.loadUintBig(256),
    lastTransactionLt: slice.loadUintBig(64)
  };
}
exports.loadShardAccount = loadShardAccount;
function storeShardAccount(src) {
  return function (builder) {
    if (src.account) {
      builder.storeRef((0, Builder_1.beginCell)().storeBit(true).store((0, Account_1.storeAccount)(src.account)));
    } else {
      builder.storeRef((0, Builder_1.beginCell)().storeBit(false));
    }
    builder.storeUint(src.lastTransactionHash, 256);
    builder.storeUint(src.lastTransactionLt, 64);
  };
}
exports.storeShardAccount = storeShardAccount;

},{"../boc/Builder":8,"./Account":39}],58:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeShardAccounts = exports.loadShardAccounts = exports.ShardAccountRefValue = void 0;
var Dictionary_1 = require("../dict/Dictionary");
var DepthBalanceInfo_1 = require("./DepthBalanceInfo");
var ShardAccount_1 = require("./ShardAccount");
exports.ShardAccountRefValue = {
  parse: function parse(cs) {
    var depthBalanceInfo = (0, DepthBalanceInfo_1.loadDepthBalanceInfo)(cs);
    var shardAccount = (0, ShardAccount_1.loadShardAccount)(cs);
    return {
      depthBalanceInfo: depthBalanceInfo,
      shardAccount: shardAccount
    };
  },
  serialize: function serialize(src, builder) {
    builder.store((0, DepthBalanceInfo_1.storeDepthBalanceInfo)(src.depthBalanceInfo));
    builder.store((0, ShardAccount_1.storeShardAccount)(src.shardAccount));
  }
};
function loadShardAccounts(cs) {
  return Dictionary_1.Dictionary.load(Dictionary_1.Dictionary.Keys.BigUint(256), exports.ShardAccountRefValue, cs);
}
exports.loadShardAccounts = loadShardAccounts;
function storeShardAccounts(src) {
  return function (Builder) {
    Builder.storeDict(src);
  };
}
exports.storeShardAccounts = storeShardAccounts;

},{"../dict/Dictionary":27,"./DepthBalanceInfo":48,"./ShardAccount":57}],59:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeShardIdent = exports.loadShardIdent = void 0;
function loadShardIdent(slice) {
  if (slice.loadUint(2) !== 0) {
    throw Error('Invalid data');
  }
  return {
    shardPrefixBits: slice.loadUint(6),
    workchainId: slice.loadInt(32),
    shardPrefix: slice.loadUintBig(64)
  };
}
exports.loadShardIdent = loadShardIdent;
function storeShardIdent(src) {
  return function (builder) {
    builder.storeUint(0, 2);
    builder.storeUint(src.shardPrefixBits, 6);
    builder.storeInt(src.workchainId, 32);
    builder.storeUint(src.shardPrefix, 64);
  };
}
exports.storeShardIdent = storeShardIdent;

},{}],60:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loadShardStateUnsplit = void 0;
var MasterchainStateExtra_1 = require("./MasterchainStateExtra");
var ShardAccounts_1 = require("./ShardAccounts");
var ShardIdent_1 = require("./ShardIdent");
function loadShardStateUnsplit(cs) {
  if (cs.loadUint(32) !== 0x9023afe2) {
    throw Error('Invalid data');
  }
  var globalId = cs.loadInt(32);
  var shardId = (0, ShardIdent_1.loadShardIdent)(cs);
  var seqno = cs.loadUint(32);
  var vertSeqNo = cs.loadUint(32);
  var genUtime = cs.loadUint(32);
  var genLt = cs.loadUintBig(64);
  var minRefMcSeqno = cs.loadUint(32);
  // Skip OutMsgQueueInfo: usually exotic
  cs.loadRef();
  var beforeSplit = cs.loadBit();
  // Parse accounts
  var shardAccountsRef = cs.loadRef();
  var accounts = undefined;
  if (!shardAccountsRef.isExotic) {
    accounts = (0, ShardAccounts_1.loadShardAccounts)(shardAccountsRef.beginParse());
  }
  // Skip (not used by apps)
  cs.loadRef();
  // Parse extras
  var mcStateExtra = cs.loadBit();
  var extras = null;
  if (mcStateExtra) {
    var cell = cs.loadRef();
    if (!cell.isExotic) {
      extras = (0, MasterchainStateExtra_1.loadMasterchainStateExtra)(cell.beginParse());
    }
  }
  ;
  return {
    globalId: globalId,
    shardId: shardId,
    seqno: seqno,
    vertSeqNo: vertSeqNo,
    genUtime: genUtime,
    genLt: genLt,
    minRefMcSeqno: minRefMcSeqno,
    beforeSplit: beforeSplit,
    accounts: accounts,
    extras: extras
  };
}
exports.loadShardStateUnsplit = loadShardStateUnsplit;

},{"./MasterchainStateExtra":51,"./ShardAccounts":58,"./ShardIdent":59}],61:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SimpleLibraryValue = exports.storeSimpleLibrary = exports.loadSimpleLibrary = void 0;
function loadSimpleLibrary(slice) {
  return {
    "public": slice.loadBit(),
    root: slice.loadRef()
  };
}
exports.loadSimpleLibrary = loadSimpleLibrary;
function storeSimpleLibrary(src) {
  return function (builder) {
    builder.storeBit(src["public"]);
    builder.storeRef(src.root);
  };
}
exports.storeSimpleLibrary = storeSimpleLibrary;
exports.SimpleLibraryValue = {
  serialize: function serialize(src, builder) {
    storeSimpleLibrary(src)(builder);
  },
  parse: function parse(src) {
    return loadSimpleLibrary(src);
  }
};

},{}],62:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeSplitMergeInfo = exports.loadSplitMergeInfo = void 0;
function loadSplitMergeInfo(slice) {
  var currentShardPrefixLength = slice.loadUint(6);
  var accountSplitDepth = slice.loadUint(6);
  var thisAddress = slice.loadUintBig(256);
  var siblingAddress = slice.loadUintBig(256);
  return {
    currentShardPrefixLength: currentShardPrefixLength,
    accountSplitDepth: accountSplitDepth,
    thisAddress: thisAddress,
    siblingAddress: siblingAddress
  };
}
exports.loadSplitMergeInfo = loadSplitMergeInfo;
function storeSplitMergeInfo(src) {
  return function (builder) {
    builder.storeUint(src.currentShardPrefixLength, 6);
    builder.storeUint(src.accountSplitDepth, 6);
    builder.storeUint(src.thisAddress, 256);
    builder.storeUint(src.siblingAddress, 256);
  };
}
exports.storeSplitMergeInfo = storeSplitMergeInfo;

},{}],63:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeStateInit = exports.loadStateInit = void 0;
var Dictionary_1 = require("../dict/Dictionary");
var SimpleLibrary_1 = require("./SimpleLibrary");
var TickTock_1 = require("./TickTock");
;
function loadStateInit(slice) {
  // Split Depth
  var splitDepth;
  if (slice.loadBit()) {
    splitDepth = slice.loadUint(5);
  }
  // TickTock
  var special;
  if (slice.loadBit()) {
    special = (0, TickTock_1.loadTickTock)(slice);
  }
  // Code and Data
  var code = slice.loadMaybeRef();
  var data = slice.loadMaybeRef();
  // Libs
  var libraries = slice.loadDict(Dictionary_1.Dictionary.Keys.BigUint(256), SimpleLibrary_1.SimpleLibraryValue);
  if (libraries.size === 0) {
    libraries = undefined;
  }
  return {
    splitDepth: splitDepth,
    special: special,
    code: code,
    data: data,
    libraries: libraries
  };
}
exports.loadStateInit = loadStateInit;
function storeStateInit(src) {
  return function (builder) {
    if (src.splitDepth !== null && src.splitDepth !== undefined) {
      builder.storeBit(true);
      builder.storeUint(src.splitDepth, 5);
    } else {
      builder.storeBit(false);
    }
    if (src.special !== null && src.special !== undefined) {
      builder.storeBit(true);
      builder.store((0, TickTock_1.storeTickTock)(src.special));
    } else {
      builder.storeBit(false);
    }
    builder.storeMaybeRef(src.code);
    builder.storeMaybeRef(src.data);
    builder.storeDict(src.libraries);
  };
}
exports.storeStateInit = storeStateInit;

},{"../dict/Dictionary":27,"./SimpleLibrary":61,"./TickTock":67}],64:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeStorageInfo = exports.loadStorageInfo = void 0;
var StorageUsed_1 = require("./StorageUsed");
function loadStorageInfo(slice) {
  return {
    used: (0, StorageUsed_1.loadStorageUsed)(slice),
    lastPaid: slice.loadUint(32),
    duePayment: slice.loadMaybeCoins()
  };
}
exports.loadStorageInfo = loadStorageInfo;
function storeStorageInfo(src) {
  return function (builder) {
    builder.store((0, StorageUsed_1.storeStorageUsed)(src.used));
    builder.storeUint(src.lastPaid, 32);
    builder.storeMaybeCoins(src.duePayment);
  };
}
exports.storeStorageInfo = storeStorageInfo;

},{"./StorageUsed":65}],65:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeStorageUsed = exports.loadStorageUsed = void 0;
function loadStorageUsed(cs) {
  return {
    cells: cs.loadVarUintBig(3),
    bits: cs.loadVarUintBig(3),
    publicCells: cs.loadVarUintBig(3)
  };
}
exports.loadStorageUsed = loadStorageUsed;
function storeStorageUsed(src) {
  return function (builder) {
    builder.storeVarUint(src.cells, 3);
    builder.storeVarUint(src.bits, 3);
    builder.storeVarUint(src.publicCells, 3);
  };
}
exports.storeStorageUsed = storeStorageUsed;

},{}],66:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeStorageUsedShort = exports.loadStorageUsedShort = void 0;
function loadStorageUsedShort(slice) {
  var cells = slice.loadVarUintBig(3);
  var bits = slice.loadVarUintBig(3);
  return {
    cells: cells,
    bits: bits
  };
}
exports.loadStorageUsedShort = loadStorageUsedShort;
function storeStorageUsedShort(src) {
  return function (builder) {
    builder.storeVarUint(src.cells, 3);
    builder.storeVarUint(src.bits, 3);
  };
}
exports.storeStorageUsedShort = storeStorageUsedShort;

},{}],67:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeTickTock = exports.loadTickTock = void 0;
function loadTickTock(slice) {
  return {
    tick: slice.loadBit(),
    tock: slice.loadBit()
  };
}
exports.loadTickTock = loadTickTock;
function storeTickTock(src) {
  return function (builder) {
    builder.storeBit(src.tick);
    builder.storeBit(src.tock);
  };
}
exports.storeTickTock = storeTickTock;

},{}],68:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeTransaction = exports.loadTransaction = void 0;
var Builder_1 = require("../boc/Builder");
var Dictionary_1 = require("../dict/Dictionary");
var AccountStatus_1 = require("./AccountStatus");
var CurrencyCollection_1 = require("./CurrencyCollection");
var HashUpdate_1 = require("./HashUpdate");
var Message_1 = require("./Message");
var TransactionDescription_1 = require("./TransactionDescription");
function loadTransaction(slice) {
  var raw = slice.asCell();
  if (slice.loadUint(4) !== 0x07) {
    throw Error('Invalid data');
  }
  var address = slice.loadUintBig(256);
  var lt = slice.loadUintBig(64);
  var prevTransactionHash = slice.loadUintBig(256);
  var prevTransactionLt = slice.loadUintBig(64);
  var now = slice.loadUint(32);
  var outMessagesCount = slice.loadUint(15);
  var oldStatus = (0, AccountStatus_1.loadAccountStatus)(slice);
  var endStatus = (0, AccountStatus_1.loadAccountStatus)(slice);
  var msgRef = slice.loadRef();
  var msgSlice = msgRef.beginParse();
  var inMessage = msgSlice.loadBit() ? (0, Message_1.loadMessage)(msgSlice.loadRef().beginParse()) : undefined;
  var outMessages = msgSlice.loadDict(Dictionary_1.Dictionary.Keys.Uint(15), Message_1.MessageValue);
  msgSlice.endParse();
  var totalFees = (0, CurrencyCollection_1.loadCurrencyCollection)(slice);
  var stateUpdate = (0, HashUpdate_1.loadHashUpdate)(slice.loadRef().beginParse());
  var description = (0, TransactionDescription_1.loadTransactionDescription)(slice.loadRef().beginParse());
  return {
    address: address,
    lt: lt,
    prevTransactionHash: prevTransactionHash,
    prevTransactionLt: prevTransactionLt,
    now: now,
    outMessagesCount: outMessagesCount,
    oldStatus: oldStatus,
    endStatus: endStatus,
    inMessage: inMessage,
    outMessages: outMessages,
    totalFees: totalFees,
    stateUpdate: stateUpdate,
    description: description,
    raw: raw,
    hash: function hash() {
      return raw.hash();
    }
  };
}
exports.loadTransaction = loadTransaction;
function storeTransaction(src) {
  return function (builder) {
    builder.storeUint(0x07, 4);
    builder.storeUint(src.address, 256);
    builder.storeUint(src.lt, 64);
    builder.storeUint(src.prevTransactionHash, 256);
    builder.storeUint(src.prevTransactionLt, 64);
    builder.storeUint(src.now, 32);
    builder.storeUint(src.outMessagesCount, 15);
    builder.store((0, AccountStatus_1.storeAccountStatus)(src.oldStatus));
    builder.store((0, AccountStatus_1.storeAccountStatus)(src.endStatus));
    var msgBuilder = (0, Builder_1.beginCell)();
    if (src.inMessage) {
      msgBuilder.storeBit(true);
      msgBuilder.storeRef((0, Builder_1.beginCell)().store((0, Message_1.storeMessage)(src.inMessage)));
    } else {
      msgBuilder.storeBit(false);
    }
    msgBuilder.storeDict(src.outMessages);
    builder.storeRef(msgBuilder);
    builder.store((0, CurrencyCollection_1.storeCurrencyCollection)(src.totalFees));
    builder.storeRef((0, Builder_1.beginCell)().store((0, HashUpdate_1.storeHashUpdate)(src.stateUpdate)));
    builder.storeRef((0, Builder_1.beginCell)().store((0, TransactionDescription_1.storeTransactionDescription)(src.description)));
  };
}
exports.storeTransaction = storeTransaction;

},{"../boc/Builder":8,"../dict/Dictionary":27,"./AccountStatus":41,"./CurrencyCollection":47,"./HashUpdate":49,"./Message":52,"./TransactionDescription":73}],69:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeTransactionActionPhase = exports.loadTransactionActionPhase = void 0;
var AccountStatusChange_1 = require("./AccountStatusChange");
var StorageUsedShort_1 = require("./StorageUsedShort");
function loadTransactionActionPhase(slice) {
  var success = slice.loadBit();
  var valid = slice.loadBit();
  var noFunds = slice.loadBit();
  var statusChange = (0, AccountStatusChange_1.loadAccountStatusChange)(slice);
  var totalFwdFees = slice.loadBit() ? slice.loadCoins() : undefined;
  var totalActionFees = slice.loadBit() ? slice.loadCoins() : undefined;
  var resultCode = slice.loadInt(32);
  var resultArg = slice.loadBit() ? slice.loadInt(32) : undefined;
  var totalActions = slice.loadUint(16);
  var specActions = slice.loadUint(16);
  var skippedActions = slice.loadUint(16);
  var messagesCreated = slice.loadUint(16);
  var actionListHash = slice.loadUintBig(256);
  var totalMessageSize = (0, StorageUsedShort_1.loadStorageUsedShort)(slice);
  return {
    success: success,
    valid: valid,
    noFunds: noFunds,
    statusChange: statusChange,
    totalFwdFees: totalFwdFees,
    totalActionFees: totalActionFees,
    resultCode: resultCode,
    resultArg: resultArg,
    totalActions: totalActions,
    specActions: specActions,
    skippedActions: skippedActions,
    messagesCreated: messagesCreated,
    actionListHash: actionListHash,
    totalMessageSize: totalMessageSize
  };
}
exports.loadTransactionActionPhase = loadTransactionActionPhase;
function storeTransactionActionPhase(src) {
  return function (builder) {
    builder.storeBit(src.success);
    builder.storeBit(src.valid);
    builder.storeBit(src.noFunds);
    builder.store((0, AccountStatusChange_1.storeAccountStatusChange)(src.statusChange));
    builder.storeMaybeCoins(src.totalFwdFees);
    builder.storeMaybeCoins(src.totalActionFees);
    builder.storeInt(src.resultCode, 32);
    builder.storeMaybeInt(src.resultArg, 32);
    builder.storeUint(src.totalActions, 16);
    builder.storeUint(src.specActions, 16);
    builder.storeUint(src.skippedActions, 16);
    builder.storeUint(src.messagesCreated, 16);
    builder.storeUint(src.actionListHash, 256);
    builder.store((0, StorageUsedShort_1.storeStorageUsedShort)(src.totalMessageSize));
  };
}
exports.storeTransactionActionPhase = storeTransactionActionPhase;

},{"./AccountStatusChange":42,"./StorageUsedShort":66}],70:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeTransactionBouncePhase = exports.loadTransactionBouncePhase = void 0;
var StorageUsedShort_1 = require("./StorageUsedShort");
function loadTransactionBouncePhase(slice) {
  // Ok
  if (slice.loadBit()) {
    var messageSize = (0, StorageUsedShort_1.loadStorageUsedShort)(slice);
    var messageFees = slice.loadCoins();
    var forwardFees = slice.loadCoins();
    return {
      type: "ok",
      messageSize: messageSize,
      messageFees: messageFees,
      forwardFees: forwardFees
    };
  }
  // No funds
  if (slice.loadBit()) {
    var _messageSize = (0, StorageUsedShort_1.loadStorageUsedShort)(slice);
    var requiredForwardFees = slice.loadCoins();
    return {
      type: "no-funds",
      messageSize: _messageSize,
      requiredForwardFees: requiredForwardFees
    };
  }
  // Negative funds
  return {
    type: "negative-funds"
  };
}
exports.loadTransactionBouncePhase = loadTransactionBouncePhase;
function storeTransactionBouncePhase(src) {
  return function (builder) {
    if (src.type === 'ok') {
      builder.storeBit(true);
      builder.store((0, StorageUsedShort_1.storeStorageUsedShort)(src.messageSize));
      builder.storeCoins(src.messageFees);
      builder.storeCoins(src.forwardFees);
    } else if (src.type === 'negative-funds') {
      builder.storeBit(false);
      builder.storeBit(false);
    } else if (src.type === 'no-funds') {
      builder.storeBit(false);
      builder.storeBit(true);
      builder.store((0, StorageUsedShort_1.storeStorageUsedShort)(src.messageSize));
      builder.storeCoins(src.requiredForwardFees);
    } else {
      throw new Error("Invalid TransactionBouncePhase type");
    }
  };
}
exports.storeTransactionBouncePhase = storeTransactionBouncePhase;

},{"./StorageUsedShort":66}],71:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeTransactionComputePhase = exports.loadTransactionComputePhase = void 0;
var Builder_1 = require("../boc/Builder");
var ComputeSkipReason_1 = require("./ComputeSkipReason");
function loadTransactionComputePhase(slice) {
  // Skipped
  if (!slice.loadBit()) {
    var reason = (0, ComputeSkipReason_1.loadComputeSkipReason)(slice);
    return {
      type: 'skipped',
      reason: reason
    };
  }
  var success = slice.loadBit();
  var messageStateUsed = slice.loadBit();
  var accountActivated = slice.loadBit();
  var gasFees = slice.loadCoins();
  var vmState = slice.loadRef().beginParse();
  var gasUsed = vmState.loadVarUintBig(3);
  var gasLimit = vmState.loadVarUintBig(3);
  var gasCredit = vmState.loadBit() ? vmState.loadVarUintBig(2) : undefined;
  var mode = vmState.loadUint(8);
  var exitCode = vmState.loadInt(32);
  var exitArg = vmState.loadBit() ? vmState.loadInt(32) : undefined;
  var vmSteps = vmState.loadUint(32);
  var vmInitStateHash = vmState.loadUintBig(256);
  var vmFinalStateHash = vmState.loadUintBig(256);
  return {
    type: 'vm',
    success: success,
    messageStateUsed: messageStateUsed,
    accountActivated: accountActivated,
    gasFees: gasFees,
    gasUsed: gasUsed,
    gasLimit: gasLimit,
    gasCredit: gasCredit,
    mode: mode,
    exitCode: exitCode,
    exitArg: exitArg,
    vmSteps: vmSteps,
    vmInitStateHash: vmInitStateHash,
    vmFinalStateHash: vmFinalStateHash
  };
}
exports.loadTransactionComputePhase = loadTransactionComputePhase;
function storeTransactionComputePhase(src) {
  return function (builder) {
    if (src.type === 'skipped') {
      builder.storeBit(0);
      builder.store((0, ComputeSkipReason_1.storeComputeSkipReason)(src.reason));
      return;
    }
    builder.storeBit(1);
    builder.storeBit(src.success);
    builder.storeBit(src.messageStateUsed);
    builder.storeBit(src.accountActivated);
    builder.storeCoins(src.gasFees);
    builder.storeRef((0, Builder_1.beginCell)().storeVarUint(src.gasUsed, 3).storeVarUint(src.gasLimit, 3).store(function (b) {
      return src.gasCredit !== undefined && src.gasCredit !== null ? b.storeBit(1).storeVarUint(src.gasCredit, 2) : b.storeBit(0);
    }).storeUint(src.mode, 8).storeInt(src.exitCode, 32).store(function (b) {
      return src.exitArg !== undefined && src.exitArg !== null ? b.storeBit(1).storeInt(src.exitArg, 32) : b.storeBit(0);
    }).storeUint(src.vmSteps, 32).storeUint(src.vmInitStateHash, 256).storeUint(src.vmFinalStateHash, 256).endCell());
  };
}
exports.storeTransactionComputePhase = storeTransactionComputePhase;

},{"../boc/Builder":8,"./ComputeSkipReason":46}],72:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeTransactionCreditPhase = exports.loadTransactionCreditPhase = void 0;
var CurrencyCollection_1 = require("./CurrencyCollection");
function loadTransactionCreditPhase(slice) {
  var dueFeesColelcted = slice.loadBit() ? slice.loadCoins() : undefined;
  var credit = (0, CurrencyCollection_1.loadCurrencyCollection)(slice);
  return {
    dueFeesColelcted: dueFeesColelcted,
    credit: credit
  };
}
exports.loadTransactionCreditPhase = loadTransactionCreditPhase;
function storeTransactionCreditPhase(src) {
  return function (builder) {
    if (src.dueFeesColelcted === null || src.dueFeesColelcted === undefined) {
      builder.storeBit(false);
    } else {
      builder.storeBit(true);
      builder.storeCoins(src.dueFeesColelcted);
    }
    builder.store((0, CurrencyCollection_1.storeCurrencyCollection)(src.credit));
  };
}
exports.storeTransactionCreditPhase = storeTransactionCreditPhase;

},{"./CurrencyCollection":47}],73:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeTransactionDescription = exports.loadTransactionDescription = void 0;
var Builder_1 = require("../boc/Builder");
var SplitMergeInfo_1 = require("./SplitMergeInfo");
var Transaction_1 = require("./Transaction");
var TransactionActionPhase_1 = require("./TransactionActionPhase");
var TransactionBouncePhase_1 = require("./TransactionBouncePhase");
var TransactionComputePhase_1 = require("./TransactionComputePhase");
var TransactionCreditPhase_1 = require("./TransactionCreditPhase");
var TransactionStoragePhase_1 = require("./TransactionStoragePhase");
function loadTransactionDescription(slice) {
  var type = slice.loadUint(4);
  if (type === 0x00) {
    var creditFirst = slice.loadBit();
    var storagePhase = undefined;
    if (slice.loadBit()) {
      storagePhase = (0, TransactionStoragePhase_1.loadTransactionStoragePhase)(slice);
    }
    var creditPhase = undefined;
    if (slice.loadBit()) {
      creditPhase = (0, TransactionCreditPhase_1.loadTransactionCreditPhase)(slice);
    }
    var computePhase = (0, TransactionComputePhase_1.loadTransactionComputePhase)(slice);
    var actionPhase = undefined;
    if (slice.loadBit()) {
      actionPhase = (0, TransactionActionPhase_1.loadTransactionActionPhase)(slice.loadRef().beginParse());
    }
    var aborted = slice.loadBit();
    var bouncePhase = undefined;
    if (slice.loadBit()) {
      bouncePhase = (0, TransactionBouncePhase_1.loadTransactionBouncePhase)(slice);
    }
    var destroyed = slice.loadBit();
    return {
      type: 'generic',
      creditFirst: creditFirst,
      storagePhase: storagePhase,
      creditPhase: creditPhase,
      computePhase: computePhase,
      actionPhase: actionPhase,
      bouncePhase: bouncePhase,
      aborted: aborted,
      destroyed: destroyed
    };
  }
  if (type === 0x01) {
    return {
      type: 'storage',
      storagePhase: (0, TransactionStoragePhase_1.loadTransactionStoragePhase)(slice)
    };
  }
  if (type === 0x2 || type === 0x03) {
    var isTock = type === 0x03;
    var _storagePhase = (0, TransactionStoragePhase_1.loadTransactionStoragePhase)(slice);
    var _computePhase = (0, TransactionComputePhase_1.loadTransactionComputePhase)(slice);
    var _actionPhase = undefined;
    if (slice.loadBit()) {
      _actionPhase = (0, TransactionActionPhase_1.loadTransactionActionPhase)(slice.loadRef().beginParse());
    }
    var _aborted = slice.loadBit();
    var _destroyed = slice.loadBit();
    return {
      type: 'tick-tock',
      isTock: isTock,
      storagePhase: _storagePhase,
      computePhase: _computePhase,
      actionPhase: _actionPhase,
      aborted: _aborted,
      destroyed: _destroyed
    };
  }
  if (type === 0x04) {
    var splitInfo = (0, SplitMergeInfo_1.loadSplitMergeInfo)(slice);
    var _storagePhase2 = undefined;
    if (slice.loadBit()) {
      _storagePhase2 = (0, TransactionStoragePhase_1.loadTransactionStoragePhase)(slice);
    }
    var _computePhase2 = (0, TransactionComputePhase_1.loadTransactionComputePhase)(slice);
    var _actionPhase2 = undefined;
    if (slice.loadBit()) {
      _actionPhase2 = (0, TransactionActionPhase_1.loadTransactionActionPhase)(slice.loadRef().beginParse());
    }
    var _aborted2 = slice.loadBit();
    var _destroyed2 = slice.loadBit();
    return {
      type: 'split-prepare',
      splitInfo: splitInfo,
      storagePhase: _storagePhase2,
      computePhase: _computePhase2,
      actionPhase: _actionPhase2,
      aborted: _aborted2,
      destroyed: _destroyed2
    };
  }
  if (type === 0x05) {
    var _splitInfo = (0, SplitMergeInfo_1.loadSplitMergeInfo)(slice);
    var prepareTransaction = (0, Transaction_1.loadTransaction)(slice.loadRef().beginParse());
    var installed = slice.loadBit();
    return {
      type: 'split-install',
      splitInfo: _splitInfo,
      prepareTransaction: prepareTransaction,
      installed: installed
    };
  }
  throw Error("Unsupported transaction description type ".concat(type));
}
exports.loadTransactionDescription = loadTransactionDescription;
function storeTransactionDescription(src) {
  return function (builder) {
    if (src.type === 'generic') {
      builder.storeUint(0x00, 4);
      builder.storeBit(src.creditFirst);
      if (src.storagePhase) {
        builder.storeBit(true);
        builder.store((0, TransactionStoragePhase_1.storeTransactionsStoragePhase)(src.storagePhase));
      } else {
        builder.storeBit(false);
      }
      if (src.creditPhase) {
        builder.storeBit(true);
        builder.store((0, TransactionCreditPhase_1.storeTransactionCreditPhase)(src.creditPhase));
      } else {
        builder.storeBit(false);
      }
      builder.store((0, TransactionComputePhase_1.storeTransactionComputePhase)(src.computePhase));
      if (src.actionPhase) {
        builder.storeBit(true);
        builder.storeRef((0, Builder_1.beginCell)().store((0, TransactionActionPhase_1.storeTransactionActionPhase)(src.actionPhase)));
      } else {
        builder.storeBit(false);
      }
      builder.storeBit(src.aborted);
      if (src.bouncePhase) {
        builder.storeBit(true);
        builder.store((0, TransactionBouncePhase_1.storeTransactionBouncePhase)(src.bouncePhase));
      } else {
        builder.storeBit(false);
      }
      builder.storeBit(src.destroyed);
    } else if (src.type === 'storage') {
      builder.storeUint(0x01, 4);
      builder.store((0, TransactionStoragePhase_1.storeTransactionsStoragePhase)(src.storagePhase));
    } else if (src.type === 'tick-tock') {
      builder.storeUint(src.isTock ? 0x03 : 0x02, 4);
      builder.store((0, TransactionStoragePhase_1.storeTransactionsStoragePhase)(src.storagePhase));
      builder.store((0, TransactionComputePhase_1.storeTransactionComputePhase)(src.computePhase));
      if (src.actionPhase) {
        builder.storeBit(true);
        builder.storeRef((0, Builder_1.beginCell)().store((0, TransactionActionPhase_1.storeTransactionActionPhase)(src.actionPhase)));
      } else {
        builder.storeBit(false);
      }
      builder.storeBit(src.aborted);
      builder.storeBit(src.destroyed);
    } else if (src.type === 'split-prepare') {
      builder.storeUint(0x04, 4);
      builder.store((0, SplitMergeInfo_1.storeSplitMergeInfo)(src.splitInfo));
      if (src.storagePhase) {
        builder.storeBit(true);
        builder.store((0, TransactionStoragePhase_1.storeTransactionsStoragePhase)(src.storagePhase));
      } else {
        builder.storeBit(false);
      }
      builder.store((0, TransactionComputePhase_1.storeTransactionComputePhase)(src.computePhase));
      if (src.actionPhase) {
        builder.storeBit(true);
        builder.store((0, TransactionActionPhase_1.storeTransactionActionPhase)(src.actionPhase));
      } else {
        builder.storeBit(false);
      }
      builder.storeBit(src.aborted);
      builder.storeBit(src.destroyed);
    } else if (src.type === 'split-install') {
      builder.storeUint(0x05, 4);
      builder.store((0, SplitMergeInfo_1.storeSplitMergeInfo)(src.splitInfo));
      builder.storeRef((0, Builder_1.beginCell)().store((0, Transaction_1.storeTransaction)(src.prepareTransaction)));
      builder.storeBit(src.installed);
    } else {
      throw Error("Unsupported transaction description type ".concat(src.type));
    }
  };
}
exports.storeTransactionDescription = storeTransactionDescription;

},{"../boc/Builder":8,"./SplitMergeInfo":62,"./Transaction":68,"./TransactionActionPhase":69,"./TransactionBouncePhase":70,"./TransactionComputePhase":71,"./TransactionCreditPhase":72,"./TransactionStoragePhase":74}],74:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeTransactionsStoragePhase = exports.loadTransactionStoragePhase = void 0;
var AccountStatusChange_1 = require("./AccountStatusChange");
function loadTransactionStoragePhase(slice) {
  var storageFeesCollected = slice.loadCoins();
  var storageFeesDue = undefined;
  if (slice.loadBit()) {
    storageFeesDue = slice.loadCoins();
  }
  var statusChange = (0, AccountStatusChange_1.loadAccountStatusChange)(slice);
  return {
    storageFeesCollected: storageFeesCollected,
    storageFeesDue: storageFeesDue,
    statusChange: statusChange
  };
}
exports.loadTransactionStoragePhase = loadTransactionStoragePhase;
function storeTransactionsStoragePhase(src) {
  return function (builder) {
    builder.storeCoins(src.storageFeesCollected);
    if (src.storageFeesDue === null || src.storageFeesDue === undefined) {
      builder.storeBit(false);
    } else {
      builder.storeBit(true);
      builder.storeCoins(src.storageFeesDue);
    }
    builder.store((0, AccountStatusChange_1.storeAccountStatusChange)(src.statusChange));
  };
}
exports.storeTransactionsStoragePhase = storeTransactionsStoragePhase;

},{"./AccountStatusChange":42}],75:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeSplitMergeInfo = exports.loadSplitMergeInfo = exports.storeLibRef = exports.loadLibRef = exports.storeSimpleLibrary = exports.loadSimpleLibrary = exports.loadShardStateUnsplit = exports.storeShardIdent = exports.loadShardIdent = exports.storeShardAccounts = exports.loadShardAccounts = exports.ShardAccountRefValue = exports.storeShardAccount = exports.loadShardAccount = exports.ReserveMode = exports.SendMode = exports.storeMessageRelaxed = exports.loadMessageRelaxed = exports.storeMessage = exports.loadMessage = exports.loadMasterchainStateExtra = exports.storeHashUpdate = exports.loadHashUpdate = exports.storeDepthBalanceInfo = exports.loadDepthBalanceInfo = exports.storeCurrencyCollection = exports.loadCurrencyCollection = exports.storeComputeSkipReason = exports.loadComputeSkipReason = exports.storeCommonMessageInfoRelaxed = exports.loadCommonMessageInfoRelaxed = exports.storeCommonMessageInfo = exports.loadCommonMessageInfo = exports.storeOutList = exports.loadOutList = exports.storeOutAction = exports.loadOutAction = exports.storeAccountStorage = exports.loadAccountStorage = exports.storeAccountStatusChange = exports.loadAccountStatusChange = exports.storeAccountStatus = exports.loadAccountStatus = exports.storeAccountState = exports.loadAccountState = exports.storeAccount = exports.loadAccount = exports.comment = exports.external = exports.internal = void 0;
exports.storeTransactionsStoragePhase = exports.loadTransactionStoragePhase = exports.storeTransactionDescription = exports.loadTransactionDescription = exports.storeTransactionCreditPhase = exports.loadTransactionCreditPhase = exports.storeTransactionComputePhase = exports.loadTransactionComputePhase = exports.storeTransactionBouncePhase = exports.loadTransactionBouncePhase = exports.storeTransactionActionPhase = exports.loadTransactionActionPhase = exports.storeTransaction = exports.loadTransaction = exports.storeTickTock = exports.loadTickTock = exports.storeStorageUsedShort = exports.loadStorageUsedShort = exports.storeStorageUsed = exports.loadStorageUsed = exports.storeStorageInfo = exports.loadStorageInfo = exports.storeStateInit = exports.loadStateInit = void 0;
var _helpers_1 = require("./_helpers");
Object.defineProperty(exports, "internal", {
  enumerable: true,
  get: function get() {
    return _helpers_1.internal;
  }
});
Object.defineProperty(exports, "external", {
  enumerable: true,
  get: function get() {
    return _helpers_1.external;
  }
});
Object.defineProperty(exports, "comment", {
  enumerable: true,
  get: function get() {
    return _helpers_1.comment;
  }
});
var Account_1 = require("./Account");
Object.defineProperty(exports, "loadAccount", {
  enumerable: true,
  get: function get() {
    return Account_1.loadAccount;
  }
});
Object.defineProperty(exports, "storeAccount", {
  enumerable: true,
  get: function get() {
    return Account_1.storeAccount;
  }
});
var AccountState_1 = require("./AccountState");
Object.defineProperty(exports, "loadAccountState", {
  enumerable: true,
  get: function get() {
    return AccountState_1.loadAccountState;
  }
});
Object.defineProperty(exports, "storeAccountState", {
  enumerable: true,
  get: function get() {
    return AccountState_1.storeAccountState;
  }
});
var AccountStatus_1 = require("./AccountStatus");
Object.defineProperty(exports, "loadAccountStatus", {
  enumerable: true,
  get: function get() {
    return AccountStatus_1.loadAccountStatus;
  }
});
Object.defineProperty(exports, "storeAccountStatus", {
  enumerable: true,
  get: function get() {
    return AccountStatus_1.storeAccountStatus;
  }
});
var AccountStatusChange_1 = require("./AccountStatusChange");
Object.defineProperty(exports, "loadAccountStatusChange", {
  enumerable: true,
  get: function get() {
    return AccountStatusChange_1.loadAccountStatusChange;
  }
});
Object.defineProperty(exports, "storeAccountStatusChange", {
  enumerable: true,
  get: function get() {
    return AccountStatusChange_1.storeAccountStatusChange;
  }
});
var AccountStorage_1 = require("./AccountStorage");
Object.defineProperty(exports, "loadAccountStorage", {
  enumerable: true,
  get: function get() {
    return AccountStorage_1.loadAccountStorage;
  }
});
Object.defineProperty(exports, "storeAccountStorage", {
  enumerable: true,
  get: function get() {
    return AccountStorage_1.storeAccountStorage;
  }
});
var OutList_1 = require("./OutList");
Object.defineProperty(exports, "loadOutAction", {
  enumerable: true,
  get: function get() {
    return OutList_1.loadOutAction;
  }
});
Object.defineProperty(exports, "storeOutAction", {
  enumerable: true,
  get: function get() {
    return OutList_1.storeOutAction;
  }
});
Object.defineProperty(exports, "loadOutList", {
  enumerable: true,
  get: function get() {
    return OutList_1.loadOutList;
  }
});
Object.defineProperty(exports, "storeOutList", {
  enumerable: true,
  get: function get() {
    return OutList_1.storeOutList;
  }
});
var CommonMessageInfo_1 = require("./CommonMessageInfo");
Object.defineProperty(exports, "loadCommonMessageInfo", {
  enumerable: true,
  get: function get() {
    return CommonMessageInfo_1.loadCommonMessageInfo;
  }
});
Object.defineProperty(exports, "storeCommonMessageInfo", {
  enumerable: true,
  get: function get() {
    return CommonMessageInfo_1.storeCommonMessageInfo;
  }
});
var CommonMessageInfoRelaxed_1 = require("./CommonMessageInfoRelaxed");
Object.defineProperty(exports, "loadCommonMessageInfoRelaxed", {
  enumerable: true,
  get: function get() {
    return CommonMessageInfoRelaxed_1.loadCommonMessageInfoRelaxed;
  }
});
Object.defineProperty(exports, "storeCommonMessageInfoRelaxed", {
  enumerable: true,
  get: function get() {
    return CommonMessageInfoRelaxed_1.storeCommonMessageInfoRelaxed;
  }
});
var ComputeSkipReason_1 = require("./ComputeSkipReason");
Object.defineProperty(exports, "loadComputeSkipReason", {
  enumerable: true,
  get: function get() {
    return ComputeSkipReason_1.loadComputeSkipReason;
  }
});
Object.defineProperty(exports, "storeComputeSkipReason", {
  enumerable: true,
  get: function get() {
    return ComputeSkipReason_1.storeComputeSkipReason;
  }
});
var CurrencyCollection_1 = require("./CurrencyCollection");
Object.defineProperty(exports, "loadCurrencyCollection", {
  enumerable: true,
  get: function get() {
    return CurrencyCollection_1.loadCurrencyCollection;
  }
});
Object.defineProperty(exports, "storeCurrencyCollection", {
  enumerable: true,
  get: function get() {
    return CurrencyCollection_1.storeCurrencyCollection;
  }
});
var DepthBalanceInfo_1 = require("./DepthBalanceInfo");
Object.defineProperty(exports, "loadDepthBalanceInfo", {
  enumerable: true,
  get: function get() {
    return DepthBalanceInfo_1.loadDepthBalanceInfo;
  }
});
Object.defineProperty(exports, "storeDepthBalanceInfo", {
  enumerable: true,
  get: function get() {
    return DepthBalanceInfo_1.storeDepthBalanceInfo;
  }
});
var HashUpdate_1 = require("./HashUpdate");
Object.defineProperty(exports, "loadHashUpdate", {
  enumerable: true,
  get: function get() {
    return HashUpdate_1.loadHashUpdate;
  }
});
Object.defineProperty(exports, "storeHashUpdate", {
  enumerable: true,
  get: function get() {
    return HashUpdate_1.storeHashUpdate;
  }
});
var MasterchainStateExtra_1 = require("./MasterchainStateExtra");
Object.defineProperty(exports, "loadMasterchainStateExtra", {
  enumerable: true,
  get: function get() {
    return MasterchainStateExtra_1.loadMasterchainStateExtra;
  }
});
var Message_1 = require("./Message");
Object.defineProperty(exports, "loadMessage", {
  enumerable: true,
  get: function get() {
    return Message_1.loadMessage;
  }
});
Object.defineProperty(exports, "storeMessage", {
  enumerable: true,
  get: function get() {
    return Message_1.storeMessage;
  }
});
var MessageRelaxed_1 = require("./MessageRelaxed");
Object.defineProperty(exports, "loadMessageRelaxed", {
  enumerable: true,
  get: function get() {
    return MessageRelaxed_1.loadMessageRelaxed;
  }
});
Object.defineProperty(exports, "storeMessageRelaxed", {
  enumerable: true,
  get: function get() {
    return MessageRelaxed_1.storeMessageRelaxed;
  }
});
var SendMode_1 = require("./SendMode");
Object.defineProperty(exports, "SendMode", {
  enumerable: true,
  get: function get() {
    return SendMode_1.SendMode;
  }
});
var ReserveMode_1 = require("./ReserveMode");
Object.defineProperty(exports, "ReserveMode", {
  enumerable: true,
  get: function get() {
    return ReserveMode_1.ReserveMode;
  }
});
var ShardAccount_1 = require("./ShardAccount");
Object.defineProperty(exports, "loadShardAccount", {
  enumerable: true,
  get: function get() {
    return ShardAccount_1.loadShardAccount;
  }
});
Object.defineProperty(exports, "storeShardAccount", {
  enumerable: true,
  get: function get() {
    return ShardAccount_1.storeShardAccount;
  }
});
var ShardAccounts_1 = require("./ShardAccounts");
Object.defineProperty(exports, "ShardAccountRefValue", {
  enumerable: true,
  get: function get() {
    return ShardAccounts_1.ShardAccountRefValue;
  }
});
Object.defineProperty(exports, "loadShardAccounts", {
  enumerable: true,
  get: function get() {
    return ShardAccounts_1.loadShardAccounts;
  }
});
Object.defineProperty(exports, "storeShardAccounts", {
  enumerable: true,
  get: function get() {
    return ShardAccounts_1.storeShardAccounts;
  }
});
var ShardIdent_1 = require("./ShardIdent");
Object.defineProperty(exports, "loadShardIdent", {
  enumerable: true,
  get: function get() {
    return ShardIdent_1.loadShardIdent;
  }
});
Object.defineProperty(exports, "storeShardIdent", {
  enumerable: true,
  get: function get() {
    return ShardIdent_1.storeShardIdent;
  }
});
var ShardStateUnsplit_1 = require("./ShardStateUnsplit");
Object.defineProperty(exports, "loadShardStateUnsplit", {
  enumerable: true,
  get: function get() {
    return ShardStateUnsplit_1.loadShardStateUnsplit;
  }
});
var SimpleLibrary_1 = require("./SimpleLibrary");
Object.defineProperty(exports, "loadSimpleLibrary", {
  enumerable: true,
  get: function get() {
    return SimpleLibrary_1.loadSimpleLibrary;
  }
});
Object.defineProperty(exports, "storeSimpleLibrary", {
  enumerable: true,
  get: function get() {
    return SimpleLibrary_1.storeSimpleLibrary;
  }
});
var LibRef_1 = require("./LibRef");
Object.defineProperty(exports, "loadLibRef", {
  enumerable: true,
  get: function get() {
    return LibRef_1.loadLibRef;
  }
});
Object.defineProperty(exports, "storeLibRef", {
  enumerable: true,
  get: function get() {
    return LibRef_1.storeLibRef;
  }
});
var SplitMergeInfo_1 = require("./SplitMergeInfo");
Object.defineProperty(exports, "loadSplitMergeInfo", {
  enumerable: true,
  get: function get() {
    return SplitMergeInfo_1.loadSplitMergeInfo;
  }
});
Object.defineProperty(exports, "storeSplitMergeInfo", {
  enumerable: true,
  get: function get() {
    return SplitMergeInfo_1.storeSplitMergeInfo;
  }
});
var StateInit_1 = require("./StateInit");
Object.defineProperty(exports, "loadStateInit", {
  enumerable: true,
  get: function get() {
    return StateInit_1.loadStateInit;
  }
});
Object.defineProperty(exports, "storeStateInit", {
  enumerable: true,
  get: function get() {
    return StateInit_1.storeStateInit;
  }
});
var StorageInto_1 = require("./StorageInto");
Object.defineProperty(exports, "loadStorageInfo", {
  enumerable: true,
  get: function get() {
    return StorageInto_1.loadStorageInfo;
  }
});
Object.defineProperty(exports, "storeStorageInfo", {
  enumerable: true,
  get: function get() {
    return StorageInto_1.storeStorageInfo;
  }
});
var StorageUsed_1 = require("./StorageUsed");
Object.defineProperty(exports, "loadStorageUsed", {
  enumerable: true,
  get: function get() {
    return StorageUsed_1.loadStorageUsed;
  }
});
Object.defineProperty(exports, "storeStorageUsed", {
  enumerable: true,
  get: function get() {
    return StorageUsed_1.storeStorageUsed;
  }
});
var StorageUsedShort_1 = require("./StorageUsedShort");
Object.defineProperty(exports, "loadStorageUsedShort", {
  enumerable: true,
  get: function get() {
    return StorageUsedShort_1.loadStorageUsedShort;
  }
});
Object.defineProperty(exports, "storeStorageUsedShort", {
  enumerable: true,
  get: function get() {
    return StorageUsedShort_1.storeStorageUsedShort;
  }
});
var TickTock_1 = require("./TickTock");
Object.defineProperty(exports, "loadTickTock", {
  enumerable: true,
  get: function get() {
    return TickTock_1.loadTickTock;
  }
});
Object.defineProperty(exports, "storeTickTock", {
  enumerable: true,
  get: function get() {
    return TickTock_1.storeTickTock;
  }
});
var Transaction_1 = require("./Transaction");
Object.defineProperty(exports, "loadTransaction", {
  enumerable: true,
  get: function get() {
    return Transaction_1.loadTransaction;
  }
});
Object.defineProperty(exports, "storeTransaction", {
  enumerable: true,
  get: function get() {
    return Transaction_1.storeTransaction;
  }
});
var TransactionActionPhase_1 = require("./TransactionActionPhase");
Object.defineProperty(exports, "loadTransactionActionPhase", {
  enumerable: true,
  get: function get() {
    return TransactionActionPhase_1.loadTransactionActionPhase;
  }
});
Object.defineProperty(exports, "storeTransactionActionPhase", {
  enumerable: true,
  get: function get() {
    return TransactionActionPhase_1.storeTransactionActionPhase;
  }
});
var TransactionBouncePhase_1 = require("./TransactionBouncePhase");
Object.defineProperty(exports, "loadTransactionBouncePhase", {
  enumerable: true,
  get: function get() {
    return TransactionBouncePhase_1.loadTransactionBouncePhase;
  }
});
Object.defineProperty(exports, "storeTransactionBouncePhase", {
  enumerable: true,
  get: function get() {
    return TransactionBouncePhase_1.storeTransactionBouncePhase;
  }
});
var TransactionComputePhase_1 = require("./TransactionComputePhase");
Object.defineProperty(exports, "loadTransactionComputePhase", {
  enumerable: true,
  get: function get() {
    return TransactionComputePhase_1.loadTransactionComputePhase;
  }
});
Object.defineProperty(exports, "storeTransactionComputePhase", {
  enumerable: true,
  get: function get() {
    return TransactionComputePhase_1.storeTransactionComputePhase;
  }
});
var TransactionCreditPhase_1 = require("./TransactionCreditPhase");
Object.defineProperty(exports, "loadTransactionCreditPhase", {
  enumerable: true,
  get: function get() {
    return TransactionCreditPhase_1.loadTransactionCreditPhase;
  }
});
Object.defineProperty(exports, "storeTransactionCreditPhase", {
  enumerable: true,
  get: function get() {
    return TransactionCreditPhase_1.storeTransactionCreditPhase;
  }
});
var TransactionDescription_1 = require("./TransactionDescription");
Object.defineProperty(exports, "loadTransactionDescription", {
  enumerable: true,
  get: function get() {
    return TransactionDescription_1.loadTransactionDescription;
  }
});
Object.defineProperty(exports, "storeTransactionDescription", {
  enumerable: true,
  get: function get() {
    return TransactionDescription_1.storeTransactionDescription;
  }
});
var TransactionStoragePhase_1 = require("./TransactionStoragePhase");
Object.defineProperty(exports, "loadTransactionStoragePhase", {
  enumerable: true,
  get: function get() {
    return TransactionStoragePhase_1.loadTransactionStoragePhase;
  }
});
Object.defineProperty(exports, "storeTransactionsStoragePhase", {
  enumerable: true,
  get: function get() {
    return TransactionStoragePhase_1.storeTransactionsStoragePhase;
  }
});

},{"./Account":39,"./AccountState":40,"./AccountStatus":41,"./AccountStatusChange":42,"./AccountStorage":43,"./CommonMessageInfo":44,"./CommonMessageInfoRelaxed":45,"./ComputeSkipReason":46,"./CurrencyCollection":47,"./DepthBalanceInfo":48,"./HashUpdate":49,"./LibRef":50,"./MasterchainStateExtra":51,"./Message":52,"./MessageRelaxed":53,"./OutList":54,"./ReserveMode":55,"./SendMode":56,"./ShardAccount":57,"./ShardAccounts":58,"./ShardIdent":59,"./ShardStateUnsplit":60,"./SimpleLibrary":61,"./SplitMergeInfo":62,"./StateInit":63,"./StorageInto":64,"./StorageUsed":65,"./StorageUsedShort":66,"./TickTock":67,"./Transaction":68,"./TransactionActionPhase":69,"./TransactionBouncePhase":70,"./TransactionComputePhase":71,"./TransactionCreditPhase":72,"./TransactionDescription":73,"./TransactionStoragePhase":74,"./_helpers":76}],76:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.comment = exports.external = exports.internal = void 0;
var Address_1 = require("../address/Address");
var Cell_1 = require("../boc/Cell");
var Builder_1 = require("../boc/Builder");
var convert_1 = require("../utils/convert");
function internal(src) {
  var _src$init;
  // Resolve bounce
  var bounce = true;
  if (src.bounce !== null && src.bounce !== undefined) {
    bounce = src.bounce;
  }
  // Resolve address
  var to;
  if (typeof src.to === 'string') {
    to = Address_1.Address.parse(src.to);
  } else if (Address_1.Address.isAddress(src.to)) {
    to = src.to;
  } else {
    throw new Error("Invalid address ".concat(src.to));
  }
  // Resolve value
  var value;
  if (typeof src.value === 'string') {
    value = (0, convert_1.toNano)(src.value);
  } else {
    value = src.value;
  }
  // Resolve body
  var body = Cell_1.Cell.EMPTY;
  if (typeof src.body === 'string') {
    body = (0, Builder_1.beginCell)().storeUint(0, 32).storeStringTail(src.body).endCell();
  } else if (src.body) {
    body = src.body;
  }
  // Create message
  return {
    info: {
      type: 'internal',
      dest: to,
      value: {
        coins: value
      },
      bounce: bounce,
      ihrDisabled: true,
      bounced: false,
      ihrFee: 0n,
      forwardFee: 0n,
      createdAt: 0,
      createdLt: 0n
    },
    init: (_src$init = src.init) !== null && _src$init !== void 0 ? _src$init : undefined,
    body: body
  };
}
exports.internal = internal;
function external(src) {
  var _src$init2;
  // Resolve address
  var to;
  if (typeof src.to === 'string') {
    to = Address_1.Address.parse(src.to);
  } else if (Address_1.Address.isAddress(src.to)) {
    to = src.to;
  } else {
    throw new Error("Invalid address ".concat(src.to));
  }
  return {
    info: {
      type: 'external-in',
      dest: to,
      importFee: 0n
    },
    init: (_src$init2 = src.init) !== null && _src$init2 !== void 0 ? _src$init2 : undefined,
    body: src.body || Cell_1.Cell.EMPTY
  };
}
exports.external = external;
function comment(src) {
  return (0, Builder_1.beginCell)().storeUint(0, 32).storeStringTail(src).endCell();
}
exports.comment = comment;

},{"../address/Address":2,"../boc/Builder":8,"../boc/Cell":9,"../utils/convert":79}],77:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.base32Decode = exports.base32Encode = void 0;
var alphabet = 'abcdefghijklmnopqrstuvwxyz234567';
function base32Encode(buffer) {
  var length = buffer.byteLength;
  var bits = 0;
  var value = 0;
  var output = '';
  for (var i = 0; i < length; i++) {
    value = value << 8 | buffer[i];
    bits += 8;
    while (bits >= 5) {
      output += alphabet[value >>> bits - 5 & 31];
      bits -= 5;
    }
  }
  if (bits > 0) {
    output += alphabet[value << 5 - bits & 31];
  }
  return output;
}
exports.base32Encode = base32Encode;
function readChar(alphabet, _char) {
  var idx = alphabet.indexOf(_char);
  if (idx === -1) {
    throw new Error('Invalid character found: ' + _char);
  }
  return idx;
}
function base32Decode(input) {
  var cleanedInput;
  cleanedInput = input.toLowerCase();
  var _cleanedInput = cleanedInput,
    length = _cleanedInput.length;
  var bits = 0;
  var value = 0;
  var index = 0;
  var output = Buffer.alloc(length * 5 / 8 | 0);
  for (var i = 0; i < length; i++) {
    value = value << 5 | readChar(alphabet, cleanedInput[i]);
    bits += 5;
    if (bits >= 8) {
      output[index++] = value >>> bits - 8 & 255;
      bits -= 8;
    }
  }
  return output;
}
exports.base32Decode = base32Decode;

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":196}],78:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bitsForNumber = void 0;
function bitsForNumber(src, mode) {
  var v = BigInt(src);
  // Handle negative values
  if (mode === 'int') {
    // Corner case for zero or -1 value
    if (v === 0n || v === -1n) {
      return 1;
    }
    var v2 = v > 0 ? v : -v;
    return v2.toString(2).length + 1 /* Sign bit */;
  } else if (mode === 'uint') {
    if (v < 0) {
      throw Error("value is negative. Got ".concat(src));
    }
    return v.toString(2).length;
  } else {
    throw Error("invalid mode. Got ".concat(mode));
  }
}
exports.bitsForNumber = bitsForNumber;

},{}],79:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromNano = exports.toNano = void 0;
function toNano(src) {
  if (typeof src === 'bigint') {
    return src * 1000000000n;
  } else {
    if (typeof src === 'number') {
      if (!Number.isFinite(src)) {
        throw Error('Invalid number');
      }
      if (Math.log10(src) <= 6) {
        src = src.toLocaleString('en', {
          minimumFractionDigits: 9,
          useGrouping: false
        });
      } else if (src - Math.trunc(src) === 0) {
        src = src.toLocaleString('en', {
          maximumFractionDigits: 0,
          useGrouping: false
        });
      } else {
        throw Error('Not enough precision for a number value. Use string value instead');
      }
    }
    // Check sign
    var neg = false;
    while (src.startsWith('-')) {
      neg = !neg;
      src = src.slice(1);
    }
    // Split string
    if (src === '.') {
      throw Error('Invalid number');
    }
    var parts = src.split('.');
    if (parts.length > 2) {
      throw Error('Invalid number');
    }
    // Prepare parts
    var whole = parts[0];
    var frac = parts[1];
    if (!whole) {
      whole = '0';
    }
    if (!frac) {
      frac = '0';
    }
    if (frac.length > 9) {
      throw Error('Invalid number');
    }
    while (frac.length < 9) {
      frac += '0';
    }
    // Convert
    var r = BigInt(whole) * 1000000000n + BigInt(frac);
    if (neg) {
      r = -r;
    }
    return r;
  }
}
exports.toNano = toNano;
function fromNano(src) {
  var v = BigInt(src);
  var neg = false;
  if (v < 0) {
    neg = true;
    v = -v;
  }
  // Convert fraction
  var frac = v % 1000000000n;
  var facStr = frac.toString();
  while (facStr.length < 9) {
    facStr = '0' + facStr;
  }
  facStr = facStr.match(/^([0-9]*[1-9]|0)(0*)/)[1];
  // Convert whole
  var whole = v / 1000000000n;
  var wholeStr = whole.toString();
  // Value
  var value = "".concat(wholeStr).concat(facStr === '0' ? '' : ".".concat(facStr));
  if (neg) {
    value = '-' + value;
  }
  return value;
}
exports.fromNano = fromNano;

},{}],80:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.crc16 = void 0;
function crc16(data) {
  var poly = 0x1021;
  var reg = 0;
  var message = Buffer.alloc(data.length + 2);
  message.set(data);
  var _iterator = _createForOfIteratorHelper(message),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var _byte = _step.value;
      var mask = 0x80;
      while (mask > 0) {
        reg <<= 1;
        if (_byte & mask) {
          reg += 1;
        }
        mask >>= 1;
        if (reg > 0xffff) {
          reg &= 0xffff;
          reg ^= poly;
        }
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return Buffer.from([Math.floor(reg / 256), reg % 256]);
}
exports.crc16 = crc16;

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":196}],81:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.crc32c = void 0;
var POLY = 0x82f63b78;
function crc32c(source) {
  var crc = 0 ^ 0xffffffff;
  for (var n = 0; n < source.length; n++) {
    crc ^= source[n];
    crc = crc & 1 ? crc >>> 1 ^ POLY : crc >>> 1;
    crc = crc & 1 ? crc >>> 1 ^ POLY : crc >>> 1;
    crc = crc & 1 ? crc >>> 1 ^ POLY : crc >>> 1;
    crc = crc & 1 ? crc >>> 1 ^ POLY : crc >>> 1;
    crc = crc & 1 ? crc >>> 1 ^ POLY : crc >>> 1;
    crc = crc & 1 ? crc >>> 1 ^ POLY : crc >>> 1;
    crc = crc & 1 ? crc >>> 1 ^ POLY : crc >>> 1;
    crc = crc & 1 ? crc >>> 1 ^ POLY : crc >>> 1;
  }
  crc = crc ^ 0xffffffff;
  // Convert endianness
  var res = Buffer.alloc(4);
  res.writeInt32LE(crc);
  return res;
}
exports.crc32c = crc32c;

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":196}],82:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getMethodId = void 0;
var TABLE = new Int16Array([0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50a5, 0x60c6, 0x70e7, 0x8108, 0x9129, 0xa14a, 0xb16b, 0xc18c, 0xd1ad, 0xe1ce, 0xf1ef, 0x1231, 0x0210, 0x3273, 0x2252, 0x52b5, 0x4294, 0x72f7, 0x62d6, 0x9339, 0x8318, 0xb37b, 0xa35a, 0xd3bd, 0xc39c, 0xf3ff, 0xe3de, 0x2462, 0x3443, 0x0420, 0x1401, 0x64e6, 0x74c7, 0x44a4, 0x5485, 0xa56a, 0xb54b, 0x8528, 0x9509, 0xe5ee, 0xf5cf, 0xc5ac, 0xd58d, 0x3653, 0x2672, 0x1611, 0x0630, 0x76d7, 0x66f6, 0x5695, 0x46b4, 0xb75b, 0xa77a, 0x9719, 0x8738, 0xf7df, 0xe7fe, 0xd79d, 0xc7bc, 0x48c4, 0x58e5, 0x6886, 0x78a7, 0x0840, 0x1861, 0x2802, 0x3823, 0xc9cc, 0xd9ed, 0xe98e, 0xf9af, 0x8948, 0x9969, 0xa90a, 0xb92b, 0x5af5, 0x4ad4, 0x7ab7, 0x6a96, 0x1a71, 0x0a50, 0x3a33, 0x2a12, 0xdbfd, 0xcbdc, 0xfbbf, 0xeb9e, 0x9b79, 0x8b58, 0xbb3b, 0xab1a, 0x6ca6, 0x7c87, 0x4ce4, 0x5cc5, 0x2c22, 0x3c03, 0x0c60, 0x1c41, 0xedae, 0xfd8f, 0xcdec, 0xddcd, 0xad2a, 0xbd0b, 0x8d68, 0x9d49, 0x7e97, 0x6eb6, 0x5ed5, 0x4ef4, 0x3e13, 0x2e32, 0x1e51, 0x0e70, 0xff9f, 0xefbe, 0xdfdd, 0xcffc, 0xbf1b, 0xaf3a, 0x9f59, 0x8f78, 0x9188, 0x81a9, 0xb1ca, 0xa1eb, 0xd10c, 0xc12d, 0xf14e, 0xe16f, 0x1080, 0x00a1, 0x30c2, 0x20e3, 0x5004, 0x4025, 0x7046, 0x6067, 0x83b9, 0x9398, 0xa3fb, 0xb3da, 0xc33d, 0xd31c, 0xe37f, 0xf35e, 0x02b1, 0x1290, 0x22f3, 0x32d2, 0x4235, 0x5214, 0x6277, 0x7256, 0xb5ea, 0xa5cb, 0x95a8, 0x8589, 0xf56e, 0xe54f, 0xd52c, 0xc50d, 0x34e2, 0x24c3, 0x14a0, 0x0481, 0x7466, 0x6447, 0x5424, 0x4405, 0xa7db, 0xb7fa, 0x8799, 0x97b8, 0xe75f, 0xf77e, 0xc71d, 0xd73c, 0x26d3, 0x36f2, 0x0691, 0x16b0, 0x6657, 0x7676, 0x4615, 0x5634, 0xd94c, 0xc96d, 0xf90e, 0xe92f, 0x99c8, 0x89e9, 0xb98a, 0xa9ab, 0x5844, 0x4865, 0x7806, 0x6827, 0x18c0, 0x08e1, 0x3882, 0x28a3, 0xcb7d, 0xdb5c, 0xeb3f, 0xfb1e, 0x8bf9, 0x9bd8, 0xabbb, 0xbb9a, 0x4a75, 0x5a54, 0x6a37, 0x7a16, 0x0af1, 0x1ad0, 0x2ab3, 0x3a92, 0xfd2e, 0xed0f, 0xdd6c, 0xcd4d, 0xbdaa, 0xad8b, 0x9de8, 0x8dc9, 0x7c26, 0x6c07, 0x5c64, 0x4c45, 0x3ca2, 0x2c83, 0x1ce0, 0x0cc1, 0xef1f, 0xff3e, 0xcf5d, 0xdf7c, 0xaf9b, 0xbfba, 0x8fd9, 0x9ff8, 0x6e17, 0x7e36, 0x4e55, 0x5e74, 0x2e93, 0x3eb2, 0x0ed1, 0x1ef0]);
function crc16(data) {
  if (!(data instanceof Buffer)) {
    data = Buffer.from(data);
  }
  var crc = 0;
  for (var index = 0; index < data.length; index++) {
    var _byte = data[index];
    crc = (TABLE[(crc >> 8 ^ _byte) & 0xff] ^ crc << 8) & 0xffff;
  }
  return crc;
}
function getMethodId(name) {
  return crc16(name) & 0xffff | 0x10000;
}
exports.getMethodId = getMethodId;

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":196}],83:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sha512 = exports.sha256 = exports.pbkdf2_sha512 = exports.hmac_sha512 = exports.getSecureRandomWords = exports.getSecureRandomBytes = void 0;
var getSecureRandom_1 = require("./browser/getSecureRandom");
Object.defineProperty(exports, "getSecureRandomBytes", {
  enumerable: true,
  get: function get() {
    return getSecureRandom_1.getSecureRandomBytes;
  }
});
Object.defineProperty(exports, "getSecureRandomWords", {
  enumerable: true,
  get: function get() {
    return getSecureRandom_1.getSecureRandomWords;
  }
});
var hmac_sha512_1 = require("./browser/hmac_sha512");
Object.defineProperty(exports, "hmac_sha512", {
  enumerable: true,
  get: function get() {
    return hmac_sha512_1.hmac_sha512;
  }
});
var pbkdf2_sha512_1 = require("./browser/pbkdf2_sha512");
Object.defineProperty(exports, "pbkdf2_sha512", {
  enumerable: true,
  get: function get() {
    return pbkdf2_sha512_1.pbkdf2_sha512;
  }
});
var sha256_1 = require("./browser/sha256");
Object.defineProperty(exports, "sha256", {
  enumerable: true,
  get: function get() {
    return sha256_1.sha256;
  }
});
var sha512_1 = require("./browser/sha512");
Object.defineProperty(exports, "sha512", {
  enumerable: true,
  get: function get() {
    return sha512_1.sha512;
  }
});

},{"./browser/getSecureRandom":84,"./browser/hmac_sha512":85,"./browser/pbkdf2_sha512":86,"./browser/sha256":87,"./browser/sha512":88}],84:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSecureRandomWords = exports.getSecureRandomBytes = void 0;
function getSecureRandomBytes(size) {
  return Buffer.from(window.crypto.getRandomValues(new Uint8Array(size)));
}
exports.getSecureRandomBytes = getSecureRandomBytes;
function getSecureRandomWords(size) {
  return window.crypto.getRandomValues(new Uint16Array(size));
}
exports.getSecureRandomWords = getSecureRandomWords;

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":196}],85:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hmac_sha512 = void 0;
function hmac_sha512(_x, _x2) {
  return _hmac_sha.apply(this, arguments);
}
function _hmac_sha() {
  _hmac_sha = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(key, data) {
    var keyBuffer, dataBuffer, hmacAlgo, hmacKey;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          keyBuffer = typeof key === 'string' ? Buffer.from(key, 'utf-8') : key;
          dataBuffer = typeof data === 'string' ? Buffer.from(data, 'utf-8') : data;
          hmacAlgo = {
            name: "HMAC",
            hash: "SHA-512"
          };
          _context.next = 5;
          return window.crypto.subtle.importKey("raw", keyBuffer, hmacAlgo, false, ["sign"]);
        case 5:
          hmacKey = _context.sent;
          _context.t0 = Buffer;
          _context.next = 9;
          return crypto.subtle.sign(hmacAlgo, hmacKey, dataBuffer);
        case 9:
          _context.t1 = _context.sent;
          return _context.abrupt("return", _context.t0.from.call(_context.t0, _context.t1));
        case 11:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return _hmac_sha.apply(this, arguments);
}
exports.hmac_sha512 = hmac_sha512;

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":196}],86:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pbkdf2_sha512 = void 0;
function pbkdf2_sha512(_x, _x2, _x3, _x4) {
  return _pbkdf2_sha.apply(this, arguments);
}
function _pbkdf2_sha() {
  _pbkdf2_sha = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(key, salt, iterations, keyLen) {
    var keyBuffer, saltBuffer, pbkdf2_key, derivedBits;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          keyBuffer = typeof key === 'string' ? Buffer.from(key, 'utf-8') : key;
          saltBuffer = typeof salt === 'string' ? Buffer.from(salt, 'utf-8') : salt;
          _context.next = 4;
          return window.crypto.subtle.importKey("raw", keyBuffer, {
            name: "PBKDF2"
          }, false, ["deriveBits"]);
        case 4:
          pbkdf2_key = _context.sent;
          _context.next = 7;
          return window.crypto.subtle.deriveBits({
            name: "PBKDF2",
            hash: "SHA-512",
            salt: saltBuffer,
            iterations: iterations
          }, pbkdf2_key, keyLen * 8);
        case 7:
          derivedBits = _context.sent;
          return _context.abrupt("return", Buffer.from(derivedBits));
        case 9:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return _pbkdf2_sha.apply(this, arguments);
}
exports.pbkdf2_sha512 = pbkdf2_sha512;

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":196}],87:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sha256 = void 0;
function sha256(_x) {
  return _sha.apply(this, arguments);
}
function _sha() {
  _sha = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(source) {
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          if (!(typeof source === 'string')) {
            _context.next = 6;
            break;
          }
          _context.t0 = Buffer;
          _context.next = 4;
          return crypto.subtle.digest("SHA-256", Buffer.from(source, 'utf-8'));
        case 4:
          _context.t1 = _context.sent;
          return _context.abrupt("return", _context.t0.from.call(_context.t0, _context.t1));
        case 6:
          _context.t2 = Buffer;
          _context.next = 9;
          return crypto.subtle.digest("SHA-256", source);
        case 9:
          _context.t3 = _context.sent;
          return _context.abrupt("return", _context.t2.from.call(_context.t2, _context.t3));
        case 11:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return _sha.apply(this, arguments);
}
exports.sha256 = sha256;

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":196}],88:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sha512 = void 0;
function sha512(_x) {
  return _sha.apply(this, arguments);
}
function _sha() {
  _sha = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(source) {
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          if (!(typeof source === 'string')) {
            _context.next = 6;
            break;
          }
          _context.t0 = Buffer;
          _context.next = 4;
          return crypto.subtle.digest("SHA-512", Buffer.from(source, 'utf-8'));
        case 4:
          _context.t1 = _context.sent;
          return _context.abrupt("return", _context.t0.from.call(_context.t0, _context.t1));
        case 6:
          _context.t2 = Buffer;
          _context.next = 9;
          return crypto.subtle.digest("SHA-512", source);
        case 9:
          _context.t3 = _context.sent;
          return _context.abrupt("return", _context.t2.from.call(_context.t2, _context.t3));
        case 11:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return _sha.apply(this, arguments);
}
exports.sha512 = sha512;

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":196}],89:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deriveEd25519Path = exports.deriveED25519HardenedKey = exports.getED25519MasterKeyFromSeed = void 0;
var hmac_sha512_1 = require("../primitives/hmac_sha512");
var ED25519_CURVE = 'ed25519 seed';
var HARDENED_OFFSET = 0x80000000;
function getED25519MasterKeyFromSeed(_x) {
  return _getED25519MasterKeyFromSeed.apply(this, arguments);
}
function _getED25519MasterKeyFromSeed() {
  _getED25519MasterKeyFromSeed = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(seed) {
    var I, IL, IR;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return (0, hmac_sha512_1.hmac_sha512)(ED25519_CURVE, seed);
        case 2:
          I = _context.sent;
          IL = I.slice(0, 32);
          IR = I.slice(32);
          return _context.abrupt("return", {
            key: IL,
            chainCode: IR
          });
        case 6:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return _getED25519MasterKeyFromSeed.apply(this, arguments);
}
exports.getED25519MasterKeyFromSeed = getED25519MasterKeyFromSeed;
;
function deriveED25519HardenedKey(_x2, _x3) {
  return _deriveED25519HardenedKey.apply(this, arguments);
}
function _deriveED25519HardenedKey() {
  _deriveED25519HardenedKey = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(parent, index) {
    var indexBuffer, data, I, IL, IR;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          if (!(index >= HARDENED_OFFSET)) {
            _context2.next = 2;
            break;
          }
          throw Error('Key index must be less than offset');
        case 2:
          // Key Derive Path: 0x00 + parent.key + index;
          indexBuffer = Buffer.alloc(4);
          indexBuffer.writeUInt32BE(index + HARDENED_OFFSET, 0);
          data = Buffer.concat([Buffer.alloc(1, 0), parent.key, indexBuffer]); // Derive key
          _context2.next = 7;
          return (0, hmac_sha512_1.hmac_sha512)(parent.chainCode, data);
        case 7:
          I = _context2.sent;
          IL = I.slice(0, 32);
          IR = I.slice(32);
          return _context2.abrupt("return", {
            key: IL,
            chainCode: IR
          });
        case 11:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return _deriveED25519HardenedKey.apply(this, arguments);
}
exports.deriveED25519HardenedKey = deriveED25519HardenedKey;
;
function deriveEd25519Path(_x4, _x5) {
  return _deriveEd25519Path.apply(this, arguments);
}
function _deriveEd25519Path() {
  _deriveEd25519Path = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(seed, path) {
    var state, remaining, index;
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          _context3.next = 2;
          return getED25519MasterKeyFromSeed(seed);
        case 2:
          state = _context3.sent;
          remaining = _toConsumableArray(path);
        case 4:
          if (!(remaining.length > 0)) {
            _context3.next = 12;
            break;
          }
          index = remaining[0];
          remaining = remaining.slice(1);
          _context3.next = 9;
          return deriveED25519HardenedKey(state, index);
        case 9:
          state = _context3.sent;
          _context3.next = 4;
          break;
        case 12:
          return _context3.abrupt("return", state.key);
        case 13:
        case "end":
          return _context3.stop();
      }
    }, _callee3);
  }));
  return _deriveEd25519Path.apply(this, arguments);
}
exports.deriveEd25519Path = deriveEd25519Path;

}).call(this)}).call(this,require("buffer").Buffer)
},{"../primitives/hmac_sha512":99,"buffer":196}],90:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deriveMnemonicsPath = exports.deriveMnemonicHardenedKey = exports.getMnemonicsMasterKeyFromSeed = void 0;
var mnemonic_1 = require("../mnemonic/mnemonic");
var hmac_sha512_1 = require("../primitives/hmac_sha512");
var HARDENED_OFFSET = 0x80000000;
var MNEMONICS_SEED = 'TON Mnemonics HD seed';
function getMnemonicsMasterKeyFromSeed(_x) {
  return _getMnemonicsMasterKeyFromSeed.apply(this, arguments);
}
function _getMnemonicsMasterKeyFromSeed() {
  _getMnemonicsMasterKeyFromSeed = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(seed) {
    var I, IL, IR;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return (0, hmac_sha512_1.hmac_sha512)(MNEMONICS_SEED, seed);
        case 2:
          I = _context.sent;
          IL = I.slice(0, 32);
          IR = I.slice(32);
          return _context.abrupt("return", {
            key: IL,
            chainCode: IR
          });
        case 6:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return _getMnemonicsMasterKeyFromSeed.apply(this, arguments);
}
exports.getMnemonicsMasterKeyFromSeed = getMnemonicsMasterKeyFromSeed;
;
function deriveMnemonicHardenedKey(_x2, _x3) {
  return _deriveMnemonicHardenedKey.apply(this, arguments);
}
function _deriveMnemonicHardenedKey() {
  _deriveMnemonicHardenedKey = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(parent, index) {
    var indexBuffer, data, I, IL, IR;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          if (!(index >= HARDENED_OFFSET)) {
            _context2.next = 2;
            break;
          }
          throw Error('Key index must be less than offset');
        case 2:
          // Key Derive Path: 0x00 + parent.key + index;
          indexBuffer = Buffer.alloc(4);
          indexBuffer.writeUInt32BE(index + HARDENED_OFFSET, 0);
          data = Buffer.concat([Buffer.alloc(1, 0), parent.key, indexBuffer]); // Derive key
          _context2.next = 7;
          return (0, hmac_sha512_1.hmac_sha512)(parent.chainCode, data);
        case 7:
          I = _context2.sent;
          IL = I.slice(0, 32);
          IR = I.slice(32);
          return _context2.abrupt("return", {
            key: IL,
            chainCode: IR
          });
        case 11:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return _deriveMnemonicHardenedKey.apply(this, arguments);
}
exports.deriveMnemonicHardenedKey = deriveMnemonicHardenedKey;
function deriveMnemonicsPath(_x4, _x5) {
  return _deriveMnemonicsPath.apply(this, arguments);
}
function _deriveMnemonicsPath() {
  _deriveMnemonicsPath = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(seed, path) {
    var wordsCount,
      password,
      state,
      remaining,
      index,
      _args3 = arguments;
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          wordsCount = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : 24;
          password = _args3.length > 3 ? _args3[3] : undefined;
          _context3.next = 4;
          return getMnemonicsMasterKeyFromSeed(seed);
        case 4:
          state = _context3.sent;
          remaining = _toConsumableArray(path);
        case 6:
          if (!(remaining.length > 0)) {
            _context3.next = 14;
            break;
          }
          index = remaining[0];
          remaining = remaining.slice(1);
          _context3.next = 11;
          return deriveMnemonicHardenedKey(state, index);
        case 11:
          state = _context3.sent;
          _context3.next = 6;
          break;
        case 14:
          _context3.next = 16;
          return (0, mnemonic_1.mnemonicFromRandomSeed)(state.key, wordsCount, password);
        case 16:
          return _context3.abrupt("return", _context3.sent);
        case 17:
        case "end":
          return _context3.stop();
      }
    }, _callee3);
  }));
  return _deriveMnemonicsPath.apply(this, arguments);
}
exports.deriveMnemonicsPath = deriveMnemonicsPath;

}).call(this)}).call(this,require("buffer").Buffer)
},{"../mnemonic/mnemonic":93,"../primitives/hmac_sha512":99,"buffer":196}],91:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deriveSymmetricPath = exports.deriveSymmetricHardenedKey = exports.getSymmetricMasterKeyFromSeed = void 0;
var hmac_sha512_1 = require("../primitives/hmac_sha512");
var SYMMETRIC_SEED = 'Symmetric key seed';
function getSymmetricMasterKeyFromSeed(_x) {
  return _getSymmetricMasterKeyFromSeed.apply(this, arguments);
}
function _getSymmetricMasterKeyFromSeed() {
  _getSymmetricMasterKeyFromSeed = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(seed) {
    var I, IL, IR;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return (0, hmac_sha512_1.hmac_sha512)(SYMMETRIC_SEED, seed);
        case 2:
          I = _context.sent;
          IL = I.slice(32);
          IR = I.slice(0, 32);
          return _context.abrupt("return", {
            key: IL,
            chainCode: IR
          });
        case 6:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return _getSymmetricMasterKeyFromSeed.apply(this, arguments);
}
exports.getSymmetricMasterKeyFromSeed = getSymmetricMasterKeyFromSeed;
;
function deriveSymmetricHardenedKey(_x2, _x3) {
  return _deriveSymmetricHardenedKey.apply(this, arguments);
}
function _deriveSymmetricHardenedKey() {
  _deriveSymmetricHardenedKey = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(parent, offset) {
    var data, I, IL, IR;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          // Prepare data
          data = Buffer.concat([Buffer.alloc(1, 0), Buffer.from(offset)]); // Derive key
          _context2.next = 3;
          return (0, hmac_sha512_1.hmac_sha512)(parent.chainCode, data);
        case 3:
          I = _context2.sent;
          IL = I.slice(32);
          IR = I.slice(0, 32);
          return _context2.abrupt("return", {
            key: IL,
            chainCode: IR
          });
        case 7:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return _deriveSymmetricHardenedKey.apply(this, arguments);
}
exports.deriveSymmetricHardenedKey = deriveSymmetricHardenedKey;
function deriveSymmetricPath(_x4, _x5) {
  return _deriveSymmetricPath.apply(this, arguments);
}
function _deriveSymmetricPath() {
  _deriveSymmetricPath = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(seed, path) {
    var state, remaining, index;
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          _context3.next = 2;
          return getSymmetricMasterKeyFromSeed(seed);
        case 2:
          state = _context3.sent;
          remaining = _toConsumableArray(path);
        case 4:
          if (!(remaining.length > 0)) {
            _context3.next = 12;
            break;
          }
          index = remaining[0];
          remaining = remaining.slice(1);
          _context3.next = 9;
          return deriveSymmetricHardenedKey(state, index);
        case 9:
          state = _context3.sent;
          _context3.next = 4;
          break;
        case 12:
          return _context3.abrupt("return", state.key);
        case 13:
        case "end":
          return _context3.stop();
      }
    }, _callee3);
  }));
  return _deriveSymmetricPath.apply(this, arguments);
}
exports.deriveSymmetricPath = deriveSymmetricPath;

}).call(this)}).call(this,require("buffer").Buffer)
},{"../primitives/hmac_sha512":99,"buffer":196}],92:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getMnemonicsMasterKeyFromSeed = exports.deriveMnemonicHardenedKey = exports.deriveMnemonicsPath = exports.deriveSymmetricPath = exports.deriveSymmetricHardenedKey = exports.getSymmetricMasterKeyFromSeed = exports.deriveEd25519Path = exports.deriveED25519HardenedKey = exports.getED25519MasterKeyFromSeed = exports.signVerify = exports.sign = exports.keyPairFromSecretKey = exports.keyPairFromSeed = exports.openBox = exports.sealBox = exports.mnemonicWordList = exports.mnemonicToHDSeed = exports.mnemonicToSeed = exports.mnemonicToWalletKey = exports.mnemonicToPrivateKey = exports.mnemonicValidate = exports.mnemonicNew = exports.newSecurePassphrase = exports.newSecureWords = exports.getSecureRandomNumber = exports.getSecureRandomWords = exports.getSecureRandomBytes = exports.hmac_sha512 = exports.pbkdf2_sha512 = exports.sha512_sync = exports.sha512 = exports.sha256_sync = exports.sha256 = void 0;
var sha256_1 = require("./primitives/sha256");
Object.defineProperty(exports, "sha256", {
  enumerable: true,
  get: function get() {
    return sha256_1.sha256;
  }
});
Object.defineProperty(exports, "sha256_sync", {
  enumerable: true,
  get: function get() {
    return sha256_1.sha256_sync;
  }
});
var sha512_1 = require("./primitives/sha512");
Object.defineProperty(exports, "sha512", {
  enumerable: true,
  get: function get() {
    return sha512_1.sha512;
  }
});
Object.defineProperty(exports, "sha512_sync", {
  enumerable: true,
  get: function get() {
    return sha512_1.sha512_sync;
  }
});
var pbkdf2_sha512_1 = require("./primitives/pbkdf2_sha512");
Object.defineProperty(exports, "pbkdf2_sha512", {
  enumerable: true,
  get: function get() {
    return pbkdf2_sha512_1.pbkdf2_sha512;
  }
});
var hmac_sha512_1 = require("./primitives/hmac_sha512");
Object.defineProperty(exports, "hmac_sha512", {
  enumerable: true,
  get: function get() {
    return hmac_sha512_1.hmac_sha512;
  }
});
var getSecureRandom_1 = require("./primitives/getSecureRandom");
Object.defineProperty(exports, "getSecureRandomBytes", {
  enumerable: true,
  get: function get() {
    return getSecureRandom_1.getSecureRandomBytes;
  }
});
Object.defineProperty(exports, "getSecureRandomWords", {
  enumerable: true,
  get: function get() {
    return getSecureRandom_1.getSecureRandomWords;
  }
});
Object.defineProperty(exports, "getSecureRandomNumber", {
  enumerable: true,
  get: function get() {
    return getSecureRandom_1.getSecureRandomNumber;
  }
});
var newSecureWords_1 = require("./passwords/newSecureWords");
Object.defineProperty(exports, "newSecureWords", {
  enumerable: true,
  get: function get() {
    return newSecureWords_1.newSecureWords;
  }
});
var newSecurePassphrase_1 = require("./passwords/newSecurePassphrase");
Object.defineProperty(exports, "newSecurePassphrase", {
  enumerable: true,
  get: function get() {
    return newSecurePassphrase_1.newSecurePassphrase;
  }
});
var mnemonic_1 = require("./mnemonic/mnemonic");
Object.defineProperty(exports, "mnemonicNew", {
  enumerable: true,
  get: function get() {
    return mnemonic_1.mnemonicNew;
  }
});
Object.defineProperty(exports, "mnemonicValidate", {
  enumerable: true,
  get: function get() {
    return mnemonic_1.mnemonicValidate;
  }
});
Object.defineProperty(exports, "mnemonicToPrivateKey", {
  enumerable: true,
  get: function get() {
    return mnemonic_1.mnemonicToPrivateKey;
  }
});
Object.defineProperty(exports, "mnemonicToWalletKey", {
  enumerable: true,
  get: function get() {
    return mnemonic_1.mnemonicToWalletKey;
  }
});
Object.defineProperty(exports, "mnemonicToSeed", {
  enumerable: true,
  get: function get() {
    return mnemonic_1.mnemonicToSeed;
  }
});
Object.defineProperty(exports, "mnemonicToHDSeed", {
  enumerable: true,
  get: function get() {
    return mnemonic_1.mnemonicToHDSeed;
  }
});
var wordlist_1 = require("./mnemonic/wordlist");
Object.defineProperty(exports, "mnemonicWordList", {
  enumerable: true,
  get: function get() {
    return wordlist_1.wordlist;
  }
});
var nacl_1 = require("./primitives/nacl");
Object.defineProperty(exports, "sealBox", {
  enumerable: true,
  get: function get() {
    return nacl_1.sealBox;
  }
});
Object.defineProperty(exports, "openBox", {
  enumerable: true,
  get: function get() {
    return nacl_1.openBox;
  }
});
var nacl_2 = require("./primitives/nacl");
Object.defineProperty(exports, "keyPairFromSeed", {
  enumerable: true,
  get: function get() {
    return nacl_2.keyPairFromSeed;
  }
});
Object.defineProperty(exports, "keyPairFromSecretKey", {
  enumerable: true,
  get: function get() {
    return nacl_2.keyPairFromSecretKey;
  }
});
Object.defineProperty(exports, "sign", {
  enumerable: true,
  get: function get() {
    return nacl_2.sign;
  }
});
Object.defineProperty(exports, "signVerify", {
  enumerable: true,
  get: function get() {
    return nacl_2.signVerify;
  }
});
var ed25519_1 = require("./hd/ed25519");
Object.defineProperty(exports, "getED25519MasterKeyFromSeed", {
  enumerable: true,
  get: function get() {
    return ed25519_1.getED25519MasterKeyFromSeed;
  }
});
Object.defineProperty(exports, "deriveED25519HardenedKey", {
  enumerable: true,
  get: function get() {
    return ed25519_1.deriveED25519HardenedKey;
  }
});
Object.defineProperty(exports, "deriveEd25519Path", {
  enumerable: true,
  get: function get() {
    return ed25519_1.deriveEd25519Path;
  }
});
var symmetric_1 = require("./hd/symmetric");
Object.defineProperty(exports, "getSymmetricMasterKeyFromSeed", {
  enumerable: true,
  get: function get() {
    return symmetric_1.getSymmetricMasterKeyFromSeed;
  }
});
Object.defineProperty(exports, "deriveSymmetricHardenedKey", {
  enumerable: true,
  get: function get() {
    return symmetric_1.deriveSymmetricHardenedKey;
  }
});
Object.defineProperty(exports, "deriveSymmetricPath", {
  enumerable: true,
  get: function get() {
    return symmetric_1.deriveSymmetricPath;
  }
});
var mnemonics_1 = require("./hd/mnemonics");
Object.defineProperty(exports, "deriveMnemonicsPath", {
  enumerable: true,
  get: function get() {
    return mnemonics_1.deriveMnemonicsPath;
  }
});
Object.defineProperty(exports, "deriveMnemonicHardenedKey", {
  enumerable: true,
  get: function get() {
    return mnemonics_1.deriveMnemonicHardenedKey;
  }
});
Object.defineProperty(exports, "getMnemonicsMasterKeyFromSeed", {
  enumerable: true,
  get: function get() {
    return mnemonics_1.getMnemonicsMasterKeyFromSeed;
  }
});

},{"./hd/ed25519":89,"./hd/mnemonics":90,"./hd/symmetric":91,"./mnemonic/mnemonic":93,"./mnemonic/wordlist":94,"./passwords/newSecurePassphrase":95,"./passwords/newSecureWords":96,"./primitives/getSecureRandom":98,"./primitives/hmac_sha512":99,"./primitives/nacl":100,"./primitives/pbkdf2_sha512":101,"./primitives/sha256":102,"./primitives/sha512":103}],93:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mnemonicFromRandomSeed = exports.mnemonicIndexesToBytes = exports.bytesToMnemonics = exports.bytesToMnemonicIndexes = exports.mnemonicNew = exports.mnemonicValidate = exports.mnemonicToHDSeed = exports.mnemonicToWalletKey = exports.mnemonicToPrivateKey = exports.mnemonicToSeed = exports.mnemonicToEntropy = void 0;
var tweetnacl_1 = __importDefault(require("tweetnacl"));
var getSecureRandom_1 = require("../primitives/getSecureRandom");
var hmac_sha512_1 = require("../primitives/hmac_sha512");
var pbkdf2_sha512_1 = require("../primitives/pbkdf2_sha512");
var binary_1 = require("../utils/binary");
var wordlist_1 = require("./wordlist");
var PBKDF_ITERATIONS = 100000;
function isPasswordNeeded(_x) {
  return _isPasswordNeeded.apply(this, arguments);
}
function _isPasswordNeeded() {
  _isPasswordNeeded = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(mnemonicArray) {
    var passlessEntropy;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return mnemonicToEntropy(mnemonicArray);
        case 2:
          passlessEntropy = _context.sent;
          _context.next = 5;
          return isPasswordSeed(passlessEntropy);
        case 5:
          _context.t0 = _context.sent;
          if (!_context.t0) {
            _context.next = 10;
            break;
          }
          _context.next = 9;
          return isBasicSeed(passlessEntropy);
        case 9:
          _context.t0 = !_context.sent;
        case 10:
          return _context.abrupt("return", _context.t0);
        case 11:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return _isPasswordNeeded.apply(this, arguments);
}
function normalizeMnemonic(src) {
  return src.map(function (v) {
    return v.toLowerCase().trim();
  });
}
function isBasicSeed(_x2) {
  return _isBasicSeed.apply(this, arguments);
}
function _isBasicSeed() {
  _isBasicSeed = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(entropy) {
    var seed;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return (0, pbkdf2_sha512_1.pbkdf2_sha512)(entropy, 'TON seed version', Math.max(1, Math.floor(PBKDF_ITERATIONS / 256)), 64);
        case 2:
          seed = _context2.sent;
          return _context2.abrupt("return", seed[0] == 0);
        case 4:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return _isBasicSeed.apply(this, arguments);
}
function isPasswordSeed(_x3) {
  return _isPasswordSeed.apply(this, arguments);
}
function _isPasswordSeed() {
  _isPasswordSeed = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(entropy) {
    var seed;
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          _context3.next = 2;
          return (0, pbkdf2_sha512_1.pbkdf2_sha512)(entropy, 'TON fast seed version', 1, 64);
        case 2:
          seed = _context3.sent;
          return _context3.abrupt("return", seed[0] == 1);
        case 4:
        case "end":
          return _context3.stop();
      }
    }, _callee3);
  }));
  return _isPasswordSeed.apply(this, arguments);
}
function mnemonicToEntropy(_x4, _x5) {
  return _mnemonicToEntropy.apply(this, arguments);
}
function _mnemonicToEntropy() {
  _mnemonicToEntropy = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(mnemonicArray, password) {
    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1) switch (_context4.prev = _context4.next) {
        case 0:
          _context4.next = 2;
          return (0, hmac_sha512_1.hmac_sha512)(mnemonicArray.join(' '), password && password.length > 0 ? password : '');
        case 2:
          return _context4.abrupt("return", _context4.sent);
        case 3:
        case "end":
          return _context4.stop();
      }
    }, _callee4);
  }));
  return _mnemonicToEntropy.apply(this, arguments);
}
exports.mnemonicToEntropy = mnemonicToEntropy;
function mnemonicToSeed(_x6, _x7, _x8) {
  return _mnemonicToSeed.apply(this, arguments);
}
function _mnemonicToSeed() {
  _mnemonicToSeed = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(mnemonicArray, seed, password) {
    var entropy;
    return _regeneratorRuntime().wrap(function _callee5$(_context5) {
      while (1) switch (_context5.prev = _context5.next) {
        case 0:
          _context5.next = 2;
          return mnemonicToEntropy(mnemonicArray, password);
        case 2:
          entropy = _context5.sent;
          _context5.next = 5;
          return (0, pbkdf2_sha512_1.pbkdf2_sha512)(entropy, seed, PBKDF_ITERATIONS, 64);
        case 5:
          return _context5.abrupt("return", _context5.sent);
        case 6:
        case "end":
          return _context5.stop();
      }
    }, _callee5);
  }));
  return _mnemonicToSeed.apply(this, arguments);
}
exports.mnemonicToSeed = mnemonicToSeed;
/**
 * Extract private key from mnemonic
 * @param mnemonicArray mnemonic array
 * @param password mnemonic password
 * @returns Key Pair
 */
function mnemonicToPrivateKey(_x9, _x10) {
  return _mnemonicToPrivateKey.apply(this, arguments);
}
function _mnemonicToPrivateKey() {
  _mnemonicToPrivateKey = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(mnemonicArray, password) {
    var seed, keyPair;
    return _regeneratorRuntime().wrap(function _callee6$(_context6) {
      while (1) switch (_context6.prev = _context6.next) {
        case 0:
          // https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/tonlib/tonlib/keys/Mnemonic.cpp#L64
          // td::Ed25519::PrivateKey Mnemonic::to_private_key() const {
          //   return td::Ed25519::PrivateKey(td::SecureString(as_slice(to_seed()).substr(0, td::Ed25519::PrivateKey::LENGTH)));
          // }
          mnemonicArray = normalizeMnemonic(mnemonicArray);
          _context6.next = 3;
          return mnemonicToSeed(mnemonicArray, 'TON default seed', password);
        case 3:
          seed = _context6.sent;
          keyPair = tweetnacl_1["default"].sign.keyPair.fromSeed(seed.slice(0, 32));
          return _context6.abrupt("return", {
            publicKey: Buffer.from(keyPair.publicKey),
            secretKey: Buffer.from(keyPair.secretKey)
          });
        case 6:
        case "end":
          return _context6.stop();
      }
    }, _callee6);
  }));
  return _mnemonicToPrivateKey.apply(this, arguments);
}
exports.mnemonicToPrivateKey = mnemonicToPrivateKey;
/**
 * Convert mnemonic to wallet key pair
 * @param mnemonicArray mnemonic array
 * @param password mnemonic password
 * @returns Key Pair
 */
function mnemonicToWalletKey(_x11, _x12) {
  return _mnemonicToWalletKey.apply(this, arguments);
}
function _mnemonicToWalletKey() {
  _mnemonicToWalletKey = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(mnemonicArray, password) {
    var seedPk, seedSecret, keyPair;
    return _regeneratorRuntime().wrap(function _callee7$(_context7) {
      while (1) switch (_context7.prev = _context7.next) {
        case 0:
          _context7.next = 2;
          return mnemonicToPrivateKey(mnemonicArray, password);
        case 2:
          seedPk = _context7.sent;
          seedSecret = seedPk.secretKey.slice(0, 32);
          keyPair = tweetnacl_1["default"].sign.keyPair.fromSeed(seedSecret);
          return _context7.abrupt("return", {
            publicKey: Buffer.from(keyPair.publicKey),
            secretKey: Buffer.from(keyPair.secretKey)
          });
        case 6:
        case "end":
          return _context7.stop();
      }
    }, _callee7);
  }));
  return _mnemonicToWalletKey.apply(this, arguments);
}
exports.mnemonicToWalletKey = mnemonicToWalletKey;
/**
 * Convert mnemonics to HD seed
 * @param mnemonicArray mnemonic array
 * @param password mnemonic password
 * @returns 64 byte seed
 */
function mnemonicToHDSeed(_x13, _x14) {
  return _mnemonicToHDSeed.apply(this, arguments);
}
function _mnemonicToHDSeed() {
  _mnemonicToHDSeed = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(mnemonicArray, password) {
    return _regeneratorRuntime().wrap(function _callee8$(_context8) {
      while (1) switch (_context8.prev = _context8.next) {
        case 0:
          mnemonicArray = normalizeMnemonic(mnemonicArray);
          _context8.next = 3;
          return mnemonicToSeed(mnemonicArray, 'TON HD Keys seed', password);
        case 3:
          return _context8.abrupt("return", _context8.sent);
        case 4:
        case "end":
          return _context8.stop();
      }
    }, _callee8);
  }));
  return _mnemonicToHDSeed.apply(this, arguments);
}
exports.mnemonicToHDSeed = mnemonicToHDSeed;
/**
 * Validate Mnemonic
 * @param mnemonicArray mnemonic array
 * @param password mnemonic password
 * @returns true for valid mnemonic
 */
function mnemonicValidate(_x15, _x16) {
  return _mnemonicValidate.apply(this, arguments);
}
function _mnemonicValidate() {
  _mnemonicValidate = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(mnemonicArray, password) {
    var _iterator3, _step3, word;
    return _regeneratorRuntime().wrap(function _callee9$(_context9) {
      while (1) switch (_context9.prev = _context9.next) {
        case 0:
          // Normalize
          mnemonicArray = normalizeMnemonic(mnemonicArray);
          // Validate mnemonic words
          _iterator3 = _createForOfIteratorHelper(mnemonicArray);
          _context9.prev = 2;
          _iterator3.s();
        case 4:
          if ((_step3 = _iterator3.n()).done) {
            _context9.next = 10;
            break;
          }
          word = _step3.value;
          if (!(wordlist_1.wordlist.indexOf(word) < 0)) {
            _context9.next = 8;
            break;
          }
          return _context9.abrupt("return", false);
        case 8:
          _context9.next = 4;
          break;
        case 10:
          _context9.next = 15;
          break;
        case 12:
          _context9.prev = 12;
          _context9.t0 = _context9["catch"](2);
          _iterator3.e(_context9.t0);
        case 15:
          _context9.prev = 15;
          _iterator3.f();
          return _context9.finish(15);
        case 18:
          if (!(password && password.length > 0)) {
            _context9.next = 23;
            break;
          }
          _context9.next = 21;
          return isPasswordNeeded(mnemonicArray);
        case 21:
          if (_context9.sent) {
            _context9.next = 23;
            break;
          }
          return _context9.abrupt("return", false);
        case 23:
          _context9.t1 = isBasicSeed;
          _context9.next = 26;
          return mnemonicToEntropy(mnemonicArray, password);
        case 26:
          _context9.t2 = _context9.sent;
          _context9.next = 29;
          return (0, _context9.t1)(_context9.t2);
        case 29:
          return _context9.abrupt("return", _context9.sent);
        case 30:
        case "end":
          return _context9.stop();
      }
    }, _callee9, null, [[2, 12, 15, 18]]);
  }));
  return _mnemonicValidate.apply(this, arguments);
}
exports.mnemonicValidate = mnemonicValidate;
/**
 * Generate new Mnemonic
 * @param wordsCount number of words to generate
 * @param password mnemonic password
 * @returns
 */
function mnemonicNew() {
  return _mnemonicNew.apply(this, arguments);
}
function _mnemonicNew() {
  _mnemonicNew = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {
    var wordsCount,
      password,
      mnemonicArray,
      i,
      ind,
      _args10 = arguments;
    return _regeneratorRuntime().wrap(function _callee10$(_context10) {
      while (1) switch (_context10.prev = _context10.next) {
        case 0:
          wordsCount = _args10.length > 0 && _args10[0] !== undefined ? _args10[0] : 24;
          password = _args10.length > 1 ? _args10[1] : undefined;
          // https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/tonlib/tonlib/keys/Mnemonic.cpp#L159
          mnemonicArray = [];
        case 3:
          if (!true) {
            _context10.next = 30;
            break;
          }
          // Regenerate new mnemonics
          mnemonicArray = [];
          i = 0;
        case 6:
          if (!(i < wordsCount)) {
            _context10.next = 14;
            break;
          }
          _context10.next = 9;
          return (0, getSecureRandom_1.getSecureRandomNumber)(0, wordlist_1.wordlist.length);
        case 9:
          ind = _context10.sent;
          mnemonicArray.push(wordlist_1.wordlist[ind]);
        case 11:
          i++;
          _context10.next = 6;
          break;
        case 14:
          if (!(password && password.length > 0)) {
            _context10.next = 19;
            break;
          }
          _context10.next = 17;
          return isPasswordNeeded(mnemonicArray);
        case 17:
          if (_context10.sent) {
            _context10.next = 19;
            break;
          }
          return _context10.abrupt("continue", 3);
        case 19:
          _context10.t0 = isBasicSeed;
          _context10.next = 22;
          return mnemonicToEntropy(mnemonicArray, password);
        case 22:
          _context10.t1 = _context10.sent;
          _context10.next = 25;
          return (0, _context10.t0)(_context10.t1);
        case 25:
          if (_context10.sent) {
            _context10.next = 27;
            break;
          }
          return _context10.abrupt("continue", 3);
        case 27:
          return _context10.abrupt("break", 30);
        case 30:
          return _context10.abrupt("return", mnemonicArray);
        case 31:
        case "end":
          return _context10.stop();
      }
    }, _callee10);
  }));
  return _mnemonicNew.apply(this, arguments);
}
exports.mnemonicNew = mnemonicNew;
/**
 * Converts bytes to mnemonics array (could be invalid for TON)
 * @param src source buffer
 * @param wordsCount number of words
 */
function bytesToMnemonicIndexes(src, wordsCount) {
  var bits = (0, binary_1.bytesToBits)(src);
  var indexes = [];
  for (var i = 0; i < wordsCount; i++) {
    var sl = bits.slice(i * 11, i * 11 + 11);
    indexes.push(parseInt(sl, 2));
  }
  return indexes;
}
exports.bytesToMnemonicIndexes = bytesToMnemonicIndexes;
function bytesToMnemonics(src, wordsCount) {
  var mnemonics = bytesToMnemonicIndexes(src, wordsCount);
  var res = [];
  var _iterator = _createForOfIteratorHelper(mnemonics),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var m = _step.value;
      res.push(wordlist_1.wordlist[m]);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return res;
}
exports.bytesToMnemonics = bytesToMnemonics;
/**
 * Converts mnemonics indexes to buffer with zero padding in the end
 * @param src source indexes
 * @returns Buffer
 */
function mnemonicIndexesToBytes(src) {
  var res = '';
  var _iterator2 = _createForOfIteratorHelper(src),
    _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var s = _step2.value;
      if (!Number.isSafeInteger(s)) {
        throw Error('Invalid input');
      }
      if (s < 0 || s >= 2028) {
        throw Error('Invalid input');
      }
      res += (0, binary_1.lpad)(s.toString(2), '0', 11);
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  while (res.length % 8 !== 0) {
    res = res + '0';
  }
  return (0, binary_1.bitsToBytes)(res);
}
exports.mnemonicIndexesToBytes = mnemonicIndexesToBytes;
/**
 * Generates deterministically mnemonics
 * @param seed
 * @param wordsCount
 * @param password
 */
function mnemonicFromRandomSeed(_x17) {
  return _mnemonicFromRandomSeed.apply(this, arguments);
}
function _mnemonicFromRandomSeed() {
  _mnemonicFromRandomSeed = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(seed) {
    var wordsCount,
      password,
      bytesLength,
      currentSeed,
      entropy,
      mnemonics,
      _args11 = arguments;
    return _regeneratorRuntime().wrap(function _callee11$(_context11) {
      while (1) switch (_context11.prev = _context11.next) {
        case 0:
          wordsCount = _args11.length > 1 && _args11[1] !== undefined ? _args11[1] : 24;
          password = _args11.length > 2 ? _args11[2] : undefined;
          bytesLength = Math.ceil(wordsCount * 11 / 8);
          currentSeed = seed;
        case 4:
          if (!true) {
            _context11.next = 16;
            break;
          }
          _context11.next = 7;
          return (0, pbkdf2_sha512_1.pbkdf2_sha512)(currentSeed, 'TON mnemonic seed', Math.max(1, Math.floor(PBKDF_ITERATIONS / 256)), bytesLength);
        case 7:
          entropy = _context11.sent;
          // Create mnemonics
          mnemonics = bytesToMnemonics(entropy, wordsCount); // Check if mnemonics are valid
          _context11.next = 11;
          return mnemonicValidate(mnemonics, password);
        case 11:
          if (!_context11.sent) {
            _context11.next = 13;
            break;
          }
          return _context11.abrupt("return", mnemonics);
        case 13:
          currentSeed = entropy;
          _context11.next = 4;
          break;
        case 16:
        case "end":
          return _context11.stop();
      }
    }, _callee11);
  }));
  return _mnemonicFromRandomSeed.apply(this, arguments);
}
exports.mnemonicFromRandomSeed = mnemonicFromRandomSeed;

}).call(this)}).call(this,require("buffer").Buffer)
},{"../primitives/getSecureRandom":98,"../primitives/hmac_sha512":99,"../primitives/pbkdf2_sha512":101,"../utils/binary":104,"./wordlist":94,"buffer":196,"tweetnacl":207}],94:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wordlist = void 0;
var EN = ['abandon', 'ability', 'able', 'about', 'above', 'absent', 'absorb', 'abstract', 'absurd', 'abuse', 'access', 'accident', 'account', 'accuse', 'achieve', 'acid', 'acoustic', 'acquire', 'across', 'act', 'action', 'actor', 'actress', 'actual', 'adapt', 'add', 'addict', 'address', 'adjust', 'admit', 'adult', 'advance', 'advice', 'aerobic', 'affair', 'afford', 'afraid', 'again', 'age', 'agent', 'agree', 'ahead', 'aim', 'air', 'airport', 'aisle', 'alarm', 'album', 'alcohol', 'alert', 'alien', 'all', 'alley', 'allow', 'almost', 'alone', 'alpha', 'already', 'also', 'alter', 'always', 'amateur', 'amazing', 'among', 'amount', 'amused', 'analyst', 'anchor', 'ancient', 'anger', 'angle', 'angry', 'animal', 'ankle', 'announce', 'annual', 'another', 'answer', 'antenna', 'antique', 'anxiety', 'any', 'apart', 'apology', 'appear', 'apple', 'approve', 'april', 'arch', 'arctic', 'area', 'arena', 'argue', 'arm', 'armed', 'armor', 'army', 'around', 'arrange', 'arrest', 'arrive', 'arrow', 'art', 'artefact', 'artist', 'artwork', 'ask', 'aspect', 'assault', 'asset', 'assist', 'assume', 'asthma', 'athlete', 'atom', 'attack', 'attend', 'attitude', 'attract', 'auction', 'audit', 'august', 'aunt', 'author', 'auto', 'autumn', 'average', 'avocado', 'avoid', 'awake', 'aware', 'away', 'awesome', 'awful', 'awkward', 'axis', 'baby', 'bachelor', 'bacon', 'badge', 'bag', 'balance', 'balcony', 'ball', 'bamboo', 'banana', 'banner', 'bar', 'barely', 'bargain', 'barrel', 'base', 'basic', 'basket', 'battle', 'beach', 'bean', 'beauty', 'because', 'become', 'beef', 'before', 'begin', 'behave', 'behind', 'believe', 'below', 'belt', 'bench', 'benefit', 'best', 'betray', 'better', 'between', 'beyond', 'bicycle', 'bid', 'bike', 'bind', 'biology', 'bird', 'birth', 'bitter', 'black', 'blade', 'blame', 'blanket', 'blast', 'bleak', 'bless', 'blind', 'blood', 'blossom', 'blouse', 'blue', 'blur', 'blush', 'board', 'boat', 'body', 'boil', 'bomb', 'bone', 'bonus', 'book', 'boost', 'border', 'boring', 'borrow', 'boss', 'bottom', 'bounce', 'box', 'boy', 'bracket', 'brain', 'brand', 'brass', 'brave', 'bread', 'breeze', 'brick', 'bridge', 'brief', 'bright', 'bring', 'brisk', 'broccoli', 'broken', 'bronze', 'broom', 'brother', 'brown', 'brush', 'bubble', 'buddy', 'budget', 'buffalo', 'build', 'bulb', 'bulk', 'bullet', 'bundle', 'bunker', 'burden', 'burger', 'burst', 'bus', 'business', 'busy', 'butter', 'buyer', 'buzz', 'cabbage', 'cabin', 'cable', 'cactus', 'cage', 'cake', 'call', 'calm', 'camera', 'camp', 'can', 'canal', 'cancel', 'candy', 'cannon', 'canoe', 'canvas', 'canyon', 'capable', 'capital', 'captain', 'car', 'carbon', 'card', 'cargo', 'carpet', 'carry', 'cart', 'case', 'cash', 'casino', 'castle', 'casual', 'cat', 'catalog', 'catch', 'category', 'cattle', 'caught', 'cause', 'caution', 'cave', 'ceiling', 'celery', 'cement', 'census', 'century', 'cereal', 'certain', 'chair', 'chalk', 'champion', 'change', 'chaos', 'chapter', 'charge', 'chase', 'chat', 'cheap', 'check', 'cheese', 'chef', 'cherry', 'chest', 'chicken', 'chief', 'child', 'chimney', 'choice', 'choose', 'chronic', 'chuckle', 'chunk', 'churn', 'cigar', 'cinnamon', 'circle', 'citizen', 'city', 'civil', 'claim', 'clap', 'clarify', 'claw', 'clay', 'clean', 'clerk', 'clever', 'click', 'client', 'cliff', 'climb', 'clinic', 'clip', 'clock', 'clog', 'close', 'cloth', 'cloud', 'clown', 'club', 'clump', 'cluster', 'clutch', 'coach', 'coast', 'coconut', 'code', 'coffee', 'coil', 'coin', 'collect', 'color', 'column', 'combine', 'come', 'comfort', 'comic', 'common', 'company', 'concert', 'conduct', 'confirm', 'congress', 'connect', 'consider', 'control', 'convince', 'cook', 'cool', 'copper', 'copy', 'coral', 'core', 'corn', 'correct', 'cost', 'cotton', 'couch', 'country', 'couple', 'course', 'cousin', 'cover', 'coyote', 'crack', 'cradle', 'craft', 'cram', 'crane', 'crash', 'crater', 'crawl', 'crazy', 'cream', 'credit', 'creek', 'crew', 'cricket', 'crime', 'crisp', 'critic', 'crop', 'cross', 'crouch', 'crowd', 'crucial', 'cruel', 'cruise', 'crumble', 'crunch', 'crush', 'cry', 'crystal', 'cube', 'culture', 'cup', 'cupboard', 'curious', 'current', 'curtain', 'curve', 'cushion', 'custom', 'cute', 'cycle', 'dad', 'damage', 'damp', 'dance', 'danger', 'daring', 'dash', 'daughter', 'dawn', 'day', 'deal', 'debate', 'debris', 'decade', 'december', 'decide', 'decline', 'decorate', 'decrease', 'deer', 'defense', 'define', 'defy', 'degree', 'delay', 'deliver', 'demand', 'demise', 'denial', 'dentist', 'deny', 'depart', 'depend', 'deposit', 'depth', 'deputy', 'derive', 'describe', 'desert', 'design', 'desk', 'despair', 'destroy', 'detail', 'detect', 'develop', 'device', 'devote', 'diagram', 'dial', 'diamond', 'diary', 'dice', 'diesel', 'diet', 'differ', 'digital', 'dignity', 'dilemma', 'dinner', 'dinosaur', 'direct', 'dirt', 'disagree', 'discover', 'disease', 'dish', 'dismiss', 'disorder', 'display', 'distance', 'divert', 'divide', 'divorce', 'dizzy', 'doctor', 'document', 'dog', 'doll', 'dolphin', 'domain', 'donate', 'donkey', 'donor', 'door', 'dose', 'double', 'dove', 'draft', 'dragon', 'drama', 'drastic', 'draw', 'dream', 'dress', 'drift', 'drill', 'drink', 'drip', 'drive', 'drop', 'drum', 'dry', 'duck', 'dumb', 'dune', 'during', 'dust', 'dutch', 'duty', 'dwarf', 'dynamic', 'eager', 'eagle', 'early', 'earn', 'earth', 'easily', 'east', 'easy', 'echo', 'ecology', 'economy', 'edge', 'edit', 'educate', 'effort', 'egg', 'eight', 'either', 'elbow', 'elder', 'electric', 'elegant', 'element', 'elephant', 'elevator', 'elite', 'else', 'embark', 'embody', 'embrace', 'emerge', 'emotion', 'employ', 'empower', 'empty', 'enable', 'enact', 'end', 'endless', 'endorse', 'enemy', 'energy', 'enforce', 'engage', 'engine', 'enhance', 'enjoy', 'enlist', 'enough', 'enrich', 'enroll', 'ensure', 'enter', 'entire', 'entry', 'envelope', 'episode', 'equal', 'equip', 'era', 'erase', 'erode', 'erosion', 'error', 'erupt', 'escape', 'essay', 'essence', 'estate', 'eternal', 'ethics', 'evidence', 'evil', 'evoke', 'evolve', 'exact', 'example', 'excess', 'exchange', 'excite', 'exclude', 'excuse', 'execute', 'exercise', 'exhaust', 'exhibit', 'exile', 'exist', 'exit', 'exotic', 'expand', 'expect', 'expire', 'explain', 'expose', 'express', 'extend', 'extra', 'eye', 'eyebrow', 'fabric', 'face', 'faculty', 'fade', 'faint', 'faith', 'fall', 'false', 'fame', 'family', 'famous', 'fan', 'fancy', 'fantasy', 'farm', 'fashion', 'fat', 'fatal', 'father', 'fatigue', 'fault', 'favorite', 'feature', 'february', 'federal', 'fee', 'feed', 'feel', 'female', 'fence', 'festival', 'fetch', 'fever', 'few', 'fiber', 'fiction', 'field', 'figure', 'file', 'film', 'filter', 'final', 'find', 'fine', 'finger', 'finish', 'fire', 'firm', 'first', 'fiscal', 'fish', 'fit', 'fitness', 'fix', 'flag', 'flame', 'flash', 'flat', 'flavor', 'flee', 'flight', 'flip', 'float', 'flock', 'floor', 'flower', 'fluid', 'flush', 'fly', 'foam', 'focus', 'fog', 'foil', 'fold', 'follow', 'food', 'foot', 'force', 'forest', 'forget', 'fork', 'fortune', 'forum', 'forward', 'fossil', 'foster', 'found', 'fox', 'fragile', 'frame', 'frequent', 'fresh', 'friend', 'fringe', 'frog', 'front', 'frost', 'frown', 'frozen', 'fruit', 'fuel', 'fun', 'funny', 'furnace', 'fury', 'future', 'gadget', 'gain', 'galaxy', 'gallery', 'game', 'gap', 'garage', 'garbage', 'garden', 'garlic', 'garment', 'gas', 'gasp', 'gate', 'gather', 'gauge', 'gaze', 'general', 'genius', 'genre', 'gentle', 'genuine', 'gesture', 'ghost', 'giant', 'gift', 'giggle', 'ginger', 'giraffe', 'girl', 'give', 'glad', 'glance', 'glare', 'glass', 'glide', 'glimpse', 'globe', 'gloom', 'glory', 'glove', 'glow', 'glue', 'goat', 'goddess', 'gold', 'good', 'goose', 'gorilla', 'gospel', 'gossip', 'govern', 'gown', 'grab', 'grace', 'grain', 'grant', 'grape', 'grass', 'gravity', 'great', 'green', 'grid', 'grief', 'grit', 'grocery', 'group', 'grow', 'grunt', 'guard', 'guess', 'guide', 'guilt', 'guitar', 'gun', 'gym', 'habit', 'hair', 'half', 'hammer', 'hamster', 'hand', 'happy', 'harbor', 'hard', 'harsh', 'harvest', 'hat', 'have', 'hawk', 'hazard', 'head', 'health', 'heart', 'heavy', 'hedgehog', 'height', 'hello', 'helmet', 'help', 'hen', 'hero', 'hidden', 'high', 'hill', 'hint', 'hip', 'hire', 'history', 'hobby', 'hockey', 'hold', 'hole', 'holiday', 'hollow', 'home', 'honey', 'hood', 'hope', 'horn', 'horror', 'horse', 'hospital', 'host', 'hotel', 'hour', 'hover', 'hub', 'huge', 'human', 'humble', 'humor', 'hundred', 'hungry', 'hunt', 'hurdle', 'hurry', 'hurt', 'husband', 'hybrid', 'ice', 'icon', 'idea', 'identify', 'idle', 'ignore', 'ill', 'illegal', 'illness', 'image', 'imitate', 'immense', 'immune', 'impact', 'impose', 'improve', 'impulse', 'inch', 'include', 'income', 'increase', 'index', 'indicate', 'indoor', 'industry', 'infant', 'inflict', 'inform', 'inhale', 'inherit', 'initial', 'inject', 'injury', 'inmate', 'inner', 'innocent', 'input', 'inquiry', 'insane', 'insect', 'inside', 'inspire', 'install', 'intact', 'interest', 'into', 'invest', 'invite', 'involve', 'iron', 'island', 'isolate', 'issue', 'item', 'ivory', 'jacket', 'jaguar', 'jar', 'jazz', 'jealous', 'jeans', 'jelly', 'jewel', 'job', 'join', 'joke', 'journey', 'joy', 'judge', 'juice', 'jump', 'jungle', 'junior', 'junk', 'just', 'kangaroo', 'keen', 'keep', 'ketchup', 'key', 'kick', 'kid', 'kidney', 'kind', 'kingdom', 'kiss', 'kit', 'kitchen', 'kite', 'kitten', 'kiwi', 'knee', 'knife', 'knock', 'know', 'lab', 'label', 'labor', 'ladder', 'lady', 'lake', 'lamp', 'language', 'laptop', 'large', 'later', 'latin', 'laugh', 'laundry', 'lava', 'law', 'lawn', 'lawsuit', 'layer', 'lazy', 'leader', 'leaf', 'learn', 'leave', 'lecture', 'left', 'leg', 'legal', 'legend', 'leisure', 'lemon', 'lend', 'length', 'lens', 'leopard', 'lesson', 'letter', 'level', 'liar', 'liberty', 'library', 'license', 'life', 'lift', 'light', 'like', 'limb', 'limit', 'link', 'lion', 'liquid', 'list', 'little', 'live', 'lizard', 'load', 'loan', 'lobster', 'local', 'lock', 'logic', 'lonely', 'long', 'loop', 'lottery', 'loud', 'lounge', 'love', 'loyal', 'lucky', 'luggage', 'lumber', 'lunar', 'lunch', 'luxury', 'lyrics', 'machine', 'mad', 'magic', 'magnet', 'maid', 'mail', 'main', 'major', 'make', 'mammal', 'man', 'manage', 'mandate', 'mango', 'mansion', 'manual', 'maple', 'marble', 'march', 'margin', 'marine', 'market', 'marriage', 'mask', 'mass', 'master', 'match', 'material', 'math', 'matrix', 'matter', 'maximum', 'maze', 'meadow', 'mean', 'measure', 'meat', 'mechanic', 'medal', 'media', 'melody', 'melt', 'member', 'memory', 'mention', 'menu', 'mercy', 'merge', 'merit', 'merry', 'mesh', 'message', 'metal', 'method', 'middle', 'midnight', 'milk', 'million', 'mimic', 'mind', 'minimum', 'minor', 'minute', 'miracle', 'mirror', 'misery', 'miss', 'mistake', 'mix', 'mixed', 'mixture', 'mobile', 'model', 'modify', 'mom', 'moment', 'monitor', 'monkey', 'monster', 'month', 'moon', 'moral', 'more', 'morning', 'mosquito', 'mother', 'motion', 'motor', 'mountain', 'mouse', 'move', 'movie', 'much', 'muffin', 'mule', 'multiply', 'muscle', 'museum', 'mushroom', 'music', 'must', 'mutual', 'myself', 'mystery', 'myth', 'naive', 'name', 'napkin', 'narrow', 'nasty', 'nation', 'nature', 'near', 'neck', 'need', 'negative', 'neglect', 'neither', 'nephew', 'nerve', 'nest', 'net', 'network', 'neutral', 'never', 'news', 'next', 'nice', 'night', 'noble', 'noise', 'nominee', 'noodle', 'normal', 'north', 'nose', 'notable', 'note', 'nothing', 'notice', 'novel', 'now', 'nuclear', 'number', 'nurse', 'nut', 'oak', 'obey', 'object', 'oblige', 'obscure', 'observe', 'obtain', 'obvious', 'occur', 'ocean', 'october', 'odor', 'off', 'offer', 'office', 'often', 'oil', 'okay', 'old', 'olive', 'olympic', 'omit', 'once', 'one', 'onion', 'online', 'only', 'open', 'opera', 'opinion', 'oppose', 'option', 'orange', 'orbit', 'orchard', 'order', 'ordinary', 'organ', 'orient', 'original', 'orphan', 'ostrich', 'other', 'outdoor', 'outer', 'output', 'outside', 'oval', 'oven', 'over', 'own', 'owner', 'oxygen', 'oyster', 'ozone', 'pact', 'paddle', 'page', 'pair', 'palace', 'palm', 'panda', 'panel', 'panic', 'panther', 'paper', 'parade', 'parent', 'park', 'parrot', 'party', 'pass', 'patch', 'path', 'patient', 'patrol', 'pattern', 'pause', 'pave', 'payment', 'peace', 'peanut', 'pear', 'peasant', 'pelican', 'pen', 'penalty', 'pencil', 'people', 'pepper', 'perfect', 'permit', 'person', 'pet', 'phone', 'photo', 'phrase', 'physical', 'piano', 'picnic', 'picture', 'piece', 'pig', 'pigeon', 'pill', 'pilot', 'pink', 'pioneer', 'pipe', 'pistol', 'pitch', 'pizza', 'place', 'planet', 'plastic', 'plate', 'play', 'please', 'pledge', 'pluck', 'plug', 'plunge', 'poem', 'poet', 'point', 'polar', 'pole', 'police', 'pond', 'pony', 'pool', 'popular', 'portion', 'position', 'possible', 'post', 'potato', 'pottery', 'poverty', 'powder', 'power', 'practice', 'praise', 'predict', 'prefer', 'prepare', 'present', 'pretty', 'prevent', 'price', 'pride', 'primary', 'print', 'priority', 'prison', 'private', 'prize', 'problem', 'process', 'produce', 'profit', 'program', 'project', 'promote', 'proof', 'property', 'prosper', 'protect', 'proud', 'provide', 'public', 'pudding', 'pull', 'pulp', 'pulse', 'pumpkin', 'punch', 'pupil', 'puppy', 'purchase', 'purity', 'purpose', 'purse', 'push', 'put', 'puzzle', 'pyramid', 'quality', 'quantum', 'quarter', 'question', 'quick', 'quit', 'quiz', 'quote', 'rabbit', 'raccoon', 'race', 'rack', 'radar', 'radio', 'rail', 'rain', 'raise', 'rally', 'ramp', 'ranch', 'random', 'range', 'rapid', 'rare', 'rate', 'rather', 'raven', 'raw', 'razor', 'ready', 'real', 'reason', 'rebel', 'rebuild', 'recall', 'receive', 'recipe', 'record', 'recycle', 'reduce', 'reflect', 'reform', 'refuse', 'region', 'regret', 'regular', 'reject', 'relax', 'release', 'relief', 'rely', 'remain', 'remember', 'remind', 'remove', 'render', 'renew', 'rent', 'reopen', 'repair', 'repeat', 'replace', 'report', 'require', 'rescue', 'resemble', 'resist', 'resource', 'response', 'result', 'retire', 'retreat', 'return', 'reunion', 'reveal', 'review', 'reward', 'rhythm', 'rib', 'ribbon', 'rice', 'rich', 'ride', 'ridge', 'rifle', 'right', 'rigid', 'ring', 'riot', 'ripple', 'risk', 'ritual', 'rival', 'river', 'road', 'roast', 'robot', 'robust', 'rocket', 'romance', 'roof', 'rookie', 'room', 'rose', 'rotate', 'rough', 'round', 'route', 'royal', 'rubber', 'rude', 'rug', 'rule', 'run', 'runway', 'rural', 'sad', 'saddle', 'sadness', 'safe', 'sail', 'salad', 'salmon', 'salon', 'salt', 'salute', 'same', 'sample', 'sand', 'satisfy', 'satoshi', 'sauce', 'sausage', 'save', 'say', 'scale', 'scan', 'scare', 'scatter', 'scene', 'scheme', 'school', 'science', 'scissors', 'scorpion', 'scout', 'scrap', 'screen', 'script', 'scrub', 'sea', 'search', 'season', 'seat', 'second', 'secret', 'section', 'security', 'seed', 'seek', 'segment', 'select', 'sell', 'seminar', 'senior', 'sense', 'sentence', 'series', 'service', 'session', 'settle', 'setup', 'seven', 'shadow', 'shaft', 'shallow', 'share', 'shed', 'shell', 'sheriff', 'shield', 'shift', 'shine', 'ship', 'shiver', 'shock', 'shoe', 'shoot', 'shop', 'short', 'shoulder', 'shove', 'shrimp', 'shrug', 'shuffle', 'shy', 'sibling', 'sick', 'side', 'siege', 'sight', 'sign', 'silent', 'silk', 'silly', 'silver', 'similar', 'simple', 'since', 'sing', 'siren', 'sister', 'situate', 'six', 'size', 'skate', 'sketch', 'ski', 'skill', 'skin', 'skirt', 'skull', 'slab', 'slam', 'sleep', 'slender', 'slice', 'slide', 'slight', 'slim', 'slogan', 'slot', 'slow', 'slush', 'small', 'smart', 'smile', 'smoke', 'smooth', 'snack', 'snake', 'snap', 'sniff', 'snow', 'soap', 'soccer', 'social', 'sock', 'soda', 'soft', 'solar', 'soldier', 'solid', 'solution', 'solve', 'someone', 'song', 'soon', 'sorry', 'sort', 'soul', 'sound', 'soup', 'source', 'south', 'space', 'spare', 'spatial', 'spawn', 'speak', 'special', 'speed', 'spell', 'spend', 'sphere', 'spice', 'spider', 'spike', 'spin', 'spirit', 'split', 'spoil', 'sponsor', 'spoon', 'sport', 'spot', 'spray', 'spread', 'spring', 'spy', 'square', 'squeeze', 'squirrel', 'stable', 'stadium', 'staff', 'stage', 'stairs', 'stamp', 'stand', 'start', 'state', 'stay', 'steak', 'steel', 'stem', 'step', 'stereo', 'stick', 'still', 'sting', 'stock', 'stomach', 'stone', 'stool', 'story', 'stove', 'strategy', 'street', 'strike', 'strong', 'struggle', 'student', 'stuff', 'stumble', 'style', 'subject', 'submit', 'subway', 'success', 'such', 'sudden', 'suffer', 'sugar', 'suggest', 'suit', 'summer', 'sun', 'sunny', 'sunset', 'super', 'supply', 'supreme', 'sure', 'surface', 'surge', 'surprise', 'surround', 'survey', 'suspect', 'sustain', 'swallow', 'swamp', 'swap', 'swarm', 'swear', 'sweet', 'swift', 'swim', 'swing', 'switch', 'sword', 'symbol', 'symptom', 'syrup', 'system', 'table', 'tackle', 'tag', 'tail', 'talent', 'talk', 'tank', 'tape', 'target', 'task', 'taste', 'tattoo', 'taxi', 'teach', 'team', 'tell', 'ten', 'tenant', 'tennis', 'tent', 'term', 'test', 'text', 'thank', 'that', 'theme', 'then', 'theory', 'there', 'they', 'thing', 'this', 'thought', 'three', 'thrive', 'throw', 'thumb', 'thunder', 'ticket', 'tide', 'tiger', 'tilt', 'timber', 'time', 'tiny', 'tip', 'tired', 'tissue', 'title', 'toast', 'tobacco', 'today', 'toddler', 'toe', 'together', 'toilet', 'token', 'tomato', 'tomorrow', 'tone', 'tongue', 'tonight', 'tool', 'tooth', 'top', 'topic', 'topple', 'torch', 'tornado', 'tortoise', 'toss', 'total', 'tourist', 'toward', 'tower', 'town', 'toy', 'track', 'trade', 'traffic', 'tragic', 'train', 'transfer', 'trap', 'trash', 'travel', 'tray', 'treat', 'tree', 'trend', 'trial', 'tribe', 'trick', 'trigger', 'trim', 'trip', 'trophy', 'trouble', 'truck', 'true', 'truly', 'trumpet', 'trust', 'truth', 'try', 'tube', 'tuition', 'tumble', 'tuna', 'tunnel', 'turkey', 'turn', 'turtle', 'twelve', 'twenty', 'twice', 'twin', 'twist', 'two', 'type', 'typical', 'ugly', 'umbrella', 'unable', 'unaware', 'uncle', 'uncover', 'under', 'undo', 'unfair', 'unfold', 'unhappy', 'uniform', 'unique', 'unit', 'universe', 'unknown', 'unlock', 'until', 'unusual', 'unveil', 'update', 'upgrade', 'uphold', 'upon', 'upper', 'upset', 'urban', 'urge', 'usage', 'use', 'used', 'useful', 'useless', 'usual', 'utility', 'vacant', 'vacuum', 'vague', 'valid', 'valley', 'valve', 'van', 'vanish', 'vapor', 'various', 'vast', 'vault', 'vehicle', 'velvet', 'vendor', 'venture', 'venue', 'verb', 'verify', 'version', 'very', 'vessel', 'veteran', 'viable', 'vibrant', 'vicious', 'victory', 'video', 'view', 'village', 'vintage', 'violin', 'virtual', 'virus', 'visa', 'visit', 'visual', 'vital', 'vivid', 'vocal', 'voice', 'void', 'volcano', 'volume', 'vote', 'voyage', 'wage', 'wagon', 'wait', 'walk', 'wall', 'walnut', 'want', 'warfare', 'warm', 'warrior', 'wash', 'wasp', 'waste', 'water', 'wave', 'way', 'wealth', 'weapon', 'wear', 'weasel', 'weather', 'web', 'wedding', 'weekend', 'weird', 'welcome', 'west', 'wet', 'whale', 'what', 'wheat', 'wheel', 'when', 'where', 'whip', 'whisper', 'wide', 'width', 'wife', 'wild', 'will', 'win', 'window', 'wine', 'wing', 'wink', 'winner', 'winter', 'wire', 'wisdom', 'wise', 'wish', 'witness', 'wolf', 'woman', 'wonder', 'wood', 'wool', 'word', 'work', 'world', 'worry', 'worth', 'wrap', 'wreck', 'wrestle', 'wrist', 'write', 'wrong', 'yard', 'year', 'yellow', 'you', 'young', 'youth', 'zebra', 'zero', 'zone', 'zoo'];
exports.wordlist = EN;

},{}],95:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.newSecurePassphrase = void 0;
var __1 = require("..");
function newSecurePassphrase() {
  return _newSecurePassphrase.apply(this, arguments);
}
function _newSecurePassphrase() {
  _newSecurePassphrase = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
    var size,
      _args = arguments;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          size = _args.length > 0 && _args[0] !== undefined ? _args[0] : 6;
          _context.next = 3;
          return (0, __1.newSecureWords)(size);
        case 3:
          return _context.abrupt("return", _context.sent.join('-'));
        case 4:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return _newSecurePassphrase.apply(this, arguments);
}
exports.newSecurePassphrase = newSecurePassphrase;

},{"..":92}],96:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.newSecureWords = void 0;
var getSecureRandom_1 = require("../primitives/getSecureRandom");
var wordlist_1 = require("./wordlist");
function newSecureWords() {
  return _newSecureWords.apply(this, arguments);
}
function _newSecureWords() {
  _newSecureWords = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
    var size,
      words,
      i,
      _args = arguments;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          size = _args.length > 0 && _args[0] !== undefined ? _args[0] : 6;
          words = [];
          i = 0;
        case 3:
          if (!(i < size)) {
            _context.next = 13;
            break;
          }
          _context.t0 = words;
          _context.next = 7;
          return (0, getSecureRandom_1.getSecureRandomNumber)(0, wordlist_1.wordlist.length);
        case 7:
          _context.t1 = _context.sent;
          _context.t2 = wordlist_1.wordlist[_context.t1];
          _context.t0.push.call(_context.t0, _context.t2);
        case 10:
          i++;
          _context.next = 3;
          break;
        case 13:
          return _context.abrupt("return", words);
        case 14:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return _newSecureWords.apply(this, arguments);
}
exports.newSecureWords = newSecureWords;

},{"../primitives/getSecureRandom":98,"./wordlist":97}],97:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wordlist = void 0;
// Source https://www.eff.org/dice
exports.wordlist = ['abacus', 'abdomen', 'abdominal', 'abide', 'abiding', 'ability', 'ablaze', 'able', 'abnormal', 'abrasion', 'abrasive', 'abreast', 'abridge', 'abroad', 'abruptly', 'absence', 'absentee', 'absently', 'absinthe', 'absolute', 'absolve', 'abstain', 'abstract', 'absurd', 'accent', 'acclaim', 'acclimate', 'accompany', 'account', 'accuracy', 'accurate', 'accustom', 'acetone', 'achiness', 'aching', 'acid', 'acorn', 'acquaint', 'acquire', 'acre', 'acrobat', 'acronym', 'acting', 'action', 'activate', 'activator', 'active', 'activism', 'activist', 'activity', 'actress', 'acts', 'acutely', 'acuteness', 'aeration', 'aerobics', 'aerosol', 'aerospace', 'afar', 'affair', 'affected', 'affecting', 'affection', 'affidavit', 'affiliate', 'affirm', 'affix', 'afflicted', 'affluent', 'afford', 'affront', 'aflame', 'afloat', 'aflutter', 'afoot', 'afraid', 'afterglow', 'afterlife', 'aftermath', 'aftermost', 'afternoon', 'aged', 'ageless', 'agency', 'agenda', 'agent', 'aggregate', 'aghast', 'agile', 'agility', 'aging', 'agnostic', 'agonize', 'agonizing', 'agony', 'agreeable', 'agreeably', 'agreed', 'agreeing', 'agreement', 'aground', 'ahead', 'ahoy', 'aide', 'aids', 'aim', 'ajar', 'alabaster', 'alarm', 'albatross', 'album', 'alfalfa', 'algebra', 'algorithm', 'alias', 'alibi', 'alienable', 'alienate', 'aliens', 'alike', 'alive', 'alkaline', 'alkalize', 'almanac', 'almighty', 'almost', 'aloe', 'aloft', 'aloha', 'alone', 'alongside', 'aloof', 'alphabet', 'alright', 'although', 'altitude', 'alto', 'aluminum', 'alumni', 'always', 'amaretto', 'amaze', 'amazingly', 'amber', 'ambiance', 'ambiguity', 'ambiguous', 'ambition', 'ambitious', 'ambulance', 'ambush', 'amendable', 'amendment', 'amends', 'amenity', 'amiable', 'amicably', 'amid', 'amigo', 'amino', 'amiss', 'ammonia', 'ammonium', 'amnesty', 'amniotic', 'among', 'amount', 'amperage', 'ample', 'amplifier', 'amplify', 'amply', 'amuck', 'amulet', 'amusable', 'amused', 'amusement', 'amuser', 'amusing', 'anaconda', 'anaerobic', 'anagram', 'anatomist', 'anatomy', 'anchor', 'anchovy', 'ancient', 'android', 'anemia', 'anemic', 'aneurism', 'anew', 'angelfish', 'angelic', 'anger', 'angled', 'angler', 'angles', 'angling', 'angrily', 'angriness', 'anguished', 'angular', 'animal', 'animate', 'animating', 'animation', 'animator', 'anime', 'animosity', 'ankle', 'annex', 'annotate', 'announcer', 'annoying', 'annually', 'annuity', 'anointer', 'another', 'answering', 'antacid', 'antarctic', 'anteater', 'antelope', 'antennae', 'anthem', 'anthill', 'anthology', 'antibody', 'antics', 'antidote', 'antihero', 'antiquely', 'antiques', 'antiquity', 'antirust', 'antitoxic', 'antitrust', 'antiviral', 'antivirus', 'antler', 'antonym', 'antsy', 'anvil', 'anybody', 'anyhow', 'anymore', 'anyone', 'anyplace', 'anything', 'anytime', 'anyway', 'anywhere', 'aorta', 'apache', 'apostle', 'appealing', 'appear', 'appease', 'appeasing', 'appendage', 'appendix', 'appetite', 'appetizer', 'applaud', 'applause', 'apple', 'appliance', 'applicant', 'applied', 'apply', 'appointee', 'appraisal', 'appraiser', 'apprehend', 'approach', 'approval', 'approve', 'apricot', 'april', 'apron', 'aptitude', 'aptly', 'aqua', 'aqueduct', 'arbitrary', 'arbitrate', 'ardently', 'area', 'arena', 'arguable', 'arguably', 'argue', 'arise', 'armadillo', 'armband', 'armchair', 'armed', 'armful', 'armhole', 'arming', 'armless', 'armoire', 'armored', 'armory', 'armrest', 'army', 'aroma', 'arose', 'around', 'arousal', 'arrange', 'array', 'arrest', 'arrival', 'arrive', 'arrogance', 'arrogant', 'arson', 'art', 'ascend', 'ascension', 'ascent', 'ascertain', 'ashamed', 'ashen', 'ashes', 'ashy', 'aside', 'askew', 'asleep', 'asparagus', 'aspect', 'aspirate', 'aspire', 'aspirin', 'astonish', 'astound', 'astride', 'astrology', 'astronaut', 'astronomy', 'astute', 'atlantic', 'atlas', 'atom', 'atonable', 'atop', 'atrium', 'atrocious', 'atrophy', 'attach', 'attain', 'attempt', 'attendant', 'attendee', 'attention', 'attentive', 'attest', 'attic', 'attire', 'attitude', 'attractor', 'attribute', 'atypical', 'auction', 'audacious', 'audacity', 'audible', 'audibly', 'audience', 'audio', 'audition', 'augmented', 'august', 'authentic', 'author', 'autism', 'autistic', 'autograph', 'automaker', 'automated', 'automatic', 'autopilot', 'available', 'avalanche', 'avatar', 'avenge', 'avenging', 'avenue', 'average', 'aversion', 'avert', 'aviation', 'aviator', 'avid', 'avoid', 'await', 'awaken', 'award', 'aware', 'awhile', 'awkward', 'awning', 'awoke', 'awry', 'axis', 'babble', 'babbling', 'babied', 'baboon', 'backache', 'backboard', 'backboned', 'backdrop', 'backed', 'backer', 'backfield', 'backfire', 'backhand', 'backing', 'backlands', 'backlash', 'backless', 'backlight', 'backlit', 'backlog', 'backpack', 'backpedal', 'backrest', 'backroom', 'backshift', 'backside', 'backslid', 'backspace', 'backspin', 'backstab', 'backstage', 'backtalk', 'backtrack', 'backup', 'backward', 'backwash', 'backwater', 'backyard', 'bacon', 'bacteria', 'bacterium', 'badass', 'badge', 'badland', 'badly', 'badness', 'baffle', 'baffling', 'bagel', 'bagful', 'baggage', 'bagged', 'baggie', 'bagginess', 'bagging', 'baggy', 'bagpipe', 'baguette', 'baked', 'bakery', 'bakeshop', 'baking', 'balance', 'balancing', 'balcony', 'balmy', 'balsamic', 'bamboo', 'banana', 'banish', 'banister', 'banjo', 'bankable', 'bankbook', 'banked', 'banker', 'banking', 'banknote', 'bankroll', 'banner', 'bannister', 'banshee', 'banter', 'barbecue', 'barbed', 'barbell', 'barber', 'barcode', 'barge', 'bargraph', 'barista', 'baritone', 'barley', 'barmaid', 'barman', 'barn', 'barometer', 'barrack', 'barracuda', 'barrel', 'barrette', 'barricade', 'barrier', 'barstool', 'bartender', 'barterer', 'bash', 'basically', 'basics', 'basil', 'basin', 'basis', 'basket', 'batboy', 'batch', 'bath', 'baton', 'bats', 'battalion', 'battered', 'battering', 'battery', 'batting', 'battle', 'bauble', 'bazooka', 'blabber', 'bladder', 'blade', 'blah', 'blame', 'blaming', 'blanching', 'blandness', 'blank', 'blaspheme', 'blasphemy', 'blast', 'blatancy', 'blatantly', 'blazer', 'blazing', 'bleach', 'bleak', 'bleep', 'blemish', 'blend', 'bless', 'blighted', 'blimp', 'bling', 'blinked', 'blinker', 'blinking', 'blinks', 'blip', 'blissful', 'blitz', 'blizzard', 'bloated', 'bloating', 'blob', 'blog', 'bloomers', 'blooming', 'blooper', 'blot', 'blouse', 'blubber', 'bluff', 'bluish', 'blunderer', 'blunt', 'blurb', 'blurred', 'blurry', 'blurt', 'blush', 'blustery', 'boaster', 'boastful', 'boasting', 'boat', 'bobbed', 'bobbing', 'bobble', 'bobcat', 'bobsled', 'bobtail', 'bodacious', 'body', 'bogged', 'boggle', 'bogus', 'boil', 'bok', 'bolster', 'bolt', 'bonanza', 'bonded', 'bonding', 'bondless', 'boned', 'bonehead', 'boneless', 'bonelike', 'boney', 'bonfire', 'bonnet', 'bonsai', 'bonus', 'bony', 'boogeyman', 'boogieman', 'book', 'boondocks', 'booted', 'booth', 'bootie', 'booting', 'bootlace', 'bootleg', 'boots', 'boozy', 'borax', 'boring', 'borough', 'borrower', 'borrowing', 'boss', 'botanical', 'botanist', 'botany', 'botch', 'both', 'bottle', 'bottling', 'bottom', 'bounce', 'bouncing', 'bouncy', 'bounding', 'boundless', 'bountiful', 'bovine', 'boxcar', 'boxer', 'boxing', 'boxlike', 'boxy', 'breach', 'breath', 'breeches', 'breeching', 'breeder', 'breeding', 'breeze', 'breezy', 'brethren', 'brewery', 'brewing', 'briar', 'bribe', 'brick', 'bride', 'bridged', 'brigade', 'bright', 'brilliant', 'brim', 'bring', 'brink', 'brisket', 'briskly', 'briskness', 'bristle', 'brittle', 'broadband', 'broadcast', 'broaden', 'broadly', 'broadness', 'broadside', 'broadways', 'broiler', 'broiling', 'broken', 'broker', 'bronchial', 'bronco', 'bronze', 'bronzing', 'brook', 'broom', 'brought', 'browbeat', 'brownnose', 'browse', 'browsing', 'bruising', 'brunch', 'brunette', 'brunt', 'brush', 'brussels', 'brute', 'brutishly', 'bubble', 'bubbling', 'bubbly', 'buccaneer', 'bucked', 'bucket', 'buckle', 'buckshot', 'buckskin', 'bucktooth', 'buckwheat', 'buddhism', 'buddhist', 'budding', 'buddy', 'budget', 'buffalo', 'buffed', 'buffer', 'buffing', 'buffoon', 'buggy', 'bulb', 'bulge', 'bulginess', 'bulgur', 'bulk', 'bulldog', 'bulldozer', 'bullfight', 'bullfrog', 'bullhorn', 'bullion', 'bullish', 'bullpen', 'bullring', 'bullseye', 'bullwhip', 'bully', 'bunch', 'bundle', 'bungee', 'bunion', 'bunkbed', 'bunkhouse', 'bunkmate', 'bunny', 'bunt', 'busboy', 'bush', 'busily', 'busload', 'bust', 'busybody', 'buzz', 'cabana', 'cabbage', 'cabbie', 'cabdriver', 'cable', 'caboose', 'cache', 'cackle', 'cacti', 'cactus', 'caddie', 'caddy', 'cadet', 'cadillac', 'cadmium', 'cage', 'cahoots', 'cake', 'calamari', 'calamity', 'calcium', 'calculate', 'calculus', 'caliber', 'calibrate', 'calm', 'caloric', 'calorie', 'calzone', 'camcorder', 'cameo', 'camera', 'camisole', 'camper', 'campfire', 'camping', 'campsite', 'campus', 'canal', 'canary', 'cancel', 'candied', 'candle', 'candy', 'cane', 'canine', 'canister', 'cannabis', 'canned', 'canning', 'cannon', 'cannot', 'canola', 'canon', 'canopener', 'canopy', 'canteen', 'canyon', 'capable', 'capably', 'capacity', 'cape', 'capillary', 'capital', 'capitol', 'capped', 'capricorn', 'capsize', 'capsule', 'caption', 'captivate', 'captive', 'captivity', 'capture', 'caramel', 'carat', 'caravan', 'carbon', 'cardboard', 'carded', 'cardiac', 'cardigan', 'cardinal', 'cardstock', 'carefully', 'caregiver', 'careless', 'caress', 'caretaker', 'cargo', 'caring', 'carless', 'carload', 'carmaker', 'carnage', 'carnation', 'carnival', 'carnivore', 'carol', 'carpenter', 'carpentry', 'carpool', 'carport', 'carried', 'carrot', 'carrousel', 'carry', 'cartel', 'cartload', 'carton', 'cartoon', 'cartridge', 'cartwheel', 'carve', 'carving', 'carwash', 'cascade', 'case', 'cash', 'casing', 'casino', 'casket', 'cassette', 'casually', 'casualty', 'catacomb', 'catalog', 'catalyst', 'catalyze', 'catapult', 'cataract', 'catatonic', 'catcall', 'catchable', 'catcher', 'catching', 'catchy', 'caterer', 'catering', 'catfight', 'catfish', 'cathedral', 'cathouse', 'catlike', 'catnap', 'catnip', 'catsup', 'cattail', 'cattishly', 'cattle', 'catty', 'catwalk', 'caucasian', 'caucus', 'causal', 'causation', 'cause', 'causing', 'cauterize', 'caution', 'cautious', 'cavalier', 'cavalry', 'caviar', 'cavity', 'cedar', 'celery', 'celestial', 'celibacy', 'celibate', 'celtic', 'cement', 'census', 'ceramics', 'ceremony', 'certainly', 'certainty', 'certified', 'certify', 'cesarean', 'cesspool', 'chafe', 'chaffing', 'chain', 'chair', 'chalice', 'challenge', 'chamber', 'chamomile', 'champion', 'chance', 'change', 'channel', 'chant', 'chaos', 'chaperone', 'chaplain', 'chapped', 'chaps', 'chapter', 'character', 'charbroil', 'charcoal', 'charger', 'charging', 'chariot', 'charity', 'charm', 'charred', 'charter', 'charting', 'chase', 'chasing', 'chaste', 'chastise', 'chastity', 'chatroom', 'chatter', 'chatting', 'chatty', 'cheating', 'cheddar', 'cheek', 'cheer', 'cheese', 'cheesy', 'chef', 'chemicals', 'chemist', 'chemo', 'cherisher', 'cherub', 'chess', 'chest', 'chevron', 'chevy', 'chewable', 'chewer', 'chewing', 'chewy', 'chief', 'chihuahua', 'childcare', 'childhood', 'childish', 'childless', 'childlike', 'chili', 'chill', 'chimp', 'chip', 'chirping', 'chirpy', 'chitchat', 'chivalry', 'chive', 'chloride', 'chlorine', 'choice', 'chokehold', 'choking', 'chomp', 'chooser', 'choosing', 'choosy', 'chop', 'chosen', 'chowder', 'chowtime', 'chrome', 'chubby', 'chuck', 'chug', 'chummy', 'chump', 'chunk', 'churn', 'chute', 'cider', 'cilantro', 'cinch', 'cinema', 'cinnamon', 'circle', 'circling', 'circular', 'circulate', 'circus', 'citable', 'citadel', 'citation', 'citizen', 'citric', 'citrus', 'city', 'civic', 'civil', 'clad', 'claim', 'clambake', 'clammy', 'clamor', 'clamp', 'clamshell', 'clang', 'clanking', 'clapped', 'clapper', 'clapping', 'clarify', 'clarinet', 'clarity', 'clash', 'clasp', 'class', 'clatter', 'clause', 'clavicle', 'claw', 'clay', 'clean', 'clear', 'cleat', 'cleaver', 'cleft', 'clench', 'clergyman', 'clerical', 'clerk', 'clever', 'clicker', 'client', 'climate', 'climatic', 'cling', 'clinic', 'clinking', 'clip', 'clique', 'cloak', 'clobber', 'clock', 'clone', 'cloning', 'closable', 'closure', 'clothes', 'clothing', 'cloud', 'clover', 'clubbed', 'clubbing', 'clubhouse', 'clump', 'clumsily', 'clumsy', 'clunky', 'clustered', 'clutch', 'clutter', 'coach', 'coagulant', 'coastal', 'coaster', 'coasting', 'coastland', 'coastline', 'coat', 'coauthor', 'cobalt', 'cobbler', 'cobweb', 'cocoa', 'coconut', 'cod', 'coeditor', 'coerce', 'coexist', 'coffee', 'cofounder', 'cognition', 'cognitive', 'cogwheel', 'coherence', 'coherent', 'cohesive', 'coil', 'coke', 'cola', 'cold', 'coleslaw', 'coliseum', 'collage', 'collapse', 'collar', 'collected', 'collector', 'collide', 'collie', 'collision', 'colonial', 'colonist', 'colonize', 'colony', 'colossal', 'colt', 'coma', 'come', 'comfort', 'comfy', 'comic', 'coming', 'comma', 'commence', 'commend', 'comment', 'commerce', 'commode', 'commodity', 'commodore', 'common', 'commotion', 'commute', 'commuting', 'compacted', 'compacter', 'compactly', 'compactor', 'companion', 'company', 'compare', 'compel', 'compile', 'comply', 'component', 'composed', 'composer', 'composite', 'compost', 'composure', 'compound', 'compress', 'comprised', 'computer', 'computing', 'comrade', 'concave', 'conceal', 'conceded', 'concept', 'concerned', 'concert', 'conch', 'concierge', 'concise', 'conclude', 'concrete', 'concur', 'condense', 'condiment', 'condition', 'condone', 'conducive', 'conductor', 'conduit', 'cone', 'confess', 'confetti', 'confidant', 'confident', 'confider', 'confiding', 'configure', 'confined', 'confining', 'confirm', 'conflict', 'conform', 'confound', 'confront', 'confused', 'confusing', 'confusion', 'congenial', 'congested', 'congrats', 'congress', 'conical', 'conjoined', 'conjure', 'conjuror', 'connected', 'connector', 'consensus', 'consent', 'console', 'consoling', 'consonant', 'constable', 'constant', 'constrain', 'constrict', 'construct', 'consult', 'consumer', 'consuming', 'contact', 'container', 'contempt', 'contend', 'contented', 'contently', 'contents', 'contest', 'context', 'contort', 'contour', 'contrite', 'control', 'contusion', 'convene', 'convent', 'copartner', 'cope', 'copied', 'copier', 'copilot', 'coping', 'copious', 'copper', 'copy', 'coral', 'cork', 'cornball', 'cornbread', 'corncob', 'cornea', 'corned', 'corner', 'cornfield', 'cornflake', 'cornhusk', 'cornmeal', 'cornstalk', 'corny', 'coronary', 'coroner', 'corporal', 'corporate', 'corral', 'correct', 'corridor', 'corrode', 'corroding', 'corrosive', 'corsage', 'corset', 'cortex', 'cosigner', 'cosmetics', 'cosmic', 'cosmos', 'cosponsor', 'cost', 'cottage', 'cotton', 'couch', 'cough', 'could', 'countable', 'countdown', 'counting', 'countless', 'country', 'county', 'courier', 'covenant', 'cover', 'coveted', 'coveting', 'coyness', 'cozily', 'coziness', 'cozy', 'crabbing', 'crabgrass', 'crablike', 'crabmeat', 'cradle', 'cradling', 'crafter', 'craftily', 'craftsman', 'craftwork', 'crafty', 'cramp', 'cranberry', 'crane', 'cranial', 'cranium', 'crank', 'crate', 'crave', 'craving', 'crawfish', 'crawlers', 'crawling', 'crayfish', 'crayon', 'crazed', 'crazily', 'craziness', 'crazy', 'creamed', 'creamer', 'creamlike', 'crease', 'creasing', 'creatable', 'create', 'creation', 'creative', 'creature', 'credible', 'credibly', 'credit', 'creed', 'creme', 'creole', 'crepe', 'crept', 'crescent', 'crested', 'cresting', 'crestless', 'crevice', 'crewless', 'crewman', 'crewmate', 'crib', 'cricket', 'cried', 'crier', 'crimp', 'crimson', 'cringe', 'cringing', 'crinkle', 'crinkly', 'crisped', 'crisping', 'crisply', 'crispness', 'crispy', 'criteria', 'critter', 'croak', 'crock', 'crook', 'croon', 'crop', 'cross', 'crouch', 'crouton', 'crowbar', 'crowd', 'crown', 'crucial', 'crudely', 'crudeness', 'cruelly', 'cruelness', 'cruelty', 'crumb', 'crummiest', 'crummy', 'crumpet', 'crumpled', 'cruncher', 'crunching', 'crunchy', 'crusader', 'crushable', 'crushed', 'crusher', 'crushing', 'crust', 'crux', 'crying', 'cryptic', 'crystal', 'cubbyhole', 'cube', 'cubical', 'cubicle', 'cucumber', 'cuddle', 'cuddly', 'cufflink', 'culinary', 'culminate', 'culpable', 'culprit', 'cultivate', 'cultural', 'culture', 'cupbearer', 'cupcake', 'cupid', 'cupped', 'cupping', 'curable', 'curator', 'curdle', 'cure', 'curfew', 'curing', 'curled', 'curler', 'curliness', 'curling', 'curly', 'curry', 'curse', 'cursive', 'cursor', 'curtain', 'curtly', 'curtsy', 'curvature', 'curve', 'curvy', 'cushy', 'cusp', 'cussed', 'custard', 'custodian', 'custody', 'customary', 'customer', 'customize', 'customs', 'cut', 'cycle', 'cyclic', 'cycling', 'cyclist', 'cylinder', 'cymbal', 'cytoplasm', 'cytoplast', 'dab', 'dad', 'daffodil', 'dagger', 'daily', 'daintily', 'dainty', 'dairy', 'daisy', 'dallying', 'dance', 'dancing', 'dandelion', 'dander', 'dandruff', 'dandy', 'danger', 'dangle', 'dangling', 'daredevil', 'dares', 'daringly', 'darkened', 'darkening', 'darkish', 'darkness', 'darkroom', 'darling', 'darn', 'dart', 'darwinism', 'dash', 'dastardly', 'data', 'datebook', 'dating', 'daughter', 'daunting', 'dawdler', 'dawn', 'daybed', 'daybreak', 'daycare', 'daydream', 'daylight', 'daylong', 'dayroom', 'daytime', 'dazzler', 'dazzling', 'deacon', 'deafening', 'deafness', 'dealer', 'dealing', 'dealmaker', 'dealt', 'dean', 'debatable', 'debate', 'debating', 'debit', 'debrief', 'debtless', 'debtor', 'debug', 'debunk', 'decade', 'decaf', 'decal', 'decathlon', 'decay', 'deceased', 'deceit', 'deceiver', 'deceiving', 'december', 'decency', 'decent', 'deception', 'deceptive', 'decibel', 'decidable', 'decimal', 'decimeter', 'decipher', 'deck', 'declared', 'decline', 'decode', 'decompose', 'decorated', 'decorator', 'decoy', 'decrease', 'decree', 'dedicate', 'dedicator', 'deduce', 'deduct', 'deed', 'deem', 'deepen', 'deeply', 'deepness', 'deface', 'defacing', 'defame', 'default', 'defeat', 'defection', 'defective', 'defendant', 'defender', 'defense', 'defensive', 'deferral', 'deferred', 'defiance', 'defiant', 'defile', 'defiling', 'define', 'definite', 'deflate', 'deflation', 'deflator', 'deflected', 'deflector', 'defog', 'deforest', 'defraud', 'defrost', 'deftly', 'defuse', 'defy', 'degraded', 'degrading', 'degrease', 'degree', 'dehydrate', 'deity', 'dejected', 'delay', 'delegate', 'delegator', 'delete', 'deletion', 'delicacy', 'delicate', 'delicious', 'delighted', 'delirious', 'delirium', 'deliverer', 'delivery', 'delouse', 'delta', 'deluge', 'delusion', 'deluxe', 'demanding', 'demeaning', 'demeanor', 'demise', 'democracy', 'democrat', 'demote', 'demotion', 'demystify', 'denatured', 'deniable', 'denial', 'denim', 'denote', 'dense', 'density', 'dental', 'dentist', 'denture', 'deny', 'deodorant', 'deodorize', 'departed', 'departure', 'depict', 'deplete', 'depletion', 'deplored', 'deploy', 'deport', 'depose', 'depraved', 'depravity', 'deprecate', 'depress', 'deprive', 'depth', 'deputize', 'deputy', 'derail', 'deranged', 'derby', 'derived', 'desecrate', 'deserve', 'deserving', 'designate', 'designed', 'designer', 'designing', 'deskbound', 'desktop', 'deskwork', 'desolate', 'despair', 'despise', 'despite', 'destiny', 'destitute', 'destruct', 'detached', 'detail', 'detection', 'detective', 'detector', 'detention', 'detergent', 'detest', 'detonate', 'detonator', 'detoxify', 'detract', 'deuce', 'devalue', 'deviancy', 'deviant', 'deviate', 'deviation', 'deviator', 'device', 'devious', 'devotedly', 'devotee', 'devotion', 'devourer', 'devouring', 'devoutly', 'dexterity', 'dexterous', 'diabetes', 'diabetic', 'diabolic', 'diagnoses', 'diagnosis', 'diagram', 'dial', 'diameter', 'diaper', 'diaphragm', 'diary', 'dice', 'dicing', 'dictate', 'dictation', 'dictator', 'difficult', 'diffused', 'diffuser', 'diffusion', 'diffusive', 'dig', 'dilation', 'diligence', 'diligent', 'dill', 'dilute', 'dime', 'diminish', 'dimly', 'dimmed', 'dimmer', 'dimness', 'dimple', 'diner', 'dingbat', 'dinghy', 'dinginess', 'dingo', 'dingy', 'dining', 'dinner', 'diocese', 'dioxide', 'diploma', 'dipped', 'dipper', 'dipping', 'directed', 'direction', 'directive', 'directly', 'directory', 'direness', 'dirtiness', 'disabled', 'disagree', 'disallow', 'disarm', 'disarray', 'disaster', 'disband', 'disbelief', 'disburse', 'discard', 'discern', 'discharge', 'disclose', 'discolor', 'discount', 'discourse', 'discover', 'discuss', 'disdain', 'disengage', 'disfigure', 'disgrace', 'dish', 'disinfect', 'disjoin', 'disk', 'dislike', 'disliking', 'dislocate', 'dislodge', 'disloyal', 'dismantle', 'dismay', 'dismiss', 'dismount', 'disobey', 'disorder', 'disown', 'disparate', 'disparity', 'dispatch', 'dispense', 'dispersal', 'dispersed', 'disperser', 'displace', 'display', 'displease', 'disposal', 'dispose', 'disprove', 'dispute', 'disregard', 'disrupt', 'dissuade', 'distance', 'distant', 'distaste', 'distill', 'distinct', 'distort', 'distract', 'distress', 'district', 'distrust', 'ditch', 'ditto', 'ditzy', 'dividable', 'divided', 'dividend', 'dividers', 'dividing', 'divinely', 'diving', 'divinity', 'divisible', 'divisibly', 'division', 'divisive', 'divorcee', 'dizziness', 'dizzy', 'doable', 'docile', 'dock', 'doctrine', 'document', 'dodge', 'dodgy', 'doily', 'doing', 'dole', 'dollar', 'dollhouse', 'dollop', 'dolly', 'dolphin', 'domain', 'domelike', 'domestic', 'dominion', 'dominoes', 'donated', 'donation', 'donator', 'donor', 'donut', 'doodle', 'doorbell', 'doorframe', 'doorknob', 'doorman', 'doormat', 'doornail', 'doorpost', 'doorstep', 'doorstop', 'doorway', 'doozy', 'dork', 'dormitory', 'dorsal', 'dosage', 'dose', 'dotted', 'doubling', 'douche', 'dove', 'down', 'dowry', 'doze', 'drab', 'dragging', 'dragonfly', 'dragonish', 'dragster', 'drainable', 'drainage', 'drained', 'drainer', 'drainpipe', 'dramatic', 'dramatize', 'drank', 'drapery', 'drastic', 'draw', 'dreaded', 'dreadful', 'dreadlock', 'dreamboat', 'dreamily', 'dreamland', 'dreamless', 'dreamlike', 'dreamt', 'dreamy', 'drearily', 'dreary', 'drench', 'dress', 'drew', 'dribble', 'dried', 'drier', 'drift', 'driller', 'drilling', 'drinkable', 'drinking', 'dripping', 'drippy', 'drivable', 'driven', 'driver', 'driveway', 'driving', 'drizzle', 'drizzly', 'drone', 'drool', 'droop', 'drop-down', 'dropbox', 'dropkick', 'droplet', 'dropout', 'dropper', 'drove', 'drown', 'drowsily', 'drudge', 'drum', 'dry', 'dubbed', 'dubiously', 'duchess', 'duckbill', 'ducking', 'duckling', 'ducktail', 'ducky', 'duct', 'dude', 'duffel', 'dugout', 'duh', 'duke', 'duller', 'dullness', 'duly', 'dumping', 'dumpling', 'dumpster', 'duo', 'dupe', 'duplex', 'duplicate', 'duplicity', 'durable', 'durably', 'duration', 'duress', 'during', 'dusk', 'dust', 'dutiful', 'duty', 'duvet', 'dwarf', 'dweeb', 'dwelled', 'dweller', 'dwelling', 'dwindle', 'dwindling', 'dynamic', 'dynamite', 'dynasty', 'dyslexia', 'dyslexic', 'each', 'eagle', 'earache', 'eardrum', 'earflap', 'earful', 'earlobe', 'early', 'earmark', 'earmuff', 'earphone', 'earpiece', 'earplugs', 'earring', 'earshot', 'earthen', 'earthlike', 'earthling', 'earthly', 'earthworm', 'earthy', 'earwig', 'easeful', 'easel', 'easiest', 'easily', 'easiness', 'easing', 'eastbound', 'eastcoast', 'easter', 'eastward', 'eatable', 'eaten', 'eatery', 'eating', 'eats', 'ebay', 'ebony', 'ebook', 'ecard', 'eccentric', 'echo', 'eclair', 'eclipse', 'ecologist', 'ecology', 'economic', 'economist', 'economy', 'ecosphere', 'ecosystem', 'edge', 'edginess', 'edging', 'edgy', 'edition', 'editor', 'educated', 'education', 'educator', 'eel', 'effective', 'effects', 'efficient', 'effort', 'eggbeater', 'egging', 'eggnog', 'eggplant', 'eggshell', 'egomaniac', 'egotism', 'egotistic', 'either', 'eject', 'elaborate', 'elastic', 'elated', 'elbow', 'eldercare', 'elderly', 'eldest', 'electable', 'election', 'elective', 'elephant', 'elevate', 'elevating', 'elevation', 'elevator', 'eleven', 'elf', 'eligible', 'eligibly', 'eliminate', 'elite', 'elitism', 'elixir', 'elk', 'ellipse', 'elliptic', 'elm', 'elongated', 'elope', 'eloquence', 'eloquent', 'elsewhere', 'elude', 'elusive', 'elves', 'email', 'embargo', 'embark', 'embassy', 'embattled', 'embellish', 'ember', 'embezzle', 'emblaze', 'emblem', 'embody', 'embolism', 'emboss', 'embroider', 'emcee', 'emerald', 'emergency', 'emission', 'emit', 'emote', 'emoticon', 'emotion', 'empathic', 'empathy', 'emperor', 'emphases', 'emphasis', 'emphasize', 'emphatic', 'empirical', 'employed', 'employee', 'employer', 'emporium', 'empower', 'emptier', 'emptiness', 'empty', 'emu', 'enable', 'enactment', 'enamel', 'enchanted', 'enchilada', 'encircle', 'enclose', 'enclosure', 'encode', 'encore', 'encounter', 'encourage', 'encroach', 'encrust', 'encrypt', 'endanger', 'endeared', 'endearing', 'ended', 'ending', 'endless', 'endnote', 'endocrine', 'endorphin', 'endorse', 'endowment', 'endpoint', 'endurable', 'endurance', 'enduring', 'energetic', 'energize', 'energy', 'enforced', 'enforcer', 'engaged', 'engaging', 'engine', 'engorge', 'engraved', 'engraver', 'engraving', 'engross', 'engulf', 'enhance', 'enigmatic', 'enjoyable', 'enjoyably', 'enjoyer', 'enjoying', 'enjoyment', 'enlarged', 'enlarging', 'enlighten', 'enlisted', 'enquirer', 'enrage', 'enrich', 'enroll', 'enslave', 'ensnare', 'ensure', 'entail', 'entangled', 'entering', 'entertain', 'enticing', 'entire', 'entitle', 'entity', 'entomb', 'entourage', 'entrap', 'entree', 'entrench', 'entrust', 'entryway', 'entwine', 'enunciate', 'envelope', 'enviable', 'enviably', 'envious', 'envision', 'envoy', 'envy', 'enzyme', 'epic', 'epidemic', 'epidermal', 'epidermis', 'epidural', 'epilepsy', 'epileptic', 'epilogue', 'epiphany', 'episode', 'equal', 'equate', 'equation', 'equator', 'equinox', 'equipment', 'equity', 'equivocal', 'eradicate', 'erasable', 'erased', 'eraser', 'erasure', 'ergonomic', 'errand', 'errant', 'erratic', 'error', 'erupt', 'escalate', 'escalator', 'escapable', 'escapade', 'escapist', 'escargot', 'eskimo', 'esophagus', 'espionage', 'espresso', 'esquire', 'essay', 'essence', 'essential', 'establish', 'estate', 'esteemed', 'estimate', 'estimator', 'estranged', 'estrogen', 'etching', 'eternal', 'eternity', 'ethanol', 'ether', 'ethically', 'ethics', 'euphemism', 'evacuate', 'evacuee', 'evade', 'evaluate', 'evaluator', 'evaporate', 'evasion', 'evasive', 'even', 'everglade', 'evergreen', 'everybody', 'everyday', 'everyone', 'evict', 'evidence', 'evident', 'evil', 'evoke', 'evolution', 'evolve', 'exact', 'exalted', 'example', 'excavate', 'excavator', 'exceeding', 'exception', 'excess', 'exchange', 'excitable', 'exciting', 'exclaim', 'exclude', 'excluding', 'exclusion', 'exclusive', 'excretion', 'excretory', 'excursion', 'excusable', 'excusably', 'excuse', 'exemplary', 'exemplify', 'exemption', 'exerciser', 'exert', 'exes', 'exfoliate', 'exhale', 'exhaust', 'exhume', 'exile', 'existing', 'exit', 'exodus', 'exonerate', 'exorcism', 'exorcist', 'expand', 'expanse', 'expansion', 'expansive', 'expectant', 'expedited', 'expediter', 'expel', 'expend', 'expenses', 'expensive', 'expert', 'expire', 'expiring', 'explain', 'expletive', 'explicit', 'explode', 'exploit', 'explore', 'exploring', 'exponent', 'exporter', 'exposable', 'expose', 'exposure', 'express', 'expulsion', 'exquisite', 'extended', 'extending', 'extent', 'extenuate', 'exterior', 'external', 'extinct', 'extortion', 'extradite', 'extras', 'extrovert', 'extrude', 'extruding', 'exuberant', 'fable', 'fabric', 'fabulous', 'facebook', 'facecloth', 'facedown', 'faceless', 'facelift', 'faceplate', 'faceted', 'facial', 'facility', 'facing', 'facsimile', 'faction', 'factoid', 'factor', 'factsheet', 'factual', 'faculty', 'fade', 'fading', 'failing', 'falcon', 'fall', 'false', 'falsify', 'fame', 'familiar', 'family', 'famine', 'famished', 'fanatic', 'fancied', 'fanciness', 'fancy', 'fanfare', 'fang', 'fanning', 'fantasize', 'fantastic', 'fantasy', 'fascism', 'fastball', 'faster', 'fasting', 'fastness', 'faucet', 'favorable', 'favorably', 'favored', 'favoring', 'favorite', 'fax', 'feast', 'federal', 'fedora', 'feeble', 'feed', 'feel', 'feisty', 'feline', 'felt-tip', 'feminine', 'feminism', 'feminist', 'feminize', 'femur', 'fence', 'fencing', 'fender', 'ferment', 'fernlike', 'ferocious', 'ferocity', 'ferret', 'ferris', 'ferry', 'fervor', 'fester', 'festival', 'festive', 'festivity', 'fetal', 'fetch', 'fever', 'fiber', 'fiction', 'fiddle', 'fiddling', 'fidelity', 'fidgeting', 'fidgety', 'fifteen', 'fifth', 'fiftieth', 'fifty', 'figment', 'figure', 'figurine', 'filing', 'filled', 'filler', 'filling', 'film', 'filter', 'filth', 'filtrate', 'finale', 'finalist', 'finalize', 'finally', 'finance', 'financial', 'finch', 'fineness', 'finer', 'finicky', 'finished', 'finisher', 'finishing', 'finite', 'finless', 'finlike', 'fiscally', 'fit', 'five', 'flaccid', 'flagman', 'flagpole', 'flagship', 'flagstick', 'flagstone', 'flail', 'flakily', 'flaky', 'flame', 'flammable', 'flanked', 'flanking', 'flannels', 'flap', 'flaring', 'flashback', 'flashbulb', 'flashcard', 'flashily', 'flashing', 'flashy', 'flask', 'flatbed', 'flatfoot', 'flatly', 'flatness', 'flatten', 'flattered', 'flatterer', 'flattery', 'flattop', 'flatware', 'flatworm', 'flavored', 'flavorful', 'flavoring', 'flaxseed', 'fled', 'fleshed', 'fleshy', 'flick', 'flier', 'flight', 'flinch', 'fling', 'flint', 'flip', 'flirt', 'float', 'flock', 'flogging', 'flop', 'floral', 'florist', 'floss', 'flounder', 'flyable', 'flyaway', 'flyer', 'flying', 'flyover', 'flypaper', 'foam', 'foe', 'fog', 'foil', 'folic', 'folk', 'follicle', 'follow', 'fondling', 'fondly', 'fondness', 'fondue', 'font', 'food', 'fool', 'footage', 'football', 'footbath', 'footboard', 'footer', 'footgear', 'foothill', 'foothold', 'footing', 'footless', 'footman', 'footnote', 'footpad', 'footpath', 'footprint', 'footrest', 'footsie', 'footsore', 'footwear', 'footwork', 'fossil', 'foster', 'founder', 'founding', 'fountain', 'fox', 'foyer', 'fraction', 'fracture', 'fragile', 'fragility', 'fragment', 'fragrance', 'fragrant', 'frail', 'frame', 'framing', 'frantic', 'fraternal', 'frayed', 'fraying', 'frays', 'freckled', 'freckles', 'freebase', 'freebee', 'freebie', 'freedom', 'freefall', 'freehand', 'freeing', 'freeload', 'freely', 'freemason', 'freeness', 'freestyle', 'freeware', 'freeway', 'freewill', 'freezable', 'freezing', 'freight', 'french', 'frenzied', 'frenzy', 'frequency', 'frequent', 'fresh', 'fretful', 'fretted', 'friction', 'friday', 'fridge', 'fried', 'friend', 'frighten', 'frightful', 'frigidity', 'frigidly', 'frill', 'fringe', 'frisbee', 'frisk', 'fritter', 'frivolous', 'frolic', 'from', 'front', 'frostbite', 'frosted', 'frostily', 'frosting', 'frostlike', 'frosty', 'froth', 'frown', 'frozen', 'fructose', 'frugality', 'frugally', 'fruit', 'frustrate', 'frying', 'gab', 'gaffe', 'gag', 'gainfully', 'gaining', 'gains', 'gala', 'gallantly', 'galleria', 'gallery', 'galley', 'gallon', 'gallows', 'gallstone', 'galore', 'galvanize', 'gambling', 'game', 'gaming', 'gamma', 'gander', 'gangly', 'gangrene', 'gangway', 'gap', 'garage', 'garbage', 'garden', 'gargle', 'garland', 'garlic', 'garment', 'garnet', 'garnish', 'garter', 'gas', 'gatherer', 'gathering', 'gating', 'gauging', 'gauntlet', 'gauze', 'gave', 'gawk', 'gazing', 'gear', 'gecko', 'geek', 'geiger', 'gem', 'gender', 'generic', 'generous', 'genetics', 'genre', 'gentile', 'gentleman', 'gently', 'gents', 'geography', 'geologic', 'geologist', 'geology', 'geometric', 'geometry', 'geranium', 'gerbil', 'geriatric', 'germicide', 'germinate', 'germless', 'germproof', 'gestate', 'gestation', 'gesture', 'getaway', 'getting', 'getup', 'giant', 'gibberish', 'giblet', 'giddily', 'giddiness', 'giddy', 'gift', 'gigabyte', 'gigahertz', 'gigantic', 'giggle', 'giggling', 'giggly', 'gigolo', 'gilled', 'gills', 'gimmick', 'girdle', 'giveaway', 'given', 'giver', 'giving', 'gizmo', 'gizzard', 'glacial', 'glacier', 'glade', 'gladiator', 'gladly', 'glamorous', 'glamour', 'glance', 'glancing', 'glandular', 'glare', 'glaring', 'glass', 'glaucoma', 'glazing', 'gleaming', 'gleeful', 'glider', 'gliding', 'glimmer', 'glimpse', 'glisten', 'glitch', 'glitter', 'glitzy', 'gloater', 'gloating', 'gloomily', 'gloomy', 'glorified', 'glorifier', 'glorify', 'glorious', 'glory', 'gloss', 'glove', 'glowing', 'glowworm', 'glucose', 'glue', 'gluten', 'glutinous', 'glutton', 'gnarly', 'gnat', 'goal', 'goatskin', 'goes', 'goggles', 'going', 'goldfish', 'goldmine', 'goldsmith', 'golf', 'goliath', 'gonad', 'gondola', 'gone', 'gong', 'good', 'gooey', 'goofball', 'goofiness', 'goofy', 'google', 'goon', 'gopher', 'gore', 'gorged', 'gorgeous', 'gory', 'gosling', 'gossip', 'gothic', 'gotten', 'gout', 'gown', 'grab', 'graceful', 'graceless', 'gracious', 'gradation', 'graded', 'grader', 'gradient', 'grading', 'gradually', 'graduate', 'graffiti', 'grafted', 'grafting', 'grain', 'granddad', 'grandkid', 'grandly', 'grandma', 'grandpa', 'grandson', 'granite', 'granny', 'granola', 'grant', 'granular', 'grape', 'graph', 'grapple', 'grappling', 'grasp', 'grass', 'gratified', 'gratify', 'grating', 'gratitude', 'gratuity', 'gravel', 'graveness', 'graves', 'graveyard', 'gravitate', 'gravity', 'gravy', 'gray', 'grazing', 'greasily', 'greedily', 'greedless', 'greedy', 'green', 'greeter', 'greeting', 'grew', 'greyhound', 'grid', 'grief', 'grievance', 'grieving', 'grievous', 'grill', 'grimace', 'grimacing', 'grime', 'griminess', 'grimy', 'grinch', 'grinning', 'grip', 'gristle', 'grit', 'groggily', 'groggy', 'groin', 'groom', 'groove', 'grooving', 'groovy', 'grope', 'ground', 'grouped', 'grout', 'grove', 'grower', 'growing', 'growl', 'grub', 'grudge', 'grudging', 'grueling', 'gruffly', 'grumble', 'grumbling', 'grumbly', 'grumpily', 'grunge', 'grunt', 'guacamole', 'guidable', 'guidance', 'guide', 'guiding', 'guileless', 'guise', 'gulf', 'gullible', 'gully', 'gulp', 'gumball', 'gumdrop', 'gumminess', 'gumming', 'gummy', 'gurgle', 'gurgling', 'guru', 'gush', 'gusto', 'gusty', 'gutless', 'guts', 'gutter', 'guy', 'guzzler', 'gyration', 'habitable', 'habitant', 'habitat', 'habitual', 'hacked', 'hacker', 'hacking', 'hacksaw', 'had', 'haggler', 'haiku', 'half', 'halogen', 'halt', 'halved', 'halves', 'hamburger', 'hamlet', 'hammock', 'hamper', 'hamster', 'hamstring', 'handbag', 'handball', 'handbook', 'handbrake', 'handcart', 'handclap', 'handclasp', 'handcraft', 'handcuff', 'handed', 'handful', 'handgrip', 'handgun', 'handheld', 'handiness', 'handiwork', 'handlebar', 'handled', 'handler', 'handling', 'handmade', 'handoff', 'handpick', 'handprint', 'handrail', 'handsaw', 'handset', 'handsfree', 'handshake', 'handstand', 'handwash', 'handwork', 'handwoven', 'handwrite', 'handyman', 'hangnail', 'hangout', 'hangover', 'hangup', 'hankering', 'hankie', 'hanky', 'haphazard', 'happening', 'happier', 'happiest', 'happily', 'happiness', 'happy', 'harbor', 'hardcopy', 'hardcore', 'hardcover', 'harddisk', 'hardened', 'hardener', 'hardening', 'hardhat', 'hardhead', 'hardiness', 'hardly', 'hardness', 'hardship', 'hardware', 'hardwired', 'hardwood', 'hardy', 'harmful', 'harmless', 'harmonica', 'harmonics', 'harmonize', 'harmony', 'harness', 'harpist', 'harsh', 'harvest', 'hash', 'hassle', 'haste', 'hastily', 'hastiness', 'hasty', 'hatbox', 'hatchback', 'hatchery', 'hatchet', 'hatching', 'hatchling', 'hate', 'hatless', 'hatred', 'haunt', 'haven', 'hazard', 'hazelnut', 'hazily', 'haziness', 'hazing', 'hazy', 'headache', 'headband', 'headboard', 'headcount', 'headdress', 'headed', 'header', 'headfirst', 'headgear', 'heading', 'headlamp', 'headless', 'headlock', 'headphone', 'headpiece', 'headrest', 'headroom', 'headscarf', 'headset', 'headsman', 'headstand', 'headstone', 'headway', 'headwear', 'heap', 'heat', 'heave', 'heavily', 'heaviness', 'heaving', 'hedge', 'hedging', 'heftiness', 'hefty', 'helium', 'helmet', 'helper', 'helpful', 'helping', 'helpless', 'helpline', 'hemlock', 'hemstitch', 'hence', 'henchman', 'henna', 'herald', 'herbal', 'herbicide', 'herbs', 'heritage', 'hermit', 'heroics', 'heroism', 'herring', 'herself', 'hertz', 'hesitancy', 'hesitant', 'hesitate', 'hexagon', 'hexagram', 'hubcap', 'huddle', 'huddling', 'huff', 'hug', 'hula', 'hulk', 'hull', 'human', 'humble', 'humbling', 'humbly', 'humid', 'humiliate', 'humility', 'humming', 'hummus', 'humongous', 'humorist', 'humorless', 'humorous', 'humpback', 'humped', 'humvee', 'hunchback', 'hundredth', 'hunger', 'hungrily', 'hungry', 'hunk', 'hunter', 'hunting', 'huntress', 'huntsman', 'hurdle', 'hurled', 'hurler', 'hurling', 'hurray', 'hurricane', 'hurried', 'hurry', 'hurt', 'husband', 'hush', 'husked', 'huskiness', 'hut', 'hybrid', 'hydrant', 'hydrated', 'hydration', 'hydrogen', 'hydroxide', 'hyperlink', 'hypertext', 'hyphen', 'hypnoses', 'hypnosis', 'hypnotic', 'hypnotism', 'hypnotist', 'hypnotize', 'hypocrisy', 'hypocrite', 'ibuprofen', 'ice', 'iciness', 'icing', 'icky', 'icon', 'icy', 'idealism', 'idealist', 'idealize', 'ideally', 'idealness', 'identical', 'identify', 'identity', 'ideology', 'idiocy', 'idiom', 'idly', 'igloo', 'ignition', 'ignore', 'iguana', 'illicitly', 'illusion', 'illusive', 'image', 'imaginary', 'imagines', 'imaging', 'imbecile', 'imitate', 'imitation', 'immature', 'immerse', 'immersion', 'imminent', 'immobile', 'immodest', 'immorally', 'immortal', 'immovable', 'immovably', 'immunity', 'immunize', 'impaired', 'impale', 'impart', 'impatient', 'impeach', 'impeding', 'impending', 'imperfect', 'imperial', 'impish', 'implant', 'implement', 'implicate', 'implicit', 'implode', 'implosion', 'implosive', 'imply', 'impolite', 'important', 'importer', 'impose', 'imposing', 'impotence', 'impotency', 'impotent', 'impound', 'imprecise', 'imprint', 'imprison', 'impromptu', 'improper', 'improve', 'improving', 'improvise', 'imprudent', 'impulse', 'impulsive', 'impure', 'impurity', 'iodine', 'iodize', 'ion', 'ipad', 'iphone', 'ipod', 'irate', 'irk', 'iron', 'irregular', 'irrigate', 'irritable', 'irritably', 'irritant', 'irritate', 'islamic', 'islamist', 'isolated', 'isolating', 'isolation', 'isotope', 'issue', 'issuing', 'italicize', 'italics', 'item', 'itinerary', 'itunes', 'ivory', 'ivy', 'jab', 'jackal', 'jacket', 'jackknife', 'jackpot', 'jailbird', 'jailbreak', 'jailer', 'jailhouse', 'jalapeno', 'jam', 'janitor', 'january', 'jargon', 'jarring', 'jasmine', 'jaundice', 'jaunt', 'java', 'jawed', 'jawless', 'jawline', 'jaws', 'jaybird', 'jaywalker', 'jazz', 'jeep', 'jeeringly', 'jellied', 'jelly', 'jersey', 'jester', 'jet', 'jiffy', 'jigsaw', 'jimmy', 'jingle', 'jingling', 'jinx', 'jitters', 'jittery', 'job', 'jockey', 'jockstrap', 'jogger', 'jogging', 'john', 'joining', 'jokester', 'jokingly', 'jolliness', 'jolly', 'jolt', 'jot', 'jovial', 'joyfully', 'joylessly', 'joyous', 'joyride', 'joystick', 'jubilance', 'jubilant', 'judge', 'judgingly', 'judicial', 'judiciary', 'judo', 'juggle', 'juggling', 'jugular', 'juice', 'juiciness', 'juicy', 'jujitsu', 'jukebox', 'july', 'jumble', 'jumbo', 'jump', 'junction', 'juncture', 'june', 'junior', 'juniper', 'junkie', 'junkman', 'junkyard', 'jurist', 'juror', 'jury', 'justice', 'justifier', 'justify', 'justly', 'justness', 'juvenile', 'kabob', 'kangaroo', 'karaoke', 'karate', 'karma', 'kebab', 'keenly', 'keenness', 'keep', 'keg', 'kelp', 'kennel', 'kept', 'kerchief', 'kerosene', 'kettle', 'kick', 'kiln', 'kilobyte', 'kilogram', 'kilometer', 'kilowatt', 'kilt', 'kimono', 'kindle', 'kindling', 'kindly', 'kindness', 'kindred', 'kinetic', 'kinfolk', 'king', 'kinship', 'kinsman', 'kinswoman', 'kissable', 'kisser', 'kissing', 'kitchen', 'kite', 'kitten', 'kitty', 'kiwi', 'kleenex', 'knapsack', 'knee', 'knelt', 'knickers', 'knoll', 'koala', 'kooky', 'kosher', 'krypton', 'kudos', 'kung', 'labored', 'laborer', 'laboring', 'laborious', 'labrador', 'ladder', 'ladies', 'ladle', 'ladybug', 'ladylike', 'lagged', 'lagging', 'lagoon', 'lair', 'lake', 'lance', 'landed', 'landfall', 'landfill', 'landing', 'landlady', 'landless', 'landline', 'landlord', 'landmark', 'landmass', 'landmine', 'landowner', 'landscape', 'landside', 'landslide', 'language', 'lankiness', 'lanky', 'lantern', 'lapdog', 'lapel', 'lapped', 'lapping', 'laptop', 'lard', 'large', 'lark', 'lash', 'lasso', 'last', 'latch', 'late', 'lather', 'latitude', 'latrine', 'latter', 'latticed', 'launch', 'launder', 'laundry', 'laurel', 'lavender', 'lavish', 'laxative', 'lazily', 'laziness', 'lazy', 'lecturer', 'left', 'legacy', 'legal', 'legend', 'legged', 'leggings', 'legible', 'legibly', 'legislate', 'lego', 'legroom', 'legume', 'legwarmer', 'legwork', 'lemon', 'lend', 'length', 'lens', 'lent', 'leotard', 'lesser', 'letdown', 'lethargic', 'lethargy', 'letter', 'lettuce', 'level', 'leverage', 'levers', 'levitate', 'levitator', 'liability', 'liable', 'liberty', 'librarian', 'library', 'licking', 'licorice', 'lid', 'life', 'lifter', 'lifting', 'liftoff', 'ligament', 'likely', 'likeness', 'likewise', 'liking', 'lilac', 'lilly', 'lily', 'limb', 'limeade', 'limelight', 'limes', 'limit', 'limping', 'limpness', 'line', 'lingo', 'linguini', 'linguist', 'lining', 'linked', 'linoleum', 'linseed', 'lint', 'lion', 'lip', 'liquefy', 'liqueur', 'liquid', 'lisp', 'list', 'litigate', 'litigator', 'litmus', 'litter', 'little', 'livable', 'lived', 'lively', 'liver', 'livestock', 'lividly', 'living', 'lizard', 'lubricant', 'lubricate', 'lucid', 'luckily', 'luckiness', 'luckless', 'lucrative', 'ludicrous', 'lugged', 'lukewarm', 'lullaby', 'lumber', 'luminance', 'luminous', 'lumpiness', 'lumping', 'lumpish', 'lunacy', 'lunar', 'lunchbox', 'luncheon', 'lunchroom', 'lunchtime', 'lung', 'lurch', 'lure', 'luridness', 'lurk', 'lushly', 'lushness', 'luster', 'lustfully', 'lustily', 'lustiness', 'lustrous', 'lusty', 'luxurious', 'luxury', 'lying', 'lyrically', 'lyricism', 'lyricist', 'lyrics', 'macarena', 'macaroni', 'macaw', 'mace', 'machine', 'machinist', 'magazine', 'magenta', 'maggot', 'magical', 'magician', 'magma', 'magnesium', 'magnetic', 'magnetism', 'magnetize', 'magnifier', 'magnify', 'magnitude', 'magnolia', 'mahogany', 'maimed', 'majestic', 'majesty', 'majorette', 'majority', 'makeover', 'maker', 'makeshift', 'making', 'malformed', 'malt', 'mama', 'mammal', 'mammary', 'mammogram', 'manager', 'managing', 'manatee', 'mandarin', 'mandate', 'mandatory', 'mandolin', 'manger', 'mangle', 'mango', 'mangy', 'manhandle', 'manhole', 'manhood', 'manhunt', 'manicotti', 'manicure', 'manifesto', 'manila', 'mankind', 'manlike', 'manliness', 'manly', 'manmade', 'manned', 'mannish', 'manor', 'manpower', 'mantis', 'mantra', 'manual', 'many', 'map', 'marathon', 'marauding', 'marbled', 'marbles', 'marbling', 'march', 'mardi', 'margarine', 'margarita', 'margin', 'marigold', 'marina', 'marine', 'marital', 'maritime', 'marlin', 'marmalade', 'maroon', 'married', 'marrow', 'marry', 'marshland', 'marshy', 'marsupial', 'marvelous', 'marxism', 'mascot', 'masculine', 'mashed', 'mashing', 'massager', 'masses', 'massive', 'mastiff', 'matador', 'matchbook', 'matchbox', 'matcher', 'matching', 'matchless', 'material', 'maternal', 'maternity', 'math', 'mating', 'matriarch', 'matrimony', 'matrix', 'matron', 'matted', 'matter', 'maturely', 'maturing', 'maturity', 'mauve', 'maverick', 'maximize', 'maximum', 'maybe', 'mayday', 'mayflower', 'moaner', 'moaning', 'mobile', 'mobility', 'mobilize', 'mobster', 'mocha', 'mocker', 'mockup', 'modified', 'modify', 'modular', 'modulator', 'module', 'moisten', 'moistness', 'moisture', 'molar', 'molasses', 'mold', 'molecular', 'molecule', 'molehill', 'mollusk', 'mom', 'monastery', 'monday', 'monetary', 'monetize', 'moneybags', 'moneyless', 'moneywise', 'mongoose', 'mongrel', 'monitor', 'monkhood', 'monogamy', 'monogram', 'monologue', 'monopoly', 'monorail', 'monotone', 'monotype', 'monoxide', 'monsieur', 'monsoon', 'monstrous', 'monthly', 'monument', 'moocher', 'moodiness', 'moody', 'mooing', 'moonbeam', 'mooned', 'moonlight', 'moonlike', 'moonlit', 'moonrise', 'moonscape', 'moonshine', 'moonstone', 'moonwalk', 'mop', 'morale', 'morality', 'morally', 'morbidity', 'morbidly', 'morphine', 'morphing', 'morse', 'mortality', 'mortally', 'mortician', 'mortified', 'mortify', 'mortuary', 'mosaic', 'mossy', 'most', 'mothball', 'mothproof', 'motion', 'motivate', 'motivator', 'motive', 'motocross', 'motor', 'motto', 'mountable', 'mountain', 'mounted', 'mounting', 'mourner', 'mournful', 'mouse', 'mousiness', 'moustache', 'mousy', 'mouth', 'movable', 'move', 'movie', 'moving', 'mower', 'mowing', 'much', 'muck', 'mud', 'mug', 'mulberry', 'mulch', 'mule', 'mulled', 'mullets', 'multiple', 'multiply', 'multitask', 'multitude', 'mumble', 'mumbling', 'mumbo', 'mummified', 'mummify', 'mummy', 'mumps', 'munchkin', 'mundane', 'municipal', 'muppet', 'mural', 'murkiness', 'murky', 'murmuring', 'muscular', 'museum', 'mushily', 'mushiness', 'mushroom', 'mushy', 'music', 'musket', 'muskiness', 'musky', 'mustang', 'mustard', 'muster', 'mustiness', 'musty', 'mutable', 'mutate', 'mutation', 'mute', 'mutilated', 'mutilator', 'mutiny', 'mutt', 'mutual', 'muzzle', 'myself', 'myspace', 'mystified', 'mystify', 'myth', 'nacho', 'nag', 'nail', 'name', 'naming', 'nanny', 'nanometer', 'nape', 'napkin', 'napped', 'napping', 'nappy', 'narrow', 'nastily', 'nastiness', 'national', 'native', 'nativity', 'natural', 'nature', 'naturist', 'nautical', 'navigate', 'navigator', 'navy', 'nearby', 'nearest', 'nearly', 'nearness', 'neatly', 'neatness', 'nebula', 'nebulizer', 'nectar', 'negate', 'negation', 'negative', 'neglector', 'negligee', 'negligent', 'negotiate', 'nemeses', 'nemesis', 'neon', 'nephew', 'nerd', 'nervous', 'nervy', 'nest', 'net', 'neurology', 'neuron', 'neurosis', 'neurotic', 'neuter', 'neutron', 'never', 'next', 'nibble', 'nickname', 'nicotine', 'niece', 'nifty', 'nimble', 'nimbly', 'nineteen', 'ninetieth', 'ninja', 'nintendo', 'ninth', 'nuclear', 'nuclei', 'nucleus', 'nugget', 'nullify', 'number', 'numbing', 'numbly', 'numbness', 'numeral', 'numerate', 'numerator', 'numeric', 'numerous', 'nuptials', 'nursery', 'nursing', 'nurture', 'nutcase', 'nutlike', 'nutmeg', 'nutrient', 'nutshell', 'nuttiness', 'nutty', 'nuzzle', 'nylon', 'oaf', 'oak', 'oasis', 'oat', 'obedience', 'obedient', 'obituary', 'object', 'obligate', 'obliged', 'oblivion', 'oblivious', 'oblong', 'obnoxious', 'oboe', 'obscure', 'obscurity', 'observant', 'observer', 'observing', 'obsessed', 'obsession', 'obsessive', 'obsolete', 'obstacle', 'obstinate', 'obstruct', 'obtain', 'obtrusive', 'obtuse', 'obvious', 'occultist', 'occupancy', 'occupant', 'occupier', 'occupy', 'ocean', 'ocelot', 'octagon', 'octane', 'october', 'octopus', 'ogle', 'oil', 'oink', 'ointment', 'okay', 'old', 'olive', 'olympics', 'omega', 'omen', 'ominous', 'omission', 'omit', 'omnivore', 'onboard', 'oncoming', 'ongoing', 'onion', 'online', 'onlooker', 'only', 'onscreen', 'onset', 'onshore', 'onslaught', 'onstage', 'onto', 'onward', 'onyx', 'oops', 'ooze', 'oozy', 'opacity', 'opal', 'open', 'operable', 'operate', 'operating', 'operation', 'operative', 'operator', 'opium', 'opossum', 'opponent', 'oppose', 'opposing', 'opposite', 'oppressed', 'oppressor', 'opt', 'opulently', 'osmosis', 'other', 'otter', 'ouch', 'ought', 'ounce', 'outage', 'outback', 'outbid', 'outboard', 'outbound', 'outbreak', 'outburst', 'outcast', 'outclass', 'outcome', 'outdated', 'outdoors', 'outer', 'outfield', 'outfit', 'outflank', 'outgoing', 'outgrow', 'outhouse', 'outing', 'outlast', 'outlet', 'outline', 'outlook', 'outlying', 'outmatch', 'outmost', 'outnumber', 'outplayed', 'outpost', 'outpour', 'output', 'outrage', 'outrank', 'outreach', 'outright', 'outscore', 'outsell', 'outshine', 'outshoot', 'outsider', 'outskirts', 'outsmart', 'outsource', 'outspoken', 'outtakes', 'outthink', 'outward', 'outweigh', 'outwit', 'oval', 'ovary', 'oven', 'overact', 'overall', 'overarch', 'overbid', 'overbill', 'overbite', 'overblown', 'overboard', 'overbook', 'overbuilt', 'overcast', 'overcoat', 'overcome', 'overcook', 'overcrowd', 'overdraft', 'overdrawn', 'overdress', 'overdrive', 'overdue', 'overeager', 'overeater', 'overexert', 'overfed', 'overfeed', 'overfill', 'overflow', 'overfull', 'overgrown', 'overhand', 'overhang', 'overhaul', 'overhead', 'overhear', 'overheat', 'overhung', 'overjoyed', 'overkill', 'overlabor', 'overlaid', 'overlap', 'overlay', 'overload', 'overlook', 'overlord', 'overlying', 'overnight', 'overpass', 'overpay', 'overplant', 'overplay', 'overpower', 'overprice', 'overrate', 'overreach', 'overreact', 'override', 'overripe', 'overrule', 'overrun', 'overshoot', 'overshot', 'oversight', 'oversized', 'oversleep', 'oversold', 'overspend', 'overstate', 'overstay', 'overstep', 'overstock', 'overstuff', 'oversweet', 'overtake', 'overthrow', 'overtime', 'overtly', 'overtone', 'overture', 'overturn', 'overuse', 'overvalue', 'overview', 'overwrite', 'owl', 'oxford', 'oxidant', 'oxidation', 'oxidize', 'oxidizing', 'oxygen', 'oxymoron', 'oyster', 'ozone', 'paced', 'pacemaker', 'pacific', 'pacifier', 'pacifism', 'pacifist', 'pacify', 'padded', 'padding', 'paddle', 'paddling', 'padlock', 'pagan', 'pager', 'paging', 'pajamas', 'palace', 'palatable', 'palm', 'palpable', 'palpitate', 'paltry', 'pampered', 'pamperer', 'pampers', 'pamphlet', 'panama', 'pancake', 'pancreas', 'panda', 'pandemic', 'pang', 'panhandle', 'panic', 'panning', 'panorama', 'panoramic', 'panther', 'pantomime', 'pantry', 'pants', 'pantyhose', 'paparazzi', 'papaya', 'paper', 'paprika', 'papyrus', 'parabola', 'parachute', 'parade', 'paradox', 'paragraph', 'parakeet', 'paralegal', 'paralyses', 'paralysis', 'paralyze', 'paramedic', 'parameter', 'paramount', 'parasail', 'parasite', 'parasitic', 'parcel', 'parched', 'parchment', 'pardon', 'parish', 'parka', 'parking', 'parkway', 'parlor', 'parmesan', 'parole', 'parrot', 'parsley', 'parsnip', 'partake', 'parted', 'parting', 'partition', 'partly', 'partner', 'partridge', 'party', 'passable', 'passably', 'passage', 'passcode', 'passenger', 'passerby', 'passing', 'passion', 'passive', 'passivism', 'passover', 'passport', 'password', 'pasta', 'pasted', 'pastel', 'pastime', 'pastor', 'pastrami', 'pasture', 'pasty', 'patchwork', 'patchy', 'paternal', 'paternity', 'path', 'patience', 'patient', 'patio', 'patriarch', 'patriot', 'patrol', 'patronage', 'patronize', 'pauper', 'pavement', 'paver', 'pavestone', 'pavilion', 'paving', 'pawing', 'payable', 'payback', 'paycheck', 'payday', 'payee', 'payer', 'paying', 'payment', 'payphone', 'payroll', 'pebble', 'pebbly', 'pecan', 'pectin', 'peculiar', 'peddling', 'pediatric', 'pedicure', 'pedigree', 'pedometer', 'pegboard', 'pelican', 'pellet', 'pelt', 'pelvis', 'penalize', 'penalty', 'pencil', 'pendant', 'pending', 'penholder', 'penknife', 'pennant', 'penniless', 'penny', 'penpal', 'pension', 'pentagon', 'pentagram', 'pep', 'perceive', 'percent', 'perch', 'percolate', 'perennial', 'perfected', 'perfectly', 'perfume', 'periscope', 'perish', 'perjurer', 'perjury', 'perkiness', 'perky', 'perm', 'peroxide', 'perpetual', 'perplexed', 'persecute', 'persevere', 'persuaded', 'persuader', 'pesky', 'peso', 'pessimism', 'pessimist', 'pester', 'pesticide', 'petal', 'petite', 'petition', 'petri', 'petroleum', 'petted', 'petticoat', 'pettiness', 'petty', 'petunia', 'phantom', 'phobia', 'phoenix', 'phonebook', 'phoney', 'phonics', 'phoniness', 'phony', 'phosphate', 'photo', 'phrase', 'phrasing', 'placard', 'placate', 'placidly', 'plank', 'planner', 'plant', 'plasma', 'plaster', 'plastic', 'plated', 'platform', 'plating', 'platinum', 'platonic', 'platter', 'platypus', 'plausible', 'plausibly', 'playable', 'playback', 'player', 'playful', 'playgroup', 'playhouse', 'playing', 'playlist', 'playmaker', 'playmate', 'playoff', 'playpen', 'playroom', 'playset', 'plaything', 'playtime', 'plaza', 'pleading', 'pleat', 'pledge', 'plentiful', 'plenty', 'plethora', 'plexiglas', 'pliable', 'plod', 'plop', 'plot', 'plow', 'ploy', 'pluck', 'plug', 'plunder', 'plunging', 'plural', 'plus', 'plutonium', 'plywood', 'poach', 'pod', 'poem', 'poet', 'pogo', 'pointed', 'pointer', 'pointing', 'pointless', 'pointy', 'poise', 'poison', 'poker', 'poking', 'polar', 'police', 'policy', 'polio', 'polish', 'politely', 'polka', 'polo', 'polyester', 'polygon', 'polygraph', 'polymer', 'poncho', 'pond', 'pony', 'popcorn', 'pope', 'poplar', 'popper', 'poppy', 'popsicle', 'populace', 'popular', 'populate', 'porcupine', 'pork', 'porous', 'porridge', 'portable', 'portal', 'portfolio', 'porthole', 'portion', 'portly', 'portside', 'poser', 'posh', 'posing', 'possible', 'possibly', 'possum', 'postage', 'postal', 'postbox', 'postcard', 'posted', 'poster', 'posting', 'postnasal', 'posture', 'postwar', 'pouch', 'pounce', 'pouncing', 'pound', 'pouring', 'pout', 'powdered', 'powdering', 'powdery', 'power', 'powwow', 'pox', 'praising', 'prance', 'prancing', 'pranker', 'prankish', 'prankster', 'prayer', 'praying', 'preacher', 'preaching', 'preachy', 'preamble', 'precinct', 'precise', 'precision', 'precook', 'precut', 'predator', 'predefine', 'predict', 'preface', 'prefix', 'preflight', 'preformed', 'pregame', 'pregnancy', 'pregnant', 'preheated', 'prelaunch', 'prelaw', 'prelude', 'premiere', 'premises', 'premium', 'prenatal', 'preoccupy', 'preorder', 'prepaid', 'prepay', 'preplan', 'preppy', 'preschool', 'prescribe', 'preseason', 'preset', 'preshow', 'president', 'presoak', 'press', 'presume', 'presuming', 'preteen', 'pretended', 'pretender', 'pretense', 'pretext', 'pretty', 'pretzel', 'prevail', 'prevalent', 'prevent', 'preview', 'previous', 'prewar', 'prewashed', 'prideful', 'pried', 'primal', 'primarily', 'primary', 'primate', 'primer', 'primp', 'princess', 'print', 'prior', 'prism', 'prison', 'prissy', 'pristine', 'privacy', 'private', 'privatize', 'prize', 'proactive', 'probable', 'probably', 'probation', 'probe', 'probing', 'probiotic', 'problem', 'procedure', 'process', 'proclaim', 'procreate', 'procurer', 'prodigal', 'prodigy', 'produce', 'product', 'profane', 'profanity', 'professed', 'professor', 'profile', 'profound', 'profusely', 'progeny', 'prognosis', 'program', 'progress', 'projector', 'prologue', 'prolonged', 'promenade', 'prominent', 'promoter', 'promotion', 'prompter', 'promptly', 'prone', 'prong', 'pronounce', 'pronto', 'proofing', 'proofread', 'proofs', 'propeller', 'properly', 'property', 'proponent', 'proposal', 'propose', 'props', 'prorate', 'protector', 'protegee', 'proton', 'prototype', 'protozoan', 'protract', 'protrude', 'proud', 'provable', 'proved', 'proven', 'provided', 'provider', 'providing', 'province', 'proving', 'provoke', 'provoking', 'provolone', 'prowess', 'prowler', 'prowling', 'proximity', 'proxy', 'prozac', 'prude', 'prudishly', 'prune', 'pruning', 'pry', 'psychic', 'public', 'publisher', 'pucker', 'pueblo', 'pug', 'pull', 'pulmonary', 'pulp', 'pulsate', 'pulse', 'pulverize', 'puma', 'pumice', 'pummel', 'punch', 'punctual', 'punctuate', 'punctured', 'pungent', 'punisher', 'punk', 'pupil', 'puppet', 'puppy', 'purchase', 'pureblood', 'purebred', 'purely', 'pureness', 'purgatory', 'purge', 'purging', 'purifier', 'purify', 'purist', 'puritan', 'purity', 'purple', 'purplish', 'purposely', 'purr', 'purse', 'pursuable', 'pursuant', 'pursuit', 'purveyor', 'pushcart', 'pushchair', 'pusher', 'pushiness', 'pushing', 'pushover', 'pushpin', 'pushup', 'pushy', 'putdown', 'putt', 'puzzle', 'puzzling', 'pyramid', 'pyromania', 'python', 'quack', 'quadrant', 'quail', 'quaintly', 'quake', 'quaking', 'qualified', 'qualifier', 'qualify', 'quality', 'qualm', 'quantum', 'quarrel', 'quarry', 'quartered', 'quarterly', 'quarters', 'quartet', 'quench', 'query', 'quicken', 'quickly', 'quickness', 'quicksand', 'quickstep', 'quiet', 'quill', 'quilt', 'quintet', 'quintuple', 'quirk', 'quit', 'quiver', 'quizzical', 'quotable', 'quotation', 'quote', 'rabid', 'race', 'racing', 'racism', 'rack', 'racoon', 'radar', 'radial', 'radiance', 'radiantly', 'radiated', 'radiation', 'radiator', 'radio', 'radish', 'raffle', 'raft', 'rage', 'ragged', 'raging', 'ragweed', 'raider', 'railcar', 'railing', 'railroad', 'railway', 'raisin', 'rake', 'raking', 'rally', 'ramble', 'rambling', 'ramp', 'ramrod', 'ranch', 'rancidity', 'random', 'ranged', 'ranger', 'ranging', 'ranked', 'ranking', 'ransack', 'ranting', 'rants', 'rare', 'rarity', 'rascal', 'rash', 'rasping', 'ravage', 'raven', 'ravine', 'raving', 'ravioli', 'ravishing', 'reabsorb', 'reach', 'reacquire', 'reaction', 'reactive', 'reactor', 'reaffirm', 'ream', 'reanalyze', 'reappear', 'reapply', 'reappoint', 'reapprove', 'rearrange', 'rearview', 'reason', 'reassign', 'reassure', 'reattach', 'reawake', 'rebalance', 'rebate', 'rebel', 'rebirth', 'reboot', 'reborn', 'rebound', 'rebuff', 'rebuild', 'rebuilt', 'reburial', 'rebuttal', 'recall', 'recant', 'recapture', 'recast', 'recede', 'recent', 'recess', 'recharger', 'recipient', 'recital', 'recite', 'reckless', 'reclaim', 'recliner', 'reclining', 'recluse', 'reclusive', 'recognize', 'recoil', 'recollect', 'recolor', 'reconcile', 'reconfirm', 'reconvene', 'recopy', 'record', 'recount', 'recoup', 'recovery', 'recreate', 'rectal', 'rectangle', 'rectified', 'rectify', 'recycled', 'recycler', 'recycling', 'reemerge', 'reenact', 'reenter', 'reentry', 'reexamine', 'referable', 'referee', 'reference', 'refill', 'refinance', 'refined', 'refinery', 'refining', 'refinish', 'reflected', 'reflector', 'reflex', 'reflux', 'refocus', 'refold', 'reforest', 'reformat', 'reformed', 'reformer', 'reformist', 'refract', 'refrain', 'refreeze', 'refresh', 'refried', 'refueling', 'refund', 'refurbish', 'refurnish', 'refusal', 'refuse', 'refusing', 'refutable', 'refute', 'regain', 'regalia', 'regally', 'reggae', 'regime', 'region', 'register', 'registrar', 'registry', 'regress', 'regretful', 'regroup', 'regular', 'regulate', 'regulator', 'rehab', 'reheat', 'rehire', 'rehydrate', 'reimburse', 'reissue', 'reiterate', 'rejoice', 'rejoicing', 'rejoin', 'rekindle', 'relapse', 'relapsing', 'relatable', 'related', 'relation', 'relative', 'relax', 'relay', 'relearn', 'release', 'relenting', 'reliable', 'reliably', 'reliance', 'reliant', 'relic', 'relieve', 'relieving', 'relight', 'relish', 'relive', 'reload', 'relocate', 'relock', 'reluctant', 'rely', 'remake', 'remark', 'remarry', 'rematch', 'remedial', 'remedy', 'remember', 'reminder', 'remindful', 'remission', 'remix', 'remnant', 'remodeler', 'remold', 'remorse', 'remote', 'removable', 'removal', 'removed', 'remover', 'removing', 'rename', 'renderer', 'rendering', 'rendition', 'renegade', 'renewable', 'renewably', 'renewal', 'renewed', 'renounce', 'renovate', 'renovator', 'rentable', 'rental', 'rented', 'renter', 'reoccupy', 'reoccur', 'reopen', 'reorder', 'repackage', 'repacking', 'repaint', 'repair', 'repave', 'repaying', 'repayment', 'repeal', 'repeated', 'repeater', 'repent', 'rephrase', 'replace', 'replay', 'replica', 'reply', 'reporter', 'repose', 'repossess', 'repost', 'repressed', 'reprimand', 'reprint', 'reprise', 'reproach', 'reprocess', 'reproduce', 'reprogram', 'reps', 'reptile', 'reptilian', 'repugnant', 'repulsion', 'repulsive', 'repurpose', 'reputable', 'reputably', 'request', 'require', 'requisite', 'reroute', 'rerun', 'resale', 'resample', 'rescuer', 'reseal', 'research', 'reselect', 'reseller', 'resemble', 'resend', 'resent', 'reset', 'reshape', 'reshoot', 'reshuffle', 'residence', 'residency', 'resident', 'residual', 'residue', 'resigned', 'resilient', 'resistant', 'resisting', 'resize', 'resolute', 'resolved', 'resonant', 'resonate', 'resort', 'resource', 'respect', 'resubmit', 'result', 'resume', 'resupply', 'resurface', 'resurrect', 'retail', 'retainer', 'retaining', 'retake', 'retaliate', 'retention', 'rethink', 'retinal', 'retired', 'retiree', 'retiring', 'retold', 'retool', 'retorted', 'retouch', 'retrace', 'retract', 'retrain', 'retread', 'retreat', 'retrial', 'retrieval', 'retriever', 'retry', 'return', 'retying', 'retype', 'reunion', 'reunite', 'reusable', 'reuse', 'reveal', 'reveler', 'revenge', 'revenue', 'reverb', 'revered', 'reverence', 'reverend', 'reversal', 'reverse', 'reversing', 'reversion', 'revert', 'revisable', 'revise', 'revision', 'revisit', 'revivable', 'revival', 'reviver', 'reviving', 'revocable', 'revoke', 'revolt', 'revolver', 'revolving', 'reward', 'rewash', 'rewind', 'rewire', 'reword', 'rework', 'rewrap', 'rewrite', 'rhyme', 'ribbon', 'ribcage', 'rice', 'riches', 'richly', 'richness', 'rickety', 'ricotta', 'riddance', 'ridden', 'ride', 'riding', 'rifling', 'rift', 'rigging', 'rigid', 'rigor', 'rimless', 'rimmed', 'rind', 'rink', 'rinse', 'rinsing', 'riot', 'ripcord', 'ripeness', 'ripening', 'ripping', 'ripple', 'rippling', 'riptide', 'rise', 'rising', 'risk', 'risotto', 'ritalin', 'ritzy', 'rival', 'riverbank', 'riverbed', 'riverboat', 'riverside', 'riveter', 'riveting', 'roamer', 'roaming', 'roast', 'robbing', 'robe', 'robin', 'robotics', 'robust', 'rockband', 'rocker', 'rocket', 'rockfish', 'rockiness', 'rocking', 'rocklike', 'rockslide', 'rockstar', 'rocky', 'rogue', 'roman', 'romp', 'rope', 'roping', 'roster', 'rosy', 'rotten', 'rotting', 'rotunda', 'roulette', 'rounding', 'roundish', 'roundness', 'roundup', 'roundworm', 'routine', 'routing', 'rover', 'roving', 'royal', 'rubbed', 'rubber', 'rubbing', 'rubble', 'rubdown', 'ruby', 'ruckus', 'rudder', 'rug', 'ruined', 'rule', 'rumble', 'rumbling', 'rummage', 'rumor', 'runaround', 'rundown', 'runner', 'running', 'runny', 'runt', 'runway', 'rupture', 'rural', 'ruse', 'rush', 'rust', 'rut', 'sabbath', 'sabotage', 'sacrament', 'sacred', 'sacrifice', 'sadden', 'saddlebag', 'saddled', 'saddling', 'sadly', 'sadness', 'safari', 'safeguard', 'safehouse', 'safely', 'safeness', 'saffron', 'saga', 'sage', 'sagging', 'saggy', 'said', 'saint', 'sake', 'salad', 'salami', 'salaried', 'salary', 'saline', 'salon', 'saloon', 'salsa', 'salt', 'salutary', 'salute', 'salvage', 'salvaging', 'salvation', 'same', 'sample', 'sampling', 'sanction', 'sanctity', 'sanctuary', 'sandal', 'sandbag', 'sandbank', 'sandbar', 'sandblast', 'sandbox', 'sanded', 'sandfish', 'sanding', 'sandlot', 'sandpaper', 'sandpit', 'sandstone', 'sandstorm', 'sandworm', 'sandy', 'sanitary', 'sanitizer', 'sank', 'santa', 'sapling', 'sappiness', 'sappy', 'sarcasm', 'sarcastic', 'sardine', 'sash', 'sasquatch', 'sassy', 'satchel', 'satiable', 'satin', 'satirical', 'satisfied', 'satisfy', 'saturate', 'saturday', 'sauciness', 'saucy', 'sauna', 'savage', 'savanna', 'saved', 'savings', 'savior', 'savor', 'saxophone', 'say', 'scabbed', 'scabby', 'scalded', 'scalding', 'scale', 'scaling', 'scallion', 'scallop', 'scalping', 'scam', 'scandal', 'scanner', 'scanning', 'scant', 'scapegoat', 'scarce', 'scarcity', 'scarecrow', 'scared', 'scarf', 'scarily', 'scariness', 'scarring', 'scary', 'scavenger', 'scenic', 'schedule', 'schematic', 'scheme', 'scheming', 'schilling', 'schnapps', 'scholar', 'science', 'scientist', 'scion', 'scoff', 'scolding', 'scone', 'scoop', 'scooter', 'scope', 'scorch', 'scorebook', 'scorecard', 'scored', 'scoreless', 'scorer', 'scoring', 'scorn', 'scorpion', 'scotch', 'scoundrel', 'scoured', 'scouring', 'scouting', 'scouts', 'scowling', 'scrabble', 'scraggly', 'scrambled', 'scrambler', 'scrap', 'scratch', 'scrawny', 'screen', 'scribble', 'scribe', 'scribing', 'scrimmage', 'script', 'scroll', 'scrooge', 'scrounger', 'scrubbed', 'scrubber', 'scruffy', 'scrunch', 'scrutiny', 'scuba', 'scuff', 'sculptor', 'sculpture', 'scurvy', 'scuttle', 'secluded', 'secluding', 'seclusion', 'second', 'secrecy', 'secret', 'sectional', 'sector', 'secular', 'securely', 'security', 'sedan', 'sedate', 'sedation', 'sedative', 'sediment', 'seduce', 'seducing', 'segment', 'seismic', 'seizing', 'seldom', 'selected', 'selection', 'selective', 'selector', 'self', 'seltzer', 'semantic', 'semester', 'semicolon', 'semifinal', 'seminar', 'semisoft', 'semisweet', 'senate', 'senator', 'send', 'senior', 'senorita', 'sensation', 'sensitive', 'sensitize', 'sensually', 'sensuous', 'sepia', 'september', 'septic', 'septum', 'sequel', 'sequence', 'sequester', 'series', 'sermon', 'serotonin', 'serpent', 'serrated', 'serve', 'service', 'serving', 'sesame', 'sessions', 'setback', 'setting', 'settle', 'settling', 'setup', 'sevenfold', 'seventeen', 'seventh', 'seventy', 'severity', 'shabby', 'shack', 'shaded', 'shadily', 'shadiness', 'shading', 'shadow', 'shady', 'shaft', 'shakable', 'shakily', 'shakiness', 'shaking', 'shaky', 'shale', 'shallot', 'shallow', 'shame', 'shampoo', 'shamrock', 'shank', 'shanty', 'shape', 'shaping', 'share', 'sharpener', 'sharper', 'sharpie', 'sharply', 'sharpness', 'shawl', 'sheath', 'shed', 'sheep', 'sheet', 'shelf', 'shell', 'shelter', 'shelve', 'shelving', 'sherry', 'shield', 'shifter', 'shifting', 'shiftless', 'shifty', 'shimmer', 'shimmy', 'shindig', 'shine', 'shingle', 'shininess', 'shining', 'shiny', 'ship', 'shirt', 'shivering', 'shock', 'shone', 'shoplift', 'shopper', 'shopping', 'shoptalk', 'shore', 'shortage', 'shortcake', 'shortcut', 'shorten', 'shorter', 'shorthand', 'shortlist', 'shortly', 'shortness', 'shorts', 'shortwave', 'shorty', 'shout', 'shove', 'showbiz', 'showcase', 'showdown', 'shower', 'showgirl', 'showing', 'showman', 'shown', 'showoff', 'showpiece', 'showplace', 'showroom', 'showy', 'shrank', 'shrapnel', 'shredder', 'shredding', 'shrewdly', 'shriek', 'shrill', 'shrimp', 'shrine', 'shrink', 'shrivel', 'shrouded', 'shrubbery', 'shrubs', 'shrug', 'shrunk', 'shucking', 'shudder', 'shuffle', 'shuffling', 'shun', 'shush', 'shut', 'shy', 'siamese', 'siberian', 'sibling', 'siding', 'sierra', 'siesta', 'sift', 'sighing', 'silenced', 'silencer', 'silent', 'silica', 'silicon', 'silk', 'silliness', 'silly', 'silo', 'silt', 'silver', 'similarly', 'simile', 'simmering', 'simple', 'simplify', 'simply', 'sincere', 'sincerity', 'singer', 'singing', 'single', 'singular', 'sinister', 'sinless', 'sinner', 'sinuous', 'sip', 'siren', 'sister', 'sitcom', 'sitter', 'sitting', 'situated', 'situation', 'sixfold', 'sixteen', 'sixth', 'sixties', 'sixtieth', 'sixtyfold', 'sizable', 'sizably', 'size', 'sizing', 'sizzle', 'sizzling', 'skater', 'skating', 'skedaddle', 'skeletal', 'skeleton', 'skeptic', 'sketch', 'skewed', 'skewer', 'skid', 'skied', 'skier', 'skies', 'skiing', 'skilled', 'skillet', 'skillful', 'skimmed', 'skimmer', 'skimming', 'skimpily', 'skincare', 'skinhead', 'skinless', 'skinning', 'skinny', 'skintight', 'skipper', 'skipping', 'skirmish', 'skirt', 'skittle', 'skydiver', 'skylight', 'skyline', 'skype', 'skyrocket', 'skyward', 'slab', 'slacked', 'slacker', 'slacking', 'slackness', 'slacks', 'slain', 'slam', 'slander', 'slang', 'slapping', 'slapstick', 'slashed', 'slashing', 'slate', 'slather', 'slaw', 'sled', 'sleek', 'sleep', 'sleet', 'sleeve', 'slept', 'sliceable', 'sliced', 'slicer', 'slicing', 'slick', 'slider', 'slideshow', 'sliding', 'slighted', 'slighting', 'slightly', 'slimness', 'slimy', 'slinging', 'slingshot', 'slinky', 'slip', 'slit', 'sliver', 'slobbery', 'slogan', 'sloped', 'sloping', 'sloppily', 'sloppy', 'slot', 'slouching', 'slouchy', 'sludge', 'slug', 'slum', 'slurp', 'slush', 'sly', 'small', 'smartly', 'smartness', 'smasher', 'smashing', 'smashup', 'smell', 'smelting', 'smile', 'smilingly', 'smirk', 'smite', 'smith', 'smitten', 'smock', 'smog', 'smoked', 'smokeless', 'smokiness', 'smoking', 'smoky', 'smolder', 'smooth', 'smother', 'smudge', 'smudgy', 'smuggler', 'smuggling', 'smugly', 'smugness', 'snack', 'snagged', 'snaking', 'snap', 'snare', 'snarl', 'snazzy', 'sneak', 'sneer', 'sneeze', 'sneezing', 'snide', 'sniff', 'snippet', 'snipping', 'snitch', 'snooper', 'snooze', 'snore', 'snoring', 'snorkel', 'snort', 'snout', 'snowbird', 'snowboard', 'snowbound', 'snowcap', 'snowdrift', 'snowdrop', 'snowfall', 'snowfield', 'snowflake', 'snowiness', 'snowless', 'snowman', 'snowplow', 'snowshoe', 'snowstorm', 'snowsuit', 'snowy', 'snub', 'snuff', 'snuggle', 'snugly', 'snugness', 'speak', 'spearfish', 'spearhead', 'spearman', 'spearmint', 'species', 'specimen', 'specked', 'speckled', 'specks', 'spectacle', 'spectator', 'spectrum', 'speculate', 'speech', 'speed', 'spellbind', 'speller', 'spelling', 'spendable', 'spender', 'spending', 'spent', 'spew', 'sphere', 'spherical', 'sphinx', 'spider', 'spied', 'spiffy', 'spill', 'spilt', 'spinach', 'spinal', 'spindle', 'spinner', 'spinning', 'spinout', 'spinster', 'spiny', 'spiral', 'spirited', 'spiritism', 'spirits', 'spiritual', 'splashed', 'splashing', 'splashy', 'splatter', 'spleen', 'splendid', 'splendor', 'splice', 'splicing', 'splinter', 'splotchy', 'splurge', 'spoilage', 'spoiled', 'spoiler', 'spoiling', 'spoils', 'spoken', 'spokesman', 'sponge', 'spongy', 'sponsor', 'spoof', 'spookily', 'spooky', 'spool', 'spoon', 'spore', 'sporting', 'sports', 'sporty', 'spotless', 'spotlight', 'spotted', 'spotter', 'spotting', 'spotty', 'spousal', 'spouse', 'spout', 'sprain', 'sprang', 'sprawl', 'spray', 'spree', 'sprig', 'spring', 'sprinkled', 'sprinkler', 'sprint', 'sprite', 'sprout', 'spruce', 'sprung', 'spry', 'spud', 'spur', 'sputter', 'spyglass', 'squabble', 'squad', 'squall', 'squander', 'squash', 'squatted', 'squatter', 'squatting', 'squeak', 'squealer', 'squealing', 'squeamish', 'squeegee', 'squeeze', 'squeezing', 'squid', 'squiggle', 'squiggly', 'squint', 'squire', 'squirt', 'squishier', 'squishy', 'stability', 'stabilize', 'stable', 'stack', 'stadium', 'staff', 'stage', 'staging', 'stagnant', 'stagnate', 'stainable', 'stained', 'staining', 'stainless', 'stalemate', 'staleness', 'stalling', 'stallion', 'stamina', 'stammer', 'stamp', 'stand', 'stank', 'staple', 'stapling', 'starboard', 'starch', 'stardom', 'stardust', 'starfish', 'stargazer', 'staring', 'stark', 'starless', 'starlet', 'starlight', 'starlit', 'starring', 'starry', 'starship', 'starter', 'starting', 'startle', 'startling', 'startup', 'starved', 'starving', 'stash', 'state', 'static', 'statistic', 'statue', 'stature', 'status', 'statute', 'statutory', 'staunch', 'stays', 'steadfast', 'steadier', 'steadily', 'steadying', 'steam', 'steed', 'steep', 'steerable', 'steering', 'steersman', 'stegosaur', 'stellar', 'stem', 'stench', 'stencil', 'step', 'stereo', 'sterile', 'sterility', 'sterilize', 'sterling', 'sternness', 'sternum', 'stew', 'stick', 'stiffen', 'stiffly', 'stiffness', 'stifle', 'stifling', 'stillness', 'stilt', 'stimulant', 'stimulate', 'stimuli', 'stimulus', 'stinger', 'stingily', 'stinging', 'stingray', 'stingy', 'stinking', 'stinky', 'stipend', 'stipulate', 'stir', 'stitch', 'stock', 'stoic', 'stoke', 'stole', 'stomp', 'stonewall', 'stoneware', 'stonework', 'stoning', 'stony', 'stood', 'stooge', 'stool', 'stoop', 'stoplight', 'stoppable', 'stoppage', 'stopped', 'stopper', 'stopping', 'stopwatch', 'storable', 'storage', 'storeroom', 'storewide', 'storm', 'stout', 'stove', 'stowaway', 'stowing', 'straddle', 'straggler', 'strained', 'strainer', 'straining', 'strangely', 'stranger', 'strangle', 'strategic', 'strategy', 'stratus', 'straw', 'stray', 'streak', 'stream', 'street', 'strength', 'strenuous', 'strep', 'stress', 'stretch', 'strewn', 'stricken', 'strict', 'stride', 'strife', 'strike', 'striking', 'strive', 'striving', 'strobe', 'strode', 'stroller', 'strongbox', 'strongly', 'strongman', 'struck', 'structure', 'strudel', 'struggle', 'strum', 'strung', 'strut', 'stubbed', 'stubble', 'stubbly', 'stubborn', 'stucco', 'stuck', 'student', 'studied', 'studio', 'study', 'stuffed', 'stuffing', 'stuffy', 'stumble', 'stumbling', 'stump', 'stung', 'stunned', 'stunner', 'stunning', 'stunt', 'stupor', 'sturdily', 'sturdy', 'styling', 'stylishly', 'stylist', 'stylized', 'stylus', 'suave', 'subarctic', 'subatomic', 'subdivide', 'subdued', 'subduing', 'subfloor', 'subgroup', 'subheader', 'subject', 'sublease', 'sublet', 'sublevel', 'sublime', 'submarine', 'submerge', 'submersed', 'submitter', 'subpanel', 'subpar', 'subplot', 'subprime', 'subscribe', 'subscript', 'subsector', 'subside', 'subsiding', 'subsidize', 'subsidy', 'subsoil', 'subsonic', 'substance', 'subsystem', 'subtext', 'subtitle', 'subtly', 'subtotal', 'subtract', 'subtype', 'suburb', 'subway', 'subwoofer', 'subzero', 'succulent', 'such', 'suction', 'sudden', 'sudoku', 'suds', 'sufferer', 'suffering', 'suffice', 'suffix', 'suffocate', 'suffrage', 'sugar', 'suggest', 'suing', 'suitable', 'suitably', 'suitcase', 'suitor', 'sulfate', 'sulfide', 'sulfite', 'sulfur', 'sulk', 'sullen', 'sulphate', 'sulphuric', 'sultry', 'superbowl', 'superglue', 'superhero', 'superior', 'superjet', 'superman', 'supermom', 'supernova', 'supervise', 'supper', 'supplier', 'supply', 'support', 'supremacy', 'supreme', 'surcharge', 'surely', 'sureness', 'surface', 'surfacing', 'surfboard', 'surfer', 'surgery', 'surgical', 'surging', 'surname', 'surpass', 'surplus', 'surprise', 'surreal', 'surrender', 'surrogate', 'surround', 'survey', 'survival', 'survive', 'surviving', 'survivor', 'sushi', 'suspect', 'suspend', 'suspense', 'sustained', 'sustainer', 'swab', 'swaddling', 'swagger', 'swampland', 'swan', 'swapping', 'swarm', 'sway', 'swear', 'sweat', 'sweep', 'swell', 'swept', 'swerve', 'swifter', 'swiftly', 'swiftness', 'swimmable', 'swimmer', 'swimming', 'swimsuit', 'swimwear', 'swinger', 'swinging', 'swipe', 'swirl', 'switch', 'swivel', 'swizzle', 'swooned', 'swoop', 'swoosh', 'swore', 'sworn', 'swung', 'sycamore', 'sympathy', 'symphonic', 'symphony', 'symptom', 'synapse', 'syndrome', 'synergy', 'synopses', 'synopsis', 'synthesis', 'synthetic', 'syrup', 'system', 't-shirt', 'tabasco', 'tabby', 'tableful', 'tables', 'tablet', 'tableware', 'tabloid', 'tackiness', 'tacking', 'tackle', 'tackling', 'tacky', 'taco', 'tactful', 'tactical', 'tactics', 'tactile', 'tactless', 'tadpole', 'taekwondo', 'tag', 'tainted', 'take', 'taking', 'talcum', 'talisman', 'tall', 'talon', 'tamale', 'tameness', 'tamer', 'tamper', 'tank', 'tanned', 'tannery', 'tanning', 'tantrum', 'tapeless', 'tapered', 'tapering', 'tapestry', 'tapioca', 'tapping', 'taps', 'tarantula', 'target', 'tarmac', 'tarnish', 'tarot', 'tartar', 'tartly', 'tartness', 'task', 'tassel', 'taste', 'tastiness', 'tasting', 'tasty', 'tattered', 'tattle', 'tattling', 'tattoo', 'taunt', 'tavern', 'thank', 'that', 'thaw', 'theater', 'theatrics', 'thee', 'theft', 'theme', 'theology', 'theorize', 'thermal', 'thermos', 'thesaurus', 'these', 'thesis', 'thespian', 'thicken', 'thicket', 'thickness', 'thieving', 'thievish', 'thigh', 'thimble', 'thing', 'think', 'thinly', 'thinner', 'thinness', 'thinning', 'thirstily', 'thirsting', 'thirsty', 'thirteen', 'thirty', 'thong', 'thorn', 'those', 'thousand', 'thrash', 'thread', 'threaten', 'threefold', 'thrift', 'thrill', 'thrive', 'thriving', 'throat', 'throbbing', 'throng', 'throttle', 'throwaway', 'throwback', 'thrower', 'throwing', 'thud', 'thumb', 'thumping', 'thursday', 'thus', 'thwarting', 'thyself', 'tiara', 'tibia', 'tidal', 'tidbit', 'tidiness', 'tidings', 'tidy', 'tiger', 'tighten', 'tightly', 'tightness', 'tightrope', 'tightwad', 'tigress', 'tile', 'tiling', 'till', 'tilt', 'timid', 'timing', 'timothy', 'tinderbox', 'tinfoil', 'tingle', 'tingling', 'tingly', 'tinker', 'tinkling', 'tinsel', 'tinsmith', 'tint', 'tinwork', 'tiny', 'tipoff', 'tipped', 'tipper', 'tipping', 'tiptoeing', 'tiptop', 'tiring', 'tissue', 'trace', 'tracing', 'track', 'traction', 'tractor', 'trade', 'trading', 'tradition', 'traffic', 'tragedy', 'trailing', 'trailside', 'train', 'traitor', 'trance', 'tranquil', 'transfer', 'transform', 'translate', 'transpire', 'transport', 'transpose', 'trapdoor', 'trapeze', 'trapezoid', 'trapped', 'trapper', 'trapping', 'traps', 'trash', 'travel', 'traverse', 'travesty', 'tray', 'treachery', 'treading', 'treadmill', 'treason', 'treat', 'treble', 'tree', 'trekker', 'tremble', 'trembling', 'tremor', 'trench', 'trend', 'trespass', 'triage', 'trial', 'triangle', 'tribesman', 'tribunal', 'tribune', 'tributary', 'tribute', 'triceps', 'trickery', 'trickily', 'tricking', 'trickle', 'trickster', 'tricky', 'tricolor', 'tricycle', 'trident', 'tried', 'trifle', 'trifocals', 'trillion', 'trilogy', 'trimester', 'trimmer', 'trimming', 'trimness', 'trinity', 'trio', 'tripod', 'tripping', 'triumph', 'trivial', 'trodden', 'trolling', 'trombone', 'trophy', 'tropical', 'tropics', 'trouble', 'troubling', 'trough', 'trousers', 'trout', 'trowel', 'truce', 'truck', 'truffle', 'trump', 'trunks', 'trustable', 'trustee', 'trustful', 'trusting', 'trustless', 'truth', 'try', 'tubby', 'tubeless', 'tubular', 'tucking', 'tuesday', 'tug', 'tuition', 'tulip', 'tumble', 'tumbling', 'tummy', 'turban', 'turbine', 'turbofan', 'turbojet', 'turbulent', 'turf', 'turkey', 'turmoil', 'turret', 'turtle', 'tusk', 'tutor', 'tutu', 'tux', 'tweak', 'tweed', 'tweet', 'tweezers', 'twelve', 'twentieth', 'twenty', 'twerp', 'twice', 'twiddle', 'twiddling', 'twig', 'twilight', 'twine', 'twins', 'twirl', 'twistable', 'twisted', 'twister', 'twisting', 'twisty', 'twitch', 'twitter', 'tycoon', 'tying', 'tyke', 'udder', 'ultimate', 'ultimatum', 'ultra', 'umbilical', 'umbrella', 'umpire', 'unabashed', 'unable', 'unadorned', 'unadvised', 'unafraid', 'unaired', 'unaligned', 'unaltered', 'unarmored', 'unashamed', 'unaudited', 'unawake', 'unaware', 'unbaked', 'unbalance', 'unbeaten', 'unbend', 'unbent', 'unbiased', 'unbitten', 'unblended', 'unblessed', 'unblock', 'unbolted', 'unbounded', 'unboxed', 'unbraided', 'unbridle', 'unbroken', 'unbuckled', 'unbundle', 'unburned', 'unbutton', 'uncanny', 'uncapped', 'uncaring', 'uncertain', 'unchain', 'unchanged', 'uncharted', 'uncheck', 'uncivil', 'unclad', 'unclaimed', 'unclamped', 'unclasp', 'uncle', 'unclip', 'uncloak', 'unclog', 'unclothed', 'uncoated', 'uncoiled', 'uncolored', 'uncombed', 'uncommon', 'uncooked', 'uncork', 'uncorrupt', 'uncounted', 'uncouple', 'uncouth', 'uncover', 'uncross', 'uncrown', 'uncrushed', 'uncured', 'uncurious', 'uncurled', 'uncut', 'undamaged', 'undated', 'undaunted', 'undead', 'undecided', 'undefined', 'underage', 'underarm', 'undercoat', 'undercook', 'undercut', 'underdog', 'underdone', 'underfed', 'underfeed', 'underfoot', 'undergo', 'undergrad', 'underhand', 'underline', 'underling', 'undermine', 'undermost', 'underpaid', 'underpass', 'underpay', 'underrate', 'undertake', 'undertone', 'undertook', 'undertow', 'underuse', 'underwear', 'underwent', 'underwire', 'undesired', 'undiluted', 'undivided', 'undocked', 'undoing', 'undone', 'undrafted', 'undress', 'undrilled', 'undusted', 'undying', 'unearned', 'unearth', 'unease', 'uneasily', 'uneasy', 'uneatable', 'uneaten', 'unedited', 'unelected', 'unending', 'unengaged', 'unenvied', 'unequal', 'unethical', 'uneven', 'unexpired', 'unexposed', 'unfailing', 'unfair', 'unfasten', 'unfazed', 'unfeeling', 'unfiled', 'unfilled', 'unfitted', 'unfitting', 'unfixable', 'unfixed', 'unflawed', 'unfocused', 'unfold', 'unfounded', 'unframed', 'unfreeze', 'unfrosted', 'unfrozen', 'unfunded', 'unglazed', 'ungloved', 'unglue', 'ungodly', 'ungraded', 'ungreased', 'unguarded', 'unguided', 'unhappily', 'unhappy', 'unharmed', 'unhealthy', 'unheard', 'unhearing', 'unheated', 'unhelpful', 'unhidden', 'unhinge', 'unhitched', 'unholy', 'unhook', 'unicorn', 'unicycle', 'unified', 'unifier', 'uniformed', 'uniformly', 'unify', 'unimpeded', 'uninjured', 'uninstall', 'uninsured', 'uninvited', 'union', 'uniquely', 'unisexual', 'unison', 'unissued', 'unit', 'universal', 'universe', 'unjustly', 'unkempt', 'unkind', 'unknotted', 'unknowing', 'unknown', 'unlaced', 'unlatch', 'unlawful', 'unleaded', 'unlearned', 'unleash', 'unless', 'unleveled', 'unlighted', 'unlikable', 'unlimited', 'unlined', 'unlinked', 'unlisted', 'unlit', 'unlivable', 'unloaded', 'unloader', 'unlocked', 'unlocking', 'unlovable', 'unloved', 'unlovely', 'unloving', 'unluckily', 'unlucky', 'unmade', 'unmanaged', 'unmanned', 'unmapped', 'unmarked', 'unmasked', 'unmasking', 'unmatched', 'unmindful', 'unmixable', 'unmixed', 'unmolded', 'unmoral', 'unmovable', 'unmoved', 'unmoving', 'unnamable', 'unnamed', 'unnatural', 'unneeded', 'unnerve', 'unnerving', 'unnoticed', 'unopened', 'unopposed', 'unpack', 'unpadded', 'unpaid', 'unpainted', 'unpaired', 'unpaved', 'unpeeled', 'unpicked', 'unpiloted', 'unpinned', 'unplanned', 'unplanted', 'unpleased', 'unpledged', 'unplowed', 'unplug', 'unpopular', 'unproven', 'unquote', 'unranked', 'unrated', 'unraveled', 'unreached', 'unread', 'unreal', 'unreeling', 'unrefined', 'unrelated', 'unrented', 'unrest', 'unretired', 'unrevised', 'unrigged', 'unripe', 'unrivaled', 'unroasted', 'unrobed', 'unroll', 'unruffled', 'unruly', 'unrushed', 'unsaddle', 'unsafe', 'unsaid', 'unsalted', 'unsaved', 'unsavory', 'unscathed', 'unscented', 'unscrew', 'unsealed', 'unseated', 'unsecured', 'unseeing', 'unseemly', 'unseen', 'unselect', 'unselfish', 'unsent', 'unsettled', 'unshackle', 'unshaken', 'unshaved', 'unshaven', 'unsheathe', 'unshipped', 'unsightly', 'unsigned', 'unskilled', 'unsliced', 'unsmooth', 'unsnap', 'unsocial', 'unsoiled', 'unsold', 'unsolved', 'unsorted', 'unspoiled', 'unspoken', 'unstable', 'unstaffed', 'unstamped', 'unsteady', 'unsterile', 'unstirred', 'unstitch', 'unstopped', 'unstuck', 'unstuffed', 'unstylish', 'unsubtle', 'unsubtly', 'unsuited', 'unsure', 'unsworn', 'untagged', 'untainted', 'untaken', 'untamed', 'untangled', 'untapped', 'untaxed', 'unthawed', 'unthread', 'untidy', 'untie', 'until', 'untimed', 'untimely', 'untitled', 'untoasted', 'untold', 'untouched', 'untracked', 'untrained', 'untreated', 'untried', 'untrimmed', 'untrue', 'untruth', 'unturned', 'untwist', 'untying', 'unusable', 'unused', 'unusual', 'unvalued', 'unvaried', 'unvarying', 'unveiled', 'unveiling', 'unvented', 'unviable', 'unvisited', 'unvocal', 'unwanted', 'unwarlike', 'unwary', 'unwashed', 'unwatched', 'unweave', 'unwed', 'unwelcome', 'unwell', 'unwieldy', 'unwilling', 'unwind', 'unwired', 'unwitting', 'unwomanly', 'unworldly', 'unworn', 'unworried', 'unworthy', 'unwound', 'unwoven', 'unwrapped', 'unwritten', 'unzip', 'upbeat', 'upchuck', 'upcoming', 'upcountry', 'update', 'upfront', 'upgrade', 'upheaval', 'upheld', 'uphill', 'uphold', 'uplifted', 'uplifting', 'upload', 'upon', 'upper', 'upright', 'uprising', 'upriver', 'uproar', 'uproot', 'upscale', 'upside', 'upstage', 'upstairs', 'upstart', 'upstate', 'upstream', 'upstroke', 'upswing', 'uptake', 'uptight', 'uptown', 'upturned', 'upward', 'upwind', 'uranium', 'urban', 'urchin', 'urethane', 'urgency', 'urgent', 'urging', 'urologist', 'urology', 'usable', 'usage', 'useable', 'used', 'uselessly', 'user', 'usher', 'usual', 'utensil', 'utility', 'utilize', 'utmost', 'utopia', 'utter', 'vacancy', 'vacant', 'vacate', 'vacation', 'vagabond', 'vagrancy', 'vagrantly', 'vaguely', 'vagueness', 'valiant', 'valid', 'valium', 'valley', 'valuables', 'value', 'vanilla', 'vanish', 'vanity', 'vanquish', 'vantage', 'vaporizer', 'variable', 'variably', 'varied', 'variety', 'various', 'varmint', 'varnish', 'varsity', 'varying', 'vascular', 'vaseline', 'vastly', 'vastness', 'veal', 'vegan', 'veggie', 'vehicular', 'velcro', 'velocity', 'velvet', 'vendetta', 'vending', 'vendor', 'veneering', 'vengeful', 'venomous', 'ventricle', 'venture', 'venue', 'venus', 'verbalize', 'verbally', 'verbose', 'verdict', 'verify', 'verse', 'version', 'versus', 'vertebrae', 'vertical', 'vertigo', 'very', 'vessel', 'vest', 'veteran', 'veto', 'vexingly', 'viability', 'viable', 'vibes', 'vice', 'vicinity', 'victory', 'video', 'viewable', 'viewer', 'viewing', 'viewless', 'viewpoint', 'vigorous', 'village', 'villain', 'vindicate', 'vineyard', 'vintage', 'violate', 'violation', 'violator', 'violet', 'violin', 'viper', 'viral', 'virtual', 'virtuous', 'virus', 'visa', 'viscosity', 'viscous', 'viselike', 'visible', 'visibly', 'vision', 'visiting', 'visitor', 'visor', 'vista', 'vitality', 'vitalize', 'vitally', 'vitamins', 'vivacious', 'vividly', 'vividness', 'vixen', 'vocalist', 'vocalize', 'vocally', 'vocation', 'voice', 'voicing', 'void', 'volatile', 'volley', 'voltage', 'volumes', 'voter', 'voting', 'voucher', 'vowed', 'vowel', 'voyage', 'wackiness', 'wad', 'wafer', 'waffle', 'waged', 'wager', 'wages', 'waggle', 'wagon', 'wake', 'waking', 'walk', 'walmart', 'walnut', 'walrus', 'waltz', 'wand', 'wannabe', 'wanted', 'wanting', 'wasabi', 'washable', 'washbasin', 'washboard', 'washbowl', 'washcloth', 'washday', 'washed', 'washer', 'washhouse', 'washing', 'washout', 'washroom', 'washstand', 'washtub', 'wasp', 'wasting', 'watch', 'water', 'waviness', 'waving', 'wavy', 'whacking', 'whacky', 'wham', 'wharf', 'wheat', 'whenever', 'whiff', 'whimsical', 'whinny', 'whiny', 'whisking', 'whoever', 'whole', 'whomever', 'whoopee', 'whooping', 'whoops', 'why', 'wick', 'widely', 'widen', 'widget', 'widow', 'width', 'wieldable', 'wielder', 'wife', 'wifi', 'wikipedia', 'wildcard', 'wildcat', 'wilder', 'wildfire', 'wildfowl', 'wildland', 'wildlife', 'wildly', 'wildness', 'willed', 'willfully', 'willing', 'willow', 'willpower', 'wilt', 'wimp', 'wince', 'wincing', 'wind', 'wing', 'winking', 'winner', 'winnings', 'winter', 'wipe', 'wired', 'wireless', 'wiring', 'wiry', 'wisdom', 'wise', 'wish', 'wisplike', 'wispy', 'wistful', 'wizard', 'wobble', 'wobbling', 'wobbly', 'wok', 'wolf', 'wolverine', 'womanhood', 'womankind', 'womanless', 'womanlike', 'womanly', 'womb', 'woof', 'wooing', 'wool', 'woozy', 'word', 'work', 'worried', 'worrier', 'worrisome', 'worry', 'worsening', 'worshiper', 'worst', 'wound', 'woven', 'wow', 'wrangle', 'wrath', 'wreath', 'wreckage', 'wrecker', 'wrecking', 'wrench', 'wriggle', 'wriggly', 'wrinkle', 'wrinkly', 'wrist', 'writing', 'written', 'wrongdoer', 'wronged', 'wrongful', 'wrongly', 'wrongness', 'wrought', 'xbox', 'xerox', 'yahoo', 'yam', 'yanking', 'yapping', 'yard', 'yarn', 'yeah', 'yearbook', 'yearling', 'yearly', 'yearning', 'yeast', 'yelling', 'yelp', 'yen', 'yesterday', 'yiddish', 'yield', 'yin', 'yippee', 'yo-yo', 'yodel', 'yoga', 'yogurt', 'yonder', 'yoyo', 'yummy', 'zap', 'zealous', 'zebra', 'zen', 'zeppelin', 'zero', 'zestfully', 'zesty', 'zigzagged', 'zipfile', 'zipping', 'zippy', 'zips', 'zit', 'zodiac', 'zombie', 'zone', 'zoning', 'zookeeper', 'zoologist', 'zoology', 'zoom'];

},{}],98:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSecureRandomNumber = exports.getSecureRandomWords = exports.getSecureRandomBytes = void 0;
var crypto_primitives_1 = require("@ton/crypto-primitives");
function getSecureRandomBytes(_x) {
  return _getSecureRandomBytes.apply(this, arguments);
}
function _getSecureRandomBytes() {
  _getSecureRandomBytes = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(size) {
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          return _context.abrupt("return", (0, crypto_primitives_1.getSecureRandomBytes)(size));
        case 1:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return _getSecureRandomBytes.apply(this, arguments);
}
exports.getSecureRandomBytes = getSecureRandomBytes;
function getSecureRandomWords(_x2) {
  return _getSecureRandomWords.apply(this, arguments);
}
function _getSecureRandomWords() {
  _getSecureRandomWords = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(size) {
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          return _context2.abrupt("return", getSecureRandomWords(size));
        case 1:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return _getSecureRandomWords.apply(this, arguments);
}
exports.getSecureRandomWords = getSecureRandomWords;
function getSecureRandomNumber(_x3, _x4) {
  return _getSecureRandomNumber.apply(this, arguments);
}
function _getSecureRandomNumber() {
  _getSecureRandomNumber = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(min, max) {
    var range, bitsNeeded, bytesNeeded, mask, res, power, numberValue, i;
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          range = max - min;
          bitsNeeded = Math.ceil(Math.log2(range));
          if (!(bitsNeeded > 53)) {
            _context3.next = 4;
            break;
          }
          throw new Error('Range is too large');
        case 4:
          bytesNeeded = Math.ceil(bitsNeeded / 8);
          mask = Math.pow(2, bitsNeeded) - 1;
        case 6:
          if (!true) {
            _context3.next = 19;
            break;
          }
          _context3.next = 9;
          return getSecureRandomBytes(bitsNeeded);
        case 9:
          res = _context3.sent;
          power = (bytesNeeded - 1) * 8;
          numberValue = 0;
          for (i = 0; i < bytesNeeded; i++) {
            numberValue += res[i] * Math.pow(2, power);
            power -= 8;
          }
          numberValue = numberValue & mask; // Truncate
          if (!(numberValue >= range)) {
            _context3.next = 16;
            break;
          }
          return _context3.abrupt("continue", 6);
        case 16:
          return _context3.abrupt("return", min + numberValue);
        case 19:
        case "end":
          return _context3.stop();
      }
    }, _callee3);
  }));
  return _getSecureRandomNumber.apply(this, arguments);
}
exports.getSecureRandomNumber = getSecureRandomNumber;

},{"@ton/crypto-primitives":83}],99:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hmac_sha512 = exports.hmac_sha512_fallback = void 0;
var jssha_1 = __importDefault(require("jssha"));
var crypto_primitives_1 = require("@ton/crypto-primitives");
function hmac_sha512_fallback(_x, _x2) {
  return _hmac_sha512_fallback.apply(this, arguments);
}
function _hmac_sha512_fallback() {
  _hmac_sha512_fallback = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(key, data) {
    var keyBuffer, dataBuffer, shaObj, hmac;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          keyBuffer = typeof key === 'string' ? Buffer.from(key, 'utf-8') : key;
          dataBuffer = typeof data === 'string' ? Buffer.from(data, 'utf-8') : data;
          shaObj = new jssha_1["default"]("SHA-512", "HEX", {
            hmacKey: {
              value: keyBuffer.toString('hex'),
              format: "HEX"
            }
          });
          shaObj.update(dataBuffer.toString('hex'));
          hmac = shaObj.getHash("HEX");
          return _context.abrupt("return", Buffer.from(hmac, 'hex'));
        case 6:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return _hmac_sha512_fallback.apply(this, arguments);
}
exports.hmac_sha512_fallback = hmac_sha512_fallback;
function hmac_sha512(key, data) {
  return (0, crypto_primitives_1.hmac_sha512)(key, data);
}
exports.hmac_sha512 = hmac_sha512;

}).call(this)}).call(this,require("buffer").Buffer)
},{"@ton/crypto-primitives":83,"buffer":196,"jssha":202}],100:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.openBox = exports.sealBox = exports.signVerify = exports.sign = exports.keyPairFromSeed = exports.keyPairFromSecretKey = void 0;
var tweetnacl_1 = __importDefault(require("tweetnacl"));
function keyPairFromSecretKey(secretKey) {
  var res = tweetnacl_1["default"].sign.keyPair.fromSecretKey(new Uint8Array(secretKey));
  return {
    publicKey: Buffer.from(res.publicKey),
    secretKey: Buffer.from(res.secretKey)
  };
}
exports.keyPairFromSecretKey = keyPairFromSecretKey;
function keyPairFromSeed(secretKey) {
  var res = tweetnacl_1["default"].sign.keyPair.fromSeed(new Uint8Array(secretKey));
  return {
    publicKey: Buffer.from(res.publicKey),
    secretKey: Buffer.from(res.secretKey)
  };
}
exports.keyPairFromSeed = keyPairFromSeed;
function sign(data, secretKey) {
  return Buffer.from(tweetnacl_1["default"].sign.detached(new Uint8Array(data), new Uint8Array(secretKey)));
}
exports.sign = sign;
function signVerify(data, signature, publicKey) {
  return tweetnacl_1["default"].sign.detached.verify(new Uint8Array(data), new Uint8Array(signature), new Uint8Array(publicKey));
}
exports.signVerify = signVerify;
function sealBox(data, nonce, key) {
  return Buffer.from(tweetnacl_1["default"].secretbox(data, nonce, key));
}
exports.sealBox = sealBox;
function openBox(data, nonce, key) {
  var res = tweetnacl_1["default"].secretbox.open(data, nonce, key);
  if (!res) {
    return null;
  }
  return Buffer.from(res);
}
exports.openBox = openBox;

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":196,"tweetnacl":207}],101:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pbkdf2_sha512 = void 0;
var crypto_primitives_1 = require("@ton/crypto-primitives");
function pbkdf2_sha512(key, salt, iterations, keyLen) {
  return (0, crypto_primitives_1.pbkdf2_sha512)(key, salt, iterations, keyLen);
}
exports.pbkdf2_sha512 = pbkdf2_sha512;

},{"@ton/crypto-primitives":83}],102:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sha256 = exports.sha256_fallback = exports.sha256_sync = void 0;
var jssha_1 = __importDefault(require("jssha"));
var crypto_primitives_1 = require("@ton/crypto-primitives");
function sha256_sync(source) {
  var src;
  if (typeof source === 'string') {
    src = Buffer.from(source, 'utf-8').toString('hex');
  } else {
    src = source.toString('hex');
  }
  var hasher = new jssha_1["default"]('SHA-256', 'HEX');
  hasher.update(src);
  var res = hasher.getHash('HEX');
  return Buffer.from(res, 'hex');
}
exports.sha256_sync = sha256_sync;
function sha256_fallback(_x) {
  return _sha256_fallback.apply(this, arguments);
}
function _sha256_fallback() {
  _sha256_fallback = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(source) {
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          return _context.abrupt("return", sha256_sync(source));
        case 1:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return _sha256_fallback.apply(this, arguments);
}
exports.sha256_fallback = sha256_fallback;
function sha256(source) {
  return (0, crypto_primitives_1.sha256)(source);
}
exports.sha256 = sha256;

}).call(this)}).call(this,require("buffer").Buffer)
},{"@ton/crypto-primitives":83,"buffer":196,"jssha":202}],103:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sha512 = exports.sha512_fallback = exports.sha512_sync = void 0;
var jssha_1 = __importDefault(require("jssha"));
var crypto_primitives_1 = require("@ton/crypto-primitives");
function sha512_sync(source) {
  var src;
  if (typeof source === 'string') {
    src = Buffer.from(source, 'utf-8').toString('hex');
  } else {
    src = source.toString('hex');
  }
  var hasher = new jssha_1["default"]('SHA-512', 'HEX');
  hasher.update(src);
  var res = hasher.getHash('HEX');
  return Buffer.from(res, 'hex');
}
exports.sha512_sync = sha512_sync;
function sha512_fallback(_x) {
  return _sha512_fallback.apply(this, arguments);
}
function _sha512_fallback() {
  _sha512_fallback = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(source) {
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          return _context.abrupt("return", sha512_sync(source));
        case 1:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return _sha512_fallback.apply(this, arguments);
}
exports.sha512_fallback = sha512_fallback;
function sha512(_x2) {
  return _sha.apply(this, arguments);
}
function _sha() {
  _sha = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(source) {
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          return _context2.abrupt("return", (0, crypto_primitives_1.sha512)(source));
        case 1:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return _sha.apply(this, arguments);
}
exports.sha512 = sha512;

}).call(this)}).call(this,require("buffer").Buffer)
},{"@ton/crypto-primitives":83,"buffer":196,"jssha":202}],104:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bitsToBytes = exports.bytesToBits = exports.lpad = void 0;
function lpad(str, padString, length) {
  while (str.length < length) {
    str = padString + str;
  }
  return str;
}
exports.lpad = lpad;
function bytesToBits(bytes) {
  var res = '';
  for (var i = 0; i < bytes.length; i++) {
    var x = bytes.at(i);
    res += lpad(x.toString(2), '0', 8);
  }
  return res;
}
exports.bytesToBits = bytesToBits;
function bitsToBytes(src) {
  if (src.length % 8 !== 0) {
    throw Error('Uneven bits');
  }
  var res = [];
  while (src.length > 0) {
    res.push(parseInt(src.slice(0, 8), 2));
    src = src.slice(8);
  }
  return Buffer.from(res);
}
exports.bitsToBytes = bitsToBytes;

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":196}],105:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TonClient = void 0;
var HttpApi_1 = require("./api/HttpApi");
var core_1 = require("@ton/core");
var TonClient = /*#__PURE__*/function () {
  function TonClient(parameters) {
    _classCallCheck(this, TonClient);
    this.parameters = {
      endpoint: parameters.endpoint
    };
    this.api = new HttpApi_1.HttpApi(this.parameters.endpoint, {
      timeout: parameters.timeout,
      apiKey: parameters.apiKey,
      adapter: parameters.httpAdapter
    });
  }
  /**
   * Get Address Balance
   * @param address address for balance check
   * @returns balance
   */
  return _createClass(TonClient, [{
    key: "getBalance",
    value: (function () {
      var _getBalance = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(address) {
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return this.getContractState(address);
            case 2:
              return _context.abrupt("return", _context.sent.balance);
            case 3:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function getBalance(_x) {
        return _getBalance.apply(this, arguments);
      }
      return getBalance;
    }()
    /**
     * Invoke get method
     * @param address contract address
     * @param name name of method
     * @param params optional parameters
     * @returns stack and gas_used field
     */
    )
  }, {
    key: "runMethod",
    value: (function () {
      var _runMethod = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(address, name) {
        var stack,
          res,
          _args2 = arguments;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              stack = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : [];
              _context2.next = 3;
              return this.api.callGetMethod(address, name, stack);
            case 3:
              res = _context2.sent;
              if (!(res.exit_code !== 0)) {
                _context2.next = 6;
                break;
              }
              throw Error('Unable to execute get method. Got exit_code: ' + res.exit_code);
            case 6:
              return _context2.abrupt("return", {
                gas_used: res.gas_used,
                stack: parseStack(res.stack)
              });
            case 7:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function runMethod(_x2, _x3) {
        return _runMethod.apply(this, arguments);
      }
      return runMethod;
    }()
    /**
     * Invoke get method
     * @param address contract address
     * @param name name of method
     * @param params optional parameters
     * @returns stack and gas_used field
     * @deprecated use runMethod instead
     */
    )
  }, {
    key: "callGetMethod",
    value: (function () {
      var _callGetMethod = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(address, name) {
        var stack,
          _args3 = arguments;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              stack = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : [];
              return _context3.abrupt("return", this.runMethod(address, name, stack));
            case 2:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
      function callGetMethod(_x4, _x5) {
        return _callGetMethod.apply(this, arguments);
      }
      return callGetMethod;
    }()
    /**
     * Invoke get method that returns error code instead of throwing error
     * @param address contract address
     * @param name name of method
     * @param params optional parameters
     * @returns stack and gas_used field
    */
    )
  }, {
    key: "runMethodWithError",
    value: (function () {
      var _runMethodWithError = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(address, name) {
        var params,
          res,
          _args4 = arguments;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              params = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : [];
              _context4.next = 3;
              return this.api.callGetMethod(address, name, params);
            case 3:
              res = _context4.sent;
              return _context4.abrupt("return", {
                gas_used: res.gas_used,
                stack: parseStack(res.stack),
                exit_code: res.exit_code
              });
            case 5:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
      function runMethodWithError(_x6, _x7) {
        return _runMethodWithError.apply(this, arguments);
      }
      return runMethodWithError;
    }()
    /**
     * Invoke get method that returns error code instead of throwing error
     * @param address contract address
     * @param name name of method
     * @param params optional parameters
     * @returns stack and gas_used field
     * @deprecated use runMethodWithError instead
     */
    )
  }, {
    key: "callGetMethodWithError",
    value: (function () {
      var _callGetMethodWithError = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(address, name) {
        var stack,
          _args5 = arguments;
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              stack = _args5.length > 2 && _args5[2] !== undefined ? _args5[2] : [];
              return _context5.abrupt("return", this.runMethodWithError(address, name, stack));
            case 2:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this);
      }));
      function callGetMethodWithError(_x8, _x9) {
        return _callGetMethodWithError.apply(this, arguments);
      }
      return callGetMethodWithError;
    }()
    /**
     * Get transactions
     * @param address address
     */
    )
  }, {
    key: "getTransactions",
    value: (function () {
      var _getTransactions = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(address, opts) {
        var tx, res, _iterator, _step, r;
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return this.api.getTransactions(address, opts);
            case 2:
              tx = _context6.sent;
              res = [];
              _iterator = _createForOfIteratorHelper(tx);
              try {
                for (_iterator.s(); !(_step = _iterator.n()).done;) {
                  r = _step.value;
                  res.push((0, core_1.loadTransaction)(core_1.Cell.fromBoc(Buffer.from(r.data, 'base64'))[0].beginParse()));
                }
              } catch (err) {
                _iterator.e(err);
              } finally {
                _iterator.f();
              }
              return _context6.abrupt("return", res);
            case 7:
            case "end":
              return _context6.stop();
          }
        }, _callee6, this);
      }));
      function getTransactions(_x10, _x11) {
        return _getTransactions.apply(this, arguments);
      }
      return getTransactions;
    }()
    /**
     * Get transaction by it's id
     * @param address address
     * @param lt logical time
     * @param hash transaction hash
     * @returns transaction or null if not exist
     */
    )
  }, {
    key: "getTransaction",
    value: (function () {
      var _getTransaction = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(address, lt, hash) {
        var res;
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              _context7.next = 2;
              return this.api.getTransaction(address, lt, hash);
            case 2:
              res = _context7.sent;
              if (!res) {
                _context7.next = 7;
                break;
              }
              return _context7.abrupt("return", (0, core_1.loadTransaction)(core_1.Cell.fromBoc(Buffer.from(res.data, 'base64'))[0].beginParse()));
            case 7:
              return _context7.abrupt("return", null);
            case 8:
            case "end":
              return _context7.stop();
          }
        }, _callee7, this);
      }));
      function getTransaction(_x12, _x13, _x14) {
        return _getTransaction.apply(this, arguments);
      }
      return getTransaction;
    }()
    /**
     * Locate outcoming transaction of destination address by incoming message
     * @param source message source address
     * @param destination message destination address
     * @param created_lt message's created lt
     * @returns transaction
     */
    )
  }, {
    key: "tryLocateResultTx",
    value: (function () {
      var _tryLocateResultTx = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(source, destination, created_lt) {
        var res;
        return _regeneratorRuntime().wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              _context8.next = 2;
              return this.api.tryLocateResultTx(source, destination, created_lt);
            case 2:
              res = _context8.sent;
              return _context8.abrupt("return", (0, core_1.loadTransaction)(core_1.Cell.fromBase64(res.data).beginParse()));
            case 4:
            case "end":
              return _context8.stop();
          }
        }, _callee8, this);
      }));
      function tryLocateResultTx(_x15, _x16, _x17) {
        return _tryLocateResultTx.apply(this, arguments);
      }
      return tryLocateResultTx;
    }()
    /**
     * Locate incoming transaction of source address by outcoming message
     * @param source message source address
     * @param destination message destination address
     * @param created_lt message's created lt
     * @returns transaction
     */
    )
  }, {
    key: "tryLocateSourceTx",
    value: (function () {
      var _tryLocateSourceTx = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(source, destination, created_lt) {
        var res;
        return _regeneratorRuntime().wrap(function _callee9$(_context9) {
          while (1) switch (_context9.prev = _context9.next) {
            case 0:
              _context9.next = 2;
              return this.api.tryLocateSourceTx(source, destination, created_lt);
            case 2:
              res = _context9.sent;
              return _context9.abrupt("return", (0, core_1.loadTransaction)(core_1.Cell.fromBase64(res.data).beginParse()));
            case 4:
            case "end":
              return _context9.stop();
          }
        }, _callee9, this);
      }));
      function tryLocateSourceTx(_x18, _x19, _x20) {
        return _tryLocateSourceTx.apply(this, arguments);
      }
      return tryLocateSourceTx;
    }()
    /**
     * Fetch latest masterchain info
     * @returns masterchain info
     */
    )
  }, {
    key: "getMasterchainInfo",
    value: (function () {
      var _getMasterchainInfo = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {
        var r;
        return _regeneratorRuntime().wrap(function _callee10$(_context10) {
          while (1) switch (_context10.prev = _context10.next) {
            case 0:
              _context10.next = 2;
              return this.api.getMasterchainInfo();
            case 2:
              r = _context10.sent;
              return _context10.abrupt("return", {
                workchain: r.init.workchain,
                shard: r.last.shard,
                initSeqno: r.init.seqno,
                latestSeqno: r.last.seqno
              });
            case 4:
            case "end":
              return _context10.stop();
          }
        }, _callee10, this);
      }));
      function getMasterchainInfo() {
        return _getMasterchainInfo.apply(this, arguments);
      }
      return getMasterchainInfo;
    }()
    /**
     * Fetch latest workchain shards
     * @param seqno masterchain seqno
     */
    )
  }, {
    key: "getWorkchainShards",
    value: (function () {
      var _getWorkchainShards = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(seqno) {
        var r;
        return _regeneratorRuntime().wrap(function _callee11$(_context11) {
          while (1) switch (_context11.prev = _context11.next) {
            case 0:
              _context11.next = 2;
              return this.api.getShards(seqno);
            case 2:
              r = _context11.sent;
              return _context11.abrupt("return", r.map(function (m) {
                return {
                  workchain: m.workchain,
                  shard: m.shard,
                  seqno: m.seqno
                };
              }));
            case 4:
            case "end":
              return _context11.stop();
          }
        }, _callee11, this);
      }));
      function getWorkchainShards(_x21) {
        return _getWorkchainShards.apply(this, arguments);
      }
      return getWorkchainShards;
    }()
    /**
     * Fetch transactions inf shards
     * @param workchain
     * @param seqno
     * @param shard
     */
    )
  }, {
    key: "getShardTransactions",
    value: (function () {
      var _getShardTransactions = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(workchain, seqno, shard) {
        var tx;
        return _regeneratorRuntime().wrap(function _callee12$(_context12) {
          while (1) switch (_context12.prev = _context12.next) {
            case 0:
              _context12.next = 2;
              return this.api.getBlockTransactions(workchain, seqno, shard);
            case 2:
              tx = _context12.sent;
              if (!tx.incomplete) {
                _context12.next = 5;
                break;
              }
              throw Error('Unsupported');
            case 5:
              return _context12.abrupt("return", tx.transactions.map(function (v) {
                return {
                  account: core_1.Address.parseRaw(v.account),
                  lt: v.lt,
                  hash: v.hash
                };
              }));
            case 6:
            case "end":
              return _context12.stop();
          }
        }, _callee12, this);
      }));
      function getShardTransactions(_x22, _x23, _x24) {
        return _getShardTransactions.apply(this, arguments);
      }
      return getShardTransactions;
    }()
    /**
     * Send message to a network
     * @param src source message
     */
    )
  }, {
    key: "sendMessage",
    value: (function () {
      var _sendMessage = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13(src) {
        var boc;
        return _regeneratorRuntime().wrap(function _callee13$(_context13) {
          while (1) switch (_context13.prev = _context13.next) {
            case 0:
              boc = (0, core_1.beginCell)().store((0, core_1.storeMessage)(src)).endCell().toBoc();
              _context13.next = 3;
              return this.api.sendBoc(boc);
            case 3:
            case "end":
              return _context13.stop();
          }
        }, _callee13, this);
      }));
      function sendMessage(_x25) {
        return _sendMessage.apply(this, arguments);
      }
      return sendMessage;
    }()
    /**
     * Send file to a network
     * @param src source file
     */
    )
  }, {
    key: "sendFile",
    value: (function () {
      var _sendFile = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14(src) {
        return _regeneratorRuntime().wrap(function _callee14$(_context14) {
          while (1) switch (_context14.prev = _context14.next) {
            case 0:
              _context14.next = 2;
              return this.api.sendBoc(src);
            case 2:
            case "end":
              return _context14.stop();
          }
        }, _callee14, this);
      }));
      function sendFile(_x26) {
        return _sendFile.apply(this, arguments);
      }
      return sendFile;
    }()
    /**
     * Estimate fees for external message
     * @param address target address
     * @returns
     */
    )
  }, {
    key: "estimateExternalMessageFee",
    value: (function () {
      var _estimateExternalMessageFee = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15(address, args) {
        return _regeneratorRuntime().wrap(function _callee15$(_context15) {
          while (1) switch (_context15.prev = _context15.next) {
            case 0:
              _context15.next = 2;
              return this.api.estimateFee(address, {
                body: args.body,
                initCode: args.initCode,
                initData: args.initData,
                ignoreSignature: args.ignoreSignature
              });
            case 2:
              return _context15.abrupt("return", _context15.sent);
            case 3:
            case "end":
              return _context15.stop();
          }
        }, _callee15, this);
      }));
      function estimateExternalMessageFee(_x27, _x28) {
        return _estimateExternalMessageFee.apply(this, arguments);
      }
      return estimateExternalMessageFee;
    }()
    /**
     * Send external message to contract
     * @param contract contract to send message
     * @param src message body
     */
    )
  }, {
    key: "sendExternalMessage",
    value: (function () {
      var _sendExternalMessage = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16(contract, src) {
        var message, _message;
        return _regeneratorRuntime().wrap(function _callee16$(_context16) {
          while (1) switch (_context16.prev = _context16.next) {
            case 0:
              _context16.next = 2;
              return this.isContractDeployed(contract.address);
            case 2:
              _context16.t0 = _context16.sent;
              if (_context16.t0) {
                _context16.next = 5;
                break;
              }
              _context16.t0 = !contract.init;
            case 5:
              if (!_context16.t0) {
                _context16.next = 11;
                break;
              }
              message = (0, core_1.external)({
                to: contract.address,
                body: src
              });
              _context16.next = 9;
              return this.sendMessage(message);
            case 9:
              _context16.next = 14;
              break;
            case 11:
              _message = (0, core_1.external)({
                to: contract.address,
                init: contract.init,
                body: src
              });
              _context16.next = 14;
              return this.sendMessage(_message);
            case 14:
            case "end":
              return _context16.stop();
          }
        }, _callee16, this);
      }));
      function sendExternalMessage(_x29, _x30) {
        return _sendExternalMessage.apply(this, arguments);
      }
      return sendExternalMessage;
    }()
    /**
     * Check if contract is deployed
     * @param address addres to check
     * @returns true if contract is in active state
     */
    )
  }, {
    key: "isContractDeployed",
    value: (function () {
      var _isContractDeployed = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee17(address) {
        return _regeneratorRuntime().wrap(function _callee17$(_context17) {
          while (1) switch (_context17.prev = _context17.next) {
            case 0:
              _context17.next = 2;
              return this.getContractState(address);
            case 2:
              _context17.t0 = _context17.sent.state;
              return _context17.abrupt("return", _context17.t0 === 'active');
            case 4:
            case "end":
              return _context17.stop();
          }
        }, _callee17, this);
      }));
      function isContractDeployed(_x31) {
        return _isContractDeployed.apply(this, arguments);
      }
      return isContractDeployed;
    }()
    /**
     * Resolves contract state
     * @param address contract address
     */
    )
  }, {
    key: "getContractState",
    value: (function () {
      var _getContractState = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee18(address) {
        var info, balance, state;
        return _regeneratorRuntime().wrap(function _callee18$(_context18) {
          while (1) switch (_context18.prev = _context18.next) {
            case 0:
              _context18.next = 2;
              return this.api.getAddressInformation(address);
            case 2:
              info = _context18.sent;
              balance = BigInt(info.balance);
              state = info.state;
              return _context18.abrupt("return", {
                balance: balance,
                state: state,
                code: info.code !== '' ? Buffer.from(info.code, 'base64') : null,
                data: info.data !== '' ? Buffer.from(info.data, 'base64') : null,
                lastTransaction: info.last_transaction_id.lt !== '0' ? {
                  lt: info.last_transaction_id.lt,
                  hash: info.last_transaction_id.hash
                } : null,
                blockId: {
                  workchain: info.block_id.workchain,
                  shard: info.block_id.shard,
                  seqno: info.block_id.seqno
                },
                timestampt: info.sync_utime
              });
            case 6:
            case "end":
              return _context18.stop();
          }
        }, _callee18, this);
      }));
      function getContractState(_x32) {
        return _getContractState.apply(this, arguments);
      }
      return getContractState;
    }()
    /**
     * Open contract
     * @param src source contract
     * @returns contract
     */
    )
  }, {
    key: "open",
    value: function open(src) {
      var _this = this;
      return (0, core_1.openContract)(src, function (args) {
        return createProvider(_this, args.address, args.init);
      });
    }
    /**
     * Create a provider
     * @param address address
     * @param init optional init
     * @returns provider
     */
  }, {
    key: "provider",
    value: function provider(address, init) {
      return createProvider(this, address, init !== null && init !== void 0 ? init : null);
    }
  }]);
}();
exports.TonClient = TonClient;
function parseStackEntry(x) {
  var typeName = x['@type'];
  switch (typeName) {
    case 'tvm.list':
    case 'tvm.tuple':
      return x.elements.map(parseStackEntry);
    case 'tvm.cell':
      return core_1.Cell.fromBoc(Buffer.from(x.bytes, 'base64'))[0];
    case 'tvm.slice':
      return core_1.Cell.fromBoc(Buffer.from(x.bytes, 'base64'))[0];
    case 'tvm.stackEntryCell':
      return parseStackEntry(x.cell);
    case 'tvm.stackEntrySlice':
      return parseStackEntry(x.slice);
    case 'tvm.stackEntryTuple':
      return parseStackEntry(x.tuple);
    case 'tvm.stackEntryList':
      return parseStackEntry(x.list);
    case 'tvm.stackEntryNumber':
      return parseStackEntry(x.number);
    case 'tvm.numberDecimal':
      return BigInt(x.number);
    default:
      throw Error('Unsupported item type: ' + typeName);
  }
}
function parseStackItem(s) {
  if (s[0] === 'num') {
    var val = s[1];
    if (val.startsWith('-')) {
      return {
        type: 'int',
        value: -BigInt(val.slice(1))
      };
    } else {
      return {
        type: 'int',
        value: BigInt(val)
      };
    }
  } else if (s[0] === 'null') {
    return {
      type: 'null'
    };
  } else if (s[0] === 'cell') {
    return {
      type: 'cell',
      cell: core_1.Cell.fromBoc(Buffer.from(s[1].bytes, 'base64'))[0]
    };
  } else if (s[0] === 'slice') {
    return {
      type: 'slice',
      cell: core_1.Cell.fromBoc(Buffer.from(s[1].bytes, 'base64'))[0]
    };
  } else if (s[0] === 'builder') {
    return {
      type: 'builder',
      cell: core_1.Cell.fromBoc(Buffer.from(s[1].bytes, 'base64'))[0]
    };
  } else if (s[0] === 'tuple' || s[0] === 'list') {
    if (s[1].elements.length === 0) {
      return {
        type: 'null'
      };
    }
    return {
      type: 'tuple',
      items: s[1].elements.map(parseStackEntry)
    };
  } else {
    throw Error('Unsupported stack item type: ' + s[0]);
  }
}
function parseStack(src) {
  var stack = [];
  var _iterator2 = _createForOfIteratorHelper(src),
    _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var s = _step2.value;
      stack.push(parseStackItem(s));
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  return new core_1.TupleReader(stack);
}
function createProvider(client, address, init) {
  return {
    getState: function getState() {
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee19() {
        var state, balance, last, storage;
        return _regeneratorRuntime().wrap(function _callee19$(_context19) {
          while (1) switch (_context19.prev = _context19.next) {
            case 0:
              _context19.next = 2;
              return client.getContractState(address);
            case 2:
              state = _context19.sent;
              balance = state.balance;
              last = state.lastTransaction ? {
                lt: BigInt(state.lastTransaction.lt),
                hash: Buffer.from(state.lastTransaction.hash, 'base64')
              } : null;
              if (!(state.state === 'active')) {
                _context19.next = 9;
                break;
              }
              storage = {
                type: 'active',
                code: state.code ? state.code : null,
                data: state.data ? state.data : null
              };
              _context19.next = 18;
              break;
            case 9:
              if (!(state.state === 'uninitialized')) {
                _context19.next = 13;
                break;
              }
              storage = {
                type: 'uninit'
              };
              _context19.next = 18;
              break;
            case 13:
              if (!(state.state === 'frozen')) {
                _context19.next = 17;
                break;
              }
              storage = {
                type: 'frozen',
                stateHash: Buffer.alloc(0)
              };
              _context19.next = 18;
              break;
            case 17:
              throw Error('Unsupported state');
            case 18:
              return _context19.abrupt("return", {
                balance: balance,
                last: last,
                state: storage
              });
            case 19:
            case "end":
              return _context19.stop();
          }
        }, _callee19);
      }))();
    },
    get: function get(name, args) {
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee20() {
        var method;
        return _regeneratorRuntime().wrap(function _callee20$(_context20) {
          while (1) switch (_context20.prev = _context20.next) {
            case 0:
              if (!(typeof name !== 'string')) {
                _context20.next = 2;
                break;
              }
              throw new Error('Method name must be a string for TonClient provider');
            case 2:
              _context20.next = 4;
              return client.runMethod(address, name, args);
            case 4:
              method = _context20.sent;
              return _context20.abrupt("return", {
                stack: method.stack
              });
            case 6:
            case "end":
              return _context20.stop();
          }
        }, _callee20);
      }))();
    },
    external: function external(message) {
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee21() {
        var neededInit, ext, boc;
        return _regeneratorRuntime().wrap(function _callee21$(_context21) {
          while (1) switch (_context21.prev = _context21.next) {
            case 0:
              //
              // Resolve init
              //
              neededInit = null;
              _context21.t0 = init;
              if (!_context21.t0) {
                _context21.next = 6;
                break;
              }
              _context21.next = 5;
              return client.isContractDeployed(address);
            case 5:
              _context21.t0 = !_context21.sent;
            case 6:
              if (!_context21.t0) {
                _context21.next = 8;
                break;
              }
              neededInit = init;
            case 8:
              //
              // Send package
              //
              ext = (0, core_1.external)({
                to: address,
                init: neededInit,
                body: message
              });
              boc = (0, core_1.beginCell)().store((0, core_1.storeMessage)(ext)).endCell().toBoc();
              _context21.next = 12;
              return client.sendFile(boc);
            case 12:
            case "end":
              return _context21.stop();
          }
        }, _callee21);
      }))();
    },
    internal: function internal(via, message) {
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee22() {
        var neededInit, bounce, value, body;
        return _regeneratorRuntime().wrap(function _callee22$(_context22) {
          while (1) switch (_context22.prev = _context22.next) {
            case 0:
              // Resolve init
              neededInit = null;
              _context22.t0 = init;
              if (!_context22.t0) {
                _context22.next = 6;
                break;
              }
              _context22.next = 5;
              return client.isContractDeployed(address);
            case 5:
              _context22.t0 = !_context22.sent;
            case 6:
              if (!_context22.t0) {
                _context22.next = 8;
                break;
              }
              neededInit = init;
            case 8:
              // Resolve bounce
              bounce = true;
              if (message.bounce !== null && message.bounce !== undefined) {
                bounce = message.bounce;
              }
              // Resolve value

              if (typeof message.value === 'string') {
                value = (0, core_1.toNano)(message.value);
              } else {
                value = message.value;
              }
              // Resolve body
              body = null;
              if (typeof message.body === 'string') {
                body = (0, core_1.comment)(message.body);
              } else if (message.body) {
                body = message.body;
              }
              // Send internal message
              _context22.next = 15;
              return via.send({
                to: address,
                value: value,
                bounce: bounce,
                sendMode: message.sendMode,
                init: neededInit,
                body: body
              });
            case 15:
            case "end":
              return _context22.stop();
          }
        }, _callee22);
      }))();
    },
    open: function open(contract) {
      return (0, core_1.openContract)(contract, function (args) {
        var _args$init;
        return createProvider(client, args.address, (_args$init = args.init) !== null && _args$init !== void 0 ? _args$init : null);
      });
    },
    getTransactions: function getTransactions(address, lt, hash, limit) {
      return client.getTransactions(address, {
        limit: limit !== null && limit !== void 0 ? limit : 100,
        lt: lt.toString(),
        hash: hash.toString('base64'),
        inclusive: true
      });
    }
  };
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"./api/HttpApi":107,"@ton/core":35,"buffer":196}],106:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var __classPrivateFieldSet = void 0 && (void 0).__classPrivateFieldSet || function (receiver, state, value, kind, f) {
  if (kind === "m") throw new TypeError("Private method is not writable");
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
};
var __classPrivateFieldGet = void 0 && (void 0).__classPrivateFieldGet || function (receiver, state, kind, f) {
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
var _TonClient4_endpoint, _TonClient4_timeout, _TonClient4_adapter, _TonClient4_axios;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TonClient4 = void 0;
var axios_1 = __importDefault(require("axios"));
var core_1 = require("@ton/core");
var toUrlSafe_1 = require("../utils/toUrlSafe");
var zod_1 = require("zod");
var TonClient4 = /*#__PURE__*/function () {
  function TonClient4(args) {
    _classCallCheck(this, TonClient4);
    _TonClient4_endpoint.set(this, void 0);
    _TonClient4_timeout.set(this, void 0);
    _TonClient4_adapter.set(this, void 0);
    _TonClient4_axios.set(this, void 0);
    __classPrivateFieldSet(this, _TonClient4_axios, axios_1["default"].create(), "f");
    __classPrivateFieldSet(this, _TonClient4_endpoint, args.endpoint, "f");
    __classPrivateFieldSet(this, _TonClient4_timeout, args.timeout || 5000, "f");
    __classPrivateFieldSet(this, _TonClient4_adapter, args.httpAdapter, "f");
    if (args.requestInterceptor) {
      __classPrivateFieldGet(this, _TonClient4_axios, "f").interceptors.request.use(args.requestInterceptor);
    }
  }
  /**
   * Get Last Block
   * @returns last block info
   */
  return _createClass(TonClient4, [{
    key: "getLastBlock",
    value: (function () {
      var _getLastBlock = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var res, lastBlock;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return __classPrivateFieldGet(this, _TonClient4_axios, "f").get(__classPrivateFieldGet(this, _TonClient4_endpoint, "f") + '/block/latest', {
                adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
                timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f")
              });
            case 2:
              res = _context.sent;
              lastBlock = lastBlockCodec.safeParse(res.data);
              if (lastBlock.success) {
                _context.next = 6;
                break;
              }
              throw Error('Mailformed response: ' + lastBlock.error.format()._errors.join(', '));
            case 6:
              return _context.abrupt("return", lastBlock.data);
            case 7:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function getLastBlock() {
        return _getLastBlock.apply(this, arguments);
      }
      return getLastBlock;
    }()
    /**
     * Get block info
     * @param seqno block sequence number
     * @returns block info
     */
    )
  }, {
    key: "getBlock",
    value: (function () {
      var _getBlock = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(seqno) {
        var res, block;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return __classPrivateFieldGet(this, _TonClient4_axios, "f").get(__classPrivateFieldGet(this, _TonClient4_endpoint, "f") + '/block/' + seqno, {
                adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
                timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f")
              });
            case 2:
              res = _context2.sent;
              block = blockCodec.safeParse(res.data);
              if (block.success) {
                _context2.next = 6;
                break;
              }
              throw Error('Mailformed response');
            case 6:
              if (block.data.exist) {
                _context2.next = 8;
                break;
              }
              throw Error('Block is out of scope');
            case 8:
              return _context2.abrupt("return", block.data.block);
            case 9:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function getBlock(_x) {
        return _getBlock.apply(this, arguments);
      }
      return getBlock;
    }()
    /**
     * Get block info by unix timestamp
     * @param ts unix timestamp
     * @returns block info
     */
    )
  }, {
    key: "getBlockByUtime",
    value: (function () {
      var _getBlockByUtime = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(ts) {
        var res, block;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return __classPrivateFieldGet(this, _TonClient4_axios, "f").get(__classPrivateFieldGet(this, _TonClient4_endpoint, "f") + '/block/utime/' + ts, {
                adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
                timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f")
              });
            case 2:
              res = _context3.sent;
              block = blockCodec.safeParse(res.data);
              if (block.success) {
                _context3.next = 6;
                break;
              }
              throw Error('Mailformed response');
            case 6:
              if (block.data.exist) {
                _context3.next = 8;
                break;
              }
              throw Error('Block is out of scope');
            case 8:
              return _context3.abrupt("return", block.data.block);
            case 9:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
      function getBlockByUtime(_x2) {
        return _getBlockByUtime.apply(this, arguments);
      }
      return getBlockByUtime;
    }()
    /**
     * Get block info by unix timestamp
     * @param seqno block sequence number
     * @param address account address
     * @returns account info
     */
    )
  }, {
    key: "getAccount",
    value: (function () {
      var _getAccount = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(seqno, address) {
        var res, account;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return __classPrivateFieldGet(this, _TonClient4_axios, "f").get(__classPrivateFieldGet(this, _TonClient4_endpoint, "f") + '/block/' + seqno + '/' + address.toString({
                urlSafe: true
              }), {
                adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
                timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f")
              });
            case 2:
              res = _context4.sent;
              account = accountCodec.safeParse(res.data);
              if (account.success) {
                _context4.next = 6;
                break;
              }
              throw Error('Mailformed response');
            case 6:
              return _context4.abrupt("return", account.data);
            case 7:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
      function getAccount(_x3, _x4) {
        return _getAccount.apply(this, arguments);
      }
      return getAccount;
    }()
    /**
     * Get account lite info (without code and data)
     * @param seqno block sequence number
     * @param address account address
     * @returns account lite info
     */
    )
  }, {
    key: "getAccountLite",
    value: (function () {
      var _getAccountLite = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(seqno, address) {
        var res, account;
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return __classPrivateFieldGet(this, _TonClient4_axios, "f").get(__classPrivateFieldGet(this, _TonClient4_endpoint, "f") + '/block/' + seqno + '/' + address.toString({
                urlSafe: true
              }) + '/lite', {
                adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
                timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f")
              });
            case 2:
              res = _context5.sent;
              account = accountLiteCodec.safeParse(res.data);
              if (account.success) {
                _context5.next = 6;
                break;
              }
              throw Error('Mailformed response');
            case 6:
              return _context5.abrupt("return", account.data);
            case 7:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this);
      }));
      function getAccountLite(_x5, _x6) {
        return _getAccountLite.apply(this, arguments);
      }
      return getAccountLite;
    }()
    /**
     * Check if contract is deployed
     * @param address addres to check
     * @returns true if contract is in active state
     */
    )
  }, {
    key: "isContractDeployed",
    value: (function () {
      var _isContractDeployed = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(seqno, address) {
        var account;
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return this.getAccountLite(seqno, address);
            case 2:
              account = _context6.sent;
              return _context6.abrupt("return", account.account.state.type === 'active');
            case 4:
            case "end":
              return _context6.stop();
          }
        }, _callee6, this);
      }));
      function isContractDeployed(_x7, _x8) {
        return _isContractDeployed.apply(this, arguments);
      }
      return isContractDeployed;
    }()
    /**
     * Check if account was updated since
     * @param seqno block sequence number
     * @param address account address
     * @param lt account last transaction lt
     * @returns account change info
     */
    )
  }, {
    key: "isAccountChanged",
    value: (function () {
      var _isAccountChanged = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(seqno, address, lt) {
        var res, changed;
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              _context7.next = 2;
              return __classPrivateFieldGet(this, _TonClient4_axios, "f").get(__classPrivateFieldGet(this, _TonClient4_endpoint, "f") + '/block/' + seqno + '/' + address.toString({
                urlSafe: true
              }) + '/changed/' + lt.toString(10), {
                adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
                timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f")
              });
            case 2:
              res = _context7.sent;
              changed = changedCodec.safeParse(res.data);
              if (changed.success) {
                _context7.next = 6;
                break;
              }
              throw Error('Mailformed response');
            case 6:
              return _context7.abrupt("return", changed.data);
            case 7:
            case "end":
              return _context7.stop();
          }
        }, _callee7, this);
      }));
      function isAccountChanged(_x9, _x10, _x11) {
        return _isAccountChanged.apply(this, arguments);
      }
      return isAccountChanged;
    }()
    /**
     * Load unparsed account transactions
     * @param address address
     * @param lt last transaction lt
     * @param hash last transaction hash
     * @returns unparsed transactions
     */
    )
  }, {
    key: "getAccountTransactions",
    value: (function () {
      var _getAccountTransactions = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(address, lt, hash) {
        var res, transactions, data, tx, cells, i;
        return _regeneratorRuntime().wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              _context8.next = 2;
              return __classPrivateFieldGet(this, _TonClient4_axios, "f").get(__classPrivateFieldGet(this, _TonClient4_endpoint, "f") + '/account/' + address.toString({
                urlSafe: true
              }) + '/tx/' + lt.toString(10) + '/' + (0, toUrlSafe_1.toUrlSafe)(hash.toString('base64')), {
                adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
                timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f")
              });
            case 2:
              res = _context8.sent;
              transactions = transactionsCodec.safeParse(res.data);
              if (transactions.success) {
                _context8.next = 6;
                break;
              }
              throw Error('Mailformed response');
            case 6:
              data = transactions.data;
              tx = [];
              cells = core_1.Cell.fromBoc(Buffer.from(data.boc, 'base64'));
              for (i = 0; i < data.blocks.length; i++) {
                tx.push({
                  block: data.blocks[i],
                  tx: (0, core_1.loadTransaction)(cells[i].beginParse())
                });
              }
              return _context8.abrupt("return", tx);
            case 11:
            case "end":
              return _context8.stop();
          }
        }, _callee8, this);
      }));
      function getAccountTransactions(_x12, _x13, _x14) {
        return _getAccountTransactions.apply(this, arguments);
      }
      return getAccountTransactions;
    }()
    /**
     * Load parsed account transactions
     * @param address address
     * @param lt last transaction lt
     * @param hash last transaction hash
     * @param count number of transactions to load
     * @returns parsed transactions
     */
    )
  }, {
    key: "getAccountTransactionsParsed",
    value: (function () {
      var _getAccountTransactionsParsed = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(address, lt, hash) {
        var count,
          res,
          parsedTransactionsRes,
          _args9 = arguments;
        return _regeneratorRuntime().wrap(function _callee9$(_context9) {
          while (1) switch (_context9.prev = _context9.next) {
            case 0:
              count = _args9.length > 3 && _args9[3] !== undefined ? _args9[3] : 20;
              _context9.next = 3;
              return __classPrivateFieldGet(this, _TonClient4_axios, "f").get(__classPrivateFieldGet(this, _TonClient4_endpoint, "f") + '/account/' + address.toString({
                urlSafe: true
              }) + '/tx/parsed/' + lt.toString(10) + '/' + (0, toUrlSafe_1.toUrlSafe)(hash.toString('base64')), {
                adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
                timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f"),
                params: {
                  count: count
                }
              });
            case 3:
              res = _context9.sent;
              parsedTransactionsRes = parsedTransactionsCodec.safeParse(res.data);
              if (parsedTransactionsRes.success) {
                _context9.next = 7;
                break;
              }
              throw Error('Mailformed response');
            case 7:
              return _context9.abrupt("return", parsedTransactionsRes.data);
            case 8:
            case "end":
              return _context9.stop();
          }
        }, _callee9, this);
      }));
      function getAccountTransactionsParsed(_x15, _x16, _x17) {
        return _getAccountTransactionsParsed.apply(this, arguments);
      }
      return getAccountTransactionsParsed;
    }()
    /**
     * Get network config
     * @param seqno block sequence number
     * @param ids optional config ids
     * @returns network config
     */
    )
  }, {
    key: "getConfig",
    value: (function () {
      var _getConfig = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(seqno, ids) {
        var tail, res, config;
        return _regeneratorRuntime().wrap(function _callee10$(_context10) {
          while (1) switch (_context10.prev = _context10.next) {
            case 0:
              tail = '';
              if (ids && ids.length > 0) {
                tail = '/' + _toConsumableArray(ids).sort().join(',');
              }
              _context10.next = 4;
              return __classPrivateFieldGet(this, _TonClient4_axios, "f").get(__classPrivateFieldGet(this, _TonClient4_endpoint, "f") + '/block/' + seqno + '/config' + tail, {
                adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
                timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f")
              });
            case 4:
              res = _context10.sent;
              config = configCodec.safeParse(res.data);
              if (config.success) {
                _context10.next = 8;
                break;
              }
              throw Error('Mailformed response');
            case 8:
              return _context10.abrupt("return", config.data);
            case 9:
            case "end":
              return _context10.stop();
          }
        }, _callee10, this);
      }));
      function getConfig(_x18, _x19) {
        return _getConfig.apply(this, arguments);
      }
      return getConfig;
    }()
    /**
     * Execute run method
     * @param seqno block sequence number
     * @param address account address
     * @param name method name
     * @param args method arguments
     * @returns method result
     */
    )
  }, {
    key: "runMethod",
    value: (function () {
      var _runMethod = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(seqno, address, name, args) {
        var tail, url, res, runMethod, resultTuple;
        return _regeneratorRuntime().wrap(function _callee11$(_context11) {
          while (1) switch (_context11.prev = _context11.next) {
            case 0:
              tail = args && args.length > 0 ? '/' + (0, toUrlSafe_1.toUrlSafe)((0, core_1.serializeTuple)(args).toBoc({
                idx: false,
                crc32: false
              }).toString('base64')) : '';
              url = __classPrivateFieldGet(this, _TonClient4_endpoint, "f") + '/block/' + seqno + '/' + address.toString({
                urlSafe: true
              }) + '/run/' + encodeURIComponent(name) + tail;
              _context11.next = 4;
              return __classPrivateFieldGet(this, _TonClient4_axios, "f").get(url, {
                adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
                timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f")
              });
            case 4:
              res = _context11.sent;
              runMethod = runMethodCodec.safeParse(res.data);
              if (runMethod.success) {
                _context11.next = 8;
                break;
              }
              throw Error('Mailformed response');
            case 8:
              resultTuple = runMethod.data.resultRaw ? (0, core_1.parseTuple)(core_1.Cell.fromBoc(Buffer.from(runMethod.data.resultRaw, 'base64'))[0]) : [];
              return _context11.abrupt("return", {
                exitCode: runMethod.data.exitCode,
                result: resultTuple,
                resultRaw: runMethod.data.resultRaw,
                block: runMethod.data.block,
                shardBlock: runMethod.data.shardBlock,
                reader: new core_1.TupleReader(resultTuple)
              });
            case 10:
            case "end":
              return _context11.stop();
          }
        }, _callee11, this);
      }));
      function runMethod(_x20, _x21, _x22, _x23) {
        return _runMethod.apply(this, arguments);
      }
      return runMethod;
    }()
    /**
     * Send external message
     * @param message message boc
     * @returns message status
     */
    )
  }, {
    key: "sendMessage",
    value: (function () {
      var _sendMessage = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(message) {
        var res, send;
        return _regeneratorRuntime().wrap(function _callee12$(_context12) {
          while (1) switch (_context12.prev = _context12.next) {
            case 0:
              _context12.next = 2;
              return __classPrivateFieldGet(this, _TonClient4_axios, "f").post(__classPrivateFieldGet(this, _TonClient4_endpoint, "f") + '/send', {
                boc: message.toString('base64')
              }, {
                adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
                timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f")
              });
            case 2:
              res = _context12.sent;
              send = sendCodec.safeParse(res.data);
              if (send.success) {
                _context12.next = 6;
                break;
              }
              throw Error('Mailformed response');
            case 6:
              return _context12.abrupt("return", {
                status: res.data.status
              });
            case 7:
            case "end":
              return _context12.stop();
          }
        }, _callee12, this);
      }));
      function sendMessage(_x24) {
        return _sendMessage.apply(this, arguments);
      }
      return sendMessage;
    }()
    /**
     * Open smart contract
     * @param contract contract
     * @returns opened contract
     */
    )
  }, {
    key: "open",
    value: function open(contract) {
      var _this = this;
      return (0, core_1.openContract)(contract, function (args) {
        return createProvider(_this, null, args.address, args.init);
      });
    }
    /**
     * Open smart contract
     * @param block block number
     * @param contract contract
     * @returns opened contract
     */
  }, {
    key: "openAt",
    value: function openAt(block, contract) {
      var _this2 = this;
      return (0, core_1.openContract)(contract, function (args) {
        return createProvider(_this2, block, args.address, args.init);
      });
    }
    /**
     * Create provider
     * @param address address
     * @param init optional init data
     * @returns provider
     */
  }, {
    key: "provider",
    value: function provider(address, init) {
      return createProvider(this, null, address, init !== null && init !== void 0 ? init : null);
    }
    /**
     * Create provider at specified block number
     * @param block block number
     * @param address address
     * @param init optional init data
     * @returns provider
     */
  }, {
    key: "providerAt",
    value: function providerAt(block, address, init) {
      return createProvider(this, block, address, init !== null && init !== void 0 ? init : null);
    }
  }]);
}();
exports.TonClient4 = TonClient4;
_TonClient4_endpoint = new WeakMap(), _TonClient4_timeout = new WeakMap(), _TonClient4_adapter = new WeakMap(), _TonClient4_axios = new WeakMap();
function createProvider(client, block, address, init) {
  return {
    getState: function getState() {
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {
        var sq, res, state, last, storage;
        return _regeneratorRuntime().wrap(function _callee13$(_context13) {
          while (1) switch (_context13.prev = _context13.next) {
            case 0:
              // Resolve block
              sq = block;
              if (!(sq === null)) {
                _context13.next = 6;
                break;
              }
              _context13.next = 4;
              return client.getLastBlock();
            case 4:
              res = _context13.sent;
              sq = res.last.seqno;
            case 6:
              _context13.next = 8;
              return client.getAccount(sq, address);
            case 8:
              state = _context13.sent;
              // Convert state
              last = state.account.last ? {
                lt: BigInt(state.account.last.lt),
                hash: Buffer.from(state.account.last.hash, 'base64')
              } : null;
              if (!(state.account.state.type === 'active')) {
                _context13.next = 14;
                break;
              }
              storage = {
                type: 'active',
                code: state.account.state.code ? Buffer.from(state.account.state.code, 'base64') : null,
                data: state.account.state.data ? Buffer.from(state.account.state.data, 'base64') : null
              };
              _context13.next = 23;
              break;
            case 14:
              if (!(state.account.state.type === 'uninit')) {
                _context13.next = 18;
                break;
              }
              storage = {
                type: 'uninit'
              };
              _context13.next = 23;
              break;
            case 18:
              if (!(state.account.state.type === 'frozen')) {
                _context13.next = 22;
                break;
              }
              storage = {
                type: 'frozen',
                stateHash: Buffer.from(state.account.state.stateHash, 'base64')
              };
              _context13.next = 23;
              break;
            case 22:
              throw Error('Unsupported state');
            case 23:
              return _context13.abrupt("return", {
                balance: BigInt(state.account.balance.coins),
                last: last,
                state: storage
              });
            case 24:
            case "end":
              return _context13.stop();
          }
        }, _callee13);
      }))();
    },
    get: function get(name, args) {
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {
        var sq, res, method;
        return _regeneratorRuntime().wrap(function _callee14$(_context14) {
          while (1) switch (_context14.prev = _context14.next) {
            case 0:
              if (!(typeof name !== 'string')) {
                _context14.next = 2;
                break;
              }
              throw new Error('Method name must be a string for TonClient4 provider');
            case 2:
              sq = block;
              if (!(sq === null)) {
                _context14.next = 8;
                break;
              }
              _context14.next = 6;
              return client.getLastBlock();
            case 6:
              res = _context14.sent;
              sq = res.last.seqno;
            case 8:
              _context14.next = 10;
              return client.runMethod(sq, address, name, args);
            case 10:
              method = _context14.sent;
              if (!(method.exitCode !== 0 && method.exitCode !== 1)) {
                _context14.next = 13;
                break;
              }
              throw Error('Exit code: ' + method.exitCode);
            case 13:
              return _context14.abrupt("return", {
                stack: new core_1.TupleReader(method.result)
              });
            case 14:
            case "end":
              return _context14.stop();
          }
        }, _callee14);
      }))();
    },
    external: function external(message) {
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {
        var last, neededInit, ext, pkg;
        return _regeneratorRuntime().wrap(function _callee15$(_context15) {
          while (1) switch (_context15.prev = _context15.next) {
            case 0:
              _context15.next = 2;
              return client.getLastBlock();
            case 2:
              last = _context15.sent;
              // Resolve init
              neededInit = null;
              _context15.t0 = init;
              if (!_context15.t0) {
                _context15.next = 10;
                break;
              }
              _context15.next = 8;
              return client.getAccountLite(last.last.seqno, address);
            case 8:
              _context15.t1 = _context15.sent.account.state.type;
              _context15.t0 = _context15.t1 !== 'active';
            case 10:
              if (!_context15.t0) {
                _context15.next = 12;
                break;
              }
              neededInit = init;
            case 12:
              // Send with state init
              ext = (0, core_1.external)({
                to: address,
                init: neededInit,
                body: message
              });
              pkg = (0, core_1.beginCell)().store((0, core_1.storeMessage)(ext)).endCell().toBoc();
              _context15.next = 16;
              return client.sendMessage(pkg);
            case 16:
            case "end":
              return _context15.stop();
          }
        }, _callee15);
      }))();
    },
    internal: function internal(via, message) {
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {
        var last, neededInit, bounce, value, body;
        return _regeneratorRuntime().wrap(function _callee16$(_context16) {
          while (1) switch (_context16.prev = _context16.next) {
            case 0:
              _context16.next = 2;
              return client.getLastBlock();
            case 2:
              last = _context16.sent;
              // Resolve init
              neededInit = null;
              _context16.t0 = init;
              if (!_context16.t0) {
                _context16.next = 10;
                break;
              }
              _context16.next = 8;
              return client.getAccountLite(last.last.seqno, address);
            case 8:
              _context16.t1 = _context16.sent.account.state.type;
              _context16.t0 = _context16.t1 !== 'active';
            case 10:
              if (!_context16.t0) {
                _context16.next = 12;
                break;
              }
              neededInit = init;
            case 12:
              // Resolve bounce
              bounce = true;
              if (message.bounce !== null && message.bounce !== undefined) {
                bounce = message.bounce;
              }
              // Resolve value

              if (typeof message.value === 'string') {
                value = (0, core_1.toNano)(message.value);
              } else {
                value = message.value;
              }
              // Resolve body
              body = null;
              if (typeof message.body === 'string') {
                body = (0, core_1.comment)(message.body);
              } else if (message.body) {
                body = message.body;
              }
              // Send internal message
              _context16.next = 19;
              return via.send({
                to: address,
                value: value,
                bounce: bounce,
                sendMode: message.sendMode,
                init: neededInit,
                body: body
              });
            case 19:
            case "end":
              return _context16.stop();
          }
        }, _callee16);
      }))();
    },
    open: function open(contract) {
      return (0, core_1.openContract)(contract, function (args) {
        var _args$init;
        return createProvider(client, block, args.address, (_args$init = args.init) !== null && _args$init !== void 0 ? _args$init : null);
      });
    },
    getTransactions: function getTransactions(address, lt, hash, limit) {
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {
        var useLimit, transactions, _transactions, txs, firstTx, _ref, firstLt, firstHash, needSkipFirst, lastTx, _ref2, lastLt, lastHash;
        return _regeneratorRuntime().wrap(function _callee17$(_context17) {
          while (1) switch (_context17.prev = _context17.next) {
            case 0:
              // Resolve last
              useLimit = typeof limit === 'number';
              if (!(useLimit && limit <= 0)) {
                _context17.next = 3;
                break;
              }
              return _context17.abrupt("return", []);
            case 3:
              // Load transactions
              transactions = [];
            case 4:
              _context17.next = 6;
              return client.getAccountTransactions(address, lt, hash);
            case 6:
              txs = _context17.sent;
              firstTx = txs[0].tx;
              _ref = [firstTx.lt, firstTx.hash()], firstLt = _ref[0], firstHash = _ref[1];
              needSkipFirst = transactions.length > 0 && firstLt === lt && firstHash.equals(hash);
              if (needSkipFirst) {
                txs.shift();
              }
              if (!(txs.length === 0)) {
                _context17.next = 13;
                break;
              }
              return _context17.abrupt("break", 21);
            case 13:
              lastTx = txs[txs.length - 1].tx;
              _ref2 = [lastTx.lt, lastTx.hash()], lastLt = _ref2[0], lastHash = _ref2[1];
              if (!(lastLt === lt && lastHash.equals(hash))) {
                _context17.next = 17;
                break;
              }
              return _context17.abrupt("break", 21);
            case 17:
              (_transactions = transactions).push.apply(_transactions, _toConsumableArray(txs.map(function (tx) {
                return tx.tx;
              })));
              lt = lastLt;
              hash = lastHash;
            case 20:
              if (useLimit && transactions.length < limit) {
                _context17.next = 4;
                break;
              }
            case 21:
              // Apply limit
              if (useLimit) {
                transactions = transactions.slice(0, limit);
              }
              // Return transactions
              return _context17.abrupt("return", transactions);
            case 23:
            case "end":
              return _context17.stop();
          }
        }, _callee17);
      }))();
    }
  };
}
//
// Codecs
//
var lastBlockCodec = zod_1.z.object({
  last: zod_1.z.object({
    seqno: zod_1.z.number(),
    shard: zod_1.z.string(),
    workchain: zod_1.z.number(),
    fileHash: zod_1.z.string(),
    rootHash: zod_1.z.string()
  }),
  init: zod_1.z.object({
    fileHash: zod_1.z.string(),
    rootHash: zod_1.z.string()
  }),
  stateRootHash: zod_1.z.string(),
  now: zod_1.z.number()
});
var blockCodec = zod_1.z.union([zod_1.z.object({
  exist: zod_1.z.literal(false)
}), zod_1.z.object({
  exist: zod_1.z.literal(true),
  block: zod_1.z.object({
    shards: zod_1.z.array(zod_1.z.object({
      workchain: zod_1.z.number(),
      seqno: zod_1.z.number(),
      shard: zod_1.z.string(),
      rootHash: zod_1.z.string(),
      fileHash: zod_1.z.string(),
      transactions: zod_1.z.array(zod_1.z.object({
        account: zod_1.z.string(),
        hash: zod_1.z.string(),
        lt: zod_1.z.string()
      }))
    }))
  })
})]);
// {"lastPaid":1653099243,"duePayment":null,"used":{"bits":119,"cells":1,"publicCells":0}}
var storageStatCodec = zod_1.z.object({
  lastPaid: zod_1.z.number(),
  duePayment: zod_1.z.union([zod_1.z["null"](), zod_1.z.string()]),
  used: zod_1.z.object({
    bits: zod_1.z.number(),
    cells: zod_1.z.number(),
    publicCells: zod_1.z.number()
  })
});
var accountCodec = zod_1.z.object({
  account: zod_1.z.object({
    state: zod_1.z.union([zod_1.z.object({
      type: zod_1.z.literal('uninit')
    }), zod_1.z.object({
      type: zod_1.z.literal('active'),
      code: zod_1.z.union([zod_1.z.string(), zod_1.z["null"]()]),
      data: zod_1.z.union([zod_1.z.string(), zod_1.z["null"]()])
    }), zod_1.z.object({
      type: zod_1.z.literal('frozen'),
      stateHash: zod_1.z.string()
    })]),
    balance: zod_1.z.object({
      coins: zod_1.z.string()
    }),
    last: zod_1.z.union([zod_1.z["null"](), zod_1.z.object({
      lt: zod_1.z.string(),
      hash: zod_1.z.string()
    })]),
    storageStat: zod_1.z.union([zod_1.z["null"](), storageStatCodec])
  }),
  block: zod_1.z.object({
    workchain: zod_1.z.number(),
    seqno: zod_1.z.number(),
    shard: zod_1.z.string(),
    rootHash: zod_1.z.string(),
    fileHash: zod_1.z.string()
  })
});
var accountLiteCodec = zod_1.z.object({
  account: zod_1.z.object({
    state: zod_1.z.union([zod_1.z.object({
      type: zod_1.z.literal('uninit')
    }), zod_1.z.object({
      type: zod_1.z.literal('active'),
      codeHash: zod_1.z.string(),
      dataHash: zod_1.z.string()
    }), zod_1.z.object({
      type: zod_1.z.literal('frozen'),
      stateHash: zod_1.z.string()
    })]),
    balance: zod_1.z.object({
      coins: zod_1.z.string()
    }),
    last: zod_1.z.union([zod_1.z["null"](), zod_1.z.object({
      lt: zod_1.z.string(),
      hash: zod_1.z.string()
    })]),
    storageStat: zod_1.z.union([zod_1.z["null"](), storageStatCodec])
  })
});
var changedCodec = zod_1.z.object({
  changed: zod_1.z["boolean"](),
  block: zod_1.z.object({
    workchain: zod_1.z.number(),
    seqno: zod_1.z.number(),
    shard: zod_1.z.string(),
    rootHash: zod_1.z.string(),
    fileHash: zod_1.z.string()
  })
});
var runMethodCodec = zod_1.z.object({
  exitCode: zod_1.z.number(),
  resultRaw: zod_1.z.union([zod_1.z.string(), zod_1.z["null"]()]),
  block: zod_1.z.object({
    workchain: zod_1.z.number(),
    seqno: zod_1.z.number(),
    shard: zod_1.z.string(),
    rootHash: zod_1.z.string(),
    fileHash: zod_1.z.string()
  }),
  shardBlock: zod_1.z.object({
    workchain: zod_1.z.number(),
    seqno: zod_1.z.number(),
    shard: zod_1.z.string(),
    rootHash: zod_1.z.string(),
    fileHash: zod_1.z.string()
  })
});
var configCodec = zod_1.z.object({
  config: zod_1.z.object({
    cell: zod_1.z.string(),
    address: zod_1.z.string(),
    globalBalance: zod_1.z.object({
      coins: zod_1.z.string()
    })
  })
});
var sendCodec = zod_1.z.object({
  status: zod_1.z.number()
});
var blocksCodec = zod_1.z.array(zod_1.z.object({
  workchain: zod_1.z.number(),
  seqno: zod_1.z.number(),
  shard: zod_1.z.string(),
  rootHash: zod_1.z.string(),
  fileHash: zod_1.z.string()
}));
var transactionsCodec = zod_1.z.object({
  blocks: blocksCodec,
  boc: zod_1.z.string()
});
var parsedAddressExternalCodec = zod_1.z.object({
  bits: zod_1.z.number(),
  data: zod_1.z.string()
});
var parsedMessageInfoCodec = zod_1.z.union([zod_1.z.object({
  type: zod_1.z.literal('internal'),
  value: zod_1.z.string(),
  dest: zod_1.z.string(),
  src: zod_1.z.string(),
  bounced: zod_1.z["boolean"](),
  bounce: zod_1.z["boolean"](),
  ihrDisabled: zod_1.z["boolean"](),
  createdAt: zod_1.z.number(),
  createdLt: zod_1.z.string(),
  fwdFee: zod_1.z.string(),
  ihrFee: zod_1.z.string()
}), zod_1.z.object({
  type: zod_1.z.literal('external-in'),
  dest: zod_1.z.string(),
  src: zod_1.z.union([parsedAddressExternalCodec, zod_1.z["null"]()]),
  importFee: zod_1.z.string()
}), zod_1.z.object({
  type: zod_1.z.literal('external-out'),
  dest: zod_1.z.union([parsedAddressExternalCodec, zod_1.z["null"]()])
})]);
var parsedStateInitCodec = zod_1.z.object({
  splitDepth: zod_1.z.union([zod_1.z.number(), zod_1.z["null"]()]),
  code: zod_1.z.union([zod_1.z.string(), zod_1.z["null"]()]),
  data: zod_1.z.union([zod_1.z.string(), zod_1.z["null"]()]),
  special: zod_1.z.union([zod_1.z.object({
    tick: zod_1.z["boolean"](),
    tock: zod_1.z["boolean"]()
  }), zod_1.z["null"]()])
});
var parsedMessageCodec = zod_1.z.object({
  body: zod_1.z.string(),
  info: parsedMessageInfoCodec,
  init: zod_1.z.union([parsedStateInitCodec, zod_1.z["null"]()])
});
var accountStatusCodec = zod_1.z.union([zod_1.z.literal('uninitialized'), zod_1.z.literal('frozen'), zod_1.z.literal('active'), zod_1.z.literal('non-existing')]);
var txBodyCodec = zod_1.z.union([zod_1.z.object({
  type: zod_1.z.literal('comment'),
  comment: zod_1.z.string()
}), zod_1.z.object({
  type: zod_1.z.literal('payload'),
  cell: zod_1.z.string()
})]);
var parsedOperationItemCodec = zod_1.z.union([zod_1.z.object({
  kind: zod_1.z.literal('ton'),
  amount: zod_1.z.string()
}), zod_1.z.object({
  kind: zod_1.z.literal('token'),
  amount: zod_1.z.string()
})]);
var supportedMessageTypeCodec = zod_1.z.union([zod_1.z.literal('jetton::excesses'), zod_1.z.literal('jetton::transfer'), zod_1.z.literal('jetton::transfer_notification'), zod_1.z.literal('deposit'), zod_1.z.literal('deposit::ok'), zod_1.z.literal('withdraw'), zod_1.z.literal('withdraw::all'), zod_1.z.literal('withdraw::delayed'), zod_1.z.literal('withdraw::ok'), zod_1.z.literal('airdrop')]);
var opCodec = zod_1.z.object({
  type: supportedMessageTypeCodec,
  options: zod_1.z.optional(zod_1.z.record(zod_1.z.string()))
});
var parsedOperationCodec = zod_1.z.object({
  address: zod_1.z.string(),
  comment: zod_1.z.optional(zod_1.z.string()),
  items: zod_1.z.array(parsedOperationItemCodec),
  op: zod_1.z.optional(opCodec)
});
var parsedTransactionCodec = zod_1.z.object({
  address: zod_1.z.string(),
  lt: zod_1.z.string(),
  hash: zod_1.z.string(),
  prevTransaction: zod_1.z.object({
    lt: zod_1.z.string(),
    hash: zod_1.z.string()
  }),
  time: zod_1.z.number(),
  outMessagesCount: zod_1.z.number(),
  oldStatus: accountStatusCodec,
  newStatus: accountStatusCodec,
  fees: zod_1.z.string(),
  update: zod_1.z.object({
    oldHash: zod_1.z.string(),
    newHash: zod_1.z.string()
  }),
  inMessage: zod_1.z.union([parsedMessageCodec, zod_1.z["null"]()]),
  outMessages: zod_1.z.array(parsedMessageCodec),
  parsed: zod_1.z.object({
    seqno: zod_1.z.union([zod_1.z.number(), zod_1.z["null"]()]),
    body: zod_1.z.union([txBodyCodec, zod_1.z["null"]()]),
    status: zod_1.z.union([zod_1.z.literal('success'), zod_1.z.literal('failed'), zod_1.z.literal('pending')]),
    dest: zod_1.z.union([zod_1.z.string(), zod_1.z["null"]()]),
    kind: zod_1.z.union([zod_1.z.literal('out'), zod_1.z.literal('in')]),
    amount: zod_1.z.string(),
    resolvedAddress: zod_1.z.string(),
    bounced: zod_1.z["boolean"](),
    mentioned: zod_1.z.array(zod_1.z.string())
  }),
  operation: parsedOperationCodec
});
var parsedTransactionsCodec = zod_1.z.object({
  blocks: blocksCodec,
  transactions: zod_1.z.array(parsedTransactionCodec)
});

}).call(this)}).call(this,require("buffer").Buffer)
},{"../utils/toUrlSafe":118,"@ton/core":35,"axios":144,"buffer":196,"zod":209}],107:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HttpApi = void 0;
/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var TonCache_1 = require("./TonCache");
var dataloader_1 = __importDefault(require("dataloader"));
var axios_1 = __importDefault(require("axios"));
var zod_1 = require("zod");
var version = require('../../../package.json').version;
var blockIdExt = zod_1.z.object({
  '@type': zod_1.z.literal('ton.blockIdExt'),
  workchain: zod_1.z.number(),
  shard: zod_1.z.string(),
  seqno: zod_1.z.number(),
  root_hash: zod_1.z.string(),
  file_hash: zod_1.z.string()
});
var addressInformation = zod_1.z.object({
  balance: zod_1.z.union([zod_1.z.number(), zod_1.z.string()]),
  state: zod_1.z.union([zod_1.z.literal('active'), zod_1.z.literal('uninitialized'), zod_1.z.literal('frozen')]),
  data: zod_1.z.string(),
  code: zod_1.z.string(),
  last_transaction_id: zod_1.z.object({
    '@type': zod_1.z.literal('internal.transactionId'),
    lt: zod_1.z.string(),
    hash: zod_1.z.string()
  }),
  block_id: blockIdExt,
  sync_utime: zod_1.z.number()
});
var bocResponse = zod_1.z.object({
  '@type': zod_1.z.literal('ok')
});
var feeResponse = zod_1.z.object({
  '@type': zod_1.z.literal('query.fees'),
  source_fees: zod_1.z.object({
    '@type': zod_1.z.literal('fees'),
    in_fwd_fee: zod_1.z.number(),
    storage_fee: zod_1.z.number(),
    gas_fee: zod_1.z.number(),
    fwd_fee: zod_1.z.number()
  })
});
var _callGetMethod = zod_1.z.object({
  gas_used: zod_1.z.number(),
  exit_code: zod_1.z.number(),
  stack: zod_1.z.array(zod_1.z.unknown())
});
var messageData = zod_1.z.union([zod_1.z.object({
  '@type': zod_1.z.literal('msg.dataRaw'),
  'body': zod_1.z.string()
}), zod_1.z.object({
  '@type': zod_1.z.literal('msg.dataText'),
  'text': zod_1.z.string()
}), zod_1.z.object({
  '@type': zod_1.z.literal('msg.dataDecryptedText'),
  'text': zod_1.z.string()
}), zod_1.z.object({
  '@type': zod_1.z.literal('msg.dataEncryptedText'),
  'text': zod_1.z.string()
})]);
var message = zod_1.z.object({
  source: zod_1.z.string(),
  destination: zod_1.z.string(),
  value: zod_1.z.string(),
  fwd_fee: zod_1.z.string(),
  ihr_fee: zod_1.z.string(),
  created_lt: zod_1.z.string(),
  body_hash: zod_1.z.string(),
  msg_data: messageData,
  message: zod_1.z.string().optional()
});
var transaction = zod_1.z.object({
  data: zod_1.z.string(),
  utime: zod_1.z.number(),
  transaction_id: zod_1.z.object({
    lt: zod_1.z.string(),
    hash: zod_1.z.string()
  }),
  fee: zod_1.z.string(),
  storage_fee: zod_1.z.string(),
  other_fee: zod_1.z.string(),
  in_msg: zod_1.z.union([zod_1.z.undefined(), message]),
  out_msgs: zod_1.z.array(message)
});
var _getTransactions = zod_1.z.array(transaction);
var getMasterchain = zod_1.z.object({
  state_root_hash: zod_1.z.string(),
  last: blockIdExt,
  init: blockIdExt
});
var getShards = zod_1.z.object({
  shards: zod_1.z.array(blockIdExt)
});
var blockShortTxt = zod_1.z.object({
  '@type': zod_1.z.literal('blocks.shortTxId'),
  mode: zod_1.z.number(),
  account: zod_1.z.string(),
  lt: zod_1.z.string(),
  hash: zod_1.z.string()
});
var getBlockTransactions = zod_1.z.object({
  id: blockIdExt,
  req_count: zod_1.z.number(),
  incomplete: zod_1.z["boolean"](),
  transactions: zod_1.z.array(blockShortTxt)
});
var TypedCache = /*#__PURE__*/function () {
  function TypedCache(namespace, cache, codec, keyEncoder) {
    _classCallCheck(this, TypedCache);
    this.namespace = namespace;
    this.cache = cache;
    this.codec = codec;
    this.keyEncoder = keyEncoder;
  }
  return _createClass(TypedCache, [{
    key: "get",
    value: function () {
      var _get = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(key) {
        var ex, decoded;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return this.cache.get(this.namespace, this.keyEncoder(key));
            case 2:
              ex = _context.sent;
              if (!ex) {
                _context.next = 7;
                break;
              }
              decoded = this.codec.safeParse(JSON.parse(ex));
              if (!decoded.success) {
                _context.next = 7;
                break;
              }
              return _context.abrupt("return", decoded.data);
            case 7:
              return _context.abrupt("return", null);
            case 8:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function get(_x) {
        return _get.apply(this, arguments);
      }
      return get;
    }()
  }, {
    key: "set",
    value: function () {
      var _set = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(key, value) {
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              if (!(value !== null)) {
                _context2.next = 5;
                break;
              }
              _context2.next = 3;
              return this.cache.set(this.namespace, this.keyEncoder(key), JSON.stringify(value));
            case 3:
              _context2.next = 7;
              break;
            case 5:
              _context2.next = 7;
              return this.cache.set(this.namespace, this.keyEncoder(key), null);
            case 7:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function set(_x2, _x3) {
        return _set.apply(this, arguments);
      }
      return set;
    }()
  }]);
}();
var HttpApi = /*#__PURE__*/function () {
  function HttpApi(endpoint, parameters) {
    var _this = this;
    _classCallCheck(this, HttpApi);
    this.endpoint = endpoint;
    this.cache = new TonCache_1.InMemoryCache();
    this.parameters = {
      timeout: (parameters === null || parameters === void 0 ? void 0 : parameters.timeout) || 30000,
      // 30 seconds by default
      apiKey: parameters === null || parameters === void 0 ? void 0 : parameters.apiKey,
      adapter: parameters === null || parameters === void 0 ? void 0 : parameters.adapter
    };
    // Shard
    this.shardCache = new TypedCache('ton-shard', this.cache, zod_1.z.array(blockIdExt), function (src) {
      return src + '';
    });
    this.shardLoader = new dataloader_1["default"](/*#__PURE__*/function () {
      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(src) {
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return Promise.all(src.map(/*#__PURE__*/function () {
                var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(v) {
                  var cached, loaded;
                  return _regeneratorRuntime().wrap(function _callee3$(_context3) {
                    while (1) switch (_context3.prev = _context3.next) {
                      case 0:
                        _context3.next = 2;
                        return _this.shardCache.get(v);
                      case 2:
                        cached = _context3.sent;
                        if (!cached) {
                          _context3.next = 5;
                          break;
                        }
                        return _context3.abrupt("return", cached);
                      case 5:
                        _context3.next = 7;
                        return _this.doCall('shards', {
                          seqno: v
                        }, getShards);
                      case 7:
                        loaded = _context3.sent.shards;
                        _context3.next = 10;
                        return _this.shardCache.set(v, loaded);
                      case 10:
                        return _context3.abrupt("return", loaded);
                      case 11:
                      case "end":
                        return _context3.stop();
                    }
                  }, _callee3);
                }));
                return function (_x5) {
                  return _ref2.apply(this, arguments);
                };
              }()));
            case 2:
              return _context4.abrupt("return", _context4.sent);
            case 3:
            case "end":
              return _context4.stop();
          }
        }, _callee4);
      }));
      return function (_x4) {
        return _ref.apply(this, arguments);
      };
    }());
    // Shard Transactions
    this.shardTransactionsCache = new TypedCache('ton-shard-tx', this.cache, getBlockTransactions, function (src) {
      return src.workchain + ':' + src.shard + ':' + src.seqno;
    });
    this.shardTransactionsLoader = new dataloader_1["default"](/*#__PURE__*/function () {
      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(src) {
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return Promise.all(src.map(/*#__PURE__*/function () {
                var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(v) {
                  var cached, loaded;
                  return _regeneratorRuntime().wrap(function _callee5$(_context5) {
                    while (1) switch (_context5.prev = _context5.next) {
                      case 0:
                        _context5.next = 2;
                        return _this.shardTransactionsCache.get(v);
                      case 2:
                        cached = _context5.sent;
                        if (!cached) {
                          _context5.next = 5;
                          break;
                        }
                        return _context5.abrupt("return", cached);
                      case 5:
                        _context5.next = 7;
                        return _this.doCall('getBlockTransactions', {
                          workchain: v.workchain,
                          seqno: v.seqno,
                          shard: v.shard
                        }, getBlockTransactions);
                      case 7:
                        loaded = _context5.sent;
                        _context5.next = 10;
                        return _this.shardTransactionsCache.set(v, loaded);
                      case 10:
                        return _context5.abrupt("return", loaded);
                      case 11:
                      case "end":
                        return _context5.stop();
                    }
                  }, _callee5);
                }));
                return function (_x7) {
                  return _ref4.apply(this, arguments);
                };
              }()));
            case 2:
              return _context6.abrupt("return", _context6.sent);
            case 3:
            case "end":
              return _context6.stop();
          }
        }, _callee6);
      }));
      return function (_x6) {
        return _ref3.apply(this, arguments);
      };
    }(), {
      cacheKeyFn: function cacheKeyFn(src) {
        return src.workchain + ':' + src.shard + ':' + src.seqno;
      }
    });
  }
  return _createClass(HttpApi, [{
    key: "getAddressInformation",
    value: function getAddressInformation(address) {
      return this.doCall('getAddressInformation', {
        address: address.toString()
      }, addressInformation);
    }
  }, {
    key: "getTransactions",
    value: function () {
      var _getTransactions2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(address, opts) {
        var inclusive, hash, limit, res;
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              inclusive = opts.inclusive;
              delete opts.inclusive;
              // Convert hash
              hash = undefined;
              if (opts.hash) {
                hash = Buffer.from(opts.hash, 'base64').toString('hex');
              }
              // Adjust limit
              limit = opts.limit;
              if (opts.hash && opts.lt && inclusive !== true) {
                limit++;
              }
              // Do request
              _context7.next = 8;
              return this.doCall('getTransactions', _objectSpread(_objectSpread({
                address: address.toString()
              }, opts), {}, {
                limit: limit,
                hash: hash
              }), _getTransactions);
            case 8:
              res = _context7.sent;
              if (res.length > limit) {
                res = res.slice(0, limit);
              }
              // Adjust result
              if (!(opts.hash && opts.lt && inclusive !== true)) {
                _context7.next = 15;
                break;
              }
              res.shift();
              return _context7.abrupt("return", res);
            case 15:
              return _context7.abrupt("return", res);
            case 16:
            case "end":
              return _context7.stop();
          }
        }, _callee7, this);
      }));
      function getTransactions(_x8, _x9) {
        return _getTransactions2.apply(this, arguments);
      }
      return getTransactions;
    }()
  }, {
    key: "getMasterchainInfo",
    value: function () {
      var _getMasterchainInfo = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {
        return _regeneratorRuntime().wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              _context8.next = 2;
              return this.doCall('getMasterchainInfo', {}, getMasterchain);
            case 2:
              return _context8.abrupt("return", _context8.sent);
            case 3:
            case "end":
              return _context8.stop();
          }
        }, _callee8, this);
      }));
      function getMasterchainInfo() {
        return _getMasterchainInfo.apply(this, arguments);
      }
      return getMasterchainInfo;
    }()
  }, {
    key: "getShards",
    value: function () {
      var _getShards = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(seqno) {
        return _regeneratorRuntime().wrap(function _callee9$(_context9) {
          while (1) switch (_context9.prev = _context9.next) {
            case 0:
              _context9.next = 2;
              return this.shardLoader.load(seqno);
            case 2:
              return _context9.abrupt("return", _context9.sent);
            case 3:
            case "end":
              return _context9.stop();
          }
        }, _callee9, this);
      }));
      function getShards(_x10) {
        return _getShards.apply(this, arguments);
      }
      return getShards;
    }()
  }, {
    key: "getBlockTransactions",
    value: function () {
      var _getBlockTransactions = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(workchain, seqno, shard) {
        return _regeneratorRuntime().wrap(function _callee10$(_context10) {
          while (1) switch (_context10.prev = _context10.next) {
            case 0:
              _context10.next = 2;
              return this.shardTransactionsLoader.load({
                workchain: workchain,
                seqno: seqno,
                shard: shard
              });
            case 2:
              return _context10.abrupt("return", _context10.sent);
            case 3:
            case "end":
              return _context10.stop();
          }
        }, _callee10, this);
      }));
      function getBlockTransactions(_x11, _x12, _x13) {
        return _getBlockTransactions.apply(this, arguments);
      }
      return getBlockTransactions;
    }()
  }, {
    key: "getTransaction",
    value: function () {
      var _getTransaction = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(address, lt, hash) {
        var convHash, res, ex;
        return _regeneratorRuntime().wrap(function _callee11$(_context11) {
          while (1) switch (_context11.prev = _context11.next) {
            case 0:
              convHash = Buffer.from(hash, 'base64').toString('hex');
              _context11.next = 3;
              return this.doCall('getTransactions', {
                address: address.toString(),
                lt: lt,
                hash: convHash,
                limit: 1
              }, _getTransactions);
            case 3:
              res = _context11.sent;
              ex = res.find(function (v) {
                return v.transaction_id.lt === lt && v.transaction_id.hash === hash;
              });
              if (!ex) {
                _context11.next = 9;
                break;
              }
              return _context11.abrupt("return", ex);
            case 9:
              return _context11.abrupt("return", null);
            case 10:
            case "end":
              return _context11.stop();
          }
        }, _callee11, this);
      }));
      function getTransaction(_x14, _x15, _x16) {
        return _getTransaction.apply(this, arguments);
      }
      return getTransaction;
    }()
  }, {
    key: "callGetMethod",
    value: function () {
      var _callGetMethod2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(address, method, stack) {
        return _regeneratorRuntime().wrap(function _callee12$(_context12) {
          while (1) switch (_context12.prev = _context12.next) {
            case 0:
              _context12.next = 2;
              return this.doCall('runGetMethod', {
                address: address.toString(),
                method: method,
                stack: serializeStack(stack)
              }, _callGetMethod);
            case 2:
              return _context12.abrupt("return", _context12.sent);
            case 3:
            case "end":
              return _context12.stop();
          }
        }, _callee12, this);
      }));
      function callGetMethod(_x17, _x18, _x19) {
        return _callGetMethod2.apply(this, arguments);
      }
      return callGetMethod;
    }()
  }, {
    key: "sendBoc",
    value: function () {
      var _sendBoc = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13(body) {
        return _regeneratorRuntime().wrap(function _callee13$(_context13) {
          while (1) switch (_context13.prev = _context13.next) {
            case 0:
              _context13.next = 2;
              return this.doCall('sendBoc', {
                boc: body.toString('base64')
              }, bocResponse);
            case 2:
            case "end":
              return _context13.stop();
          }
        }, _callee13, this);
      }));
      function sendBoc(_x20) {
        return _sendBoc.apply(this, arguments);
      }
      return sendBoc;
    }()
  }, {
    key: "estimateFee",
    value: function () {
      var _estimateFee = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14(address, args) {
        return _regeneratorRuntime().wrap(function _callee14$(_context14) {
          while (1) switch (_context14.prev = _context14.next) {
            case 0:
              _context14.next = 2;
              return this.doCall('estimateFee', {
                address: address.toString(),
                body: args.body.toBoc().toString('base64'),
                'init_data': args.initData ? args.initData.toBoc().toString('base64') : '',
                'init_code': args.initCode ? args.initCode.toBoc().toString('base64') : '',
                ignore_chksig: args.ignoreSignature
              }, feeResponse);
            case 2:
              return _context14.abrupt("return", _context14.sent);
            case 3:
            case "end":
              return _context14.stop();
          }
        }, _callee14, this);
      }));
      function estimateFee(_x21, _x22) {
        return _estimateFee.apply(this, arguments);
      }
      return estimateFee;
    }()
  }, {
    key: "tryLocateResultTx",
    value: function () {
      var _tryLocateResultTx = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15(source, destination, created_lt) {
        return _regeneratorRuntime().wrap(function _callee15$(_context15) {
          while (1) switch (_context15.prev = _context15.next) {
            case 0:
              _context15.next = 2;
              return this.doCall('tryLocateResultTx', {
                source: source.toString(),
                destination: destination.toString(),
                created_lt: created_lt
              }, transaction);
            case 2:
              return _context15.abrupt("return", _context15.sent);
            case 3:
            case "end":
              return _context15.stop();
          }
        }, _callee15, this);
      }));
      function tryLocateResultTx(_x23, _x24, _x25) {
        return _tryLocateResultTx.apply(this, arguments);
      }
      return tryLocateResultTx;
    }()
  }, {
    key: "tryLocateSourceTx",
    value: function () {
      var _tryLocateSourceTx = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16(source, destination, created_lt) {
        return _regeneratorRuntime().wrap(function _callee16$(_context16) {
          while (1) switch (_context16.prev = _context16.next) {
            case 0:
              _context16.next = 2;
              return this.doCall('tryLocateSourceTx', {
                source: source.toString(),
                destination: destination.toString(),
                created_lt: created_lt
              }, transaction);
            case 2:
              return _context16.abrupt("return", _context16.sent);
            case 3:
            case "end":
              return _context16.stop();
          }
        }, _callee16, this);
      }));
      function tryLocateSourceTx(_x26, _x27, _x28) {
        return _tryLocateSourceTx.apply(this, arguments);
      }
      return tryLocateSourceTx;
    }()
  }, {
    key: "doCall",
    value: function () {
      var _doCall = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee17(method, body, codec) {
        var headers, res, decoded;
        return _regeneratorRuntime().wrap(function _callee17$(_context17) {
          while (1) switch (_context17.prev = _context17.next) {
            case 0:
              headers = {
                'Content-Type': 'application/json',
                'X-Ton-Client-Version': version
              };
              if (this.parameters.apiKey) {
                headers['X-API-Key'] = this.parameters.apiKey;
              }
              _context17.next = 4;
              return axios_1["default"].post(this.endpoint, JSON.stringify({
                id: '1',
                jsonrpc: '2.0',
                method: method,
                params: body
              }), {
                headers: headers,
                timeout: this.parameters.timeout,
                adapter: this.parameters.adapter
              });
            case 4:
              res = _context17.sent;
              if (!(res.status !== 200 || !res.data.ok)) {
                _context17.next = 7;
                break;
              }
              throw Error('Received error: ' + JSON.stringify(res.data));
            case 7:
              decoded = codec.safeParse(res.data.result);
              if (!decoded.success) {
                _context17.next = 12;
                break;
              }
              return _context17.abrupt("return", decoded.data);
            case 12:
              throw Error('Malformed response: ' + decoded.error.format()._errors.join(', '));
            case 13:
            case "end":
              return _context17.stop();
          }
        }, _callee17, this);
      }));
      function doCall(_x29, _x30, _x31) {
        return _doCall.apply(this, arguments);
      }
      return doCall;
    }()
  }]);
}();
exports.HttpApi = HttpApi;
function serializeStack(src) {
  var stack = [];
  var _iterator = _createForOfIteratorHelper(src),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var s = _step.value;
      if (s.type === 'int') {
        stack.push(['num', s.value.toString()]);
      } else if (s.type === 'cell') {
        stack.push(['tvm.Cell', s.cell.toBoc().toString('base64')]);
      } else if (s.type === 'slice') {
        stack.push(['tvm.Slice', s.cell.toBoc().toString('base64')]);
      } else if (s.type === 'builder') {
        stack.push(['tvm.Builder', s.cell.toBoc().toString('base64')]);
      } else {
        throw Error('Unsupported stack item type: ' + s.type);
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return stack;
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"../../../package.json":138,"./TonCache":108,"axios":144,"buffer":196,"dataloader":198,"zod":209}],108:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InMemoryCache = void 0;
var InMemoryCache = /*#__PURE__*/_createClass(function InMemoryCache() {
  var _this = this;
  _classCallCheck(this, InMemoryCache);
  this.cache = new Map();
  this.set = /*#__PURE__*/function () {
    var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(namespace, key, value) {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            if (value !== null) {
              _this.cache.set(namespace + '$$' + key, value);
            } else {
              _this.cache["delete"](namespace + '$$' + key);
            }
          case 1:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function (_x, _x2, _x3) {
      return _ref.apply(this, arguments);
    };
  }();
  this.get = /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(namespace, key) {
      var res;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            res = _this.cache.get(namespace + '$$' + key);
            if (!(res !== undefined)) {
              _context2.next = 5;
              break;
            }
            return _context2.abrupt("return", res);
          case 5:
            return _context2.abrupt("return", null);
          case 6:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }));
    return function (_x4, _x5) {
      return _ref2.apply(this, arguments);
    };
  }();
});
exports.InMemoryCache = InMemoryCache;

},{}],109:[function(require,module,exports){
"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.configParseMasterAddress = configParseMasterAddress;
exports.parseValidatorSet = parseValidatorSet;
exports.parseBridge = parseBridge;
exports.configParseMasterAddressRequired = configParseMasterAddressRequired;
exports.configParse5 = configParse5;
exports.configParse13 = configParse13;
exports.configParse15 = configParse15;
exports.configParse16 = configParse16;
exports.configParse17 = configParse17;
exports.configParse18 = configParse18;
exports.configParse8 = configParse8;
exports.configParse40 = configParse40;
exports.configParseWorkchainDescriptor = configParseWorkchainDescriptor;
exports.configParse12 = configParse12;
exports.configParseValidatorSet = configParseValidatorSet;
exports.configParseBridge = configParseBridge;
exports.configParseGasLimitsPrices = configParseGasLimitsPrices;
exports.configParseMsgPrices = configParseMsgPrices;
exports.configParse28 = configParse28;
exports.configParse29 = configParse29;
exports.parseProposalSetup = parseProposalSetup;
exports.parseVotingSetup = parseVotingSetup;
exports.loadConfigParamById = loadConfigParamById;
exports.loadConfigParamsAsSlice = loadConfigParamsAsSlice;
exports.parseFullConfig = parseFullConfig;
var core_1 = require("@ton/core");
function configParseMasterAddress(slice) {
  if (slice) {
    return new core_1.Address(-1, slice.loadBuffer(32));
  } else {
    return null;
  }
}
function readPublicKey(slice) {
  // 8e81278a
  if (slice.loadUint(32) !== 0x8e81278a) {
    throw Error('Invalid config');
  }
  return slice.loadBuffer(32);
}
var ValidatorDescriptionDictValue = {
  serialize: function serialize(src, builder) {
    throw Error("not implemented");
  },
  parse: function parse(src) {
    var header = src.loadUint(8);
    if (header === 0x53) {
      return {
        publicKey: readPublicKey(src),
        weight: src.loadUintBig(64),
        adnlAddress: null
      };
    } else if (header === 0x73) {
      return {
        publicKey: readPublicKey(src),
        weight: src.loadUintBig(64),
        adnlAddress: src.loadBuffer(32)
      };
    } else {
      throw Error('Invalid config');
    }
  }
};
function parseValidatorSet(slice) {
  var header = slice.loadUint(8);
  if (header === 0x11) {
    var timeSince = slice.loadUint(32);
    var timeUntil = slice.loadUint(32);
    var total = slice.loadUint(16);
    var main = slice.loadUint(16);
    var list = slice.loadDictDirect(core_1.Dictionary.Keys.Uint(16), ValidatorDescriptionDictValue);
    return {
      timeSince: timeSince,
      timeUntil: timeUntil,
      total: total,
      main: main,
      totalWeight: null,
      list: list
    };
  } else if (header === 0x12) {
    var _timeSince = slice.loadUint(32);
    var _timeUntil = slice.loadUint(32);
    var _total = slice.loadUint(16);
    var _main = slice.loadUint(16);
    var totalWeight = slice.loadUintBig(64);
    var _list = slice.loadDict(core_1.Dictionary.Keys.Uint(16), ValidatorDescriptionDictValue);
    return {
      timeSince: _timeSince,
      timeUntil: _timeUntil,
      total: _total,
      main: _main,
      totalWeight: totalWeight,
      list: _list
    };
  }
}
function parseBridge(slice) {
  var bridgeAddress = new core_1.Address(-1, slice.loadBuffer(32));
  var oracleMultisigAddress = new core_1.Address(-1, slice.loadBuffer(32));
  var oraclesDict = slice.loadDict(core_1.Dictionary.Keys.Buffer(32), core_1.Dictionary.Values.Buffer(32));
  var oracles = new Map();
  var _iterator = _createForOfIteratorHelper(oraclesDict),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var _step$value = _slicedToArray(_step.value, 2),
        local = _step$value[0],
        remote = _step$value[1];
      oracles.set(new core_1.Address(-1, local).toString(), remote);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var externalChainAddress = slice.loadBuffer(32);
  return {
    bridgeAddress: bridgeAddress,
    oracleMultisigAddress: oracleMultisigAddress,
    oracles: oracles,
    externalChainAddress: externalChainAddress
  };
}
function configParseMasterAddressRequired(slice) {
  if (!slice) {
    throw Error('Invalid config');
  }
  return configParseMasterAddress(slice);
}
function configParse5(slice) {
  if (!slice) {
    throw Error('Invalid config');
  }
  var magic = slice.loadUint(8);
  if (magic === 0x01) {
    var blackholeAddr = slice.loadBit() ? new core_1.Address(-1, slice.loadBuffer(32)) : null;
    var feeBurnNominator = slice.loadUint(32);
    var feeBurnDenominator = slice.loadUint(32);
    return {
      blackholeAddr: blackholeAddr,
      feeBurnNominator: feeBurnNominator,
      feeBurnDenominator: feeBurnDenominator
    };
  }
  throw new Error('Invalid config');
}
function configParse13(slice) {
  if (!slice) {
    throw Error('Invalid config');
  }
  var magic = slice.loadUint(8);
  if (magic === 0x1a) {
    var deposit = slice.loadCoins();
    var bitPrice = slice.loadCoins();
    var cellPrice = slice.loadCoins();
    return {
      deposit: deposit,
      bitPrice: bitPrice,
      cellPrice: cellPrice
    };
  }
  throw new Error('Invalid config');
}
function configParse15(slice) {
  if (!slice) {
    throw Error('Invalid config');
  }
  var validatorsElectedFor = slice.loadUint(32);
  var electorsStartBefore = slice.loadUint(32);
  var electorsEndBefore = slice.loadUint(32);
  var stakeHeldFor = slice.loadUint(32);
  return {
    validatorsElectedFor: validatorsElectedFor,
    electorsStartBefore: electorsStartBefore,
    electorsEndBefore: electorsEndBefore,
    stakeHeldFor: stakeHeldFor
  };
}
function configParse16(slice) {
  if (!slice) {
    throw Error('Invalid config');
  }
  var maxValidators = slice.loadUint(16);
  var maxMainValidators = slice.loadUint(16);
  var minValidators = slice.loadUint(16);
  return {
    maxValidators: maxValidators,
    maxMainValidators: maxMainValidators,
    minValidators: minValidators
  };
}
function configParse17(slice) {
  if (!slice) {
    throw Error('Invalid config');
  }
  var minStake = slice.loadCoins();
  var maxStake = slice.loadCoins();
  var minTotalStake = slice.loadCoins();
  var maxStakeFactor = slice.loadUint(32);
  return {
    minStake: minStake,
    maxStake: maxStake,
    minTotalStake: minTotalStake,
    maxStakeFactor: maxStakeFactor
  };
}
var StoragePricesDictValue = {
  serialize: function serialize(src, builder) {
    throw Error("not implemented");
  },
  parse: function parse(src) {
    var header = src.loadUint(8);
    if (header !== 0xcc) {
      throw Error('Invalid config');
    }
    var utime_since = src.loadUint(32);
    var bit_price_ps = src.loadUintBig(64);
    var cell_price_ps = src.loadUintBig(64);
    var mc_bit_price_ps = src.loadUintBig(64);
    var mc_cell_price_ps = src.loadUintBig(64);
    return {
      utime_since: utime_since,
      bit_price_ps: bit_price_ps,
      cell_price_ps: cell_price_ps,
      mc_bit_price_ps: mc_bit_price_ps,
      mc_cell_price_ps: mc_cell_price_ps
    };
  }
};
function configParse18(slice) {
  if (!slice) {
    throw Error('Invalid config');
  }
  return slice.loadDictDirect(core_1.Dictionary.Keys.Buffer(4), StoragePricesDictValue).values();
}
function configParse8(slice) {
  if (!slice) {
    return {
      version: 0,
      capabilities: 0n
    };
  }
  var version = slice.loadUint(32);
  var capabilities = slice.loadUintBig(64);
  return {
    version: version,
    capabilities: capabilities
  };
}
function configParse40(slice) {
  if (!slice) {
    return null;
  }
  var header = slice.loadUint(8);
  if (header !== 1) {
    throw Error('Invalid config');
  }
  var defaultFlatFine = slice.loadCoins();
  var defaultProportionaFine = slice.loadCoins();
  var severityFlatMult = slice.loadUint(16);
  var severityProportionalMult = slice.loadUint(16);
  var unfunishableInterval = slice.loadUint(16);
  var longInterval = slice.loadUint(16);
  var longFlatMult = slice.loadUint(16);
  var longProportionalMult = slice.loadUint(16);
  var mediumInterval = slice.loadUint(16);
  var mediumFlatMult = slice.loadUint(16);
  var mediumProportionalMult = slice.loadUint(16);
  return {
    defaultFlatFine: defaultFlatFine,
    defaultProportionaFine: defaultProportionaFine,
    severityFlatMult: severityFlatMult,
    severityProportionalMult: severityProportionalMult,
    unfunishableInterval: unfunishableInterval,
    longInterval: longInterval,
    longFlatMult: longFlatMult,
    longProportionalMult: longProportionalMult,
    mediumInterval: mediumInterval,
    mediumFlatMult: mediumFlatMult,
    mediumProportionalMult: mediumProportionalMult
  };
}
function configParseWorkchainDescriptor(slice) {
  if (slice.loadUint(8) !== 0xA6) {
    throw Error('Invalid config');
  }
  var enabledSince = slice.loadUint(32);
  var actialMinSplit = slice.loadUint(8);
  var min_split = slice.loadUint(8);
  var max_split = slice.loadUint(8);
  var basic = slice.loadBit();
  var active = slice.loadBit();
  var accept_msgs = slice.loadBit();
  var flags = slice.loadUint(13);
  var zerostateRootHash = slice.loadBuffer(32);
  var zerostateFileHash = slice.loadBuffer(32);
  var version = slice.loadUint(32);
  // Only basic format supported
  if (slice.loadBit()) {
    throw Error('Invalid config');
  }
  var vmVersion = slice.loadUint(32);
  var vmMode = slice.loadUintBig(64);
  return {
    enabledSince: enabledSince,
    actialMinSplit: actialMinSplit,
    min_split: min_split,
    max_split: max_split,
    basic: basic,
    active: active,
    accept_msgs: accept_msgs,
    flags: flags,
    zerostateRootHash: zerostateRootHash,
    zerostateFileHash: zerostateFileHash,
    version: version,
    format: {
      vmVersion: vmVersion,
      vmMode: vmMode
    }
  };
}
var WorkchainDescriptorDictValue = {
  serialize: function serialize(src, builder) {
    throw Error("not implemented");
  },
  parse: function parse(src) {
    if (src.loadUint(8) !== 0xA6) {
      throw Error('Invalid config');
    }
    var enabledSince = src.loadUint(32);
    var actialMinSplit = src.loadUint(8);
    var min_split = src.loadUint(8);
    var max_split = src.loadUint(8);
    var basic = src.loadBit();
    var active = src.loadBit();
    var accept_msgs = src.loadBit();
    var flags = src.loadUint(13);
    var zerostateRootHash = src.loadBuffer(32);
    var zerostateFileHash = src.loadBuffer(32);
    var version = src.loadUint(32);
    // Only basic format supported
    if (src.loadBit()) {
      throw Error('Invalid config');
    }
    var vmVersion = src.loadUint(32);
    var vmMode = src.loadUintBig(64);
    return {
      enabledSince: enabledSince,
      actialMinSplit: actialMinSplit,
      min_split: min_split,
      max_split: max_split,
      basic: basic,
      active: active,
      accept_msgs: accept_msgs,
      flags: flags,
      zerostateRootHash: zerostateRootHash,
      zerostateFileHash: zerostateFileHash,
      version: version,
      format: {
        vmVersion: vmVersion,
        vmMode: vmMode
      }
    };
  }
};
function configParse12(slice) {
  if (!slice) {
    throw Error('Invalid config');
  }
  var wd = slice.loadDict(core_1.Dictionary.Keys.Uint(32), WorkchainDescriptorDictValue);
  if (wd) {
    return wd;
  }
  throw Error('No workchains exist');
}
function configParseValidatorSet(slice) {
  if (!slice) {
    return null;
  }
  return parseValidatorSet(slice);
}
function configParseBridge(slice) {
  if (!slice) {
    return null;
  }
  return parseBridge(slice);
}
function parseGasLimitsInternal(slice) {
  var tag = slice.loadUint(8);
  if (tag === 0xde) {
    var gasPrice = slice.loadUintBig(64);
    var gasLimit = slice.loadUintBig(64);
    var specialGasLimit = slice.loadUintBig(64);
    var gasCredit = slice.loadUintBig(64);
    var blockGasLimit = slice.loadUintBig(64);
    var freezeDueLimit = slice.loadUintBig(64);
    var deleteDueLimit = slice.loadUintBig(64);
    return {
      gasPrice: gasPrice,
      gasLimit: gasLimit,
      specialGasLimit: specialGasLimit,
      gasCredit: gasCredit,
      blockGasLimit: blockGasLimit,
      freezeDueLimit: freezeDueLimit,
      deleteDueLimit: deleteDueLimit
    };
  } else if (tag === 0xdd) {
    var _gasPrice = slice.loadUintBig(64);
    var _gasLimit = slice.loadUintBig(64);
    var _gasCredit = slice.loadUintBig(64);
    var _blockGasLimit = slice.loadUintBig(64);
    var _freezeDueLimit = slice.loadUintBig(64);
    var _deleteDueLimit = slice.loadUintBig(64);
    return {
      gasPrice: _gasPrice,
      gasLimit: _gasLimit,
      gasCredit: _gasCredit,
      blockGasLimit: _blockGasLimit,
      freezeDueLimit: _freezeDueLimit,
      deleteDueLimit: _deleteDueLimit
    };
  } else {
    throw Error('Invalid config');
  }
}
function configParseGasLimitsPrices(slice) {
  if (!slice) {
    throw Error('Invalid config');
  }
  var tag = slice.loadUint(8);
  if (tag === 0xd1) {
    var flatLimit = slice.loadUintBig(64);
    var flatGasPrice = slice.loadUintBig(64);
    var other = parseGasLimitsInternal(slice);
    return {
      flatLimit: flatLimit,
      flatGasPrice: flatGasPrice,
      other: other
    };
  } else {
    throw Error('Invalid config');
  }
}
function configParseMsgPrices(slice) {
  if (!slice) {
    throw new Error('Invalid config');
  }
  var magic = slice.loadUint(8);
  if (magic !== 0xea) {
    throw new Error('Invalid msg prices param');
  }
  return {
    lumpPrice: slice.loadUintBig(64),
    bitPrice: slice.loadUintBig(64),
    cellPrice: slice.loadUintBig(64),
    ihrPriceFactor: slice.loadUint(32),
    firstFrac: slice.loadUint(16),
    nextFrac: slice.loadUint(16)
  };
}
// catchain_config#c1 mc_catchain_lifetime:uint32 shard_catchain_lifetime:uint32 
//   shard_validators_lifetime:uint32 shard_validators_num:uint32 = CatchainConfig;
// catchain_config_new#c2 flags:(## 7) { flags = 0 } shuffle_mc_validators:Bool
//   mc_catchain_lifetime:uint32 shard_catchain_lifetime:uint32
//   shard_validators_lifetime:uint32 shard_validators_num:uint32 = CatchainConfig;
function configParse28(slice) {
  if (!slice) {
    throw new Error('Invalid config');
  }
  var magic = slice.loadUint(8);
  if (magic === 0xc1) {
    var masterCatchainLifetime = slice.loadUint(32);
    var shardCatchainLifetime = slice.loadUint(32);
    var shardValidatorsLifetime = slice.loadUint(32);
    var shardValidatorsCount = slice.loadUint(32);
    return {
      masterCatchainLifetime: masterCatchainLifetime,
      shardCatchainLifetime: shardCatchainLifetime,
      shardValidatorsLifetime: shardValidatorsLifetime,
      shardValidatorsCount: shardValidatorsCount
    };
  }
  if (magic === 0xc2) {
    var flags = slice.loadUint(7);
    var suffleMasterValidators = slice.loadBit();
    var _masterCatchainLifetime = slice.loadUint(32);
    var _shardCatchainLifetime = slice.loadUint(32);
    var _shardValidatorsLifetime = slice.loadUint(32);
    var _shardValidatorsCount = slice.loadUint(32);
    return {
      flags: flags,
      suffleMasterValidators: suffleMasterValidators,
      masterCatchainLifetime: _masterCatchainLifetime,
      shardCatchainLifetime: _shardCatchainLifetime,
      shardValidatorsLifetime: _shardValidatorsLifetime,
      shardValidatorsCount: _shardValidatorsCount
    };
  }
  throw new Error('Invalid config');
}
// consensus_config#d6 round_candidates:# { round_candidates >= 1 }
//   next_candidate_delay_ms:uint32 consensus_timeout_ms:uint32
//   fast_attempts:uint32 attempt_duration:uint32 catchain_max_deps:uint32
//   max_block_bytes:uint32 max_collated_bytes:uint32 = ConsensusConfig;
// consensus_config_new#d7 flags:(## 7) { flags = 0 } new_catchain_ids:Bool
//   round_candidates:(## 8) { round_candidates >= 1 }
//   next_candidate_delay_ms:uint32 consensus_timeout_ms:uint32
//   fast_attempts:uint32 attempt_duration:uint32 catchain_max_deps:uint32
//   max_block_bytes:uint32 max_collated_bytes:uint32 = ConsensusConfig;
// consensus_config_v3#d8 flags:(## 7) { flags = 0 } new_catchain_ids:Bool
//   round_candidates:(## 8) { round_candidates >= 1 }
//   next_candidate_delay_ms:uint32 consensus_timeout_ms:uint32
//   fast_attempts:uint32 attempt_duration:uint32 catchain_max_deps:uint32
//   max_block_bytes:uint32 max_collated_bytes:uint32 
//   proto_version:uint16 = ConsensusConfig;
function configParse29(slice) {
  if (!slice) {
    throw new Error('Invalid config');
  }
  var magic = slice.loadUint(8);
  if (magic === 0xd6) {
    var roundCandidates = slice.loadUint(32);
    var nextCandidateDelay = slice.loadUint(32);
    var consensusTimeout = slice.loadUint(32);
    var fastAttempts = slice.loadUint(32);
    var attemptDuration = slice.loadUint(32);
    var catchainMaxDeps = slice.loadUint(32);
    var maxBlockBytes = slice.loadUint(32);
    var maxColaltedBytes = slice.loadUint(32);
    return {
      roundCandidates: roundCandidates,
      nextCandidateDelay: nextCandidateDelay,
      consensusTimeout: consensusTimeout,
      fastAttempts: fastAttempts,
      attemptDuration: attemptDuration,
      catchainMaxDeps: catchainMaxDeps,
      maxBlockBytes: maxBlockBytes,
      maxColaltedBytes: maxColaltedBytes
    };
  } else if (magic === 0xd7) {
    var flags = slice.loadUint(7);
    var newCatchainIds = slice.loadBit();
    var _roundCandidates = slice.loadUint(8);
    var _nextCandidateDelay = slice.loadUint(32);
    var _consensusTimeout = slice.loadUint(32);
    var _fastAttempts = slice.loadUint(32);
    var _attemptDuration = slice.loadUint(32);
    var _catchainMaxDeps = slice.loadUint(32);
    var _maxBlockBytes = slice.loadUint(32);
    var _maxColaltedBytes = slice.loadUint(32);
    return {
      flags: flags,
      newCatchainIds: newCatchainIds,
      roundCandidates: _roundCandidates,
      nextCandidateDelay: _nextCandidateDelay,
      consensusTimeout: _consensusTimeout,
      fastAttempts: _fastAttempts,
      attemptDuration: _attemptDuration,
      catchainMaxDeps: _catchainMaxDeps,
      maxBlockBytes: _maxBlockBytes,
      maxColaltedBytes: _maxColaltedBytes
    };
  } else if (magic === 0xd8) {
    var _flags = slice.loadUint(7);
    var _newCatchainIds = slice.loadBit();
    var _roundCandidates2 = slice.loadUint(8);
    var _nextCandidateDelay2 = slice.loadUint(32);
    var _consensusTimeout2 = slice.loadUint(32);
    var _fastAttempts2 = slice.loadUint(32);
    var _attemptDuration2 = slice.loadUint(32);
    var _catchainMaxDeps2 = slice.loadUint(32);
    var _maxBlockBytes2 = slice.loadUint(32);
    var _maxColaltedBytes2 = slice.loadUint(32);
    var protoVersion = slice.loadUint(16);
    return {
      flags: _flags,
      newCatchainIds: _newCatchainIds,
      roundCandidates: _roundCandidates2,
      nextCandidateDelay: _nextCandidateDelay2,
      consensusTimeout: _consensusTimeout2,
      fastAttempts: _fastAttempts2,
      attemptDuration: _attemptDuration2,
      catchainMaxDeps: _catchainMaxDeps2,
      maxBlockBytes: _maxBlockBytes2,
      maxColaltedBytes: _maxColaltedBytes2,
      protoVersion: protoVersion
    };
  } else if (magic === 0xd9) {
    var _flags2 = slice.loadUint(7);
    var _newCatchainIds2 = slice.loadBit();
    var _roundCandidates3 = slice.loadUint(8);
    var _nextCandidateDelay3 = slice.loadUint(32);
    var _consensusTimeout3 = slice.loadUint(32);
    var _fastAttempts3 = slice.loadUint(32);
    var _attemptDuration3 = slice.loadUint(32);
    var _catchainMaxDeps3 = slice.loadUint(32);
    var _maxBlockBytes3 = slice.loadUint(32);
    var _maxColaltedBytes3 = slice.loadUint(32);
    var _protoVersion = slice.loadUint(16);
    var catchainMaxBlocksCoeff = slice.loadUint(32);
    return {
      flags: _flags2,
      newCatchainIds: _newCatchainIds2,
      roundCandidates: _roundCandidates3,
      nextCandidateDelay: _nextCandidateDelay3,
      consensusTimeout: _consensusTimeout3,
      fastAttempts: _fastAttempts3,
      attemptDuration: _attemptDuration3,
      catchainMaxDeps: _catchainMaxDeps3,
      maxBlockBytes: _maxBlockBytes3,
      maxColaltedBytes: _maxColaltedBytes3,
      protoVersion: _protoVersion,
      catchainMaxBlocksCoeff: catchainMaxBlocksCoeff
    };
  }
  throw new Error('Invalid config');
}
// cfg_vote_cfg#36 min_tot_rounds:uint8 max_tot_rounds:uint8 min_wins:uint8 max_losses:uint8 min_store_sec:uint32 max_store_sec:uint32 bit_price:uint32 cell_price:uint32 = ConfigProposalSetup;
function parseProposalSetup(slice) {
  var magic = slice.loadUint(8);
  if (magic !== 0x36) {
    throw new Error('Invalid config');
  }
  var minTotalRounds = slice.loadUint(8);
  var maxTotalRounds = slice.loadUint(8);
  var minWins = slice.loadUint(8);
  var maxLoses = slice.loadUint(8);
  var minStoreSec = slice.loadUint(32);
  var maxStoreSec = slice.loadUint(32);
  var bitPrice = slice.loadUint(32);
  var cellPrice = slice.loadUint(32);
  return {
    minTotalRounds: minTotalRounds,
    maxTotalRounds: maxTotalRounds,
    minWins: minWins,
    maxLoses: maxLoses,
    minStoreSec: minStoreSec,
    maxStoreSec: maxStoreSec,
    bitPrice: bitPrice,
    cellPrice: cellPrice
  };
}
// cfg_vote_setup#91 normal_params:^ConfigProposalSetup critical_params:^ConfigProposalSetup = ConfigVotingSetup;
function parseVotingSetup(slice) {
  if (!slice) {
    throw new Error('Invalid config');
  }
  var magic = slice.loadUint(8);
  if (magic !== 0x91) {
    throw new Error('Invalid config');
  }
  var normalParams = parseProposalSetup(slice.loadRef().beginParse());
  var criticalParams = parseProposalSetup(slice.loadRef().beginParse());
  return {
    normalParams: normalParams,
    criticalParams: criticalParams
  };
}
function loadConfigParams(configBase64) {
  var comfigMap = core_1.Cell.fromBase64(configBase64).beginParse().loadDictDirect(core_1.Dictionary.Keys.Int(32), core_1.Dictionary.Values.Cell());
  return comfigMap;
}
function loadConfigParamById(configBase64, id) {
  return loadConfigParams(configBase64).get(id);
}
function loadConfigParamsAsSlice(configBase64) {
  var pramsAsCells = loadConfigParams(configBase64);
  var params = new Map();
  var _iterator2 = _createForOfIteratorHelper(pramsAsCells),
    _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var _step2$value = _slicedToArray(_step2.value, 2),
        key = _step2$value[0],
        value = _step2$value[1];
      params.set(key, value.beginParse());
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  return params;
}
function parseFullConfig(configs) {
  return {
    configAddress: configParseMasterAddressRequired(configs.get(0)),
    electorAddress: configParseMasterAddressRequired(configs.get(1)),
    minterAddress: configParseMasterAddress(configs.get(2)),
    feeCollectorAddress: configParseMasterAddress(configs.get(3)),
    dnsRootAddress: configParseMasterAddress(configs.get(4)),
    burningConfig: configParse5(configs.get(5)),
    globalVersion: configParse8(configs.get(8)),
    workchains: configParse12(configs.get(12)),
    voting: parseVotingSetup(configs.get(11)),
    validators: _objectSpread(_objectSpread(_objectSpread({}, configParse15(configs.get(15))), configParse16(configs.get(16))), configParse17(configs.get(17))),
    storagePrices: configParse18(configs.get(18)),
    gasPrices: {
      masterchain: configParseGasLimitsPrices(configs.get(20)),
      workchain: configParseGasLimitsPrices(configs.get(21))
    },
    msgPrices: {
      masterchain: configParseMsgPrices(configs.get(24)),
      workchain: configParseMsgPrices(configs.get(25))
    },
    validatorSets: {
      prevValidators: configParseValidatorSet(configs.get(32)),
      prevTempValidators: configParseValidatorSet(configs.get(33)),
      currentValidators: configParseValidatorSet(configs.get(34)),
      currentTempValidators: configParseValidatorSet(configs.get(35)),
      nextValidators: configParseValidatorSet(configs.get(36)),
      nextTempValidators: configParseValidatorSet(configs.get(37))
    },
    validatorsPunish: configParse40(configs.get(40)),
    bridges: {
      ethereum: configParseBridge(configs.get(71)),
      binance: configParseBridge(configs.get(72)),
      polygon: configParseBridge(configs.get(73))
    },
    catchain: configParse28(configs.get(28)),
    consensus: configParse29(configs.get(29))
    // TODO: mint_new_price:Grams mint_add_price:Grams = ConfigParam 6;
    // TODO: to_mint:ExtraCurrencyCollection = ConfigParam 7
    // TODO: mandatory_params:(Hashmap 32 True) = ConfigParam 9
    // TODO: critical_params:(Hashmap 32 True) = ConfigParam 10
    // TODO: BlockCreateFees = ConfigParam 14
  };
}

},{"@ton/core":35}],110:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ElectorContract = void 0;
var core_1 = require("@ton/core");
var FrozenDictValue = {
  serialize: function serialize(src, builder) {
    throw Error("not implemented");
  },
  parse: function parse(src) {
    var address = new core_1.Address(-1, src.loadBuffer(32));
    var weight = src.loadUintBig(64);
    var stake = src.loadCoins();
    return {
      address: address,
      weight: weight,
      stake: stake
    };
  }
};
var EntitiesDictValue = {
  serialize: function serialize(src, builder) {
    throw Error("not implemented");
  },
  parse: function parse(src) {
    var stake = src.loadCoins();
    // skip time and maxFactor
    src.skip(64);
    var address = new core_1.Address(-1, src.loadBuffer(32));
    var adnl = src.loadBuffer(32);
    return {
      stake: stake,
      address: address,
      adnl: adnl
    };
  }
};
var ElectorContract = /*#__PURE__*/function () {
  function ElectorContract() {
    _classCallCheck(this, ElectorContract);
    // Please note that we are NOT loading address from config to avoid mistake and send validator money to a wrong contract
    this.address = core_1.Address.parseRaw('-1:3333333333333333333333333333333333333333333333333333333333333333');
  }
  return _createClass(ElectorContract, [{
    key: "getReturnedStake",
    value: function () {
      var _getReturnedStake = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(provider, address) {
        var res;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              if (!(address.workChain !== -1)) {
                _context.next = 2;
                break;
              }
              throw Error('Only masterchain addresses could have stake');
            case 2:
              _context.next = 4;
              return provider.get('compute_returned_stake', [{
                type: 'int',
                value: BigInt('0x' + address.hash.toString('hex'))
              }]);
            case 4:
              res = _context.sent;
              return _context.abrupt("return", res.stack.readBigNumber());
            case 6:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      function getReturnedStake(_x, _x2) {
        return _getReturnedStake.apply(this, arguments);
      }
      return getReturnedStake;
    }()
  }, {
    key: "getPastElectionsList",
    value: function () {
      var _getPastElectionsList = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(provider) {
        var res, electionsListRaw, elections, electionsListEntry, id, unfreezeAt, stakeHeld;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return provider.get('past_elections_list', []);
            case 2:
              res = _context2.sent;
              electionsListRaw = new core_1.TupleReader(res.stack.readLispList());
              elections = [];
              while (electionsListRaw.remaining > 0) {
                electionsListEntry = electionsListRaw.readTuple();
                id = electionsListEntry.readNumber();
                unfreezeAt = electionsListEntry.readNumber();
                electionsListEntry.pop(); // Ignore vset_hash
                stakeHeld = electionsListEntry.readNumber();
                elections.push({
                  id: id,
                  unfreezeAt: unfreezeAt,
                  stakeHeld: stakeHeld
                });
              }
              return _context2.abrupt("return", elections);
            case 7:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      function getPastElectionsList(_x3) {
        return _getPastElectionsList.apply(this, arguments);
      }
      return getPastElectionsList;
    }()
  }, {
    key: "getPastElections",
    value: function () {
      var _getPastElections = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(provider) {
        var res, electionsRaw, elections, electionsEntry, id, unfreezeAt, stakeHeld, frozenDict, totalStake, bonuses, frozen, frozenData, _iterator, _step, _step$value, key, value;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return provider.get('past_elections', []);
            case 2:
              res = _context3.sent;
              electionsRaw = new core_1.TupleReader(res.stack.readLispList());
              elections = [];
              while (electionsRaw.remaining > 0) {
                electionsEntry = electionsRaw.readTuple();
                id = electionsEntry.readNumber();
                unfreezeAt = electionsEntry.readNumber();
                stakeHeld = electionsEntry.readNumber();
                electionsEntry.pop(); // Ignore vset_hash
                frozenDict = electionsEntry.readCell();
                totalStake = electionsEntry.readBigNumber();
                bonuses = electionsEntry.readBigNumber();
                frozen = new Map();
                frozenData = frozenDict.beginParse().loadDictDirect(core_1.Dictionary.Keys.Buffer(32), FrozenDictValue);
                _iterator = _createForOfIteratorHelper(frozenData);
                try {
                  for (_iterator.s(); !(_step = _iterator.n()).done;) {
                    _step$value = _slicedToArray(_step.value, 2), key = _step$value[0], value = _step$value[1];
                    frozen.set(BigInt("0x" + key.toString("hex")).toString(10), {
                      address: value["address"],
                      weight: value["weight"],
                      stake: value["stake"]
                    });
                  }
                } catch (err) {
                  _iterator.e(err);
                } finally {
                  _iterator.f();
                }
                elections.push({
                  id: id,
                  unfreezeAt: unfreezeAt,
                  stakeHeld: stakeHeld,
                  totalStake: totalStake,
                  bonuses: bonuses,
                  frozen: frozen
                });
              }
              return _context3.abrupt("return", elections);
            case 7:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      function getPastElections(_x4) {
        return _getPastElections.apply(this, arguments);
      }
      return getPastElections;
    }()
  }, {
    key: "getElectionEntities",
    value: function () {
      var _getElectionEntities = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(provider) {
        var account, cell, cs, sc, startWorkTime, endElectionsTime, minStake, allStakes, entitiesData, entities, _iterator2, _step2, _step2$value, key, value;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return provider.getState();
            case 2:
              account = _context4.sent;
              if (!(account.state.type !== 'active')) {
                _context4.next = 5;
                break;
              }
              throw Error('Unexpected error');
            case 5:
              cell = core_1.Cell.fromBoc(account.state.data)[0];
              cs = cell.beginParse();
              if (cs.loadBit()) {
                _context4.next = 9;
                break;
              }
              return _context4.abrupt("return", null);
            case 9:
              // (es~load_uint(32), es~load_uint(32), es~load_grams(), es~load_grams(), es~load_dict(), es~load_int(1), es~load_int(1));
              sc = cs.loadRef().beginParse();
              startWorkTime = sc.loadUint(32);
              endElectionsTime = sc.loadUint(32);
              minStake = sc.loadCoins();
              allStakes = sc.loadCoins(); // var (stake, time, max_factor, addr, adnl_addr) = (cs~load_grams(), cs~load_uint(32), cs~load_uint(32), cs~load_uint(256), cs~load_uint(256));
              entitiesData = sc.loadDict(core_1.Dictionary.Keys.Buffer(32), EntitiesDictValue);
              entities = []; // const failed = sc.loadBit();
              // const finished = sc.loadBit();
              if (entitiesData) {
                _iterator2 = _createForOfIteratorHelper(entitiesData);
                try {
                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                    _step2$value = _slicedToArray(_step2.value, 2), key = _step2$value[0], value = _step2$value[1];
                    entities.push({
                      pubkey: key,
                      stake: value["stake"],
                      address: value["address"],
                      adnl: value["adnl"]
                    });
                  }
                } catch (err) {
                  _iterator2.e(err);
                } finally {
                  _iterator2.f();
                }
              }
              return _context4.abrupt("return", {
                minStake: minStake,
                allStakes: allStakes,
                endElectionsTime: endElectionsTime,
                startWorkTime: startWorkTime,
                entities: entities
              });
            case 18:
            case "end":
              return _context4.stop();
          }
        }, _callee4);
      }));
      function getElectionEntities(_x5) {
        return _getElectionEntities.apply(this, arguments);
      }
      return getElectionEntities;
    }() // possible code for fetching data via get method if it is possible to set gas limit by request
    // async getElectionEntities(block: number) {
    //     const res = await this.client.runMethod(block, this.address, 'participant_list_extended');
    //     if (res.exitCode !== 0 && res.exitCode !== 1) {
    //         throw Error('Exit code: ' + res.exitCode);
    //     }
    //     let tuple = new TupleReader(res.result);
    //     const startWorkTime = tuple.readNumber();
    //     const endElectionsTime = tuple.readNumber();
    //     const minStake = tuple.readBigNumber();
    //     const allStakes = tuple.readBigNumber();
    //     let entriesTuple = tuple.readTuple();
    //     const entriesRaw = new TupleReader(entriesTuple.readLispList());
    //     let entities: { pubkey: Buffer, stake: bigint, address: Address, adnl: Buffer }[] = [];
    //     while (entriesRaw.remaining > 0) {
    //         const electionsEntry = entriesRaw.readTuple();
    //         const pubkey = electionsEntry.readBuffer();
    //         const stake = electionsEntry.readBigNumber();
    //         const address = electionsEntry.readAddress();
    //         const adnl = electionsEntry.readBuffer();
    //         entities.push({ pubkey, stake, address, adnl });
    //     }
    //     return { minStake, allStakes, endElectionsTime, startWorkTime, entities };
    // }
  }, {
    key: "getActiveElectionId",
    value: function () {
      var _getActiveElectionId = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(provider) {
        var res, electionId;
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return provider.get('active_election_id', []);
            case 2:
              res = _context5.sent;
              electionId = res.stack.readNumber();
              return _context5.abrupt("return", electionId > 0 ? electionId : null);
            case 5:
            case "end":
              return _context5.stop();
          }
        }, _callee5);
      }));
      function getActiveElectionId(_x6) {
        return _getActiveElectionId.apply(this, arguments);
      }
      return getActiveElectionId;
    }()
  }, {
    key: "getComplaints",
    value: function () {
      var _getComplaints = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(provider, electionId) {
        var b, res, complaintsRaw, results, complaintsEntry, id, completeUnpackedComplaint, unpackedComplaints, publicKey, description, createdAt, severity, rewardAddress, paid, suggestedFine, suggestedFinePart, votes, votersListRaw, vsetId, remainingWeight;
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              b = new core_1.TupleBuilder();
              b.writeNumber(electionId);
              _context6.next = 4;
              return provider.get('list_complaints', b.build());
            case 4:
              res = _context6.sent;
              if (!(res.stack.peek().type === 'null')) {
                _context6.next = 7;
                break;
              }
              return _context6.abrupt("return", []);
            case 7:
              //let tuple = new TupleReader(res.result);
              complaintsRaw = new core_1.TupleReader(res.stack.readLispList());
              results = [];
              while (complaintsRaw.remaining > 0) {
                complaintsEntry = complaintsRaw.readTuple();
                id = complaintsEntry.readBigNumber();
                completeUnpackedComplaint = complaintsEntry.readTuple();
                unpackedComplaints = completeUnpackedComplaint.readTuple();
                publicKey = Buffer.from(unpackedComplaints.readBigNumber().toString(16), 'hex'); // prod_info#34 utime:uint32 mc_blk_ref:ExtBlkRef state_proof:^(MERKLE_PROOF Block)
                // prod_proof:^(MERKLE_PROOF ShardState) = ProducerInfo;
                // no_blk_gen from_utime:uint32 prod_info:^ProducerInfo = ComplaintDescr;
                // no_blk_gen_diff prod_info_old:^ProducerInfo prod_info_new:^ProducerInfo = ComplaintDescr;
                description = unpackedComplaints.readCell();
                createdAt = unpackedComplaints.readNumber();
                severity = unpackedComplaints.readNumber();
                rewardAddress = new core_1.Address(-1, Buffer.from(unpackedComplaints.readBigNumber().toString(16), 'hex'));
                paid = unpackedComplaints.readBigNumber();
                suggestedFine = unpackedComplaints.readBigNumber();
                suggestedFinePart = unpackedComplaints.readBigNumber();
                votes = [];
                votersListRaw = new core_1.TupleReader(completeUnpackedComplaint.readLispList());
                while (votersListRaw.remaining > 0) {
                  votes.push(votersListRaw.readNumber());
                }
                vsetId = completeUnpackedComplaint.readBigNumber();
                remainingWeight = completeUnpackedComplaint.readBigNumber();
                results.push({
                  id: id,
                  publicKey: publicKey,
                  createdAt: createdAt,
                  severity: severity,
                  paid: paid,
                  suggestedFine: suggestedFine,
                  suggestedFinePart: suggestedFinePart,
                  rewardAddress: rewardAddress,
                  votes: votes,
                  remainingWeight: remainingWeight,
                  vsetId: vsetId
                });
              }
              return _context6.abrupt("return", results);
            case 11:
            case "end":
              return _context6.stop();
          }
        }, _callee6);
      }));
      function getComplaints(_x7, _x8) {
        return _getComplaints.apply(this, arguments);
      }
      return getComplaints;
    }()
  }], [{
    key: "create",
    value:
    //readonly source: ContractSource = new UnknownContractSource('org.ton.elector', -1, 'Elector Contract');
    function create() {
      return new ElectorContract();
    }
  }]);
}();
exports.ElectorContract = ElectorContract;

}).call(this)}).call(this,require("buffer").Buffer)
},{"@ton/core":35,"buffer":196}],111:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var __createBinding = void 0 && (void 0).__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  var desc = Object.getOwnPropertyDescriptor(m, k);
  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
    desc = {
      enumerable: true,
      get: function get() {
        return m[k];
      }
    };
  }
  Object.defineProperty(o, k2, desc);
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});
var __exportStar = void 0 && (void 0).__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.computeStorageFees = exports.computeMessageForwardFees = exports.computeGasPrices = exports.computeFwdFees = exports.computeExternalMessageFees = exports.loadConfigParamsAsSlice = exports.loadConfigParamById = exports.parseFullConfig = exports.parseVotingSetup = exports.parseValidatorSet = exports.parseProposalSetup = exports.parseBridge = exports.configParseWorkchainDescriptor = exports.configParseValidatorSet = exports.configParseMsgPrices = exports.configParseMasterAddressRequired = exports.configParseMasterAddress = exports.configParseGasLimitsPrices = exports.configParseBridge = exports.configParse40 = exports.configParse29 = exports.configParse28 = exports.configParse18 = exports.configParse17 = exports.configParse16 = exports.configParse15 = exports.configParse13 = exports.configParse12 = exports.configParse8 = exports.configParse5 = exports.ElectorContract = exports.MultisigWallet = exports.MultisigOrderBuilder = exports.MultisigOrder = exports.JettonWallet = exports.JettonMaster = exports.WalletContractV5R1 = exports.WalletContractV5Beta = exports.WalletContractV4 = exports.WalletContractV3R2 = exports.WalletContractV3R1 = exports.WalletContractV2R2 = exports.WalletContractV2R1 = exports.WalletContractV1R3 = exports.WalletContractV1R2 = exports.WalletContractV1R1 = exports.TonClient4 = exports.TonClient = exports.HttpApi = void 0;
__exportStar(require("@ton/core"), exports);
//
// toncenter Client
//
var HttpApi_1 = require("./client/api/HttpApi");
Object.defineProperty(exports, "HttpApi", {
  enumerable: true,
  get: function get() {
    return HttpApi_1.HttpApi;
  }
});
var TonClient_1 = require("./client/TonClient");
Object.defineProperty(exports, "TonClient", {
  enumerable: true,
  get: function get() {
    return TonClient_1.TonClient;
  }
});
//
// API V4 Client
//
var TonClient4_1 = require("./client/TonClient4");
Object.defineProperty(exports, "TonClient4", {
  enumerable: true,
  get: function get() {
    return TonClient4_1.TonClient4;
  }
});
//
// Wallets
//
var WalletContractV1R1_1 = require("./wallets/WalletContractV1R1");
Object.defineProperty(exports, "WalletContractV1R1", {
  enumerable: true,
  get: function get() {
    return WalletContractV1R1_1.WalletContractV1R1;
  }
});
var WalletContractV1R2_1 = require("./wallets/WalletContractV1R2");
Object.defineProperty(exports, "WalletContractV1R2", {
  enumerable: true,
  get: function get() {
    return WalletContractV1R2_1.WalletContractV1R2;
  }
});
var WalletContractV1R3_1 = require("./wallets/WalletContractV1R3");
Object.defineProperty(exports, "WalletContractV1R3", {
  enumerable: true,
  get: function get() {
    return WalletContractV1R3_1.WalletContractV1R3;
  }
});
var WalletContractV2R1_1 = require("./wallets/WalletContractV2R1");
Object.defineProperty(exports, "WalletContractV2R1", {
  enumerable: true,
  get: function get() {
    return WalletContractV2R1_1.WalletContractV2R1;
  }
});
var WalletContractV2R2_1 = require("./wallets/WalletContractV2R2");
Object.defineProperty(exports, "WalletContractV2R2", {
  enumerable: true,
  get: function get() {
    return WalletContractV2R2_1.WalletContractV2R2;
  }
});
var WalletContractV3R1_1 = require("./wallets/WalletContractV3R1");
Object.defineProperty(exports, "WalletContractV3R1", {
  enumerable: true,
  get: function get() {
    return WalletContractV3R1_1.WalletContractV3R1;
  }
});
var WalletContractV3R2_1 = require("./wallets/WalletContractV3R2");
Object.defineProperty(exports, "WalletContractV3R2", {
  enumerable: true,
  get: function get() {
    return WalletContractV3R2_1.WalletContractV3R2;
  }
});
var WalletContractV4_1 = require("./wallets/WalletContractV4");
Object.defineProperty(exports, "WalletContractV4", {
  enumerable: true,
  get: function get() {
    return WalletContractV4_1.WalletContractV4;
  }
});
var WalletContractV5Beta_1 = require("./wallets/WalletContractV5Beta");
Object.defineProperty(exports, "WalletContractV5Beta", {
  enumerable: true,
  get: function get() {
    return WalletContractV5Beta_1.WalletContractV5Beta;
  }
});
var WalletContractV5R1_1 = require("./wallets/WalletContractV5R1");
Object.defineProperty(exports, "WalletContractV5R1", {
  enumerable: true,
  get: function get() {
    return WalletContractV5R1_1.WalletContractV5R1;
  }
});
//
// Jettons
//
var JettonMaster_1 = require("./jetton/JettonMaster");
Object.defineProperty(exports, "JettonMaster", {
  enumerable: true,
  get: function get() {
    return JettonMaster_1.JettonMaster;
  }
});
var JettonWallet_1 = require("./jetton/JettonWallet");
Object.defineProperty(exports, "JettonWallet", {
  enumerable: true,
  get: function get() {
    return JettonWallet_1.JettonWallet;
  }
});
//
// Multisig
//
var MultisigOrder_1 = require("./multisig/MultisigOrder");
Object.defineProperty(exports, "MultisigOrder", {
  enumerable: true,
  get: function get() {
    return MultisigOrder_1.MultisigOrder;
  }
});
var MultisigOrderBuilder_1 = require("./multisig/MultisigOrderBuilder");
Object.defineProperty(exports, "MultisigOrderBuilder", {
  enumerable: true,
  get: function get() {
    return MultisigOrderBuilder_1.MultisigOrderBuilder;
  }
});
var MultisigWallet_1 = require("./multisig/MultisigWallet");
Object.defineProperty(exports, "MultisigWallet", {
  enumerable: true,
  get: function get() {
    return MultisigWallet_1.MultisigWallet;
  }
});
//
// Elector
//
var ElectorContract_1 = require("./elector/ElectorContract");
Object.defineProperty(exports, "ElectorContract", {
  enumerable: true,
  get: function get() {
    return ElectorContract_1.ElectorContract;
  }
});
//
// Config
//
var ConfigParser_1 = require("./config/ConfigParser");
Object.defineProperty(exports, "configParse5", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.configParse5;
  }
});
Object.defineProperty(exports, "configParse8", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.configParse8;
  }
});
Object.defineProperty(exports, "configParse12", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.configParse12;
  }
});
Object.defineProperty(exports, "configParse13", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.configParse13;
  }
});
Object.defineProperty(exports, "configParse15", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.configParse15;
  }
});
Object.defineProperty(exports, "configParse16", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.configParse16;
  }
});
Object.defineProperty(exports, "configParse17", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.configParse17;
  }
});
Object.defineProperty(exports, "configParse18", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.configParse18;
  }
});
Object.defineProperty(exports, "configParse28", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.configParse28;
  }
});
Object.defineProperty(exports, "configParse29", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.configParse29;
  }
});
Object.defineProperty(exports, "configParse40", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.configParse40;
  }
});
Object.defineProperty(exports, "configParseBridge", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.configParseBridge;
  }
});
Object.defineProperty(exports, "configParseGasLimitsPrices", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.configParseGasLimitsPrices;
  }
});
Object.defineProperty(exports, "configParseMasterAddress", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.configParseMasterAddress;
  }
});
Object.defineProperty(exports, "configParseMasterAddressRequired", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.configParseMasterAddressRequired;
  }
});
Object.defineProperty(exports, "configParseMsgPrices", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.configParseMsgPrices;
  }
});
Object.defineProperty(exports, "configParseValidatorSet", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.configParseValidatorSet;
  }
});
Object.defineProperty(exports, "configParseWorkchainDescriptor", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.configParseWorkchainDescriptor;
  }
});
Object.defineProperty(exports, "parseBridge", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.parseBridge;
  }
});
Object.defineProperty(exports, "parseProposalSetup", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.parseProposalSetup;
  }
});
Object.defineProperty(exports, "parseValidatorSet", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.parseValidatorSet;
  }
});
Object.defineProperty(exports, "parseVotingSetup", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.parseVotingSetup;
  }
});
Object.defineProperty(exports, "parseFullConfig", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.parseFullConfig;
  }
});
Object.defineProperty(exports, "loadConfigParamById", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.loadConfigParamById;
  }
});
Object.defineProperty(exports, "loadConfigParamsAsSlice", {
  enumerable: true,
  get: function get() {
    return ConfigParser_1.loadConfigParamsAsSlice;
  }
});
//
// Fees
//
var fees_1 = require("./utils/fees");
Object.defineProperty(exports, "computeExternalMessageFees", {
  enumerable: true,
  get: function get() {
    return fees_1.computeExternalMessageFees;
  }
});
Object.defineProperty(exports, "computeFwdFees", {
  enumerable: true,
  get: function get() {
    return fees_1.computeFwdFees;
  }
});
Object.defineProperty(exports, "computeGasPrices", {
  enumerable: true,
  get: function get() {
    return fees_1.computeGasPrices;
  }
});
Object.defineProperty(exports, "computeMessageForwardFees", {
  enumerable: true,
  get: function get() {
    return fees_1.computeMessageForwardFees;
  }
});
Object.defineProperty(exports, "computeStorageFees", {
  enumerable: true,
  get: function get() {
    return fees_1.computeStorageFees;
  }
});

},{"./client/TonClient":105,"./client/TonClient4":106,"./client/api/HttpApi":107,"./config/ConfigParser":109,"./elector/ElectorContract":110,"./jetton/JettonMaster":112,"./jetton/JettonWallet":113,"./multisig/MultisigOrder":114,"./multisig/MultisigOrderBuilder":115,"./multisig/MultisigWallet":116,"./utils/fees":117,"./wallets/WalletContractV1R1":119,"./wallets/WalletContractV1R2":120,"./wallets/WalletContractV1R3":121,"./wallets/WalletContractV2R1":122,"./wallets/WalletContractV2R2":123,"./wallets/WalletContractV3R1":124,"./wallets/WalletContractV3R2":125,"./wallets/WalletContractV4":126,"./wallets/WalletContractV5Beta":127,"./wallets/WalletContractV5R1":128,"@ton/core":35}],112:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.JettonMaster = void 0;
var core_1 = require("@ton/core");
var JettonMaster = /*#__PURE__*/function () {
  function JettonMaster(address) {
    _classCallCheck(this, JettonMaster);
    this.address = address;
  }
  return _createClass(JettonMaster, [{
    key: "getWalletAddress",
    value: function () {
      var _getWalletAddress = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(provider, owner) {
        var res;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return provider.get('get_wallet_address', [{
                type: 'slice',
                cell: (0, core_1.beginCell)().storeAddress(owner).endCell()
              }]);
            case 2:
              res = _context.sent;
              return _context.abrupt("return", res.stack.readAddress());
            case 4:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      function getWalletAddress(_x, _x2) {
        return _getWalletAddress.apply(this, arguments);
      }
      return getWalletAddress;
    }()
  }, {
    key: "getJettonData",
    value: function () {
      var _getJettonData = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(provider) {
        var res, totalSupply, mintable, adminAddress, content, walletCode;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return provider.get('get_jetton_data', []);
            case 2:
              res = _context2.sent;
              totalSupply = res.stack.readBigNumber();
              mintable = res.stack.readBoolean();
              adminAddress = res.stack.readAddress();
              content = res.stack.readCell();
              walletCode = res.stack.readCell();
              return _context2.abrupt("return", {
                totalSupply: totalSupply,
                mintable: mintable,
                adminAddress: adminAddress,
                content: content,
                walletCode: walletCode
              });
            case 9:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      function getJettonData(_x3) {
        return _getJettonData.apply(this, arguments);
      }
      return getJettonData;
    }()
  }], [{
    key: "create",
    value: function create(address) {
      return new JettonMaster(address);
    }
  }]);
}();
exports.JettonMaster = JettonMaster;

},{"@ton/core":35}],113:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.JettonWallet = void 0;
var JettonWallet = /*#__PURE__*/function () {
  function JettonWallet(address) {
    _classCallCheck(this, JettonWallet);
    this.address = address;
  }
  return _createClass(JettonWallet, [{
    key: "getBalance",
    value: function () {
      var _getBalance = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(provider) {
        var state, res;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return provider.getState();
            case 2:
              state = _context.sent;
              if (!(state.state.type !== 'active')) {
                _context.next = 5;
                break;
              }
              return _context.abrupt("return", 0n);
            case 5:
              _context.next = 7;
              return provider.get('get_wallet_data', []);
            case 7:
              res = _context.sent;
              return _context.abrupt("return", res.stack.readBigNumber());
            case 9:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      function getBalance(_x) {
        return _getBalance.apply(this, arguments);
      }
      return getBalance;
    }()
  }], [{
    key: "create",
    value: function create(address) {
      return new JettonWallet(address);
    }
  }]);
}();
exports.JettonWallet = JettonWallet;

},{}],114:[function(require,module,exports){
"use strict";

/* Made by @Gusarich and @Miandic */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MultisigOrder = void 0;
var crypto_1 = require("@ton/crypto");
var core_1 = require("@ton/core");
var MultisigOrder = /*#__PURE__*/function () {
  function MultisigOrder(payload) {
    _classCallCheck(this, MultisigOrder);
    this.signatures = {};
    this.payload = payload;
  }
  return _createClass(MultisigOrder, [{
    key: "addSignature",
    value: function addSignature(ownerId, signature, multisig) {
      var signingHash = this.payload.hash();
      if (!(0, crypto_1.signVerify)(signingHash, signature, multisig.owners.get(ownerId).slice(0, -1))) {
        throw Error('invalid signature');
      }
      this.signatures[ownerId] = signature;
    }
  }, {
    key: "sign",
    value: function sign(ownerId, secretKey) {
      var signingHash = this.payload.hash();
      this.signatures[ownerId] = (0, crypto_1.sign)(signingHash, secretKey);
      return signingHash;
    }
  }, {
    key: "unionSignatures",
    value: function unionSignatures(other) {
      this.signatures = Object.assign({}, this.signatures, other.signatures);
    }
  }, {
    key: "clearSignatures",
    value: function clearSignatures() {
      this.signatures = {};
    }
  }, {
    key: "toCell",
    value: function toCell(ownerId) {
      var b = (0, core_1.beginCell)().storeBit(0);
      for (var _ownerId in this.signatures) {
        var signature = this.signatures[_ownerId];
        b = (0, core_1.beginCell)().storeBit(1).storeRef((0, core_1.beginCell)().storeBuffer(signature).storeUint(parseInt(_ownerId), 8).storeBuilder(b).endCell());
      }
      return (0, core_1.beginCell)().storeUint(ownerId, 8).storeBuilder(b).storeBuilder(this.payload.asBuilder()).endCell();
    }
  }], [{
    key: "fromCell",
    value: function fromCell(cell) {
      var _s$loadMaybeRef;
      var s = cell.beginParse();
      var signatures = (_s$loadMaybeRef = s.loadMaybeRef()) === null || _s$loadMaybeRef === void 0 ? void 0 : _s$loadMaybeRef.beginParse();
      var messagesCell = s.asCell();
      var order = new MultisigOrder(messagesCell);
      if (signatures) {
        while (signatures.remainingBits > 0) {
          var signature = signatures.loadBuffer(64);
          var ownerId = signatures.loadUint(8);
          order.signatures[ownerId] = signature;
          if (signatures.remainingRefs > 0) {
            signatures = signatures.loadRef().asSlice();
          } else {
            signatures.skip(1);
          }
        }
        signatures.endParse();
      }
      return order;
    }
  }, {
    key: "fromPayload",
    value: function fromPayload(payload) {
      return new MultisigOrder(payload);
    }
  }]);
}();
exports.MultisigOrder = MultisigOrder;

},{"@ton/core":35,"@ton/crypto":92}],115:[function(require,module,exports){
"use strict";

/* Made by @Gusarich and @Miandic */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MultisigOrderBuilder = void 0;
var core_1 = require("@ton/core");
var MultisigOrder_1 = require("./MultisigOrder");
var MultisigOrderBuilder = /*#__PURE__*/function () {
  function MultisigOrderBuilder(walletId, offset) {
    _classCallCheck(this, MultisigOrderBuilder);
    this.messages = (0, core_1.beginCell)();
    this.queryId = 0n;
    this.walletId = walletId;
    this.queryOffset = offset || 7200;
  }
  return _createClass(MultisigOrderBuilder, [{
    key: "addMessage",
    value: function addMessage(message, mode) {
      if (this.messages.refs >= 4) {
        throw Error('only 4 refs are allowed');
      }
      this.updateQueryId();
      this.messages.storeUint(mode, 8);
      this.messages.storeRef((0, core_1.beginCell)().store((0, core_1.storeMessageRelaxed)(message)).endCell());
    }
  }, {
    key: "clearMessages",
    value: function clearMessages() {
      this.messages = (0, core_1.beginCell)();
    }
  }, {
    key: "build",
    value: function build() {
      return MultisigOrder_1.MultisigOrder.fromPayload((0, core_1.beginCell)().storeUint(this.walletId, 32).storeUint(this.queryId, 64).storeBuilder(this.messages).endCell());
    }
  }, {
    key: "updateQueryId",
    value: function updateQueryId() {
      var time = BigInt(Math.floor(Date.now() / 1000 + this.queryOffset));
      this.queryId = time << 32n;
    }
  }]);
}();
exports.MultisigOrderBuilder = MultisigOrderBuilder;

},{"./MultisigOrder":114,"@ton/core":35}],116:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/* Made by @Gusarich and @Miandic */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MultisigWallet = void 0;
var crypto_1 = require("@ton/crypto");
var core_1 = require("@ton/core");
var MULTISIG_CODE = core_1.Cell.fromBase64('te6ccgECKwEABBgAART/APSkE/S88sgLAQIBIAIDAgFIBAUE2vIgxwCOgzDbPOCDCNcYIPkBAdMH2zwiwAAToVNxePQOb6Hyn9s8VBq6+RDyoAb0BCD5AQHTH1EYuvKq0z9wUwHwCgHCCAGDCryx8mhTFYBA9A5voSCYDqQgwgryZw7f+COqH1NAufJhVCOjU04gIyEiAgLMBgcCASAMDQIBIAgJAgFmCgsAA9GEAiPymAvHoHN9CYbZ5S7Z4BPHohwhJQAtAKkItdJEqCTItdKlwLUAdAT8ArobBKAATwhbpEx4CBukTDgAdAg10rDAJrUAvALyFjPFszJ4HHXI8gBzxb0AMmACASAODwIBIBQVARW77ZbVA0cFUg2zyCoCAUgQEQIBIBITAXOxHXQgwjXGCD5AQHTB4IB1MTtQ9hTIHj0Dm+h8p/XC/9eMfkQ8qCuAfQEIW6TW3Ey4PkBWNs8AaQBgJwA9rtqA6ADoAPoCAXoCEfyAgPyA3XlP+AXkegAA54tkwAAXrhlXP8EA1WZ2oexAAgEgFhcCASAYGQFRtyVbZ4YmRmpGEAgegc30McJNhFpAADMaYeYuAFrgJhwLb+4cC3d0bhAjAYm1WZtnhqvgb+2xxsoicAgej430pBHEoFpAADHDhBACGuQkuuBk9kUWE5kAOeLKhACQCB6IYFImHFImHFImXEA2YlzNijAjAgEgGhsAF7UGtc4QQDVZnah7EAIBIBwdAgOZOB4fARGsGm2eL4G2CUAjABWt+UEAzJV2oewYQAENqTbPBVfBYCMAFa3f3CCAarM7UPYgAiDbPALyZfgAUENxQxPbPO1UIyoACtP/0wcwBKDbPC+uUyCw8mISsQKkJbNTHLmwJYEA4aojoCi8sPJpggGGoPgBBZcCERACPj4wjo0REB/bPEDXePRDEL0F4lQWW1Rz51YQU9zbPFRxClR6vCQlKCYAIO1E0NMf0wfTB9M/9AT0BNEAXgGOGjDSAAHyo9MH0wdQA9cBIPkBBfkBFbrypFAD4GwhIddKqgIi10m68qtwVCATAAwByMv/ywcE1ts87VT4D3AlblOJvrGYEG4QLVDHXwePGzBUJANQTds8UFWgRlAQSRA6SwlTuds8UFQWf+L4AAeDJaGOLCaAQPSWb6UglDBTA7neII4WODk5CNIAAZfTBzAW8AcFkTDifwgHBZJsMeKz5jAGKicoKQBgcI4pA9CDCNcY0wf0BDBTFnj0Dm+h8qXXC/9URUT5EPKmrlIgsVIDvRShI27mbCIyAH5SML6OIF8D+ACTItdKmALTB9QC+wAC6DJwyMoAQBSAQPRDAvAHjhdxyMsAFMsHEssHWM8BWM8WQBOAQPRDAeIBII6KEEUQNEMA2zztVJJfBuIqABzIyx/LB8sHyz/0APQAyQ==');
var MultisigWallet = /*#__PURE__*/function () {
  function MultisigWallet(publicKeys, workchain, walletId, k, opts) {
    _classCallCheck(this, MultisigWallet);
    this.provider = null;
    this.owners = core_1.Dictionary.empty();
    this.workchain = workchain;
    this.walletId = walletId;
    this.k = k;
    for (var i = 0; i < publicKeys.length; i += 1) {
      this.owners.set(i, Buffer.concat([publicKeys[i], Buffer.alloc(1)]));
    }
    this.init = {
      code: MULTISIG_CODE,
      data: (0, core_1.beginCell)().storeUint(this.walletId, 32).storeUint(this.owners.size, 8).storeUint(this.k, 8).storeUint(0, 64).storeDict(this.owners, core_1.Dictionary.Keys.Uint(8), core_1.Dictionary.Values.Buffer(33)).storeBit(0).endCell()
    };
    this.address = (opts === null || opts === void 0 ? void 0 : opts.address) || (0, core_1.contractAddress)(workchain, this.init);
    if (opts !== null && opts !== void 0 && opts.provider) {
      this.provider = opts.provider;
    } else if (opts !== null && opts !== void 0 && opts.client) {
      this.provider = opts.client.provider(this.address, {
        code: this.init.code,
        data: this.init.data
      });
    }
  }
  return _createClass(MultisigWallet, [{
    key: "deployExternal",
    value: function () {
      var _deployExternal = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(provider) {
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              if (!(!provider && !this.provider)) {
                _context.next = 2;
                break;
              }
              throw Error('you must specify provider if there is no such property in MultisigWallet instance');
            case 2:
              if (!provider) {
                provider = this.provider;
              }
              _context.next = 5;
              return provider.external(core_1.Cell.EMPTY);
            case 5:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function deployExternal(_x) {
        return _deployExternal.apply(this, arguments);
      }
      return deployExternal;
    }()
  }, {
    key: "deployInternal",
    value: function () {
      var _deployInternal = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(sender) {
        var value,
          _args2 = arguments;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              value = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : 1000000000n;
              _context2.next = 3;
              return sender.send({
                sendMode: core_1.SendMode.PAY_GAS_SEPARATELY + core_1.SendMode.IGNORE_ERRORS,
                to: this.address,
                value: value,
                init: this.init,
                body: core_1.Cell.EMPTY,
                bounce: true
              });
            case 3:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function deployInternal(_x2) {
        return _deployInternal.apply(this, arguments);
      }
      return deployInternal;
    }()
  }, {
    key: "sendOrder",
    value: function () {
      var _sendOrder = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(order, secretKey, provider) {
        var publicKey, ownerId, cell, signature;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              if (!(!provider && !this.provider)) {
                _context3.next = 2;
                break;
              }
              throw Error('you must specify provider if there is no such property in MultisigWallet instance');
            case 2:
              if (!provider) {
                provider = this.provider;
              }
              publicKey = (0, crypto_1.keyPairFromSecretKey)(secretKey).publicKey;
              ownerId = this.getOwnerIdByPubkey(publicKey);
              cell = order.toCell(ownerId);
              signature = (0, crypto_1.sign)(cell.hash(), secretKey);
              cell = (0, core_1.beginCell)().storeBuffer(signature).storeSlice(cell.asSlice()).endCell();
              _context3.next = 10;
              return provider.external(cell);
            case 10:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
      function sendOrder(_x3, _x4, _x5) {
        return _sendOrder.apply(this, arguments);
      }
      return sendOrder;
    }()
  }, {
    key: "sendOrderWithoutSecretKey",
    value: function () {
      var _sendOrderWithoutSecretKey = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(order, signature, ownerId, provider) {
        var cell;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              if (!(!provider && !this.provider)) {
                _context4.next = 2;
                break;
              }
              throw Error('you must specify provider if there is no such property in MultisigWallet instance');
            case 2:
              if (!provider) {
                provider = this.provider;
              }
              cell = order.toCell(ownerId);
              cell = (0, core_1.beginCell)().storeBuffer(signature).storeSlice(cell.asSlice()).endCell();
              _context4.next = 7;
              return provider.external(cell);
            case 7:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
      function sendOrderWithoutSecretKey(_x6, _x7, _x8, _x9) {
        return _sendOrderWithoutSecretKey.apply(this, arguments);
      }
      return sendOrderWithoutSecretKey;
    }()
  }, {
    key: "getOwnerIdByPubkey",
    value: function getOwnerIdByPubkey(publicKey) {
      var _iterator = _createForOfIteratorHelper(this.owners),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var _step$value = _slicedToArray(_step.value, 2),
            key = _step$value[0],
            value = _step$value[1];
          if (value.subarray(0, 32).equals(publicKey)) {
            return key;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      throw Error('public key is not an owner');
    }
  }], [{
    key: "fromAddress",
    value: function () {
      var _fromAddress = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(address, opts) {
        var provider, contractState, data, walletId, k, owners, publicKeys, _iterator2, _step2, _step2$value, key, value, publicKey;
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              if (!opts.provider) {
                _context5.next = 4;
                break;
              }
              provider = opts.provider;
              _context5.next = 7;
              break;
            case 4:
              if (opts.client) {
                _context5.next = 6;
                break;
              }
              throw Error('Either provider or client must be specified');
            case 6:
              provider = opts.client.provider(address, {
                code: null,
                data: null
              });
            case 7:
              _context5.next = 9;
              return provider.getState();
            case 9:
              contractState = _context5.sent.state;
              if (!(contractState.type !== 'active')) {
                _context5.next = 12;
                break;
              }
              throw Error('Contract must be active');
            case 12:
              data = core_1.Cell.fromBoc(contractState.data)[0].beginParse();
              walletId = data.loadUint(32);
              data.skip(8);
              k = data.loadUint(8);
              data.skip(64);
              owners = data.loadDict(core_1.Dictionary.Keys.Uint(8), core_1.Dictionary.Values.Buffer(33));
              publicKeys = [];
              _iterator2 = _createForOfIteratorHelper(owners);
              try {
                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                  _step2$value = _slicedToArray(_step2.value, 2), key = _step2$value[0], value = _step2$value[1];
                  publicKey = value.subarray(0, 32);
                  publicKeys.push(publicKey);
                }
              } catch (err) {
                _iterator2.e(err);
              } finally {
                _iterator2.f();
              }
              return _context5.abrupt("return", new MultisigWallet(publicKeys, address.workChain, walletId, k, {
                address: address,
                provider: provider,
                client: opts.client
              }));
            case 22:
            case "end":
              return _context5.stop();
          }
        }, _callee5);
      }));
      function fromAddress(_x10, _x11) {
        return _fromAddress.apply(this, arguments);
      }
      return fromAddress;
    }()
  }]);
}();
exports.MultisigWallet = MultisigWallet;

}).call(this)}).call(this,require("buffer").Buffer)
},{"@ton/core":35,"@ton/crypto":92,"buffer":196}],117:[function(require,module,exports){
"use strict";

function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.computeStorageFees = computeStorageFees;
exports.computeFwdFees = computeFwdFees;
exports.computeGasPrices = computeGasPrices;
exports.computeExternalMessageFees = computeExternalMessageFees;
exports.computeMessageForwardFees = computeMessageForwardFees;
var core_1 = require("@ton/core");
//
// Source: https://github.com/ton-foundation/ton/blob/ae5c0720143e231c32c3d2034cfe4e533a16d969/crypto/block/transaction.cpp#L425
//
function computeStorageFees(data) {
  var lastPaid = data.lastPaid,
    now = data.now,
    storagePrices = data.storagePrices,
    storageStat = data.storageStat,
    special = data.special,
    masterchain = data.masterchain;
  if (now <= lastPaid || storagePrices.length === 0 || now < storagePrices[0].utime_since || special) {
    return BigInt(0);
  }
  var upto = Math.max(lastPaid, storagePrices[0].utime_since);
  var total = BigInt(0);
  for (var i = 0; i < storagePrices.length && upto < now; i++) {
    var valid_until = i < storagePrices.length - 1 ? Math.min(now, storagePrices[i + 1].utime_since) : now;
    var payment = BigInt(0);
    if (upto < valid_until) {
      var delta = valid_until - upto;
      payment += BigInt(storageStat.cells) * (masterchain ? storagePrices[i].mc_cell_price_ps : storagePrices[i].cell_price_ps);
      payment += BigInt(storageStat.bits) * (masterchain ? storagePrices[i].mc_bit_price_ps : storagePrices[i].bit_price_ps);
      payment = payment * BigInt(delta);
    }
    upto = valid_until;
    total += payment;
  }
  return shr16ceil(total);
}
//
// Source: https://github.com/ton-foundation/ton/blob/ae5c0720143e231c32c3d2034cfe4e533a16d969/crypto/block/transaction.cpp#L1218
//
function computeFwdFees(msgPrices, cells, bits) {
  return msgPrices.lumpPrice + shr16ceil(msgPrices.bitPrice * bits + msgPrices.cellPrice * cells);
}
//
// Source: https://github.com/ton-foundation/ton/blob/ae5c0720143e231c32c3d2034cfe4e533a16d969/crypto/block/transaction.cpp#L761
//
function computeGasPrices(gasUsed, prices) {
  if (gasUsed <= prices.flatLimit) {
    return prices.flatPrice;
  } else {
    //  td::rshift(gas_price256 * (gas_used - cfg.flat_gas_limit), 16, 1) + cfg.flat_gas_price
    return prices.flatPrice + (prices.price * (gasUsed - prices.flatLimit) >> 16n);
  }
}
//
// Source: https://github.com/ton-foundation/ton/blob/ae5c0720143e231c32c3d2034cfe4e533a16d969/crypto/block/transaction.cpp#L530
//
function computeExternalMessageFees(msgPrices, cell) {
  // Collect stats
  var storageStats = collectCellStats(cell);
  storageStats.bits -= cell.bits.length;
  storageStats.cells -= 1;
  return computeFwdFees(msgPrices, BigInt(storageStats.cells), BigInt(storageStats.bits));
}
function computeMessageForwardFees(msgPrices, cell) {
  var msg = (0, core_1.loadMessageRelaxed)(cell.beginParse());
  var storageStats = {
    bits: 0,
    cells: 0
  };
  // Init
  if (msg.init) {
    var rawBuilder = new core_1.Cell().asBuilder();
    (0, core_1.storeStateInit)(msg.init)(rawBuilder);
    var raw = rawBuilder.endCell();
    var c = collectCellStats(raw);
    c.bits -= raw.bits.length;
    c.cells -= 1;
    storageStats.bits += c.bits;
    storageStats.cells += c.cells;
  }
  // Body
  var bc = collectCellStats(msg.body);
  bc.bits -= msg.body.bits.length;
  bc.cells -= 1;
  storageStats.bits += bc.bits;
  storageStats.cells += bc.cells;
  // NOTE: Extra currencies are ignored for now
  var fees = computeFwdFees(msgPrices, BigInt(storageStats.cells), BigInt(storageStats.bits));
  var res = fees * BigInt(msgPrices.firstFrac) >> 16n;
  var remaining = fees - res;
  return {
    fees: res,
    remaining: remaining
  };
}
function collectCellStats(cell) {
  var bits = cell.bits.length;
  var cells = 1;
  var _iterator = _createForOfIteratorHelper(cell.refs),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var ref = _step.value;
      var r = collectCellStats(ref);
      cells += r.cells;
      bits += r.bits;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return {
    bits: bits,
    cells: cells
  };
}
function shr16ceil(src) {
  var rem = src % 65536n;
  var res = src >> 16n;
  if (rem !== 0n) {
    res += 1n;
  }
  return res;
}

},{"@ton/core":35}],118:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toUrlSafe = toUrlSafe;
function toUrlSafe(src) {
  while (src.indexOf('/') >= 0) {
    src = src.replace('/', '_');
  }
  while (src.indexOf('+') >= 0) {
    src = src.replace('+', '-');
  }
  while (src.indexOf('=') >= 0) {
    src = src.replace('=', '');
  }
  return src;
}

},{}],119:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WalletContractV1R1 = void 0;
var core_1 = require("@ton/core");
var createWalletTransfer_1 = require("./signing/createWalletTransfer");
var WalletContractV1R1 = /*#__PURE__*/function () {
  function WalletContractV1R1(workchain, publicKey) {
    _classCallCheck(this, WalletContractV1R1);
    this.workchain = workchain;
    this.publicKey = publicKey;
    // Build initial code and data
    var code = core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEARAAAhP8AIN2k8mCBAgDXGCDXCx/tRNDTH9P/0VESuvKhIvkBVBBE+RDyovgAAdMfMSDXSpbTB9QC+wDe0aTIyx/L/8ntVEH98Ik=', 'base64'))[0];
    var data = (0, core_1.beginCell)().storeUint(0, 32) // Seqno
    .storeBuffer(publicKey).endCell();
    this.init = {
      code: code,
      data: data
    };
    this.address = (0, core_1.contractAddress)(workchain, {
      code: code,
      data: data
    });
  }
  /**
   * Get Wallet Balance
   */
  return _createClass(WalletContractV1R1, [{
    key: "getBalance",
    value: (function () {
      var _getBalance = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(provider) {
        var state;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return provider.getState();
            case 2:
              state = _context.sent;
              return _context.abrupt("return", state.balance);
            case 4:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      function getBalance(_x) {
        return _getBalance.apply(this, arguments);
      }
      return getBalance;
    }()
    /**
     * Get Wallet Seqno
     */
    )
  }, {
    key: "getSeqno",
    value: (function () {
      var _getSeqno = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(provider) {
        var state;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return provider.getState();
            case 2:
              state = _context2.sent;
              if (!(state.state.type === 'active')) {
                _context2.next = 7;
                break;
              }
              return _context2.abrupt("return", core_1.Cell.fromBoc(state.state.data)[0].beginParse().loadUint(32));
            case 7:
              return _context2.abrupt("return", 0);
            case 8:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      function getSeqno(_x2) {
        return _getSeqno.apply(this, arguments);
      }
      return getSeqno;
    }()
    /**
     * Send signed transfer
     */
    )
  }, {
    key: "send",
    value: (function () {
      var _send = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(provider, message) {
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return provider.external(message);
            case 2:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      function send(_x3, _x4) {
        return _send.apply(this, arguments);
      }
      return send;
    }()
    /**
     * Sign and send transfer
     */
    )
  }, {
    key: "sendTransfer",
    value: (function () {
      var _sendTransfer = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(provider, args) {
        var transfer;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              transfer = this.createTransfer(args);
              _context4.next = 3;
              return this.send(provider, transfer);
            case 3:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
      function sendTransfer(_x5, _x6) {
        return _sendTransfer.apply(this, arguments);
      }
      return sendTransfer;
    }()
    /**
     * Create signed transfer
     */
    )
  }, {
    key: "createTransfer",
    value: function createTransfer(args) {
      var sendMode = core_1.SendMode.PAY_GAS_SEPARATELY;
      if (args.sendMode !== null && args.sendMode !== undefined) {
        sendMode = args.sendMode;
      }
      return (0, createWalletTransfer_1.createWalletTransferV1)({
        seqno: args.seqno,
        sendMode: sendMode,
        secretKey: args.secretKey,
        message: args.message
      });
    }
    /**
     * Create sender
     */
  }, {
    key: "sender",
    value: function sender(provider, secretKey) {
      var _this = this;
      return {
        send: function () {
          var _send2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(args) {
            var seqno, transfer;
            return _regeneratorRuntime().wrap(function _callee5$(_context5) {
              while (1) switch (_context5.prev = _context5.next) {
                case 0:
                  _context5.next = 2;
                  return _this.getSeqno(provider);
                case 2:
                  seqno = _context5.sent;
                  transfer = _this.createTransfer({
                    seqno: seqno,
                    secretKey: secretKey,
                    sendMode: args.sendMode,
                    message: (0, core_1.internal)({
                      to: args.to,
                      value: args.value,
                      init: args.init,
                      body: args.body,
                      bounce: args.bounce
                    })
                  });
                  _context5.next = 6;
                  return _this.send(provider, transfer);
                case 6:
                case "end":
                  return _context5.stop();
              }
            }, _callee5);
          }));
          function send(_x7) {
            return _send2.apply(this, arguments);
          }
          return send;
        }()
      };
    }
  }], [{
    key: "create",
    value: function create(args) {
      return new WalletContractV1R1(args.workchain, args.publicKey);
    }
  }]);
}();
exports.WalletContractV1R1 = WalletContractV1R1;

}).call(this)}).call(this,require("buffer").Buffer)
},{"./signing/createWalletTransfer":129,"@ton/core":35,"buffer":196}],120:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WalletContractV1R2 = void 0;
var core_1 = require("@ton/core");
var createWalletTransfer_1 = require("./signing/createWalletTransfer");
var WalletContractV1R2 = /*#__PURE__*/function () {
  function WalletContractV1R2(workchain, publicKey) {
    _classCallCheck(this, WalletContractV1R2);
    this.workchain = workchain;
    this.publicKey = publicKey;
    // Build initial code and data
    var code = core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEAUwAAov8AIN0gggFMl7qXMO1E0NcLH+Ck8mCBAgDXGCDXCx/tRNDTH9P/0VESuvKhIvkBVBBE+RDyovgAAdMfMSDXSpbTB9QC+wDe0aTIyx/L/8ntVNDieG8=', 'base64'))[0];
    var data = (0, core_1.beginCell)().storeUint(0, 32) // Seqno
    .storeBuffer(publicKey).endCell();
    this.init = {
      code: code,
      data: data
    };
    this.address = (0, core_1.contractAddress)(workchain, {
      code: code,
      data: data
    });
  }
  /**
   * Get Wallet Balance
   */
  return _createClass(WalletContractV1R2, [{
    key: "getBalance",
    value: (function () {
      var _getBalance = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(provider) {
        var state;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return provider.getState();
            case 2:
              state = _context.sent;
              return _context.abrupt("return", state.balance);
            case 4:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      function getBalance(_x) {
        return _getBalance.apply(this, arguments);
      }
      return getBalance;
    }()
    /**
     * Get Wallet Seqno
     */
    )
  }, {
    key: "getSeqno",
    value: (function () {
      var _getSeqno = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(provider) {
        var state, res;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return provider.getState();
            case 2:
              state = _context2.sent;
              if (!(state.state.type === 'active')) {
                _context2.next = 10;
                break;
              }
              _context2.next = 6;
              return provider.get('seqno', []);
            case 6:
              res = _context2.sent;
              return _context2.abrupt("return", res.stack.readNumber());
            case 10:
              return _context2.abrupt("return", 0);
            case 11:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      function getSeqno(_x2) {
        return _getSeqno.apply(this, arguments);
      }
      return getSeqno;
    }()
    /**
     * Send signed transfer
     */
    )
  }, {
    key: "send",
    value: (function () {
      var _send = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(provider, message) {
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return provider.external(message);
            case 2:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      function send(_x3, _x4) {
        return _send.apply(this, arguments);
      }
      return send;
    }()
    /**
     * Sign and send transfer
     */
    )
  }, {
    key: "sendTransfer",
    value: (function () {
      var _sendTransfer = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(provider, args) {
        var transfer;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              transfer = this.createTransfer(args);
              _context4.next = 3;
              return this.send(provider, transfer);
            case 3:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
      function sendTransfer(_x5, _x6) {
        return _sendTransfer.apply(this, arguments);
      }
      return sendTransfer;
    }()
    /**
     * Create signed transfer
     */
    )
  }, {
    key: "createTransfer",
    value: function createTransfer(args) {
      var sendMode = core_1.SendMode.PAY_GAS_SEPARATELY;
      if (args.sendMode !== null && args.sendMode !== undefined) {
        sendMode = args.sendMode;
      }
      return (0, createWalletTransfer_1.createWalletTransferV1)({
        seqno: args.seqno,
        sendMode: sendMode,
        secretKey: args.secretKey,
        message: args.message
      });
    }
    /**
     * Create sender
     */
  }, {
    key: "sender",
    value: function sender(provider, secretKey) {
      var _this = this;
      return {
        send: function () {
          var _send2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(args) {
            var seqno, transfer;
            return _regeneratorRuntime().wrap(function _callee5$(_context5) {
              while (1) switch (_context5.prev = _context5.next) {
                case 0:
                  _context5.next = 2;
                  return _this.getSeqno(provider);
                case 2:
                  seqno = _context5.sent;
                  transfer = _this.createTransfer({
                    seqno: seqno,
                    secretKey: secretKey,
                    sendMode: args.sendMode,
                    message: (0, core_1.internal)({
                      to: args.to,
                      value: args.value,
                      init: args.init,
                      body: args.body,
                      bounce: args.bounce
                    })
                  });
                  _context5.next = 6;
                  return _this.send(provider, transfer);
                case 6:
                case "end":
                  return _context5.stop();
              }
            }, _callee5);
          }));
          function send(_x7) {
            return _send2.apply(this, arguments);
          }
          return send;
        }()
      };
    }
  }], [{
    key: "create",
    value: function create(args) {
      return new WalletContractV1R2(args.workchain, args.publicKey);
    }
  }]);
}();
exports.WalletContractV1R2 = WalletContractV1R2;

}).call(this)}).call(this,require("buffer").Buffer)
},{"./signing/createWalletTransfer":129,"@ton/core":35,"buffer":196}],121:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WalletContractV1R3 = void 0;
var core_1 = require("@ton/core");
var createWalletTransfer_1 = require("./signing/createWalletTransfer");
var WalletContractV1R3 = /*#__PURE__*/function () {
  function WalletContractV1R3(workchain, publicKey) {
    _classCallCheck(this, WalletContractV1R3);
    this.workchain = workchain;
    this.publicKey = publicKey;
    // Build initial code and data
    var code = core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEAXwAAuv8AIN0gggFMl7ohggEznLqxnHGw7UTQ0x/XC//jBOCk8mCBAgDXGCDXCx/tRNDTH9P/0VESuvKhIvkBVBBE+RDyovgAAdMfMSDXSpbTB9QC+wDe0aTIyx/L/8ntVLW4bkI=', 'base64'))[0];
    var data = (0, core_1.beginCell)().storeUint(0, 32) // Seqno
    .storeBuffer(publicKey).endCell();
    this.init = {
      code: code,
      data: data
    };
    this.address = (0, core_1.contractAddress)(workchain, {
      code: code,
      data: data
    });
  }
  /**
   * Get Wallet Balance
   */
  return _createClass(WalletContractV1R3, [{
    key: "getBalance",
    value: (function () {
      var _getBalance = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(provider) {
        var state;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return provider.getState();
            case 2:
              state = _context.sent;
              return _context.abrupt("return", state.balance);
            case 4:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      function getBalance(_x) {
        return _getBalance.apply(this, arguments);
      }
      return getBalance;
    }()
    /**
     * Get Wallet Seqno
     */
    )
  }, {
    key: "getSeqno",
    value: (function () {
      var _getSeqno = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(provider) {
        var state, res;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return provider.getState();
            case 2:
              state = _context2.sent;
              if (!(state.state.type === 'active')) {
                _context2.next = 10;
                break;
              }
              _context2.next = 6;
              return provider.get('seqno', []);
            case 6:
              res = _context2.sent;
              return _context2.abrupt("return", res.stack.readNumber());
            case 10:
              return _context2.abrupt("return", 0);
            case 11:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      function getSeqno(_x2) {
        return _getSeqno.apply(this, arguments);
      }
      return getSeqno;
    }()
    /**
     * Send signed transfer
     */
    )
  }, {
    key: "send",
    value: (function () {
      var _send = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(executor, message) {
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return executor.external(message);
            case 2:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      function send(_x3, _x4) {
        return _send.apply(this, arguments);
      }
      return send;
    }()
    /**
     * Sign and send transfer
     */
    )
  }, {
    key: "sendTransfer",
    value: (function () {
      var _sendTransfer = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(provider, args) {
        var transfer;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              transfer = this.createTransfer(args);
              _context4.next = 3;
              return this.send(provider, transfer);
            case 3:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
      function sendTransfer(_x5, _x6) {
        return _sendTransfer.apply(this, arguments);
      }
      return sendTransfer;
    }()
    /**
     * Create signed transfer
     */
    )
  }, {
    key: "createTransfer",
    value: function createTransfer(args) {
      var sendMode = core_1.SendMode.PAY_GAS_SEPARATELY;
      if (args.sendMode !== null && args.sendMode !== undefined) {
        sendMode = args.sendMode;
      }
      return (0, createWalletTransfer_1.createWalletTransferV1)({
        seqno: args.seqno,
        sendMode: sendMode,
        secretKey: args.secretKey,
        message: args.message
      });
    }
    /**
     * Create sender
     */
  }, {
    key: "sender",
    value: function sender(provider, secretKey) {
      var _this = this;
      return {
        send: function () {
          var _send2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(args) {
            var seqno, transfer;
            return _regeneratorRuntime().wrap(function _callee5$(_context5) {
              while (1) switch (_context5.prev = _context5.next) {
                case 0:
                  _context5.next = 2;
                  return _this.getSeqno(provider);
                case 2:
                  seqno = _context5.sent;
                  transfer = _this.createTransfer({
                    seqno: seqno,
                    secretKey: secretKey,
                    sendMode: args.sendMode,
                    message: (0, core_1.internal)({
                      to: args.to,
                      value: args.value,
                      init: args.init,
                      body: args.body,
                      bounce: args.bounce
                    })
                  });
                  _context5.next = 6;
                  return _this.send(provider, transfer);
                case 6:
                case "end":
                  return _context5.stop();
              }
            }, _callee5);
          }));
          function send(_x7) {
            return _send2.apply(this, arguments);
          }
          return send;
        }()
      };
    }
  }], [{
    key: "create",
    value: function create(args) {
      return new WalletContractV1R3(args.workchain, args.publicKey);
    }
  }]);
}();
exports.WalletContractV1R3 = WalletContractV1R3;

}).call(this)}).call(this,require("buffer").Buffer)
},{"./signing/createWalletTransfer":129,"@ton/core":35,"buffer":196}],122:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WalletContractV2R1 = void 0;
var core_1 = require("@ton/core");
var createWalletTransfer_1 = require("./signing/createWalletTransfer");
var WalletContractV2R1 = /*#__PURE__*/function () {
  function WalletContractV2R1(workchain, publicKey) {
    _classCallCheck(this, WalletContractV2R1);
    this.workchain = workchain;
    this.publicKey = publicKey;
    // Build initial code and data
    var code = core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEAVwAAqv8AIN0gggFMl7qXMO1E0NcLH+Ck8mCDCNcYINMf0x8B+CO78mPtRNDTH9P/0VExuvKhA/kBVBBC+RDyovgAApMg10qW0wfUAvsA6NGkyMsfy//J7VShNwu2', 'base64'))[0];
    var data = (0, core_1.beginCell)().storeUint(0, 32) // Seqno
    .storeBuffer(publicKey).endCell();
    this.init = {
      code: code,
      data: data
    };
    this.address = (0, core_1.contractAddress)(workchain, {
      code: code,
      data: data
    });
  }
  /**
   * Get Wallet Balance
   */
  return _createClass(WalletContractV2R1, [{
    key: "getBalance",
    value: (function () {
      var _getBalance = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(provider) {
        var state;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return provider.getState();
            case 2:
              state = _context.sent;
              return _context.abrupt("return", state.balance);
            case 4:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      function getBalance(_x) {
        return _getBalance.apply(this, arguments);
      }
      return getBalance;
    }()
    /**
     * Get Wallet Seqno
     */
    )
  }, {
    key: "getSeqno",
    value: (function () {
      var _getSeqno = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(provider) {
        var state, res;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return provider.getState();
            case 2:
              state = _context2.sent;
              if (!(state.state.type === 'active')) {
                _context2.next = 10;
                break;
              }
              _context2.next = 6;
              return provider.get('seqno', []);
            case 6:
              res = _context2.sent;
              return _context2.abrupt("return", res.stack.readNumber());
            case 10:
              return _context2.abrupt("return", 0);
            case 11:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      function getSeqno(_x2) {
        return _getSeqno.apply(this, arguments);
      }
      return getSeqno;
    }()
    /**
     * Send signed transfer
     */
    )
  }, {
    key: "send",
    value: (function () {
      var _send = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(provider, message) {
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return provider.external(message);
            case 2:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      function send(_x3, _x4) {
        return _send.apply(this, arguments);
      }
      return send;
    }()
    /**
     * Sign and send transfer
     */
    )
  }, {
    key: "sendTransfer",
    value: (function () {
      var _sendTransfer = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(provider, args) {
        var transfer;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              transfer = this.createTransfer(args);
              _context4.next = 3;
              return this.send(provider, transfer);
            case 3:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
      function sendTransfer(_x5, _x6) {
        return _sendTransfer.apply(this, arguments);
      }
      return sendTransfer;
    }()
    /**
     * Create signed transfer
     */
    )
  }, {
    key: "createTransfer",
    value: function createTransfer(args) {
      var sendMode = core_1.SendMode.PAY_GAS_SEPARATELY;
      if (args.sendMode !== null && args.sendMode !== undefined) {
        sendMode = args.sendMode;
      }
      return (0, createWalletTransfer_1.createWalletTransferV2)({
        seqno: args.seqno,
        sendMode: sendMode,
        secretKey: args.secretKey,
        messages: args.messages,
        timeout: args.timeout
      });
    }
    /**
     * Create sender
     */
  }, {
    key: "sender",
    value: function sender(provider, secretKey) {
      var _this = this;
      return {
        send: function () {
          var _send2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(args) {
            var seqno, transfer;
            return _regeneratorRuntime().wrap(function _callee5$(_context5) {
              while (1) switch (_context5.prev = _context5.next) {
                case 0:
                  _context5.next = 2;
                  return _this.getSeqno(provider);
                case 2:
                  seqno = _context5.sent;
                  transfer = _this.createTransfer({
                    seqno: seqno,
                    secretKey: secretKey,
                    sendMode: args.sendMode,
                    messages: [(0, core_1.internal)({
                      to: args.to,
                      value: args.value,
                      init: args.init,
                      body: args.body,
                      bounce: args.bounce
                    })]
                  });
                  _context5.next = 6;
                  return _this.send(provider, transfer);
                case 6:
                case "end":
                  return _context5.stop();
              }
            }, _callee5);
          }));
          function send(_x7) {
            return _send2.apply(this, arguments);
          }
          return send;
        }()
      };
    }
  }], [{
    key: "create",
    value: function create(args) {
      return new WalletContractV2R1(args.workchain, args.publicKey);
    }
  }]);
}();
exports.WalletContractV2R1 = WalletContractV2R1;

}).call(this)}).call(this,require("buffer").Buffer)
},{"./signing/createWalletTransfer":129,"@ton/core":35,"buffer":196}],123:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WalletContractV2R2 = void 0;
var core_1 = require("@ton/core");
var createWalletTransfer_1 = require("./signing/createWalletTransfer");
var WalletContractV2R2 = /*#__PURE__*/function () {
  function WalletContractV2R2(workchain, publicKey) {
    _classCallCheck(this, WalletContractV2R2);
    this.workchain = workchain;
    this.publicKey = publicKey;
    // Build initial code and data
    var code = core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEAYwAAwv8AIN0gggFMl7ohggEznLqxnHGw7UTQ0x/XC//jBOCk8mCDCNcYINMf0x8B+CO78mPtRNDTH9P/0VExuvKhA/kBVBBC+RDyovgAApMg10qW0wfUAvsA6NGkyMsfy//J7VQETNeh', 'base64'))[0];
    var data = (0, core_1.beginCell)().storeUint(0, 32) // Seqno
    .storeBuffer(publicKey).endCell();
    this.init = {
      code: code,
      data: data
    };
    this.address = (0, core_1.contractAddress)(workchain, {
      code: code,
      data: data
    });
  }
  /**
   * Get Wallet Balance
   */
  return _createClass(WalletContractV2R2, [{
    key: "getBalance",
    value: (function () {
      var _getBalance = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(provider) {
        var state;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return provider.getState();
            case 2:
              state = _context.sent;
              return _context.abrupt("return", state.balance);
            case 4:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      function getBalance(_x) {
        return _getBalance.apply(this, arguments);
      }
      return getBalance;
    }()
    /**
     * Get Wallet Seqno
     */
    )
  }, {
    key: "getSeqno",
    value: (function () {
      var _getSeqno = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(provider) {
        var state, res;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return provider.getState();
            case 2:
              state = _context2.sent;
              if (!(state.state.type === 'active')) {
                _context2.next = 10;
                break;
              }
              _context2.next = 6;
              return provider.get('seqno', []);
            case 6:
              res = _context2.sent;
              return _context2.abrupt("return", res.stack.readNumber());
            case 10:
              return _context2.abrupt("return", 0);
            case 11:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      function getSeqno(_x2) {
        return _getSeqno.apply(this, arguments);
      }
      return getSeqno;
    }()
    /**
     * Send signed transfer
     */
    )
  }, {
    key: "send",
    value: (function () {
      var _send = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(provider, message) {
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return provider.external(message);
            case 2:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      function send(_x3, _x4) {
        return _send.apply(this, arguments);
      }
      return send;
    }()
    /**
     * Sign and send transfer
     */
    )
  }, {
    key: "sendTransfer",
    value: (function () {
      var _sendTransfer = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(provider, args) {
        var transfer;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              transfer = this.createTransfer(args);
              _context4.next = 3;
              return this.send(provider, transfer);
            case 3:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
      function sendTransfer(_x5, _x6) {
        return _sendTransfer.apply(this, arguments);
      }
      return sendTransfer;
    }()
    /**
     * Create signed transfer
     */
    )
  }, {
    key: "createTransfer",
    value: function createTransfer(args) {
      var sendMode = core_1.SendMode.PAY_GAS_SEPARATELY;
      if (args.sendMode !== null && args.sendMode !== undefined) {
        sendMode = args.sendMode;
      }
      return (0, createWalletTransfer_1.createWalletTransferV2)({
        seqno: args.seqno,
        sendMode: sendMode,
        secretKey: args.secretKey,
        messages: args.messages,
        timeout: args.timeout
      });
    }
    /**
     * Create sender
     */
  }, {
    key: "sender",
    value: function sender(provider, secretKey) {
      var _this = this;
      return {
        send: function () {
          var _send2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(args) {
            var seqno, transfer;
            return _regeneratorRuntime().wrap(function _callee5$(_context5) {
              while (1) switch (_context5.prev = _context5.next) {
                case 0:
                  _context5.next = 2;
                  return _this.getSeqno(provider);
                case 2:
                  seqno = _context5.sent;
                  transfer = _this.createTransfer({
                    seqno: seqno,
                    secretKey: secretKey,
                    sendMode: args.sendMode,
                    messages: [(0, core_1.internal)({
                      to: args.to,
                      value: args.value,
                      init: args.init,
                      body: args.body,
                      bounce: args.bounce
                    })]
                  });
                  _context5.next = 6;
                  return _this.send(provider, transfer);
                case 6:
                case "end":
                  return _context5.stop();
              }
            }, _callee5);
          }));
          function send(_x7) {
            return _send2.apply(this, arguments);
          }
          return send;
        }()
      };
    }
  }], [{
    key: "create",
    value: function create(args) {
      return new WalletContractV2R2(args.workchain, args.publicKey);
    }
  }]);
}();
exports.WalletContractV2R2 = WalletContractV2R2;

}).call(this)}).call(this,require("buffer").Buffer)
},{"./signing/createWalletTransfer":129,"@ton/core":35,"buffer":196}],124:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WalletContractV3R1 = void 0;
var core_1 = require("@ton/core");
var createWalletTransfer_1 = require("./signing/createWalletTransfer");
var WalletContractV3R1 = /*#__PURE__*/function () {
  function WalletContractV3R1(workchain, publicKey, walletId) {
    _classCallCheck(this, WalletContractV3R1);
    // Resolve parameters
    this.workchain = workchain;
    this.publicKey = publicKey;
    if (walletId !== null && walletId !== undefined) {
      this.walletId = walletId;
    } else {
      this.walletId = 698983191 + workchain;
    }
    // Build initial code and data
    var code = core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEAYgAAwP8AIN0gggFMl7qXMO1E0NcLH+Ck8mCDCNcYINMf0x/TH/gjE7vyY+1E0NMf0x/T/9FRMrryoVFEuvKiBPkBVBBV+RDyo/gAkyDXSpbTB9QC+wDo0QGkyMsfyx/L/8ntVD++buA=', 'base64'))[0];
    var data = (0, core_1.beginCell)().storeUint(0, 32) // Seqno
    .storeUint(this.walletId, 32).storeBuffer(publicKey).endCell();
    this.init = {
      code: code,
      data: data
    };
    this.address = (0, core_1.contractAddress)(workchain, {
      code: code,
      data: data
    });
  }
  /**
   * Get wallet balance
   */
  return _createClass(WalletContractV3R1, [{
    key: "getBalance",
    value: (function () {
      var _getBalance = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(provider) {
        var state;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return provider.getState();
            case 2:
              state = _context.sent;
              return _context.abrupt("return", state.balance);
            case 4:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      function getBalance(_x) {
        return _getBalance.apply(this, arguments);
      }
      return getBalance;
    }()
    /**
     * Get Wallet Seqno
     */
    )
  }, {
    key: "getSeqno",
    value: (function () {
      var _getSeqno = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(provider) {
        var state, res;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return provider.getState();
            case 2:
              state = _context2.sent;
              if (!(state.state.type === 'active')) {
                _context2.next = 10;
                break;
              }
              _context2.next = 6;
              return provider.get('seqno', []);
            case 6:
              res = _context2.sent;
              return _context2.abrupt("return", res.stack.readNumber());
            case 10:
              return _context2.abrupt("return", 0);
            case 11:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      function getSeqno(_x2) {
        return _getSeqno.apply(this, arguments);
      }
      return getSeqno;
    }()
    /**
     * Send signed transfer
     */
    )
  }, {
    key: "send",
    value: (function () {
      var _send = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(provider, message) {
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return provider.external(message);
            case 2:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      function send(_x3, _x4) {
        return _send.apply(this, arguments);
      }
      return send;
    }()
    /**
     * Sign and send transfer
     */
    )
  }, {
    key: "sendTransfer",
    value: (function () {
      var _sendTransfer = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(provider, args) {
        var transfer;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              transfer = this.createTransfer(args);
              _context4.next = 3;
              return this.send(provider, transfer);
            case 3:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
      function sendTransfer(_x5, _x6) {
        return _sendTransfer.apply(this, arguments);
      }
      return sendTransfer;
    }()
    /**
     * Create transfer
     */
    )
  }, {
    key: "createTransfer",
    value: function createTransfer(args) {
      var _args$sendMode;
      return (0, createWalletTransfer_1.createWalletTransferV3)(_objectSpread(_objectSpread({}, args), {}, {
        sendMode: (_args$sendMode = args.sendMode) !== null && _args$sendMode !== void 0 ? _args$sendMode : core_1.SendMode.PAY_GAS_SEPARATELY,
        walletId: this.walletId
      }));
    }
    /**
     * Create sender
     */
  }, {
    key: "sender",
    value: function sender(provider, secretKey) {
      var _this = this;
      return {
        send: function () {
          var _send2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(args) {
            var seqno, transfer;
            return _regeneratorRuntime().wrap(function _callee5$(_context5) {
              while (1) switch (_context5.prev = _context5.next) {
                case 0:
                  _context5.next = 2;
                  return _this.getSeqno(provider);
                case 2:
                  seqno = _context5.sent;
                  transfer = _this.createTransfer({
                    seqno: seqno,
                    secretKey: secretKey,
                    sendMode: args.sendMode,
                    messages: [(0, core_1.internal)({
                      to: args.to,
                      value: args.value,
                      init: args.init,
                      body: args.body,
                      bounce: args.bounce
                    })]
                  });
                  _context5.next = 6;
                  return _this.send(provider, transfer);
                case 6:
                case "end":
                  return _context5.stop();
              }
            }, _callee5);
          }));
          function send(_x7) {
            return _send2.apply(this, arguments);
          }
          return send;
        }()
      };
    }
  }], [{
    key: "create",
    value: function create(args) {
      return new WalletContractV3R1(args.workchain, args.publicKey, args.walletId);
    }
  }]);
}();
exports.WalletContractV3R1 = WalletContractV3R1;

}).call(this)}).call(this,require("buffer").Buffer)
},{"./signing/createWalletTransfer":129,"@ton/core":35,"buffer":196}],125:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WalletContractV3R2 = void 0;
var core_1 = require("@ton/core");
var createWalletTransfer_1 = require("./signing/createWalletTransfer");
var WalletContractV3R2 = /*#__PURE__*/function () {
  function WalletContractV3R2(workchain, publicKey, walletId) {
    _classCallCheck(this, WalletContractV3R2);
    // Resolve parameters
    this.workchain = workchain;
    this.publicKey = publicKey;
    if (walletId !== null && walletId !== undefined) {
      this.walletId = walletId;
    } else {
      this.walletId = 698983191 + workchain;
    }
    // Build initial code and data
    var code = core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEAcQAA3v8AIN0gggFMl7ohggEznLqxn3Gw7UTQ0x/THzHXC//jBOCk8mCDCNcYINMf0x/TH/gjE7vyY+1E0NMf0x/T/9FRMrryoVFEuvKiBPkBVBBV+RDyo/gAkyDXSpbTB9QC+wDo0QGkyMsfyx/L/8ntVBC9ba0=', 'base64'))[0];
    var data = (0, core_1.beginCell)().storeUint(0, 32) // Seqno
    .storeUint(this.walletId, 32).storeBuffer(publicKey).endCell();
    this.init = {
      code: code,
      data: data
    };
    this.address = (0, core_1.contractAddress)(workchain, {
      code: code,
      data: data
    });
  }
  /**
   * Get wallet balance
   */
  return _createClass(WalletContractV3R2, [{
    key: "getBalance",
    value: (function () {
      var _getBalance = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(provider) {
        var state;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return provider.getState();
            case 2:
              state = _context.sent;
              return _context.abrupt("return", state.balance);
            case 4:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      function getBalance(_x) {
        return _getBalance.apply(this, arguments);
      }
      return getBalance;
    }()
    /**
     * Get Wallet Seqno
     */
    )
  }, {
    key: "getSeqno",
    value: (function () {
      var _getSeqno = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(provider) {
        var state, res;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return provider.getState();
            case 2:
              state = _context2.sent;
              if (!(state.state.type === 'active')) {
                _context2.next = 10;
                break;
              }
              _context2.next = 6;
              return provider.get('seqno', []);
            case 6:
              res = _context2.sent;
              return _context2.abrupt("return", res.stack.readNumber());
            case 10:
              return _context2.abrupt("return", 0);
            case 11:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      function getSeqno(_x2) {
        return _getSeqno.apply(this, arguments);
      }
      return getSeqno;
    }()
    /**
     * Send signed transfer
     */
    )
  }, {
    key: "send",
    value: (function () {
      var _send = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(provider, message) {
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return provider.external(message);
            case 2:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      function send(_x3, _x4) {
        return _send.apply(this, arguments);
      }
      return send;
    }()
    /**
     * Sign and send transfer
     */
    )
  }, {
    key: "sendTransfer",
    value: (function () {
      var _sendTransfer = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(provider, args) {
        var transfer;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              transfer = this.createTransfer(args);
              _context4.next = 3;
              return this.send(provider, transfer);
            case 3:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
      function sendTransfer(_x5, _x6) {
        return _sendTransfer.apply(this, arguments);
      }
      return sendTransfer;
    }()
    /**
     * Create transfer
     */
    )
  }, {
    key: "createTransfer",
    value: function createTransfer(args) {
      var _args$sendMode;
      return (0, createWalletTransfer_1.createWalletTransferV3)(_objectSpread(_objectSpread({}, args), {}, {
        sendMode: (_args$sendMode = args.sendMode) !== null && _args$sendMode !== void 0 ? _args$sendMode : core_1.SendMode.PAY_GAS_SEPARATELY,
        walletId: this.walletId
      }));
    }
    /**
     * Create sender
     */
  }, {
    key: "sender",
    value: function sender(provider, secretKey) {
      var _this = this;
      return {
        send: function () {
          var _send2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(args) {
            var seqno, transfer;
            return _regeneratorRuntime().wrap(function _callee5$(_context5) {
              while (1) switch (_context5.prev = _context5.next) {
                case 0:
                  _context5.next = 2;
                  return _this.getSeqno(provider);
                case 2:
                  seqno = _context5.sent;
                  transfer = _this.createTransfer({
                    seqno: seqno,
                    secretKey: secretKey,
                    sendMode: args.sendMode,
                    messages: [(0, core_1.internal)({
                      to: args.to,
                      value: args.value,
                      init: args.init,
                      body: args.body,
                      bounce: args.bounce
                    })]
                  });
                  _context5.next = 6;
                  return _this.send(provider, transfer);
                case 6:
                case "end":
                  return _context5.stop();
              }
            }, _callee5);
          }));
          function send(_x7) {
            return _send2.apply(this, arguments);
          }
          return send;
        }()
      };
    }
  }], [{
    key: "create",
    value: function create(args) {
      return new WalletContractV3R2(args.workchain, args.publicKey, args.walletId);
    }
  }]);
}();
exports.WalletContractV3R2 = WalletContractV3R2;

}).call(this)}).call(this,require("buffer").Buffer)
},{"./signing/createWalletTransfer":129,"@ton/core":35,"buffer":196}],126:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WalletContractV4 = void 0;
var core_1 = require("@ton/core");
var createWalletTransfer_1 = require("./signing/createWalletTransfer");
var WalletContractV4 = /*#__PURE__*/function () {
  function WalletContractV4(workchain, publicKey, walletId) {
    _classCallCheck(this, WalletContractV4);
    // Resolve parameters
    this.workchain = workchain;
    this.publicKey = publicKey;
    if (walletId !== null && walletId !== undefined) {
      this.walletId = walletId;
    } else {
      this.walletId = 698983191 + workchain;
    }
    // Build initial code and data
    var code = core_1.Cell.fromBoc(Buffer.from('te6ccgECFAEAAtQAART/APSkE/S88sgLAQIBIAIDAgFIBAUE+PKDCNcYINMf0x/THwL4I7vyZO1E0NMf0x/T//QE0VFDuvKhUVG68qIF+QFUEGT5EPKj+AAkpMjLH1JAyx9SMMv/UhD0AMntVPgPAdMHIcAAn2xRkyDXSpbTB9QC+wDoMOAhwAHjACHAAuMAAcADkTDjDQOkyMsfEssfy/8QERITAubQAdDTAyFxsJJfBOAi10nBIJJfBOAC0x8hghBwbHVnvSKCEGRzdHK9sJJfBeAD+kAwIPpEAcjKB8v/ydDtRNCBAUDXIfQEMFyBAQj0Cm+hMbOSXwfgBdM/yCWCEHBsdWe6kjgw4w0DghBkc3RyupJfBuMNBgcCASAICQB4AfoA9AQw+CdvIjBQCqEhvvLgUIIQcGx1Z4MesXCAGFAEywUmzxZY+gIZ9ADLaRfLH1Jgyz8gyYBA+wAGAIpQBIEBCPRZMO1E0IEBQNcgyAHPFvQAye1UAXKwjiOCEGRzdHKDHrFwgBhQBcsFUAPPFiP6AhPLassfyz/JgED7AJJfA+ICASAKCwBZvSQrb2omhAgKBrkPoCGEcNQICEekk30pkQzmkD6f+YN4EoAbeBAUiYcVnzGEAgFYDA0AEbjJftRNDXCx+AA9sp37UTQgQFA1yH0BDACyMoHy//J0AGBAQj0Cm+hMYAIBIA4PABmtznaiaEAga5Drhf/AABmvHfaiaEAQa5DrhY/AAG7SB/oA1NQi+QAFyMoHFcv/ydB3dIAYyMsFywIizxZQBfoCFMtrEszMyXP7AMhAFIEBCPRR8qcCAHCBAQjXGPoA0z/IVCBHgQEI9FHyp4IQbm90ZXB0gBjIywXLAlAGzxZQBPoCFMtqEssfyz/Jc/sAAgBsgQEI1xj6ANM/MFIkgQEI9Fnyp4IQZHN0cnB0gBjIywXLAlAFzxZQA/oCE8tqyx8Syz/Jc/sAAAr0AMntVA==', 'base64'))[0];
    var data = (0, core_1.beginCell)().storeUint(0, 32) // Seqno
    .storeUint(this.walletId, 32).storeBuffer(this.publicKey).storeBit(0) // Empty plugins dict
    .endCell();
    this.init = {
      code: code,
      data: data
    };
    this.address = (0, core_1.contractAddress)(workchain, {
      code: code,
      data: data
    });
  }
  /**
   * Get Wallet Balance
   */
  return _createClass(WalletContractV4, [{
    key: "getBalance",
    value: (function () {
      var _getBalance = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(provider) {
        var state;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return provider.getState();
            case 2:
              state = _context.sent;
              return _context.abrupt("return", state.balance);
            case 4:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      function getBalance(_x) {
        return _getBalance.apply(this, arguments);
      }
      return getBalance;
    }()
    /**
     * Get Wallet Seqno
     */
    )
  }, {
    key: "getSeqno",
    value: (function () {
      var _getSeqno = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(provider) {
        var state, res;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return provider.getState();
            case 2:
              state = _context2.sent;
              if (!(state.state.type === 'active')) {
                _context2.next = 10;
                break;
              }
              _context2.next = 6;
              return provider.get('seqno', []);
            case 6:
              res = _context2.sent;
              return _context2.abrupt("return", res.stack.readNumber());
            case 10:
              return _context2.abrupt("return", 0);
            case 11:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      function getSeqno(_x2) {
        return _getSeqno.apply(this, arguments);
      }
      return getSeqno;
    }()
    /**
     * Send signed transfer
     */
    )
  }, {
    key: "send",
    value: (function () {
      var _send = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(provider, message) {
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return provider.external(message);
            case 2:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      function send(_x3, _x4) {
        return _send.apply(this, arguments);
      }
      return send;
    }()
    /**
     * Sign and send transfer
     */
    )
  }, {
    key: "sendTransfer",
    value: (function () {
      var _sendTransfer = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(provider, args) {
        var transfer;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              transfer = this.createTransfer(args);
              _context4.next = 3;
              return this.send(provider, transfer);
            case 3:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
      function sendTransfer(_x5, _x6) {
        return _sendTransfer.apply(this, arguments);
      }
      return sendTransfer;
    }()
    /**
     * Create signed transfer
     */
    )
  }, {
    key: "createTransfer",
    value: function createTransfer(args) {
      var _args$sendMode;
      return (0, createWalletTransfer_1.createWalletTransferV4)(_objectSpread(_objectSpread({}, args), {}, {
        sendMode: (_args$sendMode = args.sendMode) !== null && _args$sendMode !== void 0 ? _args$sendMode : core_1.SendMode.PAY_GAS_SEPARATELY,
        walletId: this.walletId
      }));
    }
    /**
     * Create sender
     */
  }, {
    key: "sender",
    value: function sender(provider, secretKey) {
      var _this = this;
      return {
        send: function () {
          var _send2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(args) {
            var seqno, transfer;
            return _regeneratorRuntime().wrap(function _callee5$(_context5) {
              while (1) switch (_context5.prev = _context5.next) {
                case 0:
                  _context5.next = 2;
                  return _this.getSeqno(provider);
                case 2:
                  seqno = _context5.sent;
                  transfer = _this.createTransfer({
                    seqno: seqno,
                    secretKey: secretKey,
                    sendMode: args.sendMode,
                    messages: [(0, core_1.internal)({
                      to: args.to,
                      value: args.value,
                      init: args.init,
                      body: args.body,
                      bounce: args.bounce
                    })]
                  });
                  _context5.next = 6;
                  return _this.send(provider, transfer);
                case 6:
                case "end":
                  return _context5.stop();
              }
            }, _callee5);
          }));
          function send(_x7) {
            return _send2.apply(this, arguments);
          }
          return send;
        }()
      };
    }
  }], [{
    key: "create",
    value: function create(args) {
      return new WalletContractV4(args.workchain, args.publicKey, args.walletId);
    }
  }]);
}();
exports.WalletContractV4 = WalletContractV4;

}).call(this)}).call(this,require("buffer").Buffer)
},{"./signing/createWalletTransfer":129,"@ton/core":35,"buffer":196}],127:[function(require,module,exports){
"use strict";

var __createBinding = void 0 && (void 0).__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  var desc = Object.getOwnPropertyDescriptor(m, k);
  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
    desc = {
      enumerable: true,
      get: function get() {
        return m[k];
      }
    };
  }
  Object.defineProperty(o, k2, desc);
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});
var __exportStar = void 0 && (void 0).__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
__exportStar(require("./v5beta/WalletContractV5Beta"), exports);
__exportStar(require("./v5beta/WalletV5BetaActions"), exports);
__exportStar(require("./v5beta/WalletV5BetaWalletId"), exports);

},{"./v5beta/WalletContractV5Beta":131,"./v5beta/WalletV5BetaActions":132,"./v5beta/WalletV5BetaWalletId":133}],128:[function(require,module,exports){
"use strict";

var __createBinding = void 0 && (void 0).__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  var desc = Object.getOwnPropertyDescriptor(m, k);
  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
    desc = {
      enumerable: true,
      get: function get() {
        return m[k];
      }
    };
  }
  Object.defineProperty(o, k2, desc);
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});
var __exportStar = void 0 && (void 0).__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
__exportStar(require("./v5r1/WalletContractV5R1"), exports);
__exportStar(require("./v5r1/WalletV5R1Actions"), exports);
__exportStar(require("./v5r1/WalletV5R1WalletId"), exports);

},{"./v5r1/WalletContractV5R1":135,"./v5r1/WalletV5R1Actions":136,"./v5r1/WalletV5R1WalletId":137}],129:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createWalletTransferV1 = createWalletTransferV1;
exports.createWalletTransferV2 = createWalletTransferV2;
exports.createWalletTransferV3 = createWalletTransferV3;
exports.createWalletTransferV4 = createWalletTransferV4;
exports.createWalletTransferV5Beta = createWalletTransferV5Beta;
exports.createWalletTransferV5R1 = createWalletTransferV5R1;
var core_1 = require("@ton/core");
var crypto_1 = require("@ton/crypto");
var WalletContractV5Beta_1 = require("../v5beta/WalletContractV5Beta");
var WalletV5BetaActions_1 = require("../v5beta/WalletV5BetaActions");
var singer_1 = require("./singer");
var WalletContractV5R1_1 = require("../v5r1/WalletContractV5R1");
var WalletV5R1Actions_1 = require("../v5r1/WalletV5R1Actions");
function packSignatureToFront(signature, signingMessage) {
  var body = (0, core_1.beginCell)().storeBuffer(signature).storeBuilder(signingMessage).endCell();
  return body;
}
function packSignatureToTail(signature, signingMessage) {
  var body = (0, core_1.beginCell)().storeBuilder(signingMessage).storeBuffer(signature).endCell();
  return body;
}
function createWalletTransferV1(args) {
  // Create message
  var signingMessage = (0, core_1.beginCell)().storeUint(args.seqno, 32);
  if (args.message) {
    signingMessage.storeUint(args.sendMode, 8);
    signingMessage.storeRef((0, core_1.beginCell)().store((0, core_1.storeMessageRelaxed)(args.message)));
  }
  // Sign message
  var signature = (0, crypto_1.sign)(signingMessage.endCell().hash(), args.secretKey);
  // Body
  var body = (0, core_1.beginCell)().storeBuffer(signature).storeBuilder(signingMessage).endCell();
  return body;
}
function createWalletTransferV2(args) {
  // Check number of messages
  if (args.messages.length > 4) {
    throw Error("Maximum number of messages in a single transfer is 4");
  }
  // Create message
  var signingMessage = (0, core_1.beginCell)().storeUint(args.seqno, 32);
  if (args.seqno === 0) {
    for (var i = 0; i < 32; i++) {
      signingMessage.storeBit(1);
    }
  } else {
    signingMessage.storeUint(args.timeout || Math.floor(Date.now() / 1e3) + 60, 32); // Default timeout: 60 seconds
  }
  var _iterator = _createForOfIteratorHelper(args.messages),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var m = _step.value;
      signingMessage.storeUint(args.sendMode, 8);
      signingMessage.storeRef((0, core_1.beginCell)().store((0, core_1.storeMessageRelaxed)(m)));
    }
    // Sign message
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var signature = (0, crypto_1.sign)(signingMessage.endCell().hash(), args.secretKey);
  // Body
  var body = (0, core_1.beginCell)().storeBuffer(signature).storeBuilder(signingMessage).endCell();
  return body;
}
function createWalletTransferV3(args) {
  // Check number of messages
  if (args.messages.length > 4) {
    throw Error("Maximum number of messages in a single transfer is 4");
  }
  // Create message to sign
  var signingMessage = (0, core_1.beginCell)().storeUint(args.walletId, 32);
  if (args.seqno === 0) {
    for (var i = 0; i < 32; i++) {
      signingMessage.storeBit(1);
    }
  } else {
    signingMessage.storeUint(args.timeout || Math.floor(Date.now() / 1e3) + 60, 32); // Default timeout: 60 seconds
  }
  signingMessage.storeUint(args.seqno, 32);
  var _iterator2 = _createForOfIteratorHelper(args.messages),
    _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var m = _step2.value;
      signingMessage.storeUint(args.sendMode, 8);
      signingMessage.storeRef((0, core_1.beginCell)().store((0, core_1.storeMessageRelaxed)(m)));
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  return (0, singer_1.signPayload)(args, signingMessage, packSignatureToFront);
}
function createWalletTransferV4(args) {
  // Check number of messages
  if (args.messages.length > 4) {
    throw Error("Maximum number of messages in a single transfer is 4");
  }
  var signingMessage = (0, core_1.beginCell)().storeUint(args.walletId, 32);
  if (args.seqno === 0) {
    for (var i = 0; i < 32; i++) {
      signingMessage.storeBit(1);
    }
  } else {
    signingMessage.storeUint(args.timeout || Math.floor(Date.now() / 1e3) + 60, 32); // Default timeout: 60 seconds
  }
  signingMessage.storeUint(args.seqno, 32);
  signingMessage.storeUint(0, 8); // Simple order
  var _iterator3 = _createForOfIteratorHelper(args.messages),
    _step3;
  try {
    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
      var m = _step3.value;
      signingMessage.storeUint(args.sendMode, 8);
      signingMessage.storeRef((0, core_1.beginCell)().store((0, core_1.storeMessageRelaxed)(m)));
    }
  } catch (err) {
    _iterator3.e(err);
  } finally {
    _iterator3.f();
  }
  return (0, singer_1.signPayload)(args, signingMessage, packSignatureToFront);
}
function createWalletTransferV5Beta(args) {
  // Check number of actions
  if (args.actions.length > 255) {
    throw Error("Maximum number of OutActions in a single request is 255");
  }
  if (args.authType === 'extension') {
    return (0, core_1.beginCell)().storeUint(WalletContractV5Beta_1.WalletContractV5Beta.OpCodes.auth_extension, 32).store((0, WalletV5BetaActions_1.storeOutListExtendedV5Beta)(args.actions)).endCell();
  }
  var signingMessage = (0, core_1.beginCell)().storeUint(args.authType === 'internal' ? WalletContractV5Beta_1.WalletContractV5Beta.OpCodes.auth_signed_internal : WalletContractV5Beta_1.WalletContractV5Beta.OpCodes.auth_signed_external, 32).store(args.walletId);
  if (args.seqno === 0) {
    for (var i = 0; i < 32; i++) {
      signingMessage.storeBit(1);
    }
  } else {
    signingMessage.storeUint(args.timeout || Math.floor(Date.now() / 1e3) + 60, 32); // Default timeout: 60 seconds
  }
  signingMessage.storeUint(args.seqno, 32).store((0, WalletV5BetaActions_1.storeOutListExtendedV5Beta)(args.actions));
  return (0, singer_1.signPayload)(args, signingMessage, packSignatureToTail);
}
function createWalletTransferV5R1(args) {
  // Check number of actions
  if (args.actions.length > 255) {
    throw Error("Maximum number of OutActions in a single request is 255");
  }
  args = _objectSpread({}, args);
  if (args.authType === 'extension') {
    var _args$queryId;
    return (0, core_1.beginCell)().storeUint(WalletContractV5R1_1.WalletContractV5R1.OpCodes.auth_extension, 32).storeUint((_args$queryId = args.queryId) !== null && _args$queryId !== void 0 ? _args$queryId : 0, 64).store((0, WalletV5R1Actions_1.storeOutListExtendedV5R1)(args.actions)).endCell();
  }
  args.actions = (0, WalletV5R1Actions_1.patchV5R1ActionsSendMode)(args.actions, args.authType);
  var signingMessage = (0, core_1.beginCell)().storeUint(args.authType === 'internal' ? WalletContractV5R1_1.WalletContractV5R1.OpCodes.auth_signed_internal : WalletContractV5R1_1.WalletContractV5R1.OpCodes.auth_signed_external, 32).store(args.walletId);
  if (args.seqno === 0) {
    for (var i = 0; i < 32; i++) {
      signingMessage.storeBit(1);
    }
  } else {
    signingMessage.storeUint(args.timeout || Math.floor(Date.now() / 1e3) + 60, 32); // Default timeout: 60 seconds
  }
  signingMessage.storeUint(args.seqno, 32).store((0, WalletV5R1Actions_1.storeOutListExtendedV5R1)(args.actions));
  return (0, singer_1.signPayload)(args, signingMessage, packSignatureToTail);
}

},{"../v5beta/WalletContractV5Beta":131,"../v5beta/WalletV5BetaActions":132,"../v5r1/WalletContractV5R1":135,"../v5r1/WalletV5R1Actions":136,"./singer":130,"@ton/core":35,"@ton/crypto":92}],130:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.signPayload = signPayload;
var crypto_1 = require("@ton/crypto");
function signPayload(args, signingMessage, packMessage) {
  if ('secretKey' in args) {
    /**
     * Client provider an secretKey to sign transaction.
     */
    return packMessage((0, crypto_1.sign)(signingMessage.endCell().hash(), args.secretKey), signingMessage);
  } else {
    /**
     * Client use external storage for secretKey.
     * In this case lib could create a request to external resource to sign transaction.
     */
    return args.signer(signingMessage.endCell()).then(function (signature) {
      return packMessage(signature, signingMessage);
    });
  }
}

},{"@ton/crypto":92}],131:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WalletContractV5Beta = void 0;
var core_1 = require("@ton/core");
var createWalletTransfer_1 = require("../signing/createWalletTransfer");
var WalletV5BetaWalletId_1 = require("./WalletV5BetaWalletId");
/**
 * @deprecated
 * use WalletContractV5R1 instead
 */
var WalletContractV5Beta = /*#__PURE__*/function () {
  function WalletContractV5Beta(walletId, publicKey) {
    _classCallCheck(this, WalletContractV5Beta);
    this.walletId = walletId;
    this.publicKey = publicKey;
    this.walletId = walletId;
    // https://github.com/tonkeeper/w5/commit/fa1b372a417a32af104fe1b949b6b31d29cee349 code with library
    var code = core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEAIwAIQgLkzzsvTG1qYeoPK1RH0mZ4WyavNjfbLe7mvNGqgm80Eg3NjhE=', 'base64'))[0];
    var data = (0, core_1.beginCell)().storeInt(0, 33) // Seqno
    .store((0, WalletV5BetaWalletId_1.storeWalletIdV5Beta)(this.walletId)).storeBuffer(this.publicKey, 32).storeBit(0) // Empty plugins dict
    .endCell();
    this.init = {
      code: code,
      data: data
    };
    this.address = (0, core_1.contractAddress)(this.walletId.workchain, {
      code: code,
      data: data
    });
  }
  /**
   * Get Wallet Balance
   */
  return _createClass(WalletContractV5Beta, [{
    key: "getBalance",
    value: (function () {
      var _getBalance = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(provider) {
        var state;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return provider.getState();
            case 2:
              state = _context.sent;
              return _context.abrupt("return", state.balance);
            case 4:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      function getBalance(_x) {
        return _getBalance.apply(this, arguments);
      }
      return getBalance;
    }()
    /**
     * Get Wallet Seqno
     */
    )
  }, {
    key: "getSeqno",
    value: (function () {
      var _getSeqno = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(provider) {
        var state, res;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return provider.getState();
            case 2:
              state = _context2.sent;
              if (!(state.state.type === 'active')) {
                _context2.next = 10;
                break;
              }
              _context2.next = 6;
              return provider.get('seqno', []);
            case 6:
              res = _context2.sent;
              return _context2.abrupt("return", res.stack.readNumber());
            case 10:
              return _context2.abrupt("return", 0);
            case 11:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      function getSeqno(_x2) {
        return _getSeqno.apply(this, arguments);
      }
      return getSeqno;
    }()
    /**
     * Get Wallet Extensions
     */
    )
  }, {
    key: "getExtensions",
    value: (function () {
      var _getExtensions = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(provider) {
        var state, result;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return provider.getState();
            case 2:
              state = _context3.sent;
              if (!(state.state.type === 'active')) {
                _context3.next = 10;
                break;
              }
              _context3.next = 6;
              return provider.get('get_extensions', []);
            case 6:
              result = _context3.sent;
              return _context3.abrupt("return", result.stack.readCellOpt());
            case 10:
              return _context3.abrupt("return", null);
            case 11:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      function getExtensions(_x3) {
        return _getExtensions.apply(this, arguments);
      }
      return getExtensions;
    }()
    /**
     * Get Wallet Extensions
     */
    )
  }, {
    key: "getExtensionsArray",
    value: (function () {
      var _getExtensionsArray = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(provider) {
        var extensions, dict;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return this.getExtensions(provider);
            case 2:
              extensions = _context4.sent;
              if (extensions) {
                _context4.next = 5;
                break;
              }
              return _context4.abrupt("return", []);
            case 5:
              dict = core_1.Dictionary.loadDirect(core_1.Dictionary.Keys.BigUint(256), core_1.Dictionary.Values.BigInt(8), extensions);
              return _context4.abrupt("return", dict.keys().map(function (key) {
                var wc = dict.get(key);
                var addressHex = key ^ wc + 1n;
                return core_1.Address.parseRaw("".concat(wc, ":").concat(addressHex.toString(16).padStart(64, "0")));
              }));
            case 7:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
      function getExtensionsArray(_x4) {
        return _getExtensionsArray.apply(this, arguments);
      }
      return getExtensionsArray;
    }()
    /**
     * Get is secret-key authentication enabled
     */
    )
  }, {
    key: "getIsSecretKeyAuthEnabled",
    value: (function () {
      var _getIsSecretKeyAuthEnabled = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(provider) {
        var res, result;
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return provider.get('get_is_signature_auth_allowed', []);
            case 2:
              res = _context5.sent;
              result = res.stack.readNumber();
              return _context5.abrupt("return", result !== 0);
            case 5:
            case "end":
              return _context5.stop();
          }
        }, _callee5);
      }));
      function getIsSecretKeyAuthEnabled(_x5) {
        return _getIsSecretKeyAuthEnabled.apply(this, arguments);
      }
      return getIsSecretKeyAuthEnabled;
    }()
    /**
     * Send signed transfer
     */
    )
  }, {
    key: "send",
    value: (function () {
      var _send = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(provider, message) {
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return provider.external(message);
            case 2:
            case "end":
              return _context6.stop();
          }
        }, _callee6);
      }));
      function send(_x6, _x7) {
        return _send.apply(this, arguments);
      }
      return send;
    }()
    /**
     * Sign and send transfer
     */
    )
  }, {
    key: "sendTransfer",
    value: (function () {
      var _sendTransfer = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(provider, args) {
        var transfer;
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              _context7.next = 2;
              return this.createTransfer(args);
            case 2:
              transfer = _context7.sent;
              _context7.next = 5;
              return this.send(provider, transfer);
            case 5:
            case "end":
              return _context7.stop();
          }
        }, _callee7, this);
      }));
      function sendTransfer(_x8, _x9) {
        return _sendTransfer.apply(this, arguments);
      }
      return sendTransfer;
    }()
    /**
     * Sign and send add extension request
     */
    )
  }, {
    key: "sendAddExtension",
    value: (function () {
      var _sendAddExtension = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(provider, args) {
        var request;
        return _regeneratorRuntime().wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              _context8.next = 2;
              return this.createAddExtension(args);
            case 2:
              request = _context8.sent;
              _context8.next = 5;
              return this.send(provider, request);
            case 5:
            case "end":
              return _context8.stop();
          }
        }, _callee8, this);
      }));
      function sendAddExtension(_x10, _x11) {
        return _sendAddExtension.apply(this, arguments);
      }
      return sendAddExtension;
    }()
    /**
     * Sign and send remove extension request
     */
    )
  }, {
    key: "sendRemoveExtension",
    value: (function () {
      var _sendRemoveExtension = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(provider, args) {
        var request;
        return _regeneratorRuntime().wrap(function _callee9$(_context9) {
          while (1) switch (_context9.prev = _context9.next) {
            case 0:
              _context9.next = 2;
              return this.createRemoveExtension(args);
            case 2:
              request = _context9.sent;
              _context9.next = 5;
              return this.send(provider, request);
            case 5:
            case "end":
              return _context9.stop();
          }
        }, _callee9, this);
      }));
      function sendRemoveExtension(_x12, _x13) {
        return _sendRemoveExtension.apply(this, arguments);
      }
      return sendRemoveExtension;
    }()
    /**
     * Sign and send actions batch
     */
    )
  }, {
    key: "sendActionsBatch",
    value: (function () {
      var _sendActionsBatch = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(provider, args) {
        var request;
        return _regeneratorRuntime().wrap(function _callee10$(_context10) {
          while (1) switch (_context10.prev = _context10.next) {
            case 0:
              _context10.next = 2;
              return this.createRequest(args);
            case 2:
              request = _context10.sent;
              _context10.next = 5;
              return this.send(provider, request);
            case 5:
            case "end":
              return _context10.stop();
          }
        }, _callee10, this);
      }));
      function sendActionsBatch(_x14, _x15) {
        return _sendActionsBatch.apply(this, arguments);
      }
      return sendActionsBatch;
    }())
  }, {
    key: "createActions",
    value: function createActions(args) {
      var actions = args.messages.map(function (message) {
        return {
          type: 'sendMsg',
          mode: args.sendMode,
          outMsg: message
        };
      });
      return actions;
    }
    /**
     * Create signed transfer
     */
  }, {
    key: "createTransfer",
    value: function createTransfer(args) {
      return this.createRequest(_objectSpread(_objectSpread({}, args), {}, {
        actions: this.createActions({
          messages: args.messages,
          sendMode: args.sendMode
        })
      }));
    }
    /**
     * Create signed add extension request
     */
  }, {
    key: "createAddExtension",
    value: function createAddExtension(args) {
      return this.createRequest(_objectSpread(_objectSpread({}, args), {}, {
        actions: [{
          type: 'addExtension',
          address: args.extensionAddress
        }]
      }));
    }
    /**
     * Create signed remove extension request
     */
  }, {
    key: "createRemoveExtension",
    value: function createRemoveExtension(args) {
      return this.createRequest(_objectSpread(_objectSpread({}, args), {}, {
        actions: [{
          type: 'removeExtension',
          address: args.extensionAddress
        }]
      }));
    }
    /**
     * Create signed request or extension auth request
     */
  }, {
    key: "createRequest",
    value: function createRequest(args) {
      if (args.authType === 'extension') {
        return (0, createWalletTransfer_1.createWalletTransferV5Beta)(args);
      }
      return (0, createWalletTransfer_1.createWalletTransferV5Beta)(_objectSpread(_objectSpread({}, args), {}, {
        walletId: (0, WalletV5BetaWalletId_1.storeWalletIdV5Beta)(this.walletId)
      }));
    }
    /**
     * Create sender
     */
  }, {
    key: "sender",
    value: function sender(provider, secretKey) {
      var _this = this;
      return {
        send: function () {
          var _send2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(args) {
            var _args$sendMode;
            var seqno, transfer;
            return _regeneratorRuntime().wrap(function _callee11$(_context11) {
              while (1) switch (_context11.prev = _context11.next) {
                case 0:
                  _context11.next = 2;
                  return _this.getSeqno(provider);
                case 2:
                  seqno = _context11.sent;
                  transfer = _this.createTransfer({
                    seqno: seqno,
                    secretKey: secretKey,
                    sendMode: (_args$sendMode = args.sendMode) !== null && _args$sendMode !== void 0 ? _args$sendMode : core_1.SendMode.PAY_GAS_SEPARATELY + core_1.SendMode.IGNORE_ERRORS,
                    messages: [(0, core_1.internal)({
                      to: args.to,
                      value: args.value,
                      init: args.init,
                      body: args.body,
                      bounce: args.bounce
                    })]
                  });
                  _context11.next = 6;
                  return _this.send(provider, transfer);
                case 6:
                case "end":
                  return _context11.stop();
              }
            }, _callee11);
          }));
          function send(_x16) {
            return _send2.apply(this, arguments);
          }
          return send;
        }()
      };
    }
  }], [{
    key: "create",
    value: function create(args) {
      var _args$walletId$networ, _args$walletId, _args$walletId$workch, _args$walletId2, _args$walletId$subwal, _args$walletId3, _args$walletId$wallet, _args$walletId4;
      var walletId = {
        networkGlobalId: (_args$walletId$networ = (_args$walletId = args.walletId) === null || _args$walletId === void 0 ? void 0 : _args$walletId.networkGlobalId) !== null && _args$walletId$networ !== void 0 ? _args$walletId$networ : -239,
        workchain: (_args$walletId$workch = args === null || args === void 0 || (_args$walletId2 = args.walletId) === null || _args$walletId2 === void 0 ? void 0 : _args$walletId2.workchain) !== null && _args$walletId$workch !== void 0 ? _args$walletId$workch : 0,
        subwalletNumber: (_args$walletId$subwal = args === null || args === void 0 || (_args$walletId3 = args.walletId) === null || _args$walletId3 === void 0 ? void 0 : _args$walletId3.subwalletNumber) !== null && _args$walletId$subwal !== void 0 ? _args$walletId$subwal : 0,
        walletVersion: (_args$walletId$wallet = args === null || args === void 0 || (_args$walletId4 = args.walletId) === null || _args$walletId4 === void 0 ? void 0 : _args$walletId4.walletVersion) !== null && _args$walletId$wallet !== void 0 ? _args$walletId$wallet : 'v5'
      };
      return new WalletContractV5Beta(walletId, args.publicKey);
    }
  }]);
}();
exports.WalletContractV5Beta = WalletContractV5Beta;
WalletContractV5Beta.OpCodes = {
  auth_extension: 0x6578746e,
  auth_signed_external: 0x7369676e,
  auth_signed_internal: 0x73696e74
};

}).call(this)}).call(this,require("buffer").Buffer)
},{"../signing/createWalletTransfer":129,"./WalletV5BetaWalletId":133,"@ton/core":35,"buffer":196}],132:[function(require,module,exports){
"use strict";

function _toArray(r) { return _arrayWithHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeOutActionExtendedV5Beta = storeOutActionExtendedV5Beta;
exports.loadOutActionV5BetaExtended = loadOutActionV5BetaExtended;
exports.storeOutListExtendedV5Beta = storeOutListExtendedV5Beta;
exports.loadOutListExtendedV5Beta = loadOutListExtendedV5Beta;
var core_1 = require("@ton/core");
var WalletV5OutActions_1 = require("./WalletV5OutActions");
var outActionSetIsPublicKeyEnabledTag = 0x20cbb95a;
function storeOutActionSetIsPublicKeyEnabled(action) {
  return function (builder) {
    builder.storeUint(outActionSetIsPublicKeyEnabledTag, 32).storeUint(action.isEnabled ? 1 : 0, 1);
  };
}
var outActionAddExtensionTag = 0x1c40db9f;
function storeOutActionAddExtension(action) {
  return function (builder) {
    builder.storeUint(outActionAddExtensionTag, 32).storeAddress(action.address);
  };
}
var outActionRemoveExtensionTag = 0x5eaef4a4;
function storeOutActionRemoveExtension(action) {
  return function (builder) {
    builder.storeUint(outActionRemoveExtensionTag, 32).storeAddress(action.address);
  };
}
function storeOutActionExtendedV5Beta(action) {
  switch (action.type) {
    case 'setIsPublicKeyEnabled':
      return storeOutActionSetIsPublicKeyEnabled(action);
    case 'addExtension':
      return storeOutActionAddExtension(action);
    case 'removeExtension':
      return storeOutActionRemoveExtension(action);
    default:
      throw new Error('Unknown action type' + (action === null || action === void 0 ? void 0 : action.type));
  }
}
function loadOutActionV5BetaExtended(slice) {
  var tag = slice.loadUint(32);
  switch (tag) {
    case outActionSetIsPublicKeyEnabledTag:
      return {
        type: 'setIsPublicKeyEnabled',
        isEnabled: !!slice.loadUint(1)
      };
    case outActionAddExtensionTag:
      return {
        type: 'addExtension',
        address: slice.loadAddress()
      };
    case outActionRemoveExtensionTag:
      return {
        type: 'removeExtension',
        address: slice.loadAddress()
      };
    default:
      throw new Error("Unknown extended out action tag 0x".concat(tag.toString(16)));
  }
}
function storeOutListExtendedV5Beta(actions) {
  var _actions = _toArray(actions),
    action = _actions[0],
    rest = _actions.slice(1);
  if (!action || !(0, WalletV5OutActions_1.isOutActionExtended)(action)) {
    if (actions.some(WalletV5OutActions_1.isOutActionExtended)) {
      throw new Error("Can't serialize actions list: all extended actions must be placed before out actions");
    }
    return function (builder) {
      builder.storeUint(0, 1).storeRef((0, core_1.beginCell)().store((0, core_1.storeOutList)(actions)).endCell());
    };
  }
  return function (builder) {
    builder.storeUint(1, 1).store(storeOutActionExtendedV5Beta(action)).storeRef((0, core_1.beginCell)().store(storeOutListExtendedV5Beta(rest)).endCell());
  };
}
function loadOutListExtendedV5Beta(slice) {
  var actions = [];
  while (slice.loadUint(1)) {
    var action = loadOutActionV5BetaExtended(slice);
    actions.push(action);
    slice = slice.loadRef().beginParse();
  }
  var commonAction = (0, core_1.loadOutList)(slice.loadRef().beginParse());
  if (commonAction.some(function (i) {
    return i.type === 'setCode';
  })) {
    throw new Error("Can't deserialize actions list: only sendMsg actions are allowed for wallet v5");
  }
  return actions.concat(commonAction);
}

},{"./WalletV5OutActions":134,"@ton/core":35}],133:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loadWalletIdV5Beta = loadWalletIdV5Beta;
exports.storeWalletIdV5Beta = storeWalletIdV5Beta;
var core_1 = require("@ton/core");
var walletV5BetaVersionsSerialisation = {
  v5: 0
};
function loadWalletIdV5Beta(value) {
  var _Object$entries$find;
  var bitReader = new core_1.BitReader(new core_1.BitString(typeof value === 'bigint' ? Buffer.from(value.toString(16), 'hex') : value instanceof core_1.Slice ? value.loadBuffer(10) : value, 0, 80));
  var networkGlobalId = bitReader.loadInt(32);
  var workchain = bitReader.loadInt(8);
  var walletVersionRaw = bitReader.loadUint(8);
  var subwalletNumber = bitReader.loadUint(32);
  var walletVersion = (_Object$entries$find = Object.entries(walletV5BetaVersionsSerialisation).find(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
      _ = _ref2[0],
      value = _ref2[1];
    return value === walletVersionRaw;
  })) === null || _Object$entries$find === void 0 ? void 0 : _Object$entries$find[0];
  if (walletVersion === undefined) {
    throw new Error("Can't deserialize walletId: unknown wallet version ".concat(walletVersionRaw));
  }
  return {
    networkGlobalId: networkGlobalId,
    workchain: workchain,
    walletVersion: walletVersion,
    subwalletNumber: subwalletNumber
  };
}
function storeWalletIdV5Beta(walletId) {
  return function (builder) {
    builder.storeInt(walletId.networkGlobalId, 32);
    builder.storeInt(walletId.workchain, 8);
    builder.storeUint(walletV5BetaVersionsSerialisation[walletId.walletVersion], 8);
    builder.storeUint(walletId.subwalletNumber, 32);
  };
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"@ton/core":35,"buffer":196}],134:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isOutActionExtended = isOutActionExtended;
exports.isOutActionBasic = isOutActionBasic;
function isOutActionExtended(action) {
  return action.type === 'setIsPublicKeyEnabled' || action.type === 'addExtension' || action.type === 'removeExtension';
}
function isOutActionBasic(action) {
  return !isOutActionExtended(action);
}

},{}],135:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

/**
 * Copyright (c) Whales Corp.
 * All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WalletContractV5R1 = void 0;
var core_1 = require("@ton/core");
var createWalletTransfer_1 = require("../signing/createWalletTransfer");
var WalletV5R1WalletId_1 = require("./WalletV5R1WalletId");
var WalletContractV5R1 = /*#__PURE__*/function () {
  function WalletContractV5R1(workchain, publicKey, walletId) {
    _classCallCheck(this, WalletContractV5R1);
    this.publicKey = publicKey;
    this.walletId = walletId;
    this.walletId = walletId;
    // https://github.com/ton-blockchain/wallet-contract-v5/blob/4fab977f4fae3a37c1aac216ed2b7e611a9bc2af/build/wallet_v5.compiled.json
    var code = core_1.Cell.fromBoc(Buffer.from('b5ee9c7241021401000281000114ff00f4a413f4bcf2c80b01020120020d020148030402dcd020d749c120915b8f6320d70b1f2082106578746ebd21821073696e74bdb0925f03e082106578746eba8eb48020d72101d074d721fa4030fa44f828fa443058bd915be0ed44d0810141d721f4058307f40e6fa1319130e18040d721707fdb3ce03120d749810280b99130e070e2100f020120050c020120060902016e07080019adce76a2684020eb90eb85ffc00019af1df6a2684010eb90eb858fc00201480a0b0017b325fb51341c75c875c2c7e00011b262fb513435c280200019be5f0f6a2684080a0eb90fa02c0102f20e011e20d70b1f82107369676ebaf2e08a7f0f01e68ef0eda2edfb218308d722028308d723208020d721d31fd31fd31fed44d0d200d31f20d31fd3ffd70a000af90140ccf9109a28945f0adb31e1f2c087df02b35007b0f2d0845125baf2e0855036baf2e086f823bbf2d0882292f800de01a47fc8ca00cb1f01cf16c9ed542092f80fde70db3cd81003f6eda2edfb02f404216e926c218e4c0221d73930709421c700b38e2d01d72820761e436c20d749c008f2e09320d74ac002f2e09320d71d06c712c2005230b0f2d089d74cd7393001a4e86c128407bbf2e093d74ac000f2e093ed55e2d20001c000915be0ebd72c08142091709601d72c081c12e25210b1e30f20d74a111213009601fa4001fa44f828fa443058baf2e091ed44d0810141d718f405049d7fc8ca0040048307f453f2e08b8e14038307f45bf2e08c22d70a00216e01b3b0f2d090e2c85003cf1612f400c9ed54007230d72c08248e2d21f2e092d200ed44d0d2005113baf2d08f54503091319c01810140d721d70a00f2e08ee2c8ca0058cf16c9ed5493f2c08de20010935bdb31e1d74cd0b4d6c35e', 'hex'))[0];
    var data = (0, core_1.beginCell)().storeUint(1, 1) // is signature auth allowed
    .storeUint(0, 32) // Seqno
    .store((0, WalletV5R1WalletId_1.storeWalletIdV5R1)(this.walletId)).storeBuffer(this.publicKey, 32).storeBit(0) // Empty plugins dict
    .endCell();
    this.init = {
      code: code,
      data: data
    };
    this.address = (0, core_1.contractAddress)(workchain, {
      code: code,
      data: data
    });
  }
  /**
   * Get Wallet Balance
   */
  return _createClass(WalletContractV5R1, [{
    key: "getBalance",
    value: (function () {
      var _getBalance = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(provider) {
        var state;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return provider.getState();
            case 2:
              state = _context.sent;
              return _context.abrupt("return", state.balance);
            case 4:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      function getBalance(_x) {
        return _getBalance.apply(this, arguments);
      }
      return getBalance;
    }()
    /**
     * Get Wallet Seqno
     */
    )
  }, {
    key: "getSeqno",
    value: (function () {
      var _getSeqno = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(provider) {
        var state, res;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return provider.getState();
            case 2:
              state = _context2.sent;
              if (!(state.state.type === 'active')) {
                _context2.next = 10;
                break;
              }
              _context2.next = 6;
              return provider.get('seqno', []);
            case 6:
              res = _context2.sent;
              return _context2.abrupt("return", res.stack.readNumber());
            case 10:
              return _context2.abrupt("return", 0);
            case 11:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      function getSeqno(_x2) {
        return _getSeqno.apply(this, arguments);
      }
      return getSeqno;
    }()
    /**
     * Get Wallet Extensions
     */
    )
  }, {
    key: "getExtensions",
    value: (function () {
      var _getExtensions = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(provider) {
        var state, result;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return provider.getState();
            case 2:
              state = _context3.sent;
              if (!(state.state.type === 'active')) {
                _context3.next = 10;
                break;
              }
              _context3.next = 6;
              return provider.get('get_extensions', []);
            case 6:
              result = _context3.sent;
              return _context3.abrupt("return", result.stack.readCellOpt());
            case 10:
              return _context3.abrupt("return", null);
            case 11:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      function getExtensions(_x3) {
        return _getExtensions.apply(this, arguments);
      }
      return getExtensions;
    }()
    /**
     * Get Wallet Extensions
     */
    )
  }, {
    key: "getExtensionsArray",
    value: (function () {
      var _getExtensionsArray = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(provider) {
        var _this = this;
        var extensions, dict;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return this.getExtensions(provider);
            case 2:
              extensions = _context4.sent;
              if (extensions) {
                _context4.next = 5;
                break;
              }
              return _context4.abrupt("return", []);
            case 5:
              dict = core_1.Dictionary.loadDirect(core_1.Dictionary.Keys.BigUint(256), core_1.Dictionary.Values.BigInt(1), extensions);
              return _context4.abrupt("return", dict.keys().map(function (addressHex) {
                var wc = _this.address.workChain;
                return core_1.Address.parseRaw("".concat(wc, ":").concat(addressHex.toString(16).padStart(64, '0')));
              }));
            case 7:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
      function getExtensionsArray(_x4) {
        return _getExtensionsArray.apply(this, arguments);
      }
      return getExtensionsArray;
    }()
    /**
     * Get is secret-key authentication enabled
     */
    )
  }, {
    key: "getIsSecretKeyAuthEnabled",
    value: (function () {
      var _getIsSecretKeyAuthEnabled = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(provider) {
        var res;
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return provider.get('is_signature_allowed', []);
            case 2:
              res = _context5.sent;
              return _context5.abrupt("return", res.stack.readBoolean());
            case 4:
            case "end":
              return _context5.stop();
          }
        }, _callee5);
      }));
      function getIsSecretKeyAuthEnabled(_x5) {
        return _getIsSecretKeyAuthEnabled.apply(this, arguments);
      }
      return getIsSecretKeyAuthEnabled;
    }()
    /**
     * Send signed transfer
     */
    )
  }, {
    key: "send",
    value: (function () {
      var _send = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(provider, message) {
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return provider.external(message);
            case 2:
            case "end":
              return _context6.stop();
          }
        }, _callee6);
      }));
      function send(_x6, _x7) {
        return _send.apply(this, arguments);
      }
      return send;
    }()
    /**
     * Sign and send transfer
     */
    )
  }, {
    key: "sendTransfer",
    value: (function () {
      var _sendTransfer = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(provider, args) {
        var transfer;
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              _context7.next = 2;
              return this.createTransfer(args);
            case 2:
              transfer = _context7.sent;
              _context7.next = 5;
              return this.send(provider, transfer);
            case 5:
            case "end":
              return _context7.stop();
          }
        }, _callee7, this);
      }));
      function sendTransfer(_x8, _x9) {
        return _sendTransfer.apply(this, arguments);
      }
      return sendTransfer;
    }()
    /**
     * Sign and send add extension request
     */
    )
  }, {
    key: "sendAddExtension",
    value: (function () {
      var _sendAddExtension = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(provider, args) {
        var request;
        return _regeneratorRuntime().wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              _context8.next = 2;
              return this.createAddExtension(args);
            case 2:
              request = _context8.sent;
              _context8.next = 5;
              return this.send(provider, request);
            case 5:
            case "end":
              return _context8.stop();
          }
        }, _callee8, this);
      }));
      function sendAddExtension(_x10, _x11) {
        return _sendAddExtension.apply(this, arguments);
      }
      return sendAddExtension;
    }()
    /**
     * Sign and send remove extension request
     */
    )
  }, {
    key: "sendRemoveExtension",
    value: (function () {
      var _sendRemoveExtension = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(provider, args) {
        var request;
        return _regeneratorRuntime().wrap(function _callee9$(_context9) {
          while (1) switch (_context9.prev = _context9.next) {
            case 0:
              _context9.next = 2;
              return this.createRemoveExtension(args);
            case 2:
              request = _context9.sent;
              _context9.next = 5;
              return this.send(provider, request);
            case 5:
            case "end":
              return _context9.stop();
          }
        }, _callee9, this);
      }));
      function sendRemoveExtension(_x12, _x13) {
        return _sendRemoveExtension.apply(this, arguments);
      }
      return sendRemoveExtension;
    }())
  }, {
    key: "createActions",
    value: function createActions(args) {
      var actions = args.messages.map(function (message) {
        return {
          type: 'sendMsg',
          mode: args.sendMode,
          outMsg: message
        };
      });
      return actions;
    }
    /**
     * Create signed transfer
     */
  }, {
    key: "createTransfer",
    value: function createTransfer(args) {
      return this.createRequest(_objectSpread({
        actions: this.createActions({
          messages: args.messages,
          sendMode: args.sendMode
        })
      }, args));
    }
    /**
     * Create signed add extension request
     */
  }, {
    key: "createAddExtension",
    value: function createAddExtension(args) {
      return this.createRequest(_objectSpread({
        actions: [{
          type: 'addExtension',
          address: args.extensionAddress
        }]
      }, args));
    }
    /**
     * Create signed remove extension request
     */
  }, {
    key: "createRemoveExtension",
    value: function createRemoveExtension(args) {
      return this.createRequest(_objectSpread({
        actions: [{
          type: 'removeExtension',
          address: args.extensionAddress
        }]
      }, args));
    }
    /**
     * Create signed request or extension auth request
     */
  }, {
    key: "createRequest",
    value: function createRequest(args) {
      if (args.authType === 'extension') {
        return (0, createWalletTransfer_1.createWalletTransferV5R1)(args);
      }
      return (0, createWalletTransfer_1.createWalletTransferV5R1)(_objectSpread(_objectSpread({}, args), {}, {
        walletId: (0, WalletV5R1WalletId_1.storeWalletIdV5R1)(this.walletId)
      }));
    }
    /**
     * Create sender
     */
  }, {
    key: "sender",
    value: function sender(provider, secretKey) {
      var _this2 = this;
      return {
        send: function () {
          var _send2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(args) {
            var _args$sendMode;
            var seqno, transfer;
            return _regeneratorRuntime().wrap(function _callee10$(_context10) {
              while (1) switch (_context10.prev = _context10.next) {
                case 0:
                  _context10.next = 2;
                  return _this2.getSeqno(provider);
                case 2:
                  seqno = _context10.sent;
                  transfer = _this2.createTransfer({
                    seqno: seqno,
                    secretKey: secretKey,
                    sendMode: (_args$sendMode = args.sendMode) !== null && _args$sendMode !== void 0 ? _args$sendMode : core_1.SendMode.PAY_GAS_SEPARATELY + core_1.SendMode.IGNORE_ERRORS,
                    messages: [(0, core_1.internal)({
                      to: args.to,
                      value: args.value,
                      init: args.init,
                      body: args.body,
                      bounce: args.bounce
                    })]
                  });
                  _context10.next = 6;
                  return _this2.send(provider, transfer);
                case 6:
                case "end":
                  return _context10.stop();
              }
            }, _callee10);
          }));
          function send(_x14) {
            return _send2.apply(this, arguments);
          }
          return send;
        }()
      };
    }
  }], [{
    key: "create",
    value: function create(args) {
      var _args$walletId, _args$walletId$networ, _args$walletId2, _args$walletId$contex, _args$walletId3;
      var workchain = 0;
      if ('workchain' in args && args.workchain != undefined) {
        workchain = args.workchain;
      }
      if ((_args$walletId = args.walletId) !== null && _args$walletId !== void 0 && _args$walletId.context && (0, WalletV5R1WalletId_1.isWalletIdV5R1ClientContext)(args.walletId.context) && args.walletId.context.workchain != undefined) {
        workchain = args.walletId.context.workchain;
      }
      return new WalletContractV5R1(workchain, args.publicKey, {
        networkGlobalId: (_args$walletId$networ = (_args$walletId2 = args.walletId) === null || _args$walletId2 === void 0 ? void 0 : _args$walletId2.networkGlobalId) !== null && _args$walletId$networ !== void 0 ? _args$walletId$networ : -239,
        context: (_args$walletId$contex = (_args$walletId3 = args.walletId) === null || _args$walletId3 === void 0 ? void 0 : _args$walletId3.context) !== null && _args$walletId$contex !== void 0 ? _args$walletId$contex : {
          workchain: 0,
          walletVersion: 'v5r1',
          subwalletNumber: 0
        }
      });
    }
  }]);
}();
exports.WalletContractV5R1 = WalletContractV5R1;
WalletContractV5R1.OpCodes = {
  auth_extension: 0x6578746e,
  auth_signed_external: 0x7369676e,
  auth_signed_internal: 0x73696e74
};

}).call(this)}).call(this,require("buffer").Buffer)
},{"../signing/createWalletTransfer":129,"./WalletV5R1WalletId":137,"@ton/core":35,"buffer":196}],136:[function(require,module,exports){
"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _toArray(r) { return _arrayWithHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.storeOutActionExtendedV5R1 = storeOutActionExtendedV5R1;
exports.loadOutActionExtendedV5R1 = loadOutActionExtendedV5R1;
exports.storeOutListExtendedV5R1 = storeOutListExtendedV5R1;
exports.loadOutListExtendedV5R1 = loadOutListExtendedV5R1;
exports.toSafeV5R1SendMode = toSafeV5R1SendMode;
exports.patchV5R1ActionsSendMode = patchV5R1ActionsSendMode;
var core_1 = require("@ton/core");
var WalletV5OutActions_1 = require("../v5beta/WalletV5OutActions");
var outActionSetIsPublicKeyEnabledTag = 0x04;
function storeOutActionSetIsPublicKeyEnabled(action) {
  return function (builder) {
    builder.storeUint(outActionSetIsPublicKeyEnabledTag, 8).storeUint(action.isEnabled ? 1 : 0, 1);
  };
}
var outActionAddExtensionTag = 0x02;
function storeOutActionAddExtension(action) {
  return function (builder) {
    builder.storeUint(outActionAddExtensionTag, 8).storeAddress(action.address);
  };
}
var outActionRemoveExtensionTag = 0x03;
function storeOutActionRemoveExtension(action) {
  return function (builder) {
    builder.storeUint(outActionRemoveExtensionTag, 8).storeAddress(action.address);
  };
}
function storeOutActionExtendedV5R1(action) {
  switch (action.type) {
    case 'setIsPublicKeyEnabled':
      return storeOutActionSetIsPublicKeyEnabled(action);
    case 'addExtension':
      return storeOutActionAddExtension(action);
    case 'removeExtension':
      return storeOutActionRemoveExtension(action);
    default:
      throw new Error('Unknown action type' + (action === null || action === void 0 ? void 0 : action.type));
  }
}
function loadOutActionExtendedV5R1(slice) {
  var tag = slice.loadUint(8);
  switch (tag) {
    case outActionSetIsPublicKeyEnabledTag:
      return {
        type: 'setIsPublicKeyEnabled',
        isEnabled: !!slice.loadUint(1)
      };
    case outActionAddExtensionTag:
      return {
        type: 'addExtension',
        address: slice.loadAddress()
      };
    case outActionRemoveExtensionTag:
      return {
        type: 'removeExtension',
        address: slice.loadAddress()
      };
    default:
      throw new Error("Unknown extended out action tag 0x".concat(tag.toString(16)));
  }
}
function storeOutListExtendedV5R1(actions) {
  var extendedActions = actions.filter(WalletV5OutActions_1.isOutActionExtended);
  var basicActions = actions.filter(WalletV5OutActions_1.isOutActionBasic);
  return function (builder) {
    var outListPacked = basicActions.length ? (0, core_1.beginCell)().store((0, core_1.storeOutList)(basicActions.slice().reverse())) : null;
    builder.storeMaybeRef(outListPacked);
    if (extendedActions.length === 0) {
      builder.storeUint(0, 1);
    } else {
      var _extendedActions = _toArray(extendedActions),
        first = _extendedActions[0],
        rest = _extendedActions.slice(1);
      builder.storeUint(1, 1).store(storeOutActionExtendedV5R1(first));
      if (rest.length > 0) {
        builder.storeRef(packExtendedActionsRec(rest));
      }
    }
  };
}
function packExtendedActionsRec(extendedActions) {
  var _extendedActions2 = _toArray(extendedActions),
    first = _extendedActions2[0],
    rest = _extendedActions2.slice(1);
  var builder = (0, core_1.beginCell)().store(storeOutActionExtendedV5R1(first));
  if (rest.length > 0) {
    builder = builder.storeRef(packExtendedActionsRec(rest));
  }
  return builder.endCell();
}
function loadOutListExtendedV5R1(slice) {
  var actions = [];
  var outListPacked = slice.loadMaybeRef();
  if (outListPacked) {
    var loadedActions = (0, core_1.loadOutList)(outListPacked.beginParse());
    if (loadedActions.some(function (a) {
      return a.type !== 'sendMsg';
    })) {
      throw new Error("Can't deserialize actions list: only sendMsg actions are allowed for wallet v5r1");
    }
    actions.push.apply(actions, _toConsumableArray(loadedActions));
  }
  if (slice.loadBoolean()) {
    var action = loadOutActionExtendedV5R1(slice);
    actions.push(action);
  }
  while (slice.remainingRefs > 0) {
    slice = slice.loadRef().beginParse();
    var _action = loadOutActionExtendedV5R1(slice);
    actions.push(_action);
  }
  return actions;
}
/**
 * Safety rules -- actions of external messages must have +2 in the SendMode. Internal messages actions may have arbitrary SendMode.
 */
function toSafeV5R1SendMode(sendMode, authType) {
  if (authType === 'internal' || authType === 'extension') {
    return sendMode;
  }
  return sendMode | core_1.SendMode.IGNORE_ERRORS;
}
function patchV5R1ActionsSendMode(actions, authType) {
  return actions.map(function (action) {
    return action.type === 'sendMsg' ? _objectSpread(_objectSpread({}, action), {}, {
      mode: toSafeV5R1SendMode(action.mode, authType)
    }) : action;
  });
}

},{"../v5beta/WalletV5OutActions":134,"@ton/core":35}],137:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isWalletIdV5R1ClientContext = isWalletIdV5R1ClientContext;
exports.loadWalletIdV5R1 = loadWalletIdV5R1;
exports.storeWalletIdV5R1 = storeWalletIdV5R1;
var core_1 = require("@ton/core");
function isWalletIdV5R1ClientContext(context) {
  return typeof context !== 'number';
}
var walletV5R1VersionsSerialisation = {
  v5r1: 0
};
/**
 * @param value serialized wallet id
 * @param networkGlobalId -239 is mainnet, -3 is testnet
 */
function loadWalletIdV5R1(value, networkGlobalId) {
  var val = new core_1.BitReader(new core_1.BitString(typeof value === 'bigint' ? Buffer.from(value.toString(16), 'hex') : value instanceof core_1.Slice ? value.loadBuffer(4) : value, 0, 32)).loadInt(32);
  var context = BigInt(val) ^ BigInt(networkGlobalId);
  var bitReader = (0, core_1.beginCell)().storeInt(context, 32).endCell().beginParse();
  var isClientContext = bitReader.loadUint(1);
  if (isClientContext) {
    var _Object$entries$find;
    var workchain = bitReader.loadInt(8);
    var walletVersionRaw = bitReader.loadUint(8);
    var subwalletNumber = bitReader.loadUint(15);
    var walletVersion = (_Object$entries$find = Object.entries(walletV5R1VersionsSerialisation).find(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
        _ = _ref2[0],
        value = _ref2[1];
      return value === walletVersionRaw;
    })) === null || _Object$entries$find === void 0 ? void 0 : _Object$entries$find[0];
    if (walletVersion === undefined) {
      throw new Error("Can't deserialize walletId: unknown wallet version ".concat(walletVersionRaw));
    }
    return {
      networkGlobalId: networkGlobalId,
      context: {
        walletVersion: walletVersion,
        workchain: workchain,
        subwalletNumber: subwalletNumber
      }
    };
  } else {
    var _context = bitReader.loadUint(31);
    return {
      networkGlobalId: networkGlobalId,
      context: _context
    };
  }
}
function storeWalletIdV5R1(walletId) {
  return function (builder) {
    var context;
    if (isWalletIdV5R1ClientContext(walletId.context)) {
      context = (0, core_1.beginCell)().storeUint(1, 1).storeInt(walletId.context.workchain, 8).storeUint(walletV5R1VersionsSerialisation[walletId.context.walletVersion], 8).storeUint(walletId.context.subwalletNumber, 15).endCell().beginParse().loadInt(32);
    } else {
      context = (0, core_1.beginCell)().storeUint(0, 1).storeUint(walletId.context, 31).endCell().beginParse().loadInt(32);
    }
    return builder.storeInt(BigInt(walletId.networkGlobalId) ^ BigInt(context), 32);
  };
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"@ton/core":35,"buffer":196}],138:[function(require,module,exports){
module.exports={
  "name": "@ton/ton",
  "version": "15.1.0",
  "repository": "https://github.com/ton-org/ton.git",
  "author": "Whales Corp. <developers@whalescorp.com>",
  "license": "MIT",
  "main": "dist/index.js",
  "files": [
    "dist"
  ],
  "scripts": {
    "docs": "rm -fr docs && typedoc src/index.ts",
    "build": "rm -fr dist && tsc --declaration",
    "test": "jest --verbose --runInBand",
    "release": "yarn build && yarn release-it --npm.yarn1"
  },
  "devDependencies": {
    "@release-it/keep-a-changelog": "^5.0.0",
    "@ton/core": "^0.59.0",
    "@ton/crypto": "3.2.0",
    "@ton/emulator": "^2.1.1",
    "@types/jest": "^27.0.1",
    "@types/node": "^16.7.10",
    "buffer": "^6.0.3",
    "expect": "^27.1.0",
    "jest": "^27.1.0",
    "jest-mock": "^27.1.0",
    "karma": "^6.3.4",
    "karma-chrome-launcher": "^3.1.0",
    "karma-jasmine": "^4.0.1",
    "karma-typescript": "^5.5.2",
    "karma-webpack": "^5.0.0",
    "prando": "^6.0.1",
    "release-it": "^17.1.1",
    "ts-jest": "^27.0.5",
    "ts-loader": "^9.2.5",
    "ts-node": "^10.7.0",
    "typedoc": "^0.23.24",
    "typescript": "^5.6.3",
    "webpack": "^5.51.2"
  },
  "dependencies": {
    "axios": "^1.6.7",
    "dataloader": "^2.0.0",
    "symbol.inspect": "1.0.1",
    "teslabot": "^1.3.0",
    "zod": "^3.21.4"
  },
  "peerDependencies": {
    "@ton/core": ">=0.59.0",
    "@ton/crypto": ">=3.2.0"
  },
  "publishConfig": {
    "access": "public",
    "registry": "https://registry.npmjs.org/"
  },
  "release-it": {
    "github": {
      "release": true
    },
    "plugins": {
      "@release-it/keep-a-changelog": {
        "filename": "CHANGELOG.md"
      }
    }
  },
  "packageManager": "yarn@3.4.1"
}

},{}],139:[function(require,module,exports){
"use strict";

{}

},{}],140:[function(require,module,exports){
arguments[4][139][0].apply(exports,arguments)
},{"dup":139}],141:[function(require,module,exports){
(function (process){(function (){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SessionCrypto = exports.SIGN_DATA_ERROR_CODES = exports.SEND_TRANSACTION_ERROR_CODES = exports.DISCONNECT_ERROR_CODES = exports.CONNECT_ITEM_ERROR_CODES = exports.CONNECT_EVENT_ERROR_CODES = exports.CHAIN = exports.Base64 = void 0;
exports.concatUint8Arrays = concatUint8Arrays;
exports.hexToByteArray = hexToByteArray;
exports.isNode = isNode;
exports.splitToUint8Arrays = splitToUint8Arrays;
exports.toHexString = toHexString;
var _tweetnaclUtil = _interopRequireDefault(require("tweetnacl-util"));
var _tweetnacl = _interopRequireDefault(require("tweetnacl"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var CONNECT_EVENT_ERROR_CODES;
(function (CONNECT_EVENT_ERROR_CODES) {
  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES["UNKNOWN_ERROR"] = 0] = "UNKNOWN_ERROR";
  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES["BAD_REQUEST_ERROR"] = 1] = "BAD_REQUEST_ERROR";
  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES["MANIFEST_NOT_FOUND_ERROR"] = 2] = "MANIFEST_NOT_FOUND_ERROR";
  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES["MANIFEST_CONTENT_ERROR"] = 3] = "MANIFEST_CONTENT_ERROR";
  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES["UNKNOWN_APP_ERROR"] = 100] = "UNKNOWN_APP_ERROR";
  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES["USER_REJECTS_ERROR"] = 300] = "USER_REJECTS_ERROR";
  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES["METHOD_NOT_SUPPORTED"] = 400] = "METHOD_NOT_SUPPORTED";
})(CONNECT_EVENT_ERROR_CODES || (exports.CONNECT_EVENT_ERROR_CODES = CONNECT_EVENT_ERROR_CODES = {}));
var CONNECT_ITEM_ERROR_CODES;
(function (CONNECT_ITEM_ERROR_CODES) {
  CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES["UNKNOWN_ERROR"] = 0] = "UNKNOWN_ERROR";
  CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES["METHOD_NOT_SUPPORTED"] = 400] = "METHOD_NOT_SUPPORTED";
})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));
var SEND_TRANSACTION_ERROR_CODES;
(function (SEND_TRANSACTION_ERROR_CODES) {
  SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES["UNKNOWN_ERROR"] = 0] = "UNKNOWN_ERROR";
  SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES["BAD_REQUEST_ERROR"] = 1] = "BAD_REQUEST_ERROR";
  SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES["UNKNOWN_APP_ERROR"] = 100] = "UNKNOWN_APP_ERROR";
  SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES["USER_REJECTS_ERROR"] = 300] = "USER_REJECTS_ERROR";
  SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES["METHOD_NOT_SUPPORTED"] = 400] = "METHOD_NOT_SUPPORTED";
})(SEND_TRANSACTION_ERROR_CODES || (exports.SEND_TRANSACTION_ERROR_CODES = SEND_TRANSACTION_ERROR_CODES = {}));
var SIGN_DATA_ERROR_CODES;
(function (SIGN_DATA_ERROR_CODES) {
  SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES["UNKNOWN_ERROR"] = 0] = "UNKNOWN_ERROR";
  SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES["BAD_REQUEST_ERROR"] = 1] = "BAD_REQUEST_ERROR";
  SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES["UNKNOWN_APP_ERROR"] = 100] = "UNKNOWN_APP_ERROR";
  SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES["USER_REJECTS_ERROR"] = 300] = "USER_REJECTS_ERROR";
  SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES["METHOD_NOT_SUPPORTED"] = 400] = "METHOD_NOT_SUPPORTED";
})(SIGN_DATA_ERROR_CODES || (exports.SIGN_DATA_ERROR_CODES = SIGN_DATA_ERROR_CODES = {}));
var DISCONNECT_ERROR_CODES;
(function (DISCONNECT_ERROR_CODES) {
  DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES["UNKNOWN_ERROR"] = 0] = "UNKNOWN_ERROR";
  DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES["BAD_REQUEST_ERROR"] = 1] = "BAD_REQUEST_ERROR";
  DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES["UNKNOWN_APP_ERROR"] = 100] = "UNKNOWN_APP_ERROR";
  DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES["METHOD_NOT_SUPPORTED"] = 400] = "METHOD_NOT_SUPPORTED";
})(DISCONNECT_ERROR_CODES || (exports.DISCONNECT_ERROR_CODES = DISCONNECT_ERROR_CODES = {}));
var CHAIN;
(function (CHAIN) {
  CHAIN["MAINNET"] = "-239";
  CHAIN["TESTNET"] = "-3";
})(CHAIN || (exports.CHAIN = CHAIN = {}));
function encodeUint8Array(value, urlSafe) {
  var encoded = _tweetnaclUtil["default"].encodeBase64(value);
  if (!urlSafe) {
    return encoded;
  }
  return encodeURIComponent(encoded);
}
function decodeToUint8Array(value, urlSafe) {
  if (urlSafe) {
    value = decodeURIComponent(value);
  }
  return _tweetnaclUtil["default"].decodeBase64(value);
}
function encode(value) {
  var urlSafe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var uint8Array;
  if (value instanceof Uint8Array) {
    uint8Array = value;
  } else {
    if (typeof value !== 'string') {
      value = JSON.stringify(value);
    }
    uint8Array = _tweetnaclUtil["default"].decodeUTF8(value);
  }
  return encodeUint8Array(uint8Array, urlSafe);
}
function decode(value) {
  var urlSafe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var decodedUint8Array = decodeToUint8Array(value, urlSafe);
  return {
    toString: function toString() {
      return _tweetnaclUtil["default"].encodeUTF8(decodedUint8Array);
    },
    toObject: function toObject() {
      try {
        return JSON.parse(_tweetnaclUtil["default"].encodeUTF8(decodedUint8Array));
      } catch (e) {
        return null;
      }
    },
    toUint8Array: function toUint8Array() {
      return decodedUint8Array;
    }
  };
}
var Base64 = exports.Base64 = {
  encode: encode,
  decode: decode
};
function concatUint8Arrays(buffer1, buffer2) {
  var mergedArray = new Uint8Array(buffer1.length + buffer2.length);
  mergedArray.set(buffer1);
  mergedArray.set(buffer2, buffer1.length);
  return mergedArray;
}
function splitToUint8Arrays(array, index) {
  if (index >= array.length) {
    throw new Error('Index is out of buffer');
  }
  var subArray1 = array.slice(0, index);
  var subArray2 = array.slice(index);
  return [subArray1, subArray2];
}
function toHexString(byteArray) {
  var hexString = '';
  byteArray.forEach(function (_byte) {
    hexString += ('0' + (_byte & 0xff).toString(16)).slice(-2);
  });
  return hexString;
}
function hexToByteArray(hexString) {
  if (hexString.length % 2 !== 0) {
    throw new Error("Cannot convert ".concat(hexString, " to bytesArray"));
  }
  var result = new Uint8Array(hexString.length / 2);
  for (var i = 0; i < hexString.length; i += 2) {
    result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);
  }
  return result;
}
function isNode() {
  return typeof process !== 'undefined' && process.versions != null && process.versions.node != null;
}
var SessionCrypto = exports.SessionCrypto = /*#__PURE__*/function () {
  function SessionCrypto(keyPair) {
    _classCallCheck(this, SessionCrypto);
    this.nonceLength = 24;
    this.keyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();
    this.sessionId = toHexString(this.keyPair.publicKey);
  }
  return _createClass(SessionCrypto, [{
    key: "createKeypair",
    value: function createKeypair() {
      return _tweetnacl["default"].box.keyPair();
    }
  }, {
    key: "createKeypairFromString",
    value: function createKeypairFromString(keyPair) {
      return {
        publicKey: hexToByteArray(keyPair.publicKey),
        secretKey: hexToByteArray(keyPair.secretKey)
      };
    }
  }, {
    key: "createNonce",
    value: function createNonce() {
      return _tweetnacl["default"].randomBytes(this.nonceLength);
    }
  }, {
    key: "encrypt",
    value: function encrypt(message, receiverPublicKey) {
      var encodedMessage = new TextEncoder().encode(message);
      var nonce = this.createNonce();
      var encrypted = _tweetnacl["default"].box(encodedMessage, nonce, receiverPublicKey, this.keyPair.secretKey);
      return concatUint8Arrays(nonce, encrypted);
    }
  }, {
    key: "decrypt",
    value: function decrypt(message, senderPublicKey) {
      var _splitToUint8Arrays = splitToUint8Arrays(message, this.nonceLength),
        _splitToUint8Arrays2 = _slicedToArray(_splitToUint8Arrays, 2),
        nonce = _splitToUint8Arrays2[0],
        internalMessage = _splitToUint8Arrays2[1];
      var decrypted = _tweetnacl["default"].box.open(internalMessage, nonce, senderPublicKey, this.keyPair.secretKey);
      if (!decrypted) {
        throw new Error("Decryption error: \n message: ".concat(message.toString(), " \n sender pubkey: ").concat(senderPublicKey.toString(), " \n keypair pubkey: ").concat(this.keyPair.publicKey.toString(), " \n keypair secretkey: ").concat(this.keyPair.secretKey.toString()));
      }
      return new TextDecoder().decode(decrypted);
    }
  }, {
    key: "stringifyKeypair",
    value: function stringifyKeypair() {
      return {
        publicKey: toHexString(this.keyPair.publicKey),
        secretKey: toHexString(this.keyPair.secretKey)
      };
    }
  }]);
}();

}).call(this)}).call(this,require('_process'))
},{"_process":203,"tweetnacl":207,"tweetnacl-util":206}],142:[function(require,module,exports){
(function (process){(function (){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BrowserEventDispatcher = exports.BadRequestError = void 0;
Object.defineProperty(exports, "CHAIN", {
  enumerable: true,
  get: function get() {
    return _protocol.CHAIN;
  }
});
Object.defineProperty(exports, "CONNECT_EVENT_ERROR_CODES", {
  enumerable: true,
  get: function get() {
    return _protocol.CONNECT_EVENT_ERROR_CODES;
  }
});
Object.defineProperty(exports, "CONNECT_ITEM_ERROR_CODES", {
  enumerable: true,
  get: function get() {
    return _protocol.CONNECT_ITEM_ERROR_CODES;
  }
});
exports.ParseHexError = exports.LocalstorageNotFoundError = exports.FetchWalletsError = void 0;
Object.defineProperty(exports, "SEND_TRANSACTION_ERROR_CODES", {
  enumerable: true,
  get: function get() {
    return _protocol.SEND_TRANSACTION_ERROR_CODES;
  }
});
exports.WrongAddressError = exports.WalletsListManager = exports.WalletNotInjectedError = exports.WalletNotConnectedError = exports.WalletAlreadyConnectedError = exports.UserRejectsError = exports.UnknownError = exports.UnknownAppError = exports.TonConnectError = exports.TonConnect = void 0;
exports.createConnectionCompletedEvent = createConnectionCompletedEvent;
exports.createConnectionErrorEvent = createConnectionErrorEvent;
exports.createConnectionRestoringCompletedEvent = createConnectionRestoringCompletedEvent;
exports.createConnectionRestoringErrorEvent = createConnectionRestoringErrorEvent;
exports.createConnectionRestoringStartedEvent = createConnectionRestoringStartedEvent;
exports.createConnectionStartedEvent = createConnectionStartedEvent;
exports.createDisconnectionEvent = createDisconnectionEvent;
exports.createRequestVersionEvent = createRequestVersionEvent;
exports.createResponseVersionEvent = createResponseVersionEvent;
exports.createTransactionSentForSignatureEvent = createTransactionSentForSignatureEvent;
exports.createTransactionSignedEvent = createTransactionSignedEvent;
exports.createTransactionSigningFailedEvent = createTransactionSigningFailedEvent;
exports.createVersionInfo = createVersionInfo;
exports["default"] = void 0;
exports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;
exports.isTelegramUrl = isTelegramUrl;
exports.isWalletInfoCurrentlyEmbedded = isWalletInfoCurrentlyEmbedded;
exports.isWalletInfoCurrentlyInjected = isWalletInfoCurrentlyInjected;
exports.isWalletInfoInjectable = isWalletInfoInjectable;
exports.isWalletInfoInjected = isWalletInfoInjected;
exports.isWalletInfoRemote = isWalletInfoRemote;
exports.toUserFriendlyAddress = toUserFriendlyAddress;
var _protocol = require("@tonconnect/protocol");
require("@tonconnect/isomorphic-eventsource");
require("@tonconnect/isomorphic-fetch");
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return _wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return _construct(t, arguments, _getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf(Wrapper, t); }, _wrapNativeSuper(t); }
function _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __rest(s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
}
function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}

/**
 * Base class for TonConnect errors. You can check if the error was triggered by the @tonconnect/sdk using `err instanceof TonConnectError`.
 */
var TonConnectError = exports.TonConnectError = /*#__PURE__*/function (_Error) {
  function TonConnectError(message, options) {
    var _this;
    _classCallCheck(this, TonConnectError);
    _this = _callSuper(this, TonConnectError, [message, options]);
    _this.message = "".concat(TonConnectError.prefix, " ").concat(_this.constructor.name).concat(_this.info ? ': ' + _this.info : '').concat(message ? '\n' + message : '');
    Object.setPrototypeOf(_this, TonConnectError.prototype);
    return _this;
  }
  _inherits(TonConnectError, _Error);
  return _createClass(TonConnectError, [{
    key: "info",
    get: function get() {
      return '';
    }
  }]);
}(/*#__PURE__*/_wrapNativeSuper(Error));
TonConnectError.prefix = '[TON_CONNECT_SDK_ERROR]';

/**
 * Thrown when passed DappMetadata is in incorrect format.
 */
var DappMetadataError = /*#__PURE__*/function (_TonConnectError) {
  function DappMetadataError() {
    var _this2;
    _classCallCheck(this, DappMetadataError);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this2 = _callSuper(this, DappMetadataError, [].concat(args));
    Object.setPrototypeOf(_this2, DappMetadataError.prototype);
    return _this2;
  }
  _inherits(DappMetadataError, _TonConnectError);
  return _createClass(DappMetadataError, [{
    key: "info",
    get: function get() {
      return 'Passed DappMetadata is in incorrect format.';
    }
  }]);
}(TonConnectError);
/**
 * Thrown when passed manifest contains errors.
 */
var ManifestContentErrorError = /*#__PURE__*/function (_TonConnectError2) {
  function ManifestContentErrorError() {
    var _this3;
    _classCallCheck(this, ManifestContentErrorError);
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    _this3 = _callSuper(this, ManifestContentErrorError, [].concat(args));
    Object.setPrototypeOf(_this3, ManifestContentErrorError.prototype);
    return _this3;
  }
  _inherits(ManifestContentErrorError, _TonConnectError2);
  return _createClass(ManifestContentErrorError, [{
    key: "info",
    get: function get() {
      return 'Passed `tonconnect-manifest.json` contains errors. Check format of your manifest. See more https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest';
    }
  }]);
}(TonConnectError);
/**
 * Thrown when wallet can't get manifest by passed manifestUrl.
 */
var ManifestNotFoundError = /*#__PURE__*/function (_TonConnectError3) {
  function ManifestNotFoundError() {
    var _this4;
    _classCallCheck(this, ManifestNotFoundError);
    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }
    _this4 = _callSuper(this, ManifestNotFoundError, [].concat(args));
    Object.setPrototypeOf(_this4, ManifestNotFoundError.prototype);
    return _this4;
  }
  _inherits(ManifestNotFoundError, _TonConnectError3);
  return _createClass(ManifestNotFoundError, [{
    key: "info",
    get: function get() {
      return 'Manifest not found. Make sure you added `tonconnect-manifest.json` to the root of your app or passed correct manifestUrl. See more https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest';
    }
  }]);
}(TonConnectError);
/**
 * Thrown when wallet connection called but wallet already connected. To avoid the error, disconnect the wallet before doing a new connection.
 */
var WalletAlreadyConnectedError = exports.WalletAlreadyConnectedError = /*#__PURE__*/function (_TonConnectError4) {
  function WalletAlreadyConnectedError() {
    var _this5;
    _classCallCheck(this, WalletAlreadyConnectedError);
    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      args[_key4] = arguments[_key4];
    }
    _this5 = _callSuper(this, WalletAlreadyConnectedError, [].concat(args));
    Object.setPrototypeOf(_this5, WalletAlreadyConnectedError.prototype);
    return _this5;
  }
  _inherits(WalletAlreadyConnectedError, _TonConnectError4);
  return _createClass(WalletAlreadyConnectedError, [{
    key: "info",
    get: function get() {
      return 'Wallet connection called but wallet already connected. To avoid the error, disconnect the wallet before doing a new connection.';
    }
  }]);
}(TonConnectError);
/**
 * Thrown when send transaction or other protocol methods called while wallet is not connected.
 */
var WalletNotConnectedError = exports.WalletNotConnectedError = /*#__PURE__*/function (_TonConnectError5) {
  function WalletNotConnectedError() {
    var _this6;
    _classCallCheck(this, WalletNotConnectedError);
    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
      args[_key5] = arguments[_key5];
    }
    _this6 = _callSuper(this, WalletNotConnectedError, [].concat(args));
    Object.setPrototypeOf(_this6, WalletNotConnectedError.prototype);
    return _this6;
  }
  _inherits(WalletNotConnectedError, _TonConnectError5);
  return _createClass(WalletNotConnectedError, [{
    key: "info",
    get: function get() {
      return 'Send transaction or other protocol methods called while wallet is not connected.';
    }
  }]);
}(TonConnectError);
function isWalletConnectionSourceJS(value) {
  return 'jsBridgeKey' in value;
}

/**
 * Thrown when user rejects the action in the wallet.
 */
var UserRejectsError = exports.UserRejectsError = /*#__PURE__*/function (_TonConnectError6) {
  function UserRejectsError() {
    var _this7;
    _classCallCheck(this, UserRejectsError);
    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
      args[_key6] = arguments[_key6];
    }
    _this7 = _callSuper(this, UserRejectsError, [].concat(args));
    Object.setPrototypeOf(_this7, UserRejectsError.prototype);
    return _this7;
  }
  _inherits(UserRejectsError, _TonConnectError6);
  return _createClass(UserRejectsError, [{
    key: "info",
    get: function get() {
      return 'User rejects the action in the wallet.';
    }
  }]);
}(TonConnectError);
/**
 * Thrown when request to the wallet contains errors.
 */
var BadRequestError = exports.BadRequestError = /*#__PURE__*/function (_TonConnectError7) {
  function BadRequestError() {
    var _this8;
    _classCallCheck(this, BadRequestError);
    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
      args[_key7] = arguments[_key7];
    }
    _this8 = _callSuper(this, BadRequestError, [].concat(args));
    Object.setPrototypeOf(_this8, BadRequestError.prototype);
    return _this8;
  }
  _inherits(BadRequestError, _TonConnectError7);
  return _createClass(BadRequestError, [{
    key: "info",
    get: function get() {
      return 'Request to the wallet contains errors.';
    }
  }]);
}(TonConnectError);
/**
 * Thrown when app tries to send rpc request to the injected wallet while not connected.
 */
var UnknownAppError = exports.UnknownAppError = /*#__PURE__*/function (_TonConnectError8) {
  function UnknownAppError() {
    var _this9;
    _classCallCheck(this, UnknownAppError);
    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
      args[_key8] = arguments[_key8];
    }
    _this9 = _callSuper(this, UnknownAppError, [].concat(args));
    Object.setPrototypeOf(_this9, UnknownAppError.prototype);
    return _this9;
  }
  _inherits(UnknownAppError, _TonConnectError8);
  return _createClass(UnknownAppError, [{
    key: "info",
    get: function get() {
      return 'App tries to send rpc request to the injected wallet while not connected.';
    }
  }]);
}(TonConnectError);
/**
 * Thrown when there is an attempt to connect to the injected wallet while it is not exists in the webpage.
 */
var WalletNotInjectedError = exports.WalletNotInjectedError = /*#__PURE__*/function (_TonConnectError9) {
  function WalletNotInjectedError() {
    var _this10;
    _classCallCheck(this, WalletNotInjectedError);
    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
      args[_key9] = arguments[_key9];
    }
    _this10 = _callSuper(this, WalletNotInjectedError, [].concat(args));
    Object.setPrototypeOf(_this10, WalletNotInjectedError.prototype);
    return _this10;
  }
  _inherits(WalletNotInjectedError, _TonConnectError9);
  return _createClass(WalletNotInjectedError, [{
    key: "info",
    get: function get() {
      return 'There is an attempt to connect to the injected wallet while it is not exists in the webpage.';
    }
  }]);
}(TonConnectError);
/**
 * Thrown when `Storage` was not specified in the `DappMetadata` and default `localStorage` was not detected in the Node.js environment.
 */
var LocalstorageNotFoundError = exports.LocalstorageNotFoundError = /*#__PURE__*/function (_TonConnectError10) {
  function LocalstorageNotFoundError() {
    var _this11;
    _classCallCheck(this, LocalstorageNotFoundError);
    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {
      args[_key10] = arguments[_key10];
    }
    _this11 = _callSuper(this, LocalstorageNotFoundError, [].concat(args));
    Object.setPrototypeOf(_this11, LocalstorageNotFoundError.prototype);
    return _this11;
  }
  _inherits(LocalstorageNotFoundError, _TonConnectError10);
  return _createClass(LocalstorageNotFoundError, [{
    key: "info",
    get: function get() {
      return 'Storage was not specified in the `DappMetadata` and default `localStorage` was not detected in the environment.';
    }
  }]);
}(TonConnectError);
/**
 * Thrown when an error occurred while fetching the wallets list.
 */
var FetchWalletsError = exports.FetchWalletsError = /*#__PURE__*/function (_TonConnectError11) {
  function FetchWalletsError() {
    var _this12;
    _classCallCheck(this, FetchWalletsError);
    for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {
      args[_key11] = arguments[_key11];
    }
    _this12 = _callSuper(this, FetchWalletsError, [].concat(args));
    Object.setPrototypeOf(_this12, FetchWalletsError.prototype);
    return _this12;
  }
  _inherits(FetchWalletsError, _TonConnectError11);
  return _createClass(FetchWalletsError, [{
    key: "info",
    get: function get() {
      return 'An error occurred while fetching the wallets list.';
    }
  }]);
}(TonConnectError);
/**
 * Thrown when passed address is in incorrect format.
 */
var WrongAddressError = exports.WrongAddressError = /*#__PURE__*/function (_TonConnectError12) {
  function WrongAddressError() {
    var _this13;
    _classCallCheck(this, WrongAddressError);
    for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {
      args[_key12] = arguments[_key12];
    }
    _this13 = _callSuper(this, WrongAddressError, [].concat(args));
    Object.setPrototypeOf(_this13, WrongAddressError.prototype);
    return _this13;
  }
  _inherits(WrongAddressError, _TonConnectError12);
  return _createClass(WrongAddressError, [{
    key: "info",
    get: function get() {
      return 'Passed address is in incorrect format.';
    }
  }]);
}(TonConnectError);
/**
 * Thrown when passed hex is in incorrect format.
 */
var ParseHexError = exports.ParseHexError = /*#__PURE__*/function (_TonConnectError13) {
  function ParseHexError() {
    var _this14;
    _classCallCheck(this, ParseHexError);
    for (var _len13 = arguments.length, args = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {
      args[_key13] = arguments[_key13];
    }
    _this14 = _callSuper(this, ParseHexError, [].concat(args));
    Object.setPrototypeOf(_this14, ParseHexError.prototype);
    return _this14;
  }
  _inherits(ParseHexError, _TonConnectError13);
  return _createClass(ParseHexError, [{
    key: "info",
    get: function get() {
      return 'Passed hex is in incorrect format.';
    }
  }]);
}(TonConnectError);
/**
 * Unhanded unknown error.
 */
var UnknownError = exports.UnknownError = /*#__PURE__*/function (_TonConnectError14) {
  function UnknownError() {
    var _this15;
    _classCallCheck(this, UnknownError);
    for (var _len14 = arguments.length, args = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {
      args[_key14] = arguments[_key14];
    }
    _this15 = _callSuper(this, UnknownError, [].concat(args));
    Object.setPrototypeOf(_this15, UnknownError.prototype);
    return _this15;
  }
  _inherits(UnknownError, _TonConnectError14);
  return _createClass(UnknownError);
}(TonConnectError);
var connectEventErrorsCodes = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, _protocol.CONNECT_EVENT_ERROR_CODES.UNKNOWN_ERROR, UnknownError), _protocol.CONNECT_EVENT_ERROR_CODES.USER_REJECTS_ERROR, UserRejectsError), _protocol.CONNECT_EVENT_ERROR_CODES.BAD_REQUEST_ERROR, BadRequestError), _protocol.CONNECT_EVENT_ERROR_CODES.UNKNOWN_APP_ERROR, UnknownAppError), _protocol.CONNECT_EVENT_ERROR_CODES.MANIFEST_NOT_FOUND_ERROR, ManifestNotFoundError), _protocol.CONNECT_EVENT_ERROR_CODES.MANIFEST_CONTENT_ERROR, ManifestContentErrorError);
var ConnectErrorsParser = /*#__PURE__*/function () {
  function ConnectErrorsParser() {
    _classCallCheck(this, ConnectErrorsParser);
  }
  return _createClass(ConnectErrorsParser, [{
    key: "parseError",
    value: function parseError(error) {
      var ErrorConstructor = UnknownError;
      if (error.code in connectEventErrorsCodes) {
        ErrorConstructor = connectEventErrorsCodes[error.code] || UnknownError;
      }
      return new ErrorConstructor(error.message);
    }
  }]);
}();
var connectErrorsParser = new ConnectErrorsParser();
var RpcParser = /*#__PURE__*/function () {
  function RpcParser() {
    _classCallCheck(this, RpcParser);
  }
  return _createClass(RpcParser, [{
    key: "isError",
    value: function isError(response) {
      return 'error' in response;
    }
  }]);
}();
var sendTransactionErrors = _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, _protocol.SEND_TRANSACTION_ERROR_CODES.UNKNOWN_ERROR, UnknownError), _protocol.SEND_TRANSACTION_ERROR_CODES.USER_REJECTS_ERROR, UserRejectsError), _protocol.SEND_TRANSACTION_ERROR_CODES.BAD_REQUEST_ERROR, BadRequestError), _protocol.SEND_TRANSACTION_ERROR_CODES.UNKNOWN_APP_ERROR, UnknownAppError);
var SendTransactionParser = /*#__PURE__*/function (_RpcParser) {
  function SendTransactionParser() {
    _classCallCheck(this, SendTransactionParser);
    return _callSuper(this, SendTransactionParser, arguments);
  }
  _inherits(SendTransactionParser, _RpcParser);
  return _createClass(SendTransactionParser, [{
    key: "convertToRpcRequest",
    value: function convertToRpcRequest(request) {
      return {
        method: 'sendTransaction',
        params: [JSON.stringify(request)]
      };
    }
  }, {
    key: "parseAndThrowError",
    value: function parseAndThrowError(response) {
      var ErrorConstructor = UnknownError;
      if (response.error.code in sendTransactionErrors) {
        ErrorConstructor = sendTransactionErrors[response.error.code] || UnknownError;
      }
      throw new ErrorConstructor(response.error.message);
    }
  }, {
    key: "convertFromRpcResponse",
    value: function convertFromRpcResponse(rpcResponse) {
      return {
        boc: rpcResponse.result
      };
    }
  }]);
}(RpcParser);
var sendTransactionParser = new SendTransactionParser();
var HttpBridgeGatewayStorage = /*#__PURE__*/function () {
  function HttpBridgeGatewayStorage(storage, bridgeUrl) {
    _classCallCheck(this, HttpBridgeGatewayStorage);
    this.storage = storage;
    this.storeKey = 'ton-connect-storage_http-bridge-gateway::' + bridgeUrl;
  }
  return _createClass(HttpBridgeGatewayStorage, [{
    key: "storeLastEventId",
    value: function storeLastEventId(lastEventId) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              return _context.abrupt("return", this.storage.setItem(this.storeKey, lastEventId));
            case 1:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
    }
  }, {
    key: "removeLastEventId",
    value: function removeLastEventId() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              return _context2.abrupt("return", this.storage.removeItem(this.storeKey));
            case 1:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
    }
  }, {
    key: "getLastEventId",
    value: function getLastEventId() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
        var stored;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return this.storage.getItem(this.storeKey);
            case 2:
              stored = _context3.sent;
              if (stored) {
                _context3.next = 5;
                break;
              }
              return _context3.abrupt("return", null);
            case 5:
              return _context3.abrupt("return", stored);
            case 6:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
    }
  }]);
}();
function removeUrlLastSlash(url) {
  if (url.slice(-1) === '/') {
    return url.slice(0, -1);
  }
  return url;
}
function addPathToUrl(url, path) {
  return removeUrlLastSlash(url) + '/' + path;
}
function isTelegramUrl(link) {
  if (!link) {
    return false;
  }
  var url = new URL(link);
  return url.protocol === 'tg:' || url.hostname === 't.me';
}
function encodeTelegramUrlParameters(parameters) {
  return parameters.replaceAll('.', '%2E').replaceAll('-', '%2D').replaceAll('_', '%5F').replaceAll('&', '-').replaceAll('=', '__').replaceAll('%', '--');
}

/**
 * Delays the execution of code for a specified number of milliseconds.
 * @param {number} timeout - The number of milliseconds to delay the execution.
 * @param {DelayOptions} [options] - Optional configuration options for the delay.
 * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.
 */
function delay(timeout, options) {
  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1) switch (_context4.prev = _context4.next) {
        case 0:
          return _context4.abrupt("return", new Promise(function (resolve, reject) {
            var _a, _b;
            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {
              reject(new TonConnectError('Delay aborted'));
              return;
            }
            var timeoutId = setTimeout(function () {
              return resolve();
            }, timeout);
            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', function () {
              clearTimeout(timeoutId);
              reject(new TonConnectError('Delay aborted'));
            });
          }));
        case 1:
        case "end":
          return _context4.stop();
      }
    }, _callee4);
  }));
}

/**
 * Creates an AbortController instance with an optional AbortSignal.
 *
 * @param {AbortSignal} [signal] - An optional AbortSignal to use for aborting the controller.
 * @returns {AbortController} - An instance of AbortController.
 */
function createAbortController(signal) {
  var abortController = new AbortController();
  if (signal === null || signal === void 0 ? void 0 : signal.aborted) {
    abortController.abort();
  } else {
    signal === null || signal === void 0 ? void 0 : signal.addEventListener('abort', function () {
      return abortController.abort();
    }, {
      once: true
    });
  }
  return abortController;
}

/**
 * Function to call ton api until we get response.
 * Because ton network is pretty unstable we need to make sure response is final.
 * @param {T} fn - function to call
 * @param {CallForSuccessOptions} [options] - optional configuration options
 */
function callForSuccess(fn, options) {
  var _a, _b;
  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
    var attempts, delayMs, abortController, i, lastError;
    return _regeneratorRuntime().wrap(function _callee5$(_context5) {
      while (1) switch (_context5.prev = _context5.next) {
        case 0:
          attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 10;
          delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 200;
          abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);
          if (!(typeof fn !== 'function')) {
            _context5.next = 5;
            break;
          }
          throw new TonConnectError("Expected a function, got ".concat(_typeof(fn)));
        case 5:
          i = 0;
        case 6:
          if (!(i < attempts)) {
            _context5.next = 24;
            break;
          }
          if (!abortController.signal.aborted) {
            _context5.next = 9;
            break;
          }
          throw new TonConnectError("Aborted after attempts ".concat(i));
        case 9:
          _context5.prev = 9;
          _context5.next = 12;
          return fn({
            signal: abortController.signal
          });
        case 12:
          return _context5.abrupt("return", _context5.sent);
        case 15:
          _context5.prev = 15;
          _context5.t0 = _context5["catch"](9);
          lastError = _context5.t0;
          i++;
          if (!(i < attempts)) {
            _context5.next = 22;
            break;
          }
          _context5.next = 22;
          return delay(delayMs);
        case 22:
          _context5.next = 6;
          break;
        case 24:
          throw lastError;
        case 25:
        case "end":
          return _context5.stop();
      }
    }, _callee5, null, [[9, 15]]);
  }));
}
function logDebug() {
  {
    try {
      var _console;
      for (var _len15 = arguments.length, args = new Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {
        args[_key15] = arguments[_key15];
      }
      (_console = console).debug.apply(_console, ['[TON_CONNECT_SDK]'].concat(args));
    } catch (_a) {}
  }
}
function logError() {
  {
    try {
      var _console2;
      for (var _len16 = arguments.length, args = new Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {
        args[_key16] = arguments[_key16];
      }
      (_console2 = console).error.apply(_console2, ['[TON_CONNECT_SDK]'].concat(args));
    } catch (_a) {}
  }
}
function logWarning() {
  {
    try {
      var _console3;
      for (var _len17 = arguments.length, args = new Array(_len17), _key17 = 0; _key17 < _len17; _key17++) {
        args[_key17] = arguments[_key17];
      }
      (_console3 = console).warn.apply(_console3, ['[TON_CONNECT_SDK]'].concat(args));
    } catch (_a) {}
  }
}

/**
 * Create a resource.
 *
 * @template T - The type of the resource.
 * @template Args - The type of the arguments for creating the resource.
 *
 * @param {(...args: Args) => Promise<T>} createFn - A function that creates the resource.
 * @param {(resource: T) => Promise<void>} [disposeFn] - An optional function that disposes the resource.
 */
function createResource(createFn, disposeFn) {
  var _this16 = this;
  var currentResource = null;
  var currentArgs = null;
  var currentPromise = null;
  var currentSignal = null;
  var abortController = null;
  // create a new resource
  var create = function create(signal) {
    for (var _len18 = arguments.length, args = new Array(_len18 > 1 ? _len18 - 1 : 0), _key18 = 1; _key18 < _len18; _key18++) {
      args[_key18 - 1] = arguments[_key18];
    }
    return __awaiter(_this16, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {
      var promise, resource;
      return _regeneratorRuntime().wrap(function _callee6$(_context6) {
        while (1) switch (_context6.prev = _context6.next) {
          case 0:
            currentSignal = signal !== null && signal !== void 0 ? signal : null;
            abortController === null || abortController === void 0 ? void 0 : abortController.abort();
            abortController = createAbortController(signal);
            if (!abortController.signal.aborted) {
              _context6.next = 5;
              break;
            }
            throw new TonConnectError('Resource creation was aborted');
          case 5:
            currentArgs = args !== null && args !== void 0 ? args : null;
            promise = createFn.apply(void 0, [abortController.signal].concat(args));
            currentPromise = promise;
            _context6.next = 10;
            return promise;
          case 10:
            resource = _context6.sent;
            if (!(currentPromise !== promise && resource !== currentResource)) {
              _context6.next = 15;
              break;
            }
            _context6.next = 14;
            return disposeFn(resource);
          case 14:
            throw new TonConnectError('Resource creation was aborted by a new resource creation');
          case 15:
            currentResource = resource;
            return _context6.abrupt("return", currentResource);
          case 17:
          case "end":
            return _context6.stop();
        }
      }, _callee6);
    }));
  };
  // get the current resource
  var current = function current() {
    return currentResource !== null && currentResource !== void 0 ? currentResource : null;
  };
  // dispose the current resource
  var dispose = function dispose() {
    return __awaiter(_this16, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
      var resource, promise;
      return _regeneratorRuntime().wrap(function _callee7$(_context7) {
        while (1) switch (_context7.prev = _context7.next) {
          case 0:
            _context7.prev = 0;
            resource = currentResource;
            currentResource = null;
            promise = currentPromise;
            currentPromise = null;
            try {
              abortController === null || abortController === void 0 ? void 0 : abortController.abort();
            } catch (e) {}
            _context7.t0 = Promise;
            _context7.t1 = resource ? disposeFn(resource) : Promise.resolve();
            if (!promise) {
              _context7.next = 16;
              break;
            }
            _context7.t3 = disposeFn;
            _context7.next = 12;
            return promise;
          case 12:
            _context7.t4 = _context7.sent;
            _context7.t2 = (0, _context7.t3)(_context7.t4);
            _context7.next = 17;
            break;
          case 16:
            _context7.t2 = Promise.resolve();
          case 17:
            _context7.t5 = _context7.t2;
            _context7.t6 = [_context7.t1, _context7.t5];
            _context7.next = 21;
            return _context7.t0.allSettled.call(_context7.t0, _context7.t6);
          case 21:
            _context7.next = 25;
            break;
          case 23:
            _context7.prev = 23;
            _context7.t7 = _context7["catch"](0);
          case 25:
          case "end":
            return _context7.stop();
        }
      }, _callee7, null, [[0, 23]]);
    }));
  };
  // recreate the current resource
  var recreate = function recreate(delayMs) {
    return __awaiter(_this16, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {
      var resource, promise, args, signal;
      return _regeneratorRuntime().wrap(function _callee8$(_context8) {
        while (1) switch (_context8.prev = _context8.next) {
          case 0:
            resource = currentResource;
            promise = currentPromise;
            args = currentArgs;
            signal = currentSignal;
            _context8.next = 6;
            return delay(delayMs);
          case 6:
            if (!(resource === currentResource && promise === currentPromise && args === currentArgs && signal === currentSignal)) {
              _context8.next = 10;
              break;
            }
            _context8.next = 9;
            return create.apply(void 0, [currentSignal].concat(_toConsumableArray(args !== null && args !== void 0 ? args : [])));
          case 9:
            return _context8.abrupt("return", _context8.sent);
          case 10:
            throw new TonConnectError('Resource recreation was aborted by a new resource creation');
          case 11:
          case "end":
            return _context8.stop();
        }
      }, _callee8);
    }));
  };
  return {
    create: create,
    current: current,
    dispose: dispose,
    recreate: recreate
  };
}

/**
 * Executes a function and provides deferred behavior, allowing for a timeout and abort functionality.
 *
 * @param {Deferrable<T>} fn - The function to execute. It should return a promise that resolves with the desired result.
 * @param {DeferOptions} options - Optional configuration options for the defer behavior.
 * @returns {Promise<T>} - A promise that resolves with the result of the executed function, or rejects with an error if it times out or is aborted.
 */
function timeout(fn, options) {
  var _this17 = this;
  var timeout = options === null || options === void 0 ? void 0 : options.timeout;
  var signal = options === null || options === void 0 ? void 0 : options.signal;
  var abortController = createAbortController(signal);
  return new Promise(function (resolve, reject) {
    return __awaiter(_this17, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {
      var timeoutId, deferOptions;
      return _regeneratorRuntime().wrap(function _callee9$(_context9) {
        while (1) switch (_context9.prev = _context9.next) {
          case 0:
            if (!abortController.signal.aborted) {
              _context9.next = 3;
              break;
            }
            reject(new TonConnectError('Operation aborted'));
            return _context9.abrupt("return");
          case 3:
            if (typeof timeout !== 'undefined') {
              timeoutId = setTimeout(function () {
                abortController.abort();
                reject(new TonConnectError("Timeout after ".concat(timeout, "ms")));
              }, timeout);
            }
            abortController.signal.addEventListener('abort', function () {
              clearTimeout(timeoutId);
              reject(new TonConnectError('Operation aborted'));
            }, {
              once: true
            });
            deferOptions = {
              timeout: timeout,
              abort: abortController.signal
            };
            _context9.next = 8;
            return fn(function () {
              clearTimeout(timeoutId);
              resolve.apply(void 0, arguments);
            }, function () {
              clearTimeout(timeoutId);
              reject();
            }, deferOptions);
          case 8:
          case "end":
            return _context9.stop();
        }
      }, _callee9);
    }));
  });
}
var BridgeGateway = /*#__PURE__*/function () {
  function BridgeGateway(storage, bridgeUrl, sessionId, listener, errorsListener) {
    var _this18 = this;
    _classCallCheck(this, BridgeGateway);
    this.bridgeUrl = bridgeUrl;
    this.sessionId = sessionId;
    this.listener = listener;
    this.errorsListener = errorsListener;
    this.ssePath = 'events';
    this.postPath = 'message';
    this.heartbeatMessage = 'heartbeat';
    this.defaultTtl = 300;
    this.defaultReconnectDelay = 2000;
    this.defaultResendDelay = 5000;
    this.eventSource = createResource(function (signal, openingDeadlineMS) {
      return __awaiter(_this18, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {
        var eventSourceConfig;
        return _regeneratorRuntime().wrap(function _callee10$(_context10) {
          while (1) switch (_context10.prev = _context10.next) {
            case 0:
              eventSourceConfig = {
                bridgeUrl: this.bridgeUrl,
                ssePath: this.ssePath,
                sessionId: this.sessionId,
                bridgeGatewayStorage: this.bridgeGatewayStorage,
                errorHandler: this.errorsHandler.bind(this),
                messageHandler: this.messagesHandler.bind(this),
                signal: signal,
                openingDeadlineMS: openingDeadlineMS
              };
              _context10.next = 3;
              return createEventSource(eventSourceConfig);
            case 3:
              return _context10.abrupt("return", _context10.sent);
            case 4:
            case "end":
              return _context10.stop();
          }
        }, _callee10, this);
      }));
    }, function (resource) {
      return __awaiter(_this18, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {
        return _regeneratorRuntime().wrap(function _callee11$(_context11) {
          while (1) switch (_context11.prev = _context11.next) {
            case 0:
              resource.close();
            case 1:
            case "end":
              return _context11.stop();
          }
        }, _callee11);
      }));
    });
    this.bridgeGatewayStorage = new HttpBridgeGatewayStorage(storage, bridgeUrl);
  }
  return _createClass(BridgeGateway, [{
    key: "isReady",
    get: function get() {
      var eventSource = this.eventSource.current();
      return (eventSource === null || eventSource === void 0 ? void 0 : eventSource.readyState) === EventSource.OPEN;
    }
  }, {
    key: "isClosed",
    get: function get() {
      var eventSource = this.eventSource.current();
      return (eventSource === null || eventSource === void 0 ? void 0 : eventSource.readyState) !== EventSource.OPEN;
    }
  }, {
    key: "isConnecting",
    get: function get() {
      var eventSource = this.eventSource.current();
      return (eventSource === null || eventSource === void 0 ? void 0 : eventSource.readyState) === EventSource.CONNECTING;
    }
  }, {
    key: "registerSession",
    value: function registerSession(options) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {
        return _regeneratorRuntime().wrap(function _callee12$(_context12) {
          while (1) switch (_context12.prev = _context12.next) {
            case 0:
              _context12.next = 2;
              return this.eventSource.create(options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.openingDeadlineMS);
            case 2:
            case "end":
              return _context12.stop();
          }
        }, _callee12, this);
      }));
    }
  }, {
    key: "send",
    value: function send(message, receiver, topic, ttlOrOptions) {
      var _a;
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {
        var _this19 = this;
        var options, url, body;
        return _regeneratorRuntime().wrap(function _callee14$(_context14) {
          while (1) switch (_context14.prev = _context14.next) {
            case 0:
              // TODO: remove deprecated method
              options = {};
              if (typeof ttlOrOptions === 'number') {
                options.ttl = ttlOrOptions;
              } else {
                options.ttl = ttlOrOptions === null || ttlOrOptions === void 0 ? void 0 : ttlOrOptions.ttl;
                options.signal = ttlOrOptions === null || ttlOrOptions === void 0 ? void 0 : ttlOrOptions.signal;
                options.attempts = ttlOrOptions === null || ttlOrOptions === void 0 ? void 0 : ttlOrOptions.attempts;
              }
              url = new URL(addPathToUrl(this.bridgeUrl, this.postPath));
              url.searchParams.append('client_id', this.sessionId);
              url.searchParams.append('to', receiver);
              url.searchParams.append('ttl', ((options === null || options === void 0 ? void 0 : options.ttl) || this.defaultTtl).toString());
              url.searchParams.append('topic', topic);
              body = _protocol.Base64.encode(message);
              _context14.next = 10;
              return callForSuccess(function (options) {
                return __awaiter(_this19, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {
                  var response;
                  return _regeneratorRuntime().wrap(function _callee13$(_context13) {
                    while (1) switch (_context13.prev = _context13.next) {
                      case 0:
                        _context13.next = 2;
                        return this.post(url, body, options.signal);
                      case 2:
                        response = _context13.sent;
                        if (response.ok) {
                          _context13.next = 5;
                          break;
                        }
                        throw new TonConnectError("Bridge send failed, status ".concat(response.status));
                      case 5:
                      case "end":
                        return _context13.stop();
                    }
                  }, _callee13, this);
                }));
              }, {
                attempts: (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : Number.MAX_SAFE_INTEGER,
                delayMs: this.defaultResendDelay,
                signal: options === null || options === void 0 ? void 0 : options.signal
              });
            case 10:
            case "end":
              return _context14.stop();
          }
        }, _callee14, this);
      }));
    }
  }, {
    key: "pause",
    value: function pause() {
      this.eventSource.dispose()["catch"](function (e) {
        return logError("Bridge pause failed, ".concat(e));
      });
    }
  }, {
    key: "unPause",
    value: function unPause() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {
        var RECREATE_WITHOUT_DELAY;
        return _regeneratorRuntime().wrap(function _callee15$(_context15) {
          while (1) switch (_context15.prev = _context15.next) {
            case 0:
              RECREATE_WITHOUT_DELAY = 0;
              _context15.next = 3;
              return this.eventSource.recreate(RECREATE_WITHOUT_DELAY);
            case 3:
            case "end":
              return _context15.stop();
          }
        }, _callee15, this);
      }));
    }
  }, {
    key: "close",
    value: function close() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {
        return _regeneratorRuntime().wrap(function _callee16$(_context16) {
          while (1) switch (_context16.prev = _context16.next) {
            case 0:
              _context16.next = 2;
              return this.eventSource.dispose()["catch"](function (e) {
                return logError("Bridge close failed, ".concat(e));
              });
            case 2:
            case "end":
              return _context16.stop();
          }
        }, _callee16, this);
      }));
    }
  }, {
    key: "setListener",
    value: function setListener(listener) {
      this.listener = listener;
    }
  }, {
    key: "setErrorsListener",
    value: function setErrorsListener(errorsListener) {
      this.errorsListener = errorsListener;
    }
  }, {
    key: "post",
    value: function post(url, body, signal) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {
        var response;
        return _regeneratorRuntime().wrap(function _callee17$(_context17) {
          while (1) switch (_context17.prev = _context17.next) {
            case 0:
              _context17.next = 2;
              return fetch(url, {
                method: 'post',
                body: body,
                signal: signal
              });
            case 2:
              response = _context17.sent;
              if (response.ok) {
                _context17.next = 5;
                break;
              }
              throw new TonConnectError("Bridge send failed, status ".concat(response.status));
            case 5:
              return _context17.abrupt("return", response);
            case 6:
            case "end":
              return _context17.stop();
          }
        }, _callee17);
      }));
    }
  }, {
    key: "errorsHandler",
    value: function errorsHandler(eventSource, e) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee18() {
        return _regeneratorRuntime().wrap(function _callee18$(_context18) {
          while (1) switch (_context18.prev = _context18.next) {
            case 0:
              if (!this.isConnecting) {
                _context18.next = 3;
                break;
              }
              eventSource.close();
              throw new TonConnectError('Bridge error, failed to connect');
            case 3:
              if (!this.isReady) {
                _context18.next = 6;
                break;
              }
              try {
                this.errorsListener(e);
              } catch (e) {}
              return _context18.abrupt("return");
            case 6:
              if (!this.isClosed) {
                _context18.next = 12;
                break;
              }
              eventSource.close();
              logDebug("Bridge reconnecting, ".concat(this.defaultReconnectDelay, "ms delay"));
              _context18.next = 11;
              return this.eventSource.recreate(this.defaultReconnectDelay);
            case 11:
              return _context18.abrupt("return", _context18.sent);
            case 12:
              throw new TonConnectError('Bridge error, unknown state');
            case 13:
            case "end":
              return _context18.stop();
          }
        }, _callee18, this);
      }));
    }
  }, {
    key: "messagesHandler",
    value: function messagesHandler(e) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee19() {
        var bridgeIncomingMessage;
        return _regeneratorRuntime().wrap(function _callee19$(_context19) {
          while (1) switch (_context19.prev = _context19.next) {
            case 0:
              if (!(e.data === this.heartbeatMessage)) {
                _context19.next = 2;
                break;
              }
              return _context19.abrupt("return");
            case 2:
              _context19.next = 4;
              return this.bridgeGatewayStorage.storeLastEventId(e.lastEventId);
            case 4:
              if (!this.isClosed) {
                _context19.next = 6;
                break;
              }
              return _context19.abrupt("return");
            case 6:
              _context19.prev = 6;
              bridgeIncomingMessage = JSON.parse(e.data);
              _context19.next = 13;
              break;
            case 10:
              _context19.prev = 10;
              _context19.t0 = _context19["catch"](6);
              throw new TonConnectError("Bridge message parse failed, message ".concat(_context19.t0.data));
            case 13:
              this.listener(bridgeIncomingMessage);
            case 14:
            case "end":
              return _context19.stop();
          }
        }, _callee19, this, [[6, 10]]);
      }));
    }
  }]);
}();
/**
 * Creates an event source.
 * @param {CreateEventSourceConfig} config - Configuration for creating an event source.
 */
function createEventSource(config) {
  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee22() {
    var _this20 = this;
    return _regeneratorRuntime().wrap(function _callee22$(_context22) {
      while (1) switch (_context22.prev = _context22.next) {
        case 0:
          _context22.next = 2;
          return timeout(function (resolve, reject, deferOptions) {
            return __awaiter(_this20, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee21() {
              var _this21 = this;
              var _a, abortController, signal, url, lastEventId, eventSource;
              return _regeneratorRuntime().wrap(function _callee21$(_context21) {
                while (1) switch (_context21.prev = _context21.next) {
                  case 0:
                    abortController = createAbortController(deferOptions.signal);
                    signal = abortController.signal;
                    if (!signal.aborted) {
                      _context21.next = 5;
                      break;
                    }
                    reject(new TonConnectError('Bridge connection aborted'));
                    return _context21.abrupt("return");
                  case 5:
                    url = new URL(addPathToUrl(config.bridgeUrl, config.ssePath));
                    url.searchParams.append('client_id', config.sessionId);
                    _context21.next = 9;
                    return config.bridgeGatewayStorage.getLastEventId();
                  case 9:
                    lastEventId = _context21.sent;
                    if (lastEventId) {
                      url.searchParams.append('last_event_id', lastEventId);
                    }
                    if (!signal.aborted) {
                      _context21.next = 14;
                      break;
                    }
                    reject(new TonConnectError('Bridge connection aborted'));
                    return _context21.abrupt("return");
                  case 14:
                    eventSource = new EventSource(url.toString());
                    eventSource.onerror = function (reason) {
                      return __awaiter(_this21, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee20() {
                        var newInstance;
                        return _regeneratorRuntime().wrap(function _callee20$(_context20) {
                          while (1) switch (_context20.prev = _context20.next) {
                            case 0:
                              if (!signal.aborted) {
                                _context20.next = 4;
                                break;
                              }
                              eventSource.close();
                              reject(new TonConnectError('Bridge connection aborted'));
                              return _context20.abrupt("return");
                            case 4:
                              _context20.prev = 4;
                              _context20.next = 7;
                              return config.errorHandler(eventSource, reason);
                            case 7:
                              newInstance = _context20.sent;
                              if (newInstance !== eventSource) {
                                eventSource.close();
                              }
                              if (newInstance && newInstance !== eventSource) {
                                resolve(newInstance);
                              }
                              _context20.next = 16;
                              break;
                            case 12:
                              _context20.prev = 12;
                              _context20.t0 = _context20["catch"](4);
                              eventSource.close();
                              reject(_context20.t0);
                            case 16:
                            case "end":
                              return _context20.stop();
                          }
                        }, _callee20, null, [[4, 12]]);
                      }));
                    };
                    eventSource.onopen = function () {
                      if (signal.aborted) {
                        eventSource.close();
                        reject(new TonConnectError('Bridge connection aborted'));
                        return;
                      }
                      resolve(eventSource);
                    };
                    eventSource.onmessage = function (event) {
                      if (signal.aborted) {
                        eventSource.close();
                        reject(new TonConnectError('Bridge connection aborted'));
                        return;
                      }
                      config.messageHandler(event);
                    };
                    (_a = config.signal) === null || _a === void 0 ? void 0 : _a.addEventListener('abort', function () {
                      eventSource.close();
                      reject(new TonConnectError('Bridge connection aborted'));
                    });
                  case 19:
                  case "end":
                    return _context21.stop();
                }
              }, _callee21);
            }));
          }, {
            timeout: config.openingDeadlineMS,
            signal: config.signal
          });
        case 2:
          return _context22.abrupt("return", _context22.sent);
        case 3:
        case "end":
          return _context22.stop();
      }
    }, _callee22);
  }));
}
function isPendingConnectionHttp(connection) {
  return !('connectEvent' in connection);
}
var BridgeConnectionStorage = /*#__PURE__*/function () {
  function BridgeConnectionStorage(storage) {
    _classCallCheck(this, BridgeConnectionStorage);
    this.storage = storage;
    this.storeKey = 'ton-connect-storage_bridge-connection';
  }
  return _createClass(BridgeConnectionStorage, [{
    key: "storeConnection",
    value: function storeConnection(connection) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee23() {
        var rawSession, _rawConnection, rawConnection;
        return _regeneratorRuntime().wrap(function _callee23$(_context23) {
          while (1) switch (_context23.prev = _context23.next) {
            case 0:
              if (!(connection.type === 'injected')) {
                _context23.next = 2;
                break;
              }
              return _context23.abrupt("return", this.storage.setItem(this.storeKey, JSON.stringify(connection)));
            case 2:
              if (isPendingConnectionHttp(connection)) {
                _context23.next = 6;
                break;
              }
              rawSession = {
                sessionKeyPair: connection.session.sessionCrypto.stringifyKeypair(),
                walletPublicKey: connection.session.walletPublicKey,
                bridgeUrl: connection.session.bridgeUrl
              };
              _rawConnection = {
                type: 'http',
                connectEvent: connection.connectEvent,
                session: rawSession,
                lastWalletEventId: connection.lastWalletEventId,
                nextRpcRequestId: connection.nextRpcRequestId
              };
              return _context23.abrupt("return", this.storage.setItem(this.storeKey, JSON.stringify(_rawConnection)));
            case 6:
              rawConnection = {
                type: 'http',
                connectionSource: connection.connectionSource,
                sessionCrypto: connection.sessionCrypto.stringifyKeypair()
              };
              return _context23.abrupt("return", this.storage.setItem(this.storeKey, JSON.stringify(rawConnection)));
            case 8:
            case "end":
              return _context23.stop();
          }
        }, _callee23, this);
      }));
    }
  }, {
    key: "removeConnection",
    value: function removeConnection() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee24() {
        return _regeneratorRuntime().wrap(function _callee24$(_context24) {
          while (1) switch (_context24.prev = _context24.next) {
            case 0:
              return _context24.abrupt("return", this.storage.removeItem(this.storeKey));
            case 1:
            case "end":
              return _context24.stop();
          }
        }, _callee24, this);
      }));
    }
  }, {
    key: "getConnection",
    value: function getConnection() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee25() {
        var stored, connection, sessionCrypto;
        return _regeneratorRuntime().wrap(function _callee25$(_context25) {
          while (1) switch (_context25.prev = _context25.next) {
            case 0:
              _context25.next = 2;
              return this.storage.getItem(this.storeKey);
            case 2:
              stored = _context25.sent;
              if (stored) {
                _context25.next = 5;
                break;
              }
              return _context25.abrupt("return", null);
            case 5:
              connection = JSON.parse(stored);
              if (!(connection.type === 'injected')) {
                _context25.next = 8;
                break;
              }
              return _context25.abrupt("return", connection);
            case 8:
              if (!('connectEvent' in connection)) {
                _context25.next = 11;
                break;
              }
              sessionCrypto = new _protocol.SessionCrypto(connection.session.sessionKeyPair);
              return _context25.abrupt("return", {
                type: 'http',
                connectEvent: connection.connectEvent,
                lastWalletEventId: connection.lastWalletEventId,
                nextRpcRequestId: connection.nextRpcRequestId,
                session: {
                  sessionCrypto: sessionCrypto,
                  bridgeUrl: connection.session.bridgeUrl,
                  walletPublicKey: connection.session.walletPublicKey
                }
              });
            case 11:
              return _context25.abrupt("return", {
                type: 'http',
                sessionCrypto: new _protocol.SessionCrypto(connection.sessionCrypto),
                connectionSource: connection.connectionSource
              });
            case 12:
            case "end":
              return _context25.stop();
          }
        }, _callee25, this);
      }));
    }
  }, {
    key: "getHttpConnection",
    value: function getHttpConnection() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee26() {
        var connection;
        return _regeneratorRuntime().wrap(function _callee26$(_context26) {
          while (1) switch (_context26.prev = _context26.next) {
            case 0:
              _context26.next = 2;
              return this.getConnection();
            case 2:
              connection = _context26.sent;
              if (connection) {
                _context26.next = 5;
                break;
              }
              throw new TonConnectError('Trying to read HTTP connection source while nothing is stored');
            case 5:
              if (!(connection.type === 'injected')) {
                _context26.next = 7;
                break;
              }
              throw new TonConnectError('Trying to read HTTP connection source while injected connection is stored');
            case 7:
              return _context26.abrupt("return", connection);
            case 8:
            case "end":
              return _context26.stop();
          }
        }, _callee26, this);
      }));
    }
  }, {
    key: "getHttpPendingConnection",
    value: function getHttpPendingConnection() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee27() {
        var connection;
        return _regeneratorRuntime().wrap(function _callee27$(_context27) {
          while (1) switch (_context27.prev = _context27.next) {
            case 0:
              _context27.next = 2;
              return this.getConnection();
            case 2:
              connection = _context27.sent;
              if (connection) {
                _context27.next = 5;
                break;
              }
              throw new TonConnectError('Trying to read HTTP connection source while nothing is stored');
            case 5:
              if (!(connection.type === 'injected')) {
                _context27.next = 7;
                break;
              }
              throw new TonConnectError('Trying to read HTTP connection source while injected connection is stored');
            case 7:
              if (isPendingConnectionHttp(connection)) {
                _context27.next = 9;
                break;
              }
              throw new TonConnectError('Trying to read HTTP-pending connection while http connection is stored');
            case 9:
              return _context27.abrupt("return", connection);
            case 10:
            case "end":
              return _context27.stop();
          }
        }, _callee27, this);
      }));
    }
  }, {
    key: "getInjectedConnection",
    value: function getInjectedConnection() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee28() {
        var connection;
        return _regeneratorRuntime().wrap(function _callee28$(_context28) {
          while (1) switch (_context28.prev = _context28.next) {
            case 0:
              _context28.next = 2;
              return this.getConnection();
            case 2:
              connection = _context28.sent;
              if (connection) {
                _context28.next = 5;
                break;
              }
              throw new TonConnectError('Trying to read Injected bridge connection source while nothing is stored');
            case 5:
              if (!((connection === null || connection === void 0 ? void 0 : connection.type) === 'http')) {
                _context28.next = 7;
                break;
              }
              throw new TonConnectError('Trying to read Injected bridge connection source while HTTP connection is stored');
            case 7:
              return _context28.abrupt("return", connection);
            case 8:
            case "end":
              return _context28.stop();
          }
        }, _callee28, this);
      }));
    }
  }, {
    key: "storedConnectionType",
    value: function storedConnectionType() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee29() {
        var stored, connection;
        return _regeneratorRuntime().wrap(function _callee29$(_context29) {
          while (1) switch (_context29.prev = _context29.next) {
            case 0:
              _context29.next = 2;
              return this.storage.getItem(this.storeKey);
            case 2:
              stored = _context29.sent;
              if (stored) {
                _context29.next = 5;
                break;
              }
              return _context29.abrupt("return", null);
            case 5:
              connection = JSON.parse(stored);
              return _context29.abrupt("return", connection.type);
            case 7:
            case "end":
              return _context29.stop();
          }
        }, _callee29, this);
      }));
    }
  }, {
    key: "storeLastWalletEventId",
    value: function storeLastWalletEventId(id) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee30() {
        var connection;
        return _regeneratorRuntime().wrap(function _callee30$(_context30) {
          while (1) switch (_context30.prev = _context30.next) {
            case 0:
              _context30.next = 2;
              return this.getConnection();
            case 2:
              connection = _context30.sent;
              if (!(connection && connection.type === 'http' && !isPendingConnectionHttp(connection))) {
                _context30.next = 6;
                break;
              }
              connection.lastWalletEventId = id;
              return _context30.abrupt("return", this.storeConnection(connection));
            case 6:
            case "end":
              return _context30.stop();
          }
        }, _callee30, this);
      }));
    }
  }, {
    key: "getLastWalletEventId",
    value: function getLastWalletEventId() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee31() {
        var connection;
        return _regeneratorRuntime().wrap(function _callee31$(_context31) {
          while (1) switch (_context31.prev = _context31.next) {
            case 0:
              _context31.next = 2;
              return this.getConnection();
            case 2:
              connection = _context31.sent;
              if (!(connection && 'lastWalletEventId' in connection)) {
                _context31.next = 5;
                break;
              }
              return _context31.abrupt("return", connection.lastWalletEventId);
            case 5:
              return _context31.abrupt("return", undefined);
            case 6:
            case "end":
              return _context31.stop();
          }
        }, _callee31, this);
      }));
    }
  }, {
    key: "increaseNextRpcRequestId",
    value: function increaseNextRpcRequestId() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee32() {
        var connection, lastId;
        return _regeneratorRuntime().wrap(function _callee32$(_context32) {
          while (1) switch (_context32.prev = _context32.next) {
            case 0:
              _context32.next = 2;
              return this.getConnection();
            case 2:
              connection = _context32.sent;
              if (!(connection && 'nextRpcRequestId' in connection)) {
                _context32.next = 7;
                break;
              }
              lastId = connection.nextRpcRequestId || 0;
              connection.nextRpcRequestId = lastId + 1;
              return _context32.abrupt("return", this.storeConnection(connection));
            case 7:
            case "end":
              return _context32.stop();
          }
        }, _callee32, this);
      }));
    }
  }, {
    key: "getNextRpcRequestId",
    value: function getNextRpcRequestId() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee33() {
        var connection;
        return _regeneratorRuntime().wrap(function _callee33$(_context33) {
          while (1) switch (_context33.prev = _context33.next) {
            case 0:
              _context33.next = 2;
              return this.getConnection();
            case 2:
              connection = _context33.sent;
              if (!(connection && 'nextRpcRequestId' in connection)) {
                _context33.next = 5;
                break;
              }
              return _context33.abrupt("return", connection.nextRpcRequestId || 0);
            case 5:
              return _context33.abrupt("return", 0);
            case 6:
            case "end":
              return _context33.stop();
          }
        }, _callee33, this);
      }));
    }
  }]);
}();
var PROTOCOL_VERSION = 2;
var BridgeProvider = /*#__PURE__*/function () {
  function BridgeProvider(storage, walletConnectionSource) {
    _classCallCheck(this, BridgeProvider);
    this.storage = storage;
    this.walletConnectionSource = walletConnectionSource;
    this.type = 'http';
    this.standardUniversalLink = 'tc://';
    this.pendingRequests = new Map();
    this.session = null;
    this.gateway = null;
    this.pendingGateways = [];
    this.listeners = [];
    this.defaultOpeningDeadlineMS = 12000;
    this.defaultRetryTimeoutMS = 2000;
    this.connectionStorage = new BridgeConnectionStorage(storage);
  }
  return _createClass(BridgeProvider, [{
    key: "connect",
    value: function connect(message, options) {
      var _this22 = this;
      var _a;
      var abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);
      (_a = this.abortController) === null || _a === void 0 ? void 0 : _a.abort();
      this.abortController = abortController;
      this.closeGateways();
      var sessionCrypto = new _protocol.SessionCrypto();
      this.session = {
        sessionCrypto: sessionCrypto,
        bridgeUrl: 'bridgeUrl' in this.walletConnectionSource ? this.walletConnectionSource.bridgeUrl : ''
      };
      this.connectionStorage.storeConnection({
        type: 'http',
        connectionSource: this.walletConnectionSource,
        sessionCrypto: sessionCrypto
      }).then(function () {
        return __awaiter(_this22, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee34() {
          var _this23 = this;
          return _regeneratorRuntime().wrap(function _callee34$(_context34) {
            while (1) switch (_context34.prev = _context34.next) {
              case 0:
                if (!abortController.signal.aborted) {
                  _context34.next = 2;
                  break;
                }
                return _context34.abrupt("return");
              case 2:
                _context34.next = 4;
                return callForSuccess(function (_options) {
                  var _a;
                  return _this23.openGateways(sessionCrypto, {
                    openingDeadlineMS: (_a = options === null || options === void 0 ? void 0 : options.openingDeadlineMS) !== null && _a !== void 0 ? _a : _this23.defaultOpeningDeadlineMS,
                    signal: _options === null || _options === void 0 ? void 0 : _options.signal
                  });
                }, {
                  attempts: Number.MAX_SAFE_INTEGER,
                  delayMs: this.defaultRetryTimeoutMS,
                  signal: abortController.signal
                });
              case 4:
              case "end":
                return _context34.stop();
            }
          }, _callee34, this);
        }));
      });
      var universalLink = 'universalLink' in this.walletConnectionSource && this.walletConnectionSource.universalLink ? this.walletConnectionSource.universalLink : this.standardUniversalLink;
      return this.generateUniversalLink(universalLink, message);
    }
  }, {
    key: "restoreConnection",
    value: function restoreConnection(options) {
      var _a, _b;
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee35() {
        var _this24 = this;
        var abortController, storedConnection, openingDeadlineMS;
        return _regeneratorRuntime().wrap(function _callee35$(_context35) {
          while (1) switch (_context35.prev = _context35.next) {
            case 0:
              abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);
              (_a = this.abortController) === null || _a === void 0 ? void 0 : _a.abort();
              this.abortController = abortController;
              if (!abortController.signal.aborted) {
                _context35.next = 5;
                break;
              }
              return _context35.abrupt("return");
            case 5:
              this.closeGateways();
              _context35.next = 8;
              return this.connectionStorage.getHttpConnection();
            case 8:
              storedConnection = _context35.sent;
              if (storedConnection) {
                _context35.next = 11;
                break;
              }
              return _context35.abrupt("return");
            case 11:
              if (!abortController.signal.aborted) {
                _context35.next = 13;
                break;
              }
              return _context35.abrupt("return");
            case 13:
              openingDeadlineMS = (_b = options === null || options === void 0 ? void 0 : options.openingDeadlineMS) !== null && _b !== void 0 ? _b : this.defaultOpeningDeadlineMS;
              if (!isPendingConnectionHttp(storedConnection)) {
                _context35.next = 19;
                break;
              }
              this.session = {
                sessionCrypto: storedConnection.sessionCrypto,
                bridgeUrl: 'bridgeUrl' in this.walletConnectionSource ? this.walletConnectionSource.bridgeUrl : ''
              };
              _context35.next = 18;
              return this.openGateways(storedConnection.sessionCrypto, {
                openingDeadlineMS: openingDeadlineMS,
                signal: abortController === null || abortController === void 0 ? void 0 : abortController.signal
              });
            case 18:
              return _context35.abrupt("return", _context35.sent);
            case 19:
              if (!Array.isArray(this.walletConnectionSource)) {
                _context35.next = 21;
                break;
              }
              throw new TonConnectError('Internal error. Connection source is array while WalletConnectionSourceHTTP was expected.');
            case 21:
              this.session = storedConnection.session;
              if (!this.gateway) {
                _context35.next = 26;
                break;
              }
              logDebug('Gateway is already opened, closing previous gateway');
              _context35.next = 26;
              return this.gateway.close();
            case 26:
              this.gateway = new BridgeGateway(this.storage, this.walletConnectionSource.bridgeUrl, storedConnection.session.sessionCrypto.sessionId, this.gatewayListener.bind(this), this.gatewayErrorsListener.bind(this));
              if (!abortController.signal.aborted) {
                _context35.next = 29;
                break;
              }
              return _context35.abrupt("return");
            case 29:
              // notify listeners about stored connection
              this.listeners.forEach(function (listener) {
                return listener(storedConnection.connectEvent);
              });
              // wait for the connection to be opened
              _context35.prev = 30;
              _context35.next = 33;
              return callForSuccess(function (options) {
                return _this24.gateway.registerSession({
                  openingDeadlineMS: openingDeadlineMS,
                  signal: options.signal
                });
              }, {
                attempts: Number.MAX_SAFE_INTEGER,
                delayMs: this.defaultRetryTimeoutMS,
                signal: abortController.signal
              });
            case 33:
              _context35.next = 40;
              break;
            case 35:
              _context35.prev = 35;
              _context35.t0 = _context35["catch"](30);
              _context35.next = 39;
              return this.disconnect({
                signal: abortController.signal
              });
            case 39:
              return _context35.abrupt("return");
            case 40:
            case "end":
              return _context35.stop();
          }
        }, _callee35, this, [[30, 35]]);
      }));
    }
  }, {
    key: "sendRequest",
    value: function sendRequest(request, optionsOrOnRequestSent) {
      var _this25 = this;
      // TODO: remove deprecated method
      var options = {};
      if (typeof optionsOrOnRequestSent === 'function') {
        options.onRequestSent = optionsOrOnRequestSent;
      } else {
        options.onRequestSent = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.onRequestSent;
        options.signal = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.signal;
        options.attempts = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.attempts;
      }
      return new Promise(function (resolve, reject) {
        return __awaiter(_this25, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee36() {
          var _a, id, encodedRequest;
          return _regeneratorRuntime().wrap(function _callee36$(_context36) {
            while (1) switch (_context36.prev = _context36.next) {
              case 0:
                if (!(!this.gateway || !this.session || !('walletPublicKey' in this.session))) {
                  _context36.next = 2;
                  break;
                }
                throw new TonConnectError('Trying to send bridge request without session');
              case 2:
                _context36.next = 4;
                return this.connectionStorage.getNextRpcRequestId();
              case 4:
                id = _context36.sent.toString();
                _context36.next = 7;
                return this.connectionStorage.increaseNextRpcRequestId();
              case 7:
                logDebug('Send http-bridge request:', Object.assign(Object.assign({}, request), {
                  id: id
                }));
                encodedRequest = this.session.sessionCrypto.encrypt(JSON.stringify(Object.assign(Object.assign({}, request), {
                  id: id
                })), (0, _protocol.hexToByteArray)(this.session.walletPublicKey));
                _context36.prev = 9;
                _context36.next = 12;
                return this.gateway.send(encodedRequest, this.session.walletPublicKey, request.method, {
                  attempts: options === null || options === void 0 ? void 0 : options.attempts,
                  signal: options === null || options === void 0 ? void 0 : options.signal
                });
              case 12:
                (_a = options === null || options === void 0 ? void 0 : options.onRequestSent) === null || _a === void 0 ? void 0 : _a.call(options);
                this.pendingRequests.set(id.toString(), resolve);
                _context36.next = 19;
                break;
              case 16:
                _context36.prev = 16;
                _context36.t0 = _context36["catch"](9);
                reject(_context36.t0);
              case 19:
              case "end":
                return _context36.stop();
            }
          }, _callee36, this, [[9, 16]]);
        }));
      });
    }
  }, {
    key: "closeConnection",
    value: function closeConnection() {
      this.closeGateways();
      this.listeners = [];
      this.session = null;
      this.gateway = null;
    }
  }, {
    key: "disconnect",
    value: function disconnect(options) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee38() {
        var _this26 = this;
        return _regeneratorRuntime().wrap(function _callee38$(_context38) {
          while (1) switch (_context38.prev = _context38.next) {
            case 0:
              return _context38.abrupt("return", new Promise(function (resolve) {
                return __awaiter(_this26, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee37() {
                  var _this27 = this;
                  var called, timeoutId, onRequestSent, abortController;
                  return _regeneratorRuntime().wrap(function _callee37$(_context37) {
                    while (1) switch (_context37.prev = _context37.next) {
                      case 0:
                        called = false;
                        timeoutId = null;
                        onRequestSent = function onRequestSent() {
                          if (!called) {
                            called = true;
                            _this27.removeBridgeAndSession().then(resolve);
                          }
                        };
                        _context37.prev = 3;
                        this.closeGateways();
                        abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);
                        timeoutId = setTimeout(function () {
                          abortController.abort();
                        }, this.defaultOpeningDeadlineMS);
                        _context37.next = 9;
                        return this.sendRequest({
                          method: 'disconnect',
                          params: []
                        }, {
                          onRequestSent: onRequestSent,
                          signal: abortController.signal,
                          attempts: 1
                        });
                      case 9:
                        _context37.next = 15;
                        break;
                      case 11:
                        _context37.prev = 11;
                        _context37.t0 = _context37["catch"](3);
                        logDebug('Disconnect error:', _context37.t0);
                        if (!called) {
                          this.removeBridgeAndSession().then(resolve);
                        }
                      case 15:
                        _context37.prev = 15;
                        if (timeoutId) {
                          clearTimeout(timeoutId);
                        }
                        onRequestSent();
                        return _context37.finish(15);
                      case 19:
                      case "end":
                        return _context37.stop();
                    }
                  }, _callee37, this, [[3, 11, 15, 19]]);
                }));
              }));
            case 1:
            case "end":
              return _context38.stop();
          }
        }, _callee38);
      }));
    }
  }, {
    key: "listen",
    value: function listen(callback) {
      var _this28 = this;
      this.listeners.push(callback);
      return function () {
        return _this28.listeners = _this28.listeners.filter(function (listener) {
          return listener !== callback;
        });
      };
    }
  }, {
    key: "pause",
    value: function pause() {
      var _a;
      (_a = this.gateway) === null || _a === void 0 ? void 0 : _a.pause();
      this.pendingGateways.forEach(function (bridge) {
        return bridge.pause();
      });
    }
  }, {
    key: "unPause",
    value: function unPause() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee39() {
        var promises;
        return _regeneratorRuntime().wrap(function _callee39$(_context39) {
          while (1) switch (_context39.prev = _context39.next) {
            case 0:
              promises = this.pendingGateways.map(function (bridge) {
                return bridge.unPause();
              });
              if (this.gateway) {
                promises.push(this.gateway.unPause());
              }
              _context39.next = 4;
              return Promise.all(promises);
            case 4:
            case "end":
              return _context39.stop();
          }
        }, _callee39, this);
      }));
    }
  }, {
    key: "pendingGatewaysListener",
    value: function pendingGatewaysListener(gateway, bridgeUrl, bridgeIncomingMessage) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee40() {
        return _regeneratorRuntime().wrap(function _callee40$(_context40) {
          while (1) switch (_context40.prev = _context40.next) {
            case 0:
              if (this.pendingGateways.includes(gateway)) {
                _context40.next = 4;
                break;
              }
              _context40.next = 3;
              return gateway.close();
            case 3:
              return _context40.abrupt("return");
            case 4:
              this.closeGateways({
                except: gateway
              });
              if (!this.gateway) {
                _context40.next = 9;
                break;
              }
              logDebug('Gateway is already opened, closing previous gateway');
              _context40.next = 9;
              return this.gateway.close();
            case 9:
              this.session.bridgeUrl = bridgeUrl;
              this.gateway = gateway;
              this.gateway.setErrorsListener(this.gatewayErrorsListener.bind(this));
              this.gateway.setListener(this.gatewayListener.bind(this));
              return _context40.abrupt("return", this.gatewayListener(bridgeIncomingMessage));
            case 14:
            case "end":
              return _context40.stop();
          }
        }, _callee40, this);
      }));
    }
  }, {
    key: "gatewayListener",
    value: function gatewayListener(bridgeIncomingMessage) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee41() {
        var walletMessage, id, resolve, lastId, listeners;
        return _regeneratorRuntime().wrap(function _callee41$(_context41) {
          while (1) switch (_context41.prev = _context41.next) {
            case 0:
              walletMessage = JSON.parse(this.session.sessionCrypto.decrypt(_protocol.Base64.decode(bridgeIncomingMessage.message).toUint8Array(), (0, _protocol.hexToByteArray)(bridgeIncomingMessage.from)));
              logDebug('Wallet message received:', walletMessage);
              if ('event' in walletMessage) {
                _context41.next = 11;
                break;
              }
              id = walletMessage.id.toString();
              resolve = this.pendingRequests.get(id);
              if (resolve) {
                _context41.next = 8;
                break;
              }
              logDebug("Response id ".concat(id, " doesn't match any request's id"));
              return _context41.abrupt("return");
            case 8:
              resolve(walletMessage);
              this.pendingRequests["delete"](id);
              return _context41.abrupt("return");
            case 11:
              if (!(walletMessage.id !== undefined)) {
                _context41.next = 21;
                break;
              }
              _context41.next = 14;
              return this.connectionStorage.getLastWalletEventId();
            case 14:
              lastId = _context41.sent;
              if (!(lastId !== undefined && walletMessage.id <= lastId)) {
                _context41.next = 18;
                break;
              }
              logError("Received event id (=".concat(walletMessage.id, ") must be greater than stored last wallet event id (=").concat(lastId, ") "));
              return _context41.abrupt("return");
            case 18:
              if (!(walletMessage.event !== 'connect')) {
                _context41.next = 21;
                break;
              }
              _context41.next = 21;
              return this.connectionStorage.storeLastWalletEventId(walletMessage.id);
            case 21:
              // `this.listeners` might be modified in the event handler
              listeners = this.listeners;
              if (!(walletMessage.event === 'connect')) {
                _context41.next = 25;
                break;
              }
              _context41.next = 25;
              return this.updateSession(walletMessage, bridgeIncomingMessage.from);
            case 25:
              if (!(walletMessage.event === 'disconnect')) {
                _context41.next = 29;
                break;
              }
              logDebug("Removing bridge and session: received disconnect event");
              _context41.next = 29;
              return this.removeBridgeAndSession();
            case 29:
              listeners.forEach(function (listener) {
                return listener(walletMessage);
              });
            case 30:
            case "end":
              return _context41.stop();
          }
        }, _callee41, this);
      }));
    }
  }, {
    key: "gatewayErrorsListener",
    value: function gatewayErrorsListener(e) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee42() {
        return _regeneratorRuntime().wrap(function _callee42$(_context42) {
          while (1) switch (_context42.prev = _context42.next) {
            case 0:
              throw new TonConnectError("Bridge error ".concat(JSON.stringify(e)));
            case 1:
            case "end":
              return _context42.stop();
          }
        }, _callee42);
      }));
    }
  }, {
    key: "updateSession",
    value: function updateSession(connectEvent, walletPublicKey) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee43() {
        var tonAddrItem, connectEventToSave;
        return _regeneratorRuntime().wrap(function _callee43$(_context43) {
          while (1) switch (_context43.prev = _context43.next) {
            case 0:
              this.session = Object.assign(Object.assign({}, this.session), {
                walletPublicKey: walletPublicKey
              });
              tonAddrItem = connectEvent.payload.items.find(function (item) {
                return item.name === 'ton_addr';
              });
              connectEventToSave = Object.assign(Object.assign({}, connectEvent), {
                payload: Object.assign(Object.assign({}, connectEvent.payload), {
                  items: [tonAddrItem]
                })
              });
              _context43.next = 5;
              return this.connectionStorage.storeConnection({
                type: 'http',
                session: this.session,
                lastWalletEventId: connectEvent.id,
                connectEvent: connectEventToSave,
                nextRpcRequestId: 0
              });
            case 5:
            case "end":
              return _context43.stop();
          }
        }, _callee43, this);
      }));
    }
  }, {
    key: "removeBridgeAndSession",
    value: function removeBridgeAndSession() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee44() {
        return _regeneratorRuntime().wrap(function _callee44$(_context44) {
          while (1) switch (_context44.prev = _context44.next) {
            case 0:
              this.closeConnection();
              _context44.next = 3;
              return this.connectionStorage.removeConnection();
            case 3:
            case "end":
              return _context44.stop();
          }
        }, _callee44, this);
      }));
    }
  }, {
    key: "generateUniversalLink",
    value: function generateUniversalLink(universalLink, message) {
      if (isTelegramUrl(universalLink)) {
        return this.generateTGUniversalLink(universalLink, message);
      }
      return this.generateRegularUniversalLink(universalLink, message);
    }
  }, {
    key: "generateRegularUniversalLink",
    value: function generateRegularUniversalLink(universalLink, message) {
      var url = new URL(universalLink);
      url.searchParams.append('v', PROTOCOL_VERSION.toString());
      url.searchParams.append('id', this.session.sessionCrypto.sessionId);
      url.searchParams.append('r', JSON.stringify(message));
      return url.toString();
    }
  }, {
    key: "generateTGUniversalLink",
    value: function generateTGUniversalLink(universalLink, message) {
      var urlToWrap = this.generateRegularUniversalLink('about:blank', message);
      var linkParams = urlToWrap.split('?')[1];
      var startapp = 'tonconnect-' + encodeTelegramUrlParameters(linkParams);
      // TODO: Remove this line after all dApps and the wallets-list.json have been updated
      var updatedUniversalLink = this.convertToDirectLink(universalLink);
      var url = new URL(updatedUniversalLink);
      url.searchParams.append('startapp', startapp);
      return url.toString();
    }
    // TODO: Remove this method after all dApps and the wallets-list.json have been updated
  }, {
    key: "convertToDirectLink",
    value: function convertToDirectLink(universalLink) {
      var url = new URL(universalLink);
      if (url.searchParams.has('attach')) {
        url.searchParams["delete"]('attach');
        url.pathname += '/start';
      }
      return url.toString();
    }
  }, {
    key: "openGateways",
    value: function openGateways(sessionCrypto, options) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee45() {
        var _this29 = this;
        return _regeneratorRuntime().wrap(function _callee45$(_context45) {
          while (1) switch (_context45.prev = _context45.next) {
            case 0:
              if (!Array.isArray(this.walletConnectionSource)) {
                _context45.next = 8;
                break;
              }
              // close all gateways before opening new ones
              this.pendingGateways.map(function (bridge) {
                return bridge.close()["catch"]();
              });
              // open new gateways
              this.pendingGateways = this.walletConnectionSource.map(function (source) {
                var gateway = new BridgeGateway(_this29.storage, source.bridgeUrl, sessionCrypto.sessionId, function () {}, function () {});
                gateway.setListener(function (message) {
                  return _this29.pendingGatewaysListener(gateway, source.bridgeUrl, message);
                });
                return gateway;
              });
              _context45.next = 5;
              return Promise.allSettled(this.pendingGateways.map(function (bridge) {
                return callForSuccess(function (_options) {
                  var _a;
                  if (!_this29.pendingGateways.some(function (item) {
                    return item === bridge;
                  })) {
                    return bridge.close();
                  }
                  return bridge.registerSession({
                    openingDeadlineMS: (_a = options === null || options === void 0 ? void 0 : options.openingDeadlineMS) !== null && _a !== void 0 ? _a : _this29.defaultOpeningDeadlineMS,
                    signal: _options.signal
                  });
                }, {
                  attempts: Number.MAX_SAFE_INTEGER,
                  delayMs: _this29.defaultRetryTimeoutMS,
                  signal: options === null || options === void 0 ? void 0 : options.signal
                });
              }));
            case 5:
              return _context45.abrupt("return");
            case 8:
              if (!this.gateway) {
                _context45.next = 12;
                break;
              }
              logDebug("Gateway is already opened, closing previous gateway");
              _context45.next = 12;
              return this.gateway.close();
            case 12:
              this.gateway = new BridgeGateway(this.storage, this.walletConnectionSource.bridgeUrl, sessionCrypto.sessionId, this.gatewayListener.bind(this), this.gatewayErrorsListener.bind(this));
              _context45.next = 15;
              return this.gateway.registerSession({
                openingDeadlineMS: options === null || options === void 0 ? void 0 : options.openingDeadlineMS,
                signal: options === null || options === void 0 ? void 0 : options.signal
              });
            case 15:
              return _context45.abrupt("return", _context45.sent);
            case 16:
            case "end":
              return _context45.stop();
          }
        }, _callee45, this);
      }));
    }
  }, {
    key: "closeGateways",
    value: function closeGateways(options) {
      var _a;
      (_a = this.gateway) === null || _a === void 0 ? void 0 : _a.close();
      this.pendingGateways.filter(function (item) {
        return item !== (options === null || options === void 0 ? void 0 : options.except);
      }).forEach(function (bridge) {
        return bridge.close();
      });
      this.pendingGateways = [];
    }
  }], [{
    key: "fromStorage",
    value: function fromStorage(storage) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee46() {
        var bridgeConnectionStorage, connection;
        return _regeneratorRuntime().wrap(function _callee46$(_context46) {
          while (1) switch (_context46.prev = _context46.next) {
            case 0:
              bridgeConnectionStorage = new BridgeConnectionStorage(storage);
              _context46.next = 3;
              return bridgeConnectionStorage.getHttpConnection();
            case 3:
              connection = _context46.sent;
              if (!isPendingConnectionHttp(connection)) {
                _context46.next = 6;
                break;
              }
              return _context46.abrupt("return", new BridgeProvider(storage, connection.connectionSource));
            case 6:
              return _context46.abrupt("return", new BridgeProvider(storage, {
                bridgeUrl: connection.session.bridgeUrl
              }));
            case 7:
            case "end":
              return _context46.stop();
          }
        }, _callee46);
      }));
    }
  }]);
}();
function hasProperty(value, propertyKey) {
  return hasProperties(value, [propertyKey]);
}
function hasProperties(value, propertyKeys) {
  if (!value || _typeof(value) !== 'object') {
    return false;
  }
  return propertyKeys.every(function (propertyKey) {
    return propertyKey in value;
  });
}
function isJSBridgeWithMetadata(value) {
  try {
    if (!hasProperty(value, 'tonconnect') || !hasProperty(value.tonconnect, 'walletInfo')) {
      return false;
    }
    return hasProperties(value.tonconnect.walletInfo, ['name', 'app_name', 'image', 'about_url', 'platforms']);
  } catch (_a) {
    return false;
  }
}

/**
 * In memory storage like localStorage, but without persistence.
 * Uses as a fallback for localStorage in Safari's private mode.
 */
var InMemoryStorage = /*#__PURE__*/function () {
  function InMemoryStorage() {
    _classCallCheck(this, InMemoryStorage);
    this.storage = {};
  }
  return _createClass(InMemoryStorage, [{
    key: "length",
    get: function get() {
      return Object.keys(this.storage).length;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.storage = {};
    }
  }, {
    key: "getItem",
    value: function getItem(key) {
      var _a;
      return (_a = this.storage[key]) !== null && _a !== void 0 ? _a : null;
    }
  }, {
    key: "key",
    value: function key(index) {
      var _a;
      var keys = Object.keys(this.storage);
      if (index < 0 || index >= keys.length) {
        return null;
      }
      return (_a = keys[index]) !== null && _a !== void 0 ? _a : null;
    }
  }, {
    key: "removeItem",
    value: function removeItem(key) {
      delete this.storage[key];
    }
  }, {
    key: "setItem",
    value: function setItem(key, value) {
      this.storage[key] = value;
    }
  }], [{
    key: "getInstance",
    value: function getInstance() {
      if (!InMemoryStorage.instance) {
        InMemoryStorage.instance = new InMemoryStorage();
      }
      return InMemoryStorage.instance;
    }
  }]);
}();
function getWindow() {
  if (typeof window === 'undefined') {
    return undefined;
  }
  return window;
}
/**
 * The function try to get window keys, if it is not available it returns empty array.
 * As an example, for Safari's private mode it returns empty array, because the browser does not allow to get window keys.
 */
function tryGetWindowKeys() {
  var window = getWindow();
  if (!window) {
    return [];
  }
  try {
    return Object.keys(window);
  } catch (_a) {
    return [];
  }
}
function getDocument() {
  if (typeof document === 'undefined') {
    return undefined;
  }
  return document;
}
function getWebPageManifest() {
  var _a;
  var origin = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.location.origin;
  if (origin) {
    return origin + '/tonconnect-manifest.json';
  }
  return '';
}
/**
 * Returns `localStorage` if it is available. In Safari's private mode, it returns `InMemoryStorage`. In Node.js, it throws an error.
 */
function tryGetLocalStorage() {
  if (isLocalStorageAvailable()) {
    return localStorage;
  }
  if (isNodeJs()) {
    throw new TonConnectError('`localStorage` is unavailable, but it is required for TonConnect. For more details, see https://github.com/ton-connect/sdk/tree/main/packages/sdk#init-connector');
  }
  return InMemoryStorage.getInstance();
}
/**
 * Checks if `localStorage` is available.
 */
function isLocalStorageAvailable() {
  // We use a try/catch block because Safari's private mode throws an error when attempting to access localStorage.
  try {
    return typeof localStorage !== 'undefined';
  } catch (_a) {
    return false;
  }
}
/**
 * Checks if the environment is Node.js.
 */
function isNodeJs() {
  return typeof process !== 'undefined' && process.versions != null && process.versions.node != null;
}
var InjectedProvider = /*#__PURE__*/function () {
  function InjectedProvider(storage, injectedWalletKey) {
    _classCallCheck(this, InjectedProvider);
    this.injectedWalletKey = injectedWalletKey;
    this.type = 'injected';
    this.unsubscribeCallback = null;
    this.listenSubscriptions = false;
    this.listeners = [];
    var window = InjectedProvider.window;
    if (!InjectedProvider.isWindowContainsWallet(window, injectedWalletKey)) {
      throw new WalletNotInjectedError();
    }
    this.connectionStorage = new BridgeConnectionStorage(storage);
    this.injectedWallet = window[injectedWalletKey].tonconnect;
  }
  return _createClass(InjectedProvider, [{
    key: "connect",
    value: function connect(message) {
      this._connect(PROTOCOL_VERSION, message);
    }
  }, {
    key: "restoreConnection",
    value: function restoreConnection() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee47() {
        var connectEvent;
        return _regeneratorRuntime().wrap(function _callee47$(_context47) {
          while (1) switch (_context47.prev = _context47.next) {
            case 0:
              _context47.prev = 0;
              logDebug("Injected Provider restoring connection...");
              _context47.next = 4;
              return this.injectedWallet.restoreConnection();
            case 4:
              connectEvent = _context47.sent;
              logDebug('Injected Provider restoring connection response', connectEvent);
              if (!(connectEvent.event === 'connect')) {
                _context47.next = 11;
                break;
              }
              this.makeSubscriptions();
              this.listeners.forEach(function (listener) {
                return listener(connectEvent);
              });
              _context47.next = 13;
              break;
            case 11:
              _context47.next = 13;
              return this.connectionStorage.removeConnection();
            case 13:
              _context47.next = 20;
              break;
            case 15:
              _context47.prev = 15;
              _context47.t0 = _context47["catch"](0);
              _context47.next = 19;
              return this.connectionStorage.removeConnection();
            case 19:
              console.error(_context47.t0);
            case 20:
            case "end":
              return _context47.stop();
          }
        }, _callee47, this, [[0, 15]]);
      }));
    }
  }, {
    key: "closeConnection",
    value: function closeConnection() {
      if (this.listenSubscriptions) {
        this.injectedWallet.disconnect();
      }
      this.closeAllListeners();
    }
  }, {
    key: "disconnect",
    value: function disconnect() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee48() {
        var _this30 = this;
        return _regeneratorRuntime().wrap(function _callee48$(_context48) {
          while (1) switch (_context48.prev = _context48.next) {
            case 0:
              return _context48.abrupt("return", new Promise(function (resolve) {
                var onRequestSent = function onRequestSent() {
                  _this30.closeAllListeners();
                  _this30.connectionStorage.removeConnection().then(resolve);
                };
                try {
                  _this30.injectedWallet.disconnect();
                  onRequestSent();
                } catch (e) {
                  logDebug(e);
                  _this30.sendRequest({
                    method: 'disconnect',
                    params: []
                  }, onRequestSent);
                }
              }));
            case 1:
            case "end":
              return _context48.stop();
          }
        }, _callee48);
      }));
    }
  }, {
    key: "closeAllListeners",
    value: function closeAllListeners() {
      var _a;
      this.listenSubscriptions = false;
      this.listeners = [];
      (_a = this.unsubscribeCallback) === null || _a === void 0 ? void 0 : _a.call(this);
    }
  }, {
    key: "listen",
    value: function listen(eventsCallback) {
      var _this31 = this;
      this.listeners.push(eventsCallback);
      return function () {
        return _this31.listeners = _this31.listeners.filter(function (listener) {
          return listener !== eventsCallback;
        });
      };
    }
  }, {
    key: "sendRequest",
    value: function sendRequest(request, optionsOrOnRequestSent) {
      var _a;
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee49() {
        var options, id, result;
        return _regeneratorRuntime().wrap(function _callee49$(_context49) {
          while (1) switch (_context49.prev = _context49.next) {
            case 0:
              // TODO: remove deprecated method
              options = {};
              if (typeof optionsOrOnRequestSent === 'function') {
                options.onRequestSent = optionsOrOnRequestSent;
              } else {
                options.onRequestSent = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.onRequestSent;
                options.signal = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.signal;
              }
              _context49.next = 4;
              return this.connectionStorage.getNextRpcRequestId();
            case 4:
              id = _context49.sent.toString();
              _context49.next = 7;
              return this.connectionStorage.increaseNextRpcRequestId();
            case 7:
              logDebug('Send injected-bridge request:', Object.assign(Object.assign({}, request), {
                id: id
              }));
              result = this.injectedWallet.send(Object.assign(Object.assign({}, request), {
                id: id
              }));
              result.then(function (response) {
                return logDebug('Wallet message received:', response);
              });
              (_a = options === null || options === void 0 ? void 0 : options.onRequestSent) === null || _a === void 0 ? void 0 : _a.call(options);
              return _context49.abrupt("return", result);
            case 12:
            case "end":
              return _context49.stop();
          }
        }, _callee49, this);
      }));
    }
  }, {
    key: "_connect",
    value: function _connect(protocolVersion, message) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee50() {
        var connectEvent, connectEventError;
        return _regeneratorRuntime().wrap(function _callee50$(_context50) {
          while (1) switch (_context50.prev = _context50.next) {
            case 0:
              _context50.prev = 0;
              logDebug("Injected Provider connect request: protocolVersion: ".concat(protocolVersion, ", message:"), message);
              _context50.next = 4;
              return this.injectedWallet.connect(protocolVersion, message);
            case 4:
              connectEvent = _context50.sent;
              logDebug('Injected Provider connect response:', connectEvent);
              if (!(connectEvent.event === 'connect')) {
                _context50.next = 10;
                break;
              }
              _context50.next = 9;
              return this.updateSession();
            case 9:
              this.makeSubscriptions();
            case 10:
              this.listeners.forEach(function (listener) {
                return listener(connectEvent);
              });
              _context50.next = 18;
              break;
            case 13:
              _context50.prev = 13;
              _context50.t0 = _context50["catch"](0);
              logDebug('Injected Provider connect error:', _context50.t0);
              connectEventError = {
                event: 'connect_error',
                payload: {
                  code: 0,
                  message: _context50.t0 === null || _context50.t0 === void 0 ? void 0 : _context50.t0.toString()
                }
              };
              this.listeners.forEach(function (listener) {
                return listener(connectEventError);
              });
            case 18:
            case "end":
              return _context50.stop();
          }
        }, _callee50, this, [[0, 13]]);
      }));
    }
  }, {
    key: "makeSubscriptions",
    value: function makeSubscriptions() {
      var _this32 = this;
      this.listenSubscriptions = true;
      this.unsubscribeCallback = this.injectedWallet.listen(function (e) {
        logDebug('Wallet message received:', e);
        if (_this32.listenSubscriptions) {
          _this32.listeners.forEach(function (listener) {
            return listener(e);
          });
        }
        if (e.event === 'disconnect') {
          _this32.disconnect();
        }
      });
    }
  }, {
    key: "updateSession",
    value: function updateSession() {
      return this.connectionStorage.storeConnection({
        type: 'injected',
        jsBridgeKey: this.injectedWalletKey,
        nextRpcRequestId: 0
      });
    }
  }], [{
    key: "fromStorage",
    value: function fromStorage(storage) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee51() {
        var bridgeConnectionStorage, connection;
        return _regeneratorRuntime().wrap(function _callee51$(_context51) {
          while (1) switch (_context51.prev = _context51.next) {
            case 0:
              bridgeConnectionStorage = new BridgeConnectionStorage(storage);
              _context51.next = 3;
              return bridgeConnectionStorage.getInjectedConnection();
            case 3:
              connection = _context51.sent;
              return _context51.abrupt("return", new InjectedProvider(storage, connection.jsBridgeKey));
            case 5:
            case "end":
              return _context51.stop();
          }
        }, _callee51);
      }));
    }
  }, {
    key: "isWalletInjected",
    value: function isWalletInjected(injectedWalletKey) {
      return InjectedProvider.isWindowContainsWallet(this.window, injectedWalletKey);
    }
  }, {
    key: "isInsideWalletBrowser",
    value: function isInsideWalletBrowser(injectedWalletKey) {
      if (InjectedProvider.isWindowContainsWallet(this.window, injectedWalletKey)) {
        return this.window[injectedWalletKey].tonconnect.isWalletBrowser;
      }
      return false;
    }
  }, {
    key: "getCurrentlyInjectedWallets",
    value: function getCurrentlyInjectedWallets() {
      if (!this.window) {
        return [];
      }
      var windowKeys = tryGetWindowKeys();
      var wallets = windowKeys.filter(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2),
          _ = _ref2[0],
          value = _ref2[1];
        return isJSBridgeWithMetadata(value);
      });
      return wallets.map(function (_ref3) {
        var _ref4 = _slicedToArray(_ref3, 2),
          jsBridgeKey = _ref4[0],
          wallet = _ref4[1];
        return {
          name: wallet.tonconnect.walletInfo.name,
          appName: wallet.tonconnect.walletInfo.app_name,
          aboutUrl: wallet.tonconnect.walletInfo.about_url,
          imageUrl: wallet.tonconnect.walletInfo.image,
          tondns: wallet.tonconnect.walletInfo.tondns,
          jsBridgeKey: jsBridgeKey,
          injected: true,
          embedded: wallet.tonconnect.isWalletBrowser,
          platforms: wallet.tonconnect.walletInfo.platforms
        };
      });
    }
  }, {
    key: "isWindowContainsWallet",
    value: function isWindowContainsWallet(window, injectedWalletKey) {
      return !!window && injectedWalletKey in window && _typeof(window[injectedWalletKey]) === 'object' && 'tonconnect' in window[injectedWalletKey];
    }
  }]);
}();
InjectedProvider.window = getWindow();

/**
 * Default storage to save protocol data, uses `localStorage` if it is available. In Safari's private mode, it uses `InMemoryStorage`. In Node.js, it throws an error.
 */
var DefaultStorage = /*#__PURE__*/function () {
  function DefaultStorage() {
    _classCallCheck(this, DefaultStorage);
    this.localStorage = tryGetLocalStorage();
  }
  return _createClass(DefaultStorage, [{
    key: "getItem",
    value: function getItem(key) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee52() {
        return _regeneratorRuntime().wrap(function _callee52$(_context52) {
          while (1) switch (_context52.prev = _context52.next) {
            case 0:
              return _context52.abrupt("return", this.localStorage.getItem(key));
            case 1:
            case "end":
              return _context52.stop();
          }
        }, _callee52, this);
      }));
    }
  }, {
    key: "removeItem",
    value: function removeItem(key) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee53() {
        return _regeneratorRuntime().wrap(function _callee53$(_context53) {
          while (1) switch (_context53.prev = _context53.next) {
            case 0:
              this.localStorage.removeItem(key);
            case 1:
            case "end":
              return _context53.stop();
          }
        }, _callee53, this);
      }));
    }
  }, {
    key: "setItem",
    value: function setItem(key, value) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee54() {
        return _regeneratorRuntime().wrap(function _callee54$(_context54) {
          while (1) switch (_context54.prev = _context54.next) {
            case 0:
              this.localStorage.setItem(key, value);
            case 1:
            case "end":
              return _context54.stop();
          }
        }, _callee54, this);
      }));
    }
  }]);
}();
/**
 * Checks if `WalletInfo` is `WalletInfoInjectable` and `WalletInfo` is injected to the current webpage (`walletInfo.injected === true`).
 * @param value WalletInfo to check.
 */
function isWalletInfoCurrentlyInjected(value) {
  return isWalletInfoInjectable(value) && value.injected;
}
/**
 * Checks if `WalletInfo` is `WalletInfoInjectable` and dApp is opened inside this wallet's browser.
 * @param value WalletInfo to check.
 */
function isWalletInfoCurrentlyEmbedded(value) {
  return isWalletInfoCurrentlyInjected(value) && value.embedded;
}
/**
 * Checks if `WalletInfo` is `WalletInfoInjected`, but doesn't check if it is injected to the page or not.
 * @param value WalletInfo to check.
 */
function isWalletInfoInjectable(value) {
  return 'jsBridgeKey' in value;
}
/**
 * Checks if `WalletInfo` is `WalletInfoRemote`.
 * @param value WalletInfo to check.
 */
function isWalletInfoRemote(value) {
  return 'bridgeUrl' in value;
}
/**
 * @deprecated use `isWalletInfoInjectable` or `isWalletInfoCurrentlyInjected` instead.
 * @param value WalletInfo to check.
 */
function isWalletInfoInjected(value) {
  return 'jsBridgeKey' in value;
}
var FALLBACK_WALLETS_LIST = [{
  app_name: 'telegram-wallet',
  name: 'Wallet',
  image: 'https://wallet.tg/images/logo-288.png',
  about_url: 'https://wallet.tg/',
  universal_url: 'https://t.me/wallet?attach=wallet',
  bridge: [{
    type: 'sse',
    url: 'https://bridge.ton.space/bridge'
  }],
  platforms: ['ios', 'android', 'macos', 'windows', 'linux']
}, {
  app_name: 'tonkeeper',
  name: 'Tonkeeper',
  image: 'https://tonkeeper.com/assets/tonconnect-icon.png',
  tondns: 'tonkeeper.ton',
  about_url: 'https://tonkeeper.com',
  universal_url: 'https://app.tonkeeper.com/ton-connect',
  deepLink: 'tonkeeper-tc://',
  bridge: [{
    type: 'sse',
    url: 'https://bridge.tonapi.io/bridge'
  }, {
    type: 'js',
    key: 'tonkeeper'
  }],
  platforms: ['ios', 'android', 'chrome', 'firefox', 'macos']
}, {
  app_name: 'mytonwallet',
  name: 'MyTonWallet',
  image: 'https://static.mytonwallet.io/icon-256.png',
  about_url: 'https://mytonwallet.io',
  universal_url: 'https://connect.mytonwallet.org',
  bridge: [{
    type: 'js',
    key: 'mytonwallet'
  }, {
    type: 'sse',
    url: 'https://tonconnectbridge.mytonwallet.org/bridge/'
  }],
  platforms: ['chrome', 'windows', 'macos', 'linux', 'ios', 'android', 'firefox']
}, {
  app_name: 'openmask',
  name: 'OpenMask',
  image: 'https://raw.githubusercontent.com/OpenProduct/openmask-extension/main/public/openmask-logo-288.png',
  about_url: 'https://www.openmask.app/',
  bridge: [{
    type: 'js',
    key: 'openmask'
  }],
  platforms: ['chrome']
}, {
  app_name: 'tonhub',
  name: 'Tonhub',
  image: 'https://tonhub.com/tonconnect_logo.png',
  about_url: 'https://tonhub.com',
  universal_url: 'https://tonhub.com/ton-connect',
  bridge: [{
    type: 'js',
    key: 'tonhub'
  }, {
    type: 'sse',
    url: 'https://connect.tonhubapi.com/tonconnect'
  }],
  platforms: ['ios', 'android']
}, {
  app_name: 'dewallet',
  name: 'DeWallet',
  image: 'https://raw.githubusercontent.com/delab-team/manifests-images/main/WalletAvatar.png',
  about_url: 'https://delabwallet.com',
  universal_url: 'https://t.me/dewallet?attach=wallet',
  bridge: [{
    type: 'sse',
    url: 'https://sse-bridge.delab.team/bridge'
  }],
  platforms: ['ios', 'android']
}, {
  app_name: 'xtonwallet',
  name: 'XTONWallet',
  image: 'https://xtonwallet.com/assets/img/icon-256-back.png',
  about_url: 'https://xtonwallet.com',
  bridge: [{
    type: 'js',
    key: 'xtonwallet'
  }],
  platforms: ['chrome', 'firefox']
}, {
  app_name: 'tonwallet',
  name: 'TON Wallet',
  image: 'https://wallet.ton.org/assets/ui/qr-logo.png',
  about_url: 'https://chrome.google.com/webstore/detail/ton-wallet/nphplpgoakhhjchkkhmiggakijnkhfnd',
  bridge: [{
    type: 'js',
    key: 'tonwallet'
  }],
  platforms: ['chrome']
}, {
  app_name: 'bitgetTonWallet',
  name: 'Bitget Wallet',
  image: 'https://raw.githubusercontent.com/bitkeepwallet/download/main/logo/png/bitget_wallet_logo_0_gas_fee.png',
  about_url: 'https://web3.bitget.com',
  deepLink: 'bitkeep://',
  bridge: [{
    type: 'js',
    key: 'bitgetTonWallet'
  }, {
    type: 'sse',
    url: 'https://bridge.tonapi.io/bridge'
  }],
  platforms: ['ios', 'android', 'chrome'],
  universal_url: 'https://bkcode.vip/ton-connect'
}, {
  app_name: 'safepalwallet',
  name: 'SafePal',
  image: 'https://s.pvcliping.com/web/public_image/SafePal_x288.png',
  tondns: '',
  about_url: 'https://www.safepal.com',
  universal_url: 'https://link.safepal.io/ton-connect',
  deepLink: 'safepal-tc://',
  bridge: [{
    type: 'sse',
    url: 'https://ton-bridge.safepal.com/tonbridge/v1/bridge'
  }, {
    type: 'js',
    key: 'safepalwallet'
  }],
  platforms: ['ios', 'android', 'chrome', 'firefox']
}, {
  app_name: 'okxTonWallet',
  name: 'OKX Wallet',
  image: 'https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png',
  about_url: 'https://www.okx.com/web3',
  universal_url: 'https://www.okx.com/download?appendQuery=true&deeplink=okx://web3/wallet/tonconnect',
  bridge: [{
    type: 'js',
    key: 'okxTonWallet'
  }, {
    type: 'sse',
    url: 'https://www.okx.com/tonbridge/discover/rpc/bridge'
  }],
  platforms: ['chrome', 'safari', 'firefox', 'ios', 'android']
}, {
  app_name: 'okxTonWalletTr',
  name: 'OKX TR Wallet',
  image: 'https://static.okx.com/cdn/assets/imgs/247/587A8296F0BB640F.png',
  about_url: 'https://tr.okx.com/web3',
  universal_url: 'https://tr.okx.com/download?appendQuery=true&deeplink=okxtr://web3/wallet/tonconnect',
  bridge: [{
    type: 'js',
    key: 'okxTonWallet'
  }, {
    type: 'sse',
    url: 'https://www.okx.com/tonbridge/discover/rpc/bridge'
  }],
  platforms: ['chrome', 'safari', 'firefox', 'ios', 'android']
}];
var WalletsListManager = exports.WalletsListManager = /*#__PURE__*/function () {
  function WalletsListManager(options) {
    _classCallCheck(this, WalletsListManager);
    this.walletsListCache = null;
    this.walletsListCacheCreationTimestamp = null;
    this.walletsListSource = 'https://raw.githubusercontent.com/ton-blockchain/wallets-list/main/wallets-v2.json';
    if (options === null || options === void 0 ? void 0 : options.walletsListSource) {
      this.walletsListSource = options.walletsListSource;
    }
    if (options === null || options === void 0 ? void 0 : options.cacheTTLMs) {
      this.cacheTTLMs = options.cacheTTLMs;
    }
  }
  return _createClass(WalletsListManager, [{
    key: "getWallets",
    value: function getWallets() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee55() {
        var _this33 = this;
        return _regeneratorRuntime().wrap(function _callee55$(_context55) {
          while (1) switch (_context55.prev = _context55.next) {
            case 0:
              if (this.cacheTTLMs && this.walletsListCacheCreationTimestamp && Date.now() > this.walletsListCacheCreationTimestamp + this.cacheTTLMs) {
                this.walletsListCache = null;
              }
              if (!this.walletsListCache) {
                this.walletsListCache = this.fetchWalletsList();
                this.walletsListCache.then(function () {
                  _this33.walletsListCacheCreationTimestamp = Date.now();
                })["catch"](function () {
                  _this33.walletsListCache = null;
                  _this33.walletsListCacheCreationTimestamp = null;
                });
              }
              return _context55.abrupt("return", this.walletsListCache);
            case 3:
            case "end":
              return _context55.stop();
          }
        }, _callee55, this);
      }));
    }
  }, {
    key: "getEmbeddedWallet",
    value: function getEmbeddedWallet() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee56() {
        var walletsList, embeddedWallets;
        return _regeneratorRuntime().wrap(function _callee56$(_context56) {
          while (1) switch (_context56.prev = _context56.next) {
            case 0:
              _context56.next = 2;
              return this.getWallets();
            case 2:
              walletsList = _context56.sent;
              embeddedWallets = walletsList.filter(isWalletInfoCurrentlyEmbedded);
              if (!(embeddedWallets.length !== 1)) {
                _context56.next = 6;
                break;
              }
              return _context56.abrupt("return", null);
            case 6:
              return _context56.abrupt("return", embeddedWallets[0]);
            case 7:
            case "end":
              return _context56.stop();
          }
        }, _callee56, this);
      }));
    }
  }, {
    key: "fetchWalletsList",
    value: function fetchWalletsList() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee57() {
        var _this34 = this;
        var walletsList, walletsResponse, wrongFormatWallets, currentlyInjectedWallets;
        return _regeneratorRuntime().wrap(function _callee57$(_context57) {
          while (1) switch (_context57.prev = _context57.next) {
            case 0:
              walletsList = [];
              _context57.prev = 1;
              _context57.next = 4;
              return fetch(this.walletsListSource);
            case 4:
              walletsResponse = _context57.sent;
              _context57.next = 7;
              return walletsResponse.json();
            case 7:
              walletsList = _context57.sent;
              if (Array.isArray(walletsList)) {
                _context57.next = 10;
                break;
              }
              throw new FetchWalletsError('Wrong wallets list format, wallets list must be an array.');
            case 10:
              wrongFormatWallets = walletsList.filter(function (wallet) {
                return !_this34.isCorrectWalletConfigDTO(wallet);
              });
              if (wrongFormatWallets.length) {
                logError("Wallet(s) ".concat(wrongFormatWallets.map(function (wallet) {
                  return wallet.name;
                }).join(', '), " config format is wrong. They were removed from the wallets list."));
                walletsList = walletsList.filter(function (wallet) {
                  return _this34.isCorrectWalletConfigDTO(wallet);
                });
              }
              _context57.next = 18;
              break;
            case 14:
              _context57.prev = 14;
              _context57.t0 = _context57["catch"](1);
              logError(_context57.t0);
              walletsList = FALLBACK_WALLETS_LIST;
            case 18:
              currentlyInjectedWallets = [];
              try {
                currentlyInjectedWallets = InjectedProvider.getCurrentlyInjectedWallets();
              } catch (e) {
                logError(e);
              }
              return _context57.abrupt("return", this.mergeWalletsLists(this.walletConfigDTOListToWalletConfigList(walletsList), currentlyInjectedWallets));
            case 21:
            case "end":
              return _context57.stop();
          }
        }, _callee57, this, [[1, 14]]);
      }));
    }
  }, {
    key: "walletConfigDTOListToWalletConfigList",
    value: function walletConfigDTOListToWalletConfigList(walletConfigDTO) {
      return walletConfigDTO.map(function (walletConfigDTO) {
        var walletConfigBase = {
          name: walletConfigDTO.name,
          appName: walletConfigDTO.app_name,
          imageUrl: walletConfigDTO.image,
          aboutUrl: walletConfigDTO.about_url,
          tondns: walletConfigDTO.tondns,
          platforms: walletConfigDTO.platforms
        };
        var walletConfig = walletConfigBase;
        walletConfigDTO.bridge.forEach(function (bridge) {
          if (bridge.type === 'sse') {
            walletConfig.bridgeUrl = bridge.url;
            walletConfig.universalLink = walletConfigDTO.universal_url;
            walletConfig.deepLink = walletConfigDTO.deepLink;
          }
          if (bridge.type === 'js') {
            var jsBridgeKey = bridge.key;
            walletConfig.jsBridgeKey = jsBridgeKey;
            walletConfig.injected = InjectedProvider.isWalletInjected(jsBridgeKey);
            walletConfig.embedded = InjectedProvider.isInsideWalletBrowser(jsBridgeKey);
          }
        });
        return walletConfig;
      });
    }
  }, {
    key: "mergeWalletsLists",
    value: function mergeWalletsLists(list1, list2) {
      var names = new Set(list1.concat(list2).map(function (item) {
        return item.name;
      }));
      return _toConsumableArray(names.values()).map(function (name) {
        var list1Item = list1.find(function (item) {
          return item.name === name;
        });
        var list2Item = list2.find(function (item) {
          return item.name === name;
        });
        return Object.assign(Object.assign({}, list1Item && Object.assign({}, list1Item)), list2Item && Object.assign({}, list2Item));
      });
    }
    // eslint-disable-next-line complexity
  }, {
    key: "isCorrectWalletConfigDTO",
    value: function isCorrectWalletConfigDTO(value) {
      if (!value || !(_typeof(value) === 'object')) {
        return false;
      }
      var containsName = 'name' in value;
      var containsAppName = 'app_name' in value;
      var containsImage = 'image' in value;
      var containsAbout = 'about_url' in value;
      var containsPlatforms = 'platforms' in value;
      if (!containsName || !containsImage || !containsAbout || !containsPlatforms || !containsAppName) {
        return false;
      }
      if (!value.platforms || !Array.isArray(value.platforms) || !value.platforms.length) {
        return false;
      }
      if (!('bridge' in value) || !Array.isArray(value.bridge) || !value.bridge.length) {
        return false;
      }
      var bridge = value.bridge;
      if (bridge.some(function (item) {
        return !item || _typeof(item) !== 'object' || !('type' in item);
      })) {
        return false;
      }
      var sseBridge = bridge.find(function (item) {
        return item.type === 'sse';
      });
      if (sseBridge) {
        if (!('url' in sseBridge) || !sseBridge.url || !value.universal_url) {
          return false;
        }
      }
      var jsBridge = bridge.find(function (item) {
        return item.type === 'js';
      });
      if (jsBridge) {
        if (!('key' in jsBridge) || !jsBridge.key) {
          return false;
        }
      }
      return true;
    }
  }]);
}();
/**
 * Thrown when wallet doesn't support requested feature method.
 */
var WalletNotSupportFeatureError = /*#__PURE__*/function (_TonConnectError15) {
  function WalletNotSupportFeatureError() {
    var _this35;
    _classCallCheck(this, WalletNotSupportFeatureError);
    for (var _len19 = arguments.length, args = new Array(_len19), _key19 = 0; _key19 < _len19; _key19++) {
      args[_key19] = arguments[_key19];
    }
    _this35 = _callSuper(this, WalletNotSupportFeatureError, [].concat(args));
    Object.setPrototypeOf(_this35, WalletNotSupportFeatureError.prototype);
    return _this35;
  }
  _inherits(WalletNotSupportFeatureError, _TonConnectError15);
  return _createClass(WalletNotSupportFeatureError, [{
    key: "info",
    get: function get() {
      return "Wallet doesn't support requested feature method.";
    }
  }]);
}(TonConnectError);
function checkSendTransactionSupport(features, options) {
  var supportsDeprecatedSendTransactionFeature = features.includes('SendTransaction');
  var sendTransactionFeature = features.find(function (feature) {
    return feature && _typeof(feature) === 'object' && feature.name === 'SendTransaction';
  });
  if (!supportsDeprecatedSendTransactionFeature && !sendTransactionFeature) {
    throw new WalletNotSupportFeatureError("Wallet doesn't support SendTransaction feature.");
  }
  if (sendTransactionFeature && sendTransactionFeature.maxMessages !== undefined) {
    if (sendTransactionFeature.maxMessages < options.requiredMessagesNumber) {
      throw new WalletNotSupportFeatureError("Wallet is not able to handle such SendTransaction request. Max support messages number is ".concat(sendTransactionFeature.maxMessages, ", but ").concat(options.requiredMessagesNumber, " is required."));
    }
    return;
  }
  logWarning("Connected wallet didn't provide information about max allowed messages in the SendTransaction request. Request may be rejected by the wallet.");
}

/**
 * Create a request version event.
 */
function createRequestVersionEvent() {
  return {
    type: 'request-version'
  };
}
/**
 * Create a response version event.
 * @param version
 */
function createResponseVersionEvent(version) {
  return {
    type: 'response-version',
    version: version
  };
}
/**
 * Create a version info.
 * @param version
 */
function createVersionInfo(version) {
  return {
    ton_connect_sdk_lib: version.ton_connect_sdk_lib,
    ton_connect_ui_lib: version.ton_connect_ui_lib
  };
}
function createConnectionInfo(version, wallet) {
  var _a, _b, _c, _d, _e, _f, _g, _h;
  var isTonProof = ((_a = wallet === null || wallet === void 0 ? void 0 : wallet.connectItems) === null || _a === void 0 ? void 0 : _a.tonProof) && 'proof' in wallet.connectItems.tonProof;
  var authType = isTonProof ? 'ton_proof' : 'ton_addr';
  return {
    wallet_address: (_c = (_b = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _b === void 0 ? void 0 : _b.address) !== null && _c !== void 0 ? _c : null,
    wallet_type: (_d = wallet === null || wallet === void 0 ? void 0 : wallet.device.appName) !== null && _d !== void 0 ? _d : null,
    wallet_version: (_e = wallet === null || wallet === void 0 ? void 0 : wallet.device.appVersion) !== null && _e !== void 0 ? _e : null,
    auth_type: authType,
    custom_data: Object.assign({
      chain_id: (_g = (_f = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _f === void 0 ? void 0 : _f.chain) !== null && _g !== void 0 ? _g : null,
      provider: (_h = wallet === null || wallet === void 0 ? void 0 : wallet.provider) !== null && _h !== void 0 ? _h : null
    }, createVersionInfo(version))
  };
}
/**
 * Create a connection init event.
 */
function createConnectionStartedEvent(version) {
  return {
    type: 'connection-started',
    custom_data: createVersionInfo(version)
  };
}
/**
 * Create a connection completed event.
 * @param version
 * @param wallet
 */
function createConnectionCompletedEvent(version, wallet) {
  return Object.assign({
    type: 'connection-completed',
    is_success: true
  }, createConnectionInfo(version, wallet));
}
/**
 * Create a connection error event.
 * @param version
 * @param error_message
 * @param errorCode
 */
function createConnectionErrorEvent(version, error_message, errorCode) {
  return {
    type: 'connection-error',
    is_success: false,
    error_message: error_message,
    error_code: errorCode !== null && errorCode !== void 0 ? errorCode : null,
    custom_data: createVersionInfo(version)
  };
}
/**
 * Create a connection restoring started event.
 */
function createConnectionRestoringStartedEvent(version) {
  return {
    type: 'connection-restoring-started',
    custom_data: createVersionInfo(version)
  };
}
/**
 * Create a connection restoring completed event.
 * @param version
 * @param wallet
 */
function createConnectionRestoringCompletedEvent(version, wallet) {
  return Object.assign({
    type: 'connection-restoring-completed',
    is_success: true
  }, createConnectionInfo(version, wallet));
}
/**
 * Create a connection restoring error event.
 * @param version
 * @param errorMessage
 */
function createConnectionRestoringErrorEvent(version, errorMessage) {
  return {
    type: 'connection-restoring-error',
    is_success: false,
    error_message: errorMessage,
    custom_data: createVersionInfo(version)
  };
}
function createTransactionInfo(wallet, transaction) {
  var _a, _b, _c, _d;
  return {
    valid_until: (_a = String(transaction.validUntil)) !== null && _a !== void 0 ? _a : null,
    from: (_d = (_b = transaction.from) !== null && _b !== void 0 ? _b : (_c = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _c === void 0 ? void 0 : _c.address) !== null && _d !== void 0 ? _d : null,
    messages: transaction.messages.map(function (message) {
      var _a, _b;
      return {
        address: (_a = message.address) !== null && _a !== void 0 ? _a : null,
        amount: (_b = message.amount) !== null && _b !== void 0 ? _b : null
      };
    })
  };
}
/**
 * Create a transaction init event.
 * @param version
 * @param wallet
 * @param transaction
 */
function createTransactionSentForSignatureEvent(version, wallet, transaction) {
  return Object.assign(Object.assign({
    type: 'transaction-sent-for-signature'
  }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));
}
/**
 * Create a transaction signed event.
 * @param version
 * @param wallet
 * @param transaction
 * @param signedTransaction
 */
function createTransactionSignedEvent(version, wallet, transaction, signedTransaction) {
  return Object.assign(Object.assign({
    type: 'transaction-signed',
    is_success: true,
    signed_transaction: signedTransaction.boc
  }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));
}
/**
 * Create a transaction error event.
 * @param version
 * @param wallet
 * @param transaction
 * @param errorMessage
 * @param errorCode
 */
function createTransactionSigningFailedEvent(version, wallet, transaction, errorMessage, errorCode) {
  return Object.assign(Object.assign({
    type: 'transaction-signing-failed',
    is_success: false,
    error_message: errorMessage,
    error_code: errorCode !== null && errorCode !== void 0 ? errorCode : null
  }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));
}
/**
 * Create a disconnect event.
 * @param version
 * @param wallet
 * @param scope
 * @returns
 */
function createDisconnectionEvent(version, wallet, scope) {
  return Object.assign({
    type: 'disconnection',
    scope: scope
  }, createConnectionInfo(version, wallet));
}

/**
 * A concrete implementation of EventDispatcher that dispatches events to the browser window.
 */
var BrowserEventDispatcher = exports.BrowserEventDispatcher = /*#__PURE__*/function () {
  function BrowserEventDispatcher() {
    _classCallCheck(this, BrowserEventDispatcher);
    /**
     * The window object, possibly undefined in a server environment.
     * @private
     */
    this.window = getWindow();
  }
  /**
   * Dispatches an event with the given name and details to the browser window.
   * @param eventName - The name of the event to dispatch.
   * @param eventDetails - The details of the event to dispatch.
   * @returns A promise that resolves when the event has been dispatched.
   */
  return _createClass(BrowserEventDispatcher, [{
    key: "dispatchEvent",
    value: function dispatchEvent(eventName, eventDetails) {
      var _a;
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee58() {
        var event;
        return _regeneratorRuntime().wrap(function _callee58$(_context58) {
          while (1) switch (_context58.prev = _context58.next) {
            case 0:
              event = new CustomEvent(eventName, {
                detail: eventDetails
              });
              (_a = this.window) === null || _a === void 0 ? void 0 : _a.dispatchEvent(event);
            case 2:
            case "end":
              return _context58.stop();
          }
        }, _callee58, this);
      }));
    }
    /**
     * Adds an event listener to the browser window.
     * @param eventName - The name of the event to listen for.
     * @param listener - The listener to add.
     * @param options - The options for the listener.
     * @returns A function that removes the listener.
     */
  }, {
    key: "addEventListener",
    value: function addEventListener(eventName, listener, options) {
      var _a;
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee59() {
        var _this36 = this;
        return _regeneratorRuntime().wrap(function _callee59$(_context59) {
          while (1) switch (_context59.prev = _context59.next) {
            case 0:
              (_a = this.window) === null || _a === void 0 ? void 0 : _a.addEventListener(eventName, listener, options);
              return _context59.abrupt("return", function () {
                var _a;
                return (_a = _this36.window) === null || _a === void 0 ? void 0 : _a.removeEventListener(eventName, listener);
              });
            case 2:
            case "end":
              return _context59.stop();
          }
        }, _callee59, this);
      }));
    }
  }]);
}();
/**
 * Tracker for TonConnect user actions, such as transaction signing, connection, etc.
 *
 * List of events:
 *  * `connection-started`: when a user starts connecting a wallet.
 *  * `connection-completed`: when a user successfully connected a wallet.
 *  * `connection-error`: when a user cancels a connection or there is an error during the connection process.
 *  * `connection-restoring-started`: when the dApp starts restoring a connection.
 *  * `connection-restoring-completed`: when the dApp successfully restores a connection.
 *  * `connection-restoring-error`: when the dApp fails to restore a connection.
 *  * `disconnection`: when a user starts disconnecting a wallet.
 *  * `transaction-sent-for-signature`: when a user sends a transaction for signature.
 *  * `transaction-signed`: when a user successfully signs a transaction.
 *  * `transaction-signing-failed`: when a user cancels transaction signing or there is an error during the signing process.
 *
 * If you want to track user actions, you can subscribe to the window events with prefix `ton-connect-`:
 *
 * @example
 * window.addEventListener('ton-connect-transaction-sent-for-signature', (event) => {
 *    console.log('Transaction init', event.detail);
 * });
 *
 * @internal
 */
var TonConnectTracker = /*#__PURE__*/function () {
  function TonConnectTracker(options) {
    _classCallCheck(this, TonConnectTracker);
    var _a;
    /**
     * Event prefix for user actions.
     * @private
     */
    this.eventPrefix = 'ton-connect-';
    /**
     * TonConnect UI version.
     */
    this.tonConnectUiVersion = null;
    this.eventDispatcher = (_a = options === null || options === void 0 ? void 0 : options.eventDispatcher) !== null && _a !== void 0 ? _a : new BrowserEventDispatcher();
    this.tonConnectSdkVersion = options.tonConnectSdkVersion;
    this.init()["catch"]();
  }
  /**
   * Version of the library.
   */
  return _createClass(TonConnectTracker, [{
    key: "version",
    get: function get() {
      return createVersionInfo({
        ton_connect_sdk_lib: this.tonConnectSdkVersion,
        ton_connect_ui_lib: this.tonConnectUiVersion
      });
    }
    /**
     * Called once when the tracker is created and request version other libraries.
     */
  }, {
    key: "init",
    value: function init() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee60() {
        return _regeneratorRuntime().wrap(function _callee60$(_context60) {
          while (1) switch (_context60.prev = _context60.next) {
            case 0:
              _context60.prev = 0;
              _context60.next = 3;
              return this.setRequestVersionHandler();
            case 3:
              _context60.next = 5;
              return this.requestTonConnectUiVersion();
            case 5:
              this.tonConnectUiVersion = _context60.sent;
              _context60.next = 10;
              break;
            case 8:
              _context60.prev = 8;
              _context60.t0 = _context60["catch"](0);
            case 10:
            case "end":
              return _context60.stop();
          }
        }, _callee60, this, [[0, 8]]);
      }));
    }
    /**
     * Set request version handler.
     * @private
     */
  }, {
    key: "setRequestVersionHandler",
    value: function setRequestVersionHandler() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee62() {
        var _this37 = this;
        return _regeneratorRuntime().wrap(function _callee62$(_context62) {
          while (1) switch (_context62.prev = _context62.next) {
            case 0:
              _context62.next = 2;
              return this.eventDispatcher.addEventListener('ton-connect-request-version', function () {
                return __awaiter(_this37, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee61() {
                  return _regeneratorRuntime().wrap(function _callee61$(_context61) {
                    while (1) switch (_context61.prev = _context61.next) {
                      case 0:
                        _context61.next = 2;
                        return this.eventDispatcher.dispatchEvent('ton-connect-response-version', createResponseVersionEvent(this.tonConnectSdkVersion));
                      case 2:
                      case "end":
                        return _context61.stop();
                    }
                  }, _callee61, this);
                }));
              });
            case 2:
            case "end":
              return _context62.stop();
          }
        }, _callee62, this);
      }));
    }
    /**
     * Request TonConnect UI version.
     * @private
     */
  }, {
    key: "requestTonConnectUiVersion",
    value: function requestTonConnectUiVersion() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee64() {
        var _this38 = this;
        return _regeneratorRuntime().wrap(function _callee64$(_context64) {
          while (1) switch (_context64.prev = _context64.next) {
            case 0:
              return _context64.abrupt("return", new Promise(function (resolve, reject) {
                return __awaiter(_this38, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee63() {
                  return _regeneratorRuntime().wrap(function _callee63$(_context63) {
                    while (1) switch (_context63.prev = _context63.next) {
                      case 0:
                        _context63.prev = 0;
                        _context63.next = 3;
                        return this.eventDispatcher.addEventListener('ton-connect-ui-response-version', function (event) {
                          resolve(event.detail.version);
                        }, {
                          once: true
                        });
                      case 3:
                        _context63.next = 5;
                        return this.eventDispatcher.dispatchEvent('ton-connect-ui-request-version', createRequestVersionEvent());
                      case 5:
                        _context63.next = 10;
                        break;
                      case 7:
                        _context63.prev = 7;
                        _context63.t0 = _context63["catch"](0);
                        reject(_context63.t0);
                      case 10:
                      case "end":
                        return _context63.stop();
                    }
                  }, _callee63, this, [[0, 7]]);
                }));
              }));
            case 1:
            case "end":
              return _context64.stop();
          }
        }, _callee64);
      }));
    }
    /**
     * Emit user action event to the window.
     * @param eventDetails
     * @private
     */
  }, {
    key: "dispatchUserActionEvent",
    value: function dispatchUserActionEvent(eventDetails) {
      try {
        this.eventDispatcher.dispatchEvent("".concat(this.eventPrefix).concat(eventDetails.type), eventDetails)["catch"]();
      } catch (e) {}
    }
    /**
     * Track connection init event.
     * @param args
     */
  }, {
    key: "trackConnectionStarted",
    value: function trackConnectionStarted() {
      try {
        for (var _len20 = arguments.length, args = new Array(_len20), _key20 = 0; _key20 < _len20; _key20++) {
          args[_key20] = arguments[_key20];
        }
        var event = createConnectionStartedEvent.apply(void 0, [this.version].concat(args));
        this.dispatchUserActionEvent(event);
      } catch (e) {}
    }
    /**
     * Track connection success event.
     * @param args
     */
  }, {
    key: "trackConnectionCompleted",
    value: function trackConnectionCompleted() {
      try {
        for (var _len21 = arguments.length, args = new Array(_len21), _key21 = 0; _key21 < _len21; _key21++) {
          args[_key21] = arguments[_key21];
        }
        var event = createConnectionCompletedEvent.apply(void 0, [this.version].concat(args));
        this.dispatchUserActionEvent(event);
      } catch (e) {}
    }
    /**
     * Track connection error event.
     * @param args
     */
  }, {
    key: "trackConnectionError",
    value: function trackConnectionError() {
      try {
        for (var _len22 = arguments.length, args = new Array(_len22), _key22 = 0; _key22 < _len22; _key22++) {
          args[_key22] = arguments[_key22];
        }
        var event = createConnectionErrorEvent.apply(void 0, [this.version].concat(args));
        this.dispatchUserActionEvent(event);
      } catch (e) {}
    }
    /**
     * Track connection restoring init event.
     * @param args
     */
  }, {
    key: "trackConnectionRestoringStarted",
    value: function trackConnectionRestoringStarted() {
      try {
        for (var _len23 = arguments.length, args = new Array(_len23), _key23 = 0; _key23 < _len23; _key23++) {
          args[_key23] = arguments[_key23];
        }
        var event = createConnectionRestoringStartedEvent.apply(void 0, [this.version].concat(args));
        this.dispatchUserActionEvent(event);
      } catch (e) {}
    }
    /**
     * Track connection restoring success event.
     * @param args
     */
  }, {
    key: "trackConnectionRestoringCompleted",
    value: function trackConnectionRestoringCompleted() {
      try {
        for (var _len24 = arguments.length, args = new Array(_len24), _key24 = 0; _key24 < _len24; _key24++) {
          args[_key24] = arguments[_key24];
        }
        var event = createConnectionRestoringCompletedEvent.apply(void 0, [this.version].concat(args));
        this.dispatchUserActionEvent(event);
      } catch (e) {}
    }
    /**
     * Track connection restoring error event.
     * @param args
     */
  }, {
    key: "trackConnectionRestoringError",
    value: function trackConnectionRestoringError() {
      try {
        for (var _len25 = arguments.length, args = new Array(_len25), _key25 = 0; _key25 < _len25; _key25++) {
          args[_key25] = arguments[_key25];
        }
        var event = createConnectionRestoringErrorEvent.apply(void 0, [this.version].concat(args));
        this.dispatchUserActionEvent(event);
      } catch (e) {}
    }
    /**
     * Track disconnect event.
     * @param args
     */
  }, {
    key: "trackDisconnection",
    value: function trackDisconnection() {
      try {
        for (var _len26 = arguments.length, args = new Array(_len26), _key26 = 0; _key26 < _len26; _key26++) {
          args[_key26] = arguments[_key26];
        }
        var event = createDisconnectionEvent.apply(void 0, [this.version].concat(args));
        this.dispatchUserActionEvent(event);
      } catch (e) {}
    }
    /**
     * Track transaction init event.
     * @param args
     */
  }, {
    key: "trackTransactionSentForSignature",
    value: function trackTransactionSentForSignature() {
      try {
        for (var _len27 = arguments.length, args = new Array(_len27), _key27 = 0; _key27 < _len27; _key27++) {
          args[_key27] = arguments[_key27];
        }
        var event = createTransactionSentForSignatureEvent.apply(void 0, [this.version].concat(args));
        this.dispatchUserActionEvent(event);
      } catch (e) {}
    }
    /**
     * Track transaction signed event.
     * @param args
     */
  }, {
    key: "trackTransactionSigned",
    value: function trackTransactionSigned() {
      try {
        for (var _len28 = arguments.length, args = new Array(_len28), _key28 = 0; _key28 < _len28; _key28++) {
          args[_key28] = arguments[_key28];
        }
        var event = createTransactionSignedEvent.apply(void 0, [this.version].concat(args));
        this.dispatchUserActionEvent(event);
      } catch (e) {}
    }
    /**
     * Track transaction error event.
     * @param args
     */
  }, {
    key: "trackTransactionSigningFailed",
    value: function trackTransactionSigningFailed() {
      try {
        for (var _len29 = arguments.length, args = new Array(_len29), _key29 = 0; _key29 < _len29; _key29++) {
          args[_key29] = arguments[_key29];
        }
        var event = createTransactionSigningFailedEvent.apply(void 0, [this.version].concat(args));
        this.dispatchUserActionEvent(event);
      } catch (e) {}
    }
  }]);
}();
var tonConnectSdkVersion = "3.0.5";
var TonConnect = exports["default"] = exports.TonConnect = /*#__PURE__*/function () {
  function TonConnect(options) {
    _classCallCheck(this, TonConnect);
    this.walletsList = new WalletsListManager();
    this._wallet = null;
    this.provider = null;
    this.statusChangeSubscriptions = [];
    this.statusChangeErrorSubscriptions = [];
    this.dappSettings = {
      manifestUrl: (options === null || options === void 0 ? void 0 : options.manifestUrl) || getWebPageManifest(),
      storage: (options === null || options === void 0 ? void 0 : options.storage) || new DefaultStorage()
    };
    this.walletsList = new WalletsListManager({
      walletsListSource: options === null || options === void 0 ? void 0 : options.walletsListSource,
      cacheTTLMs: options === null || options === void 0 ? void 0 : options.walletsListCacheTTLMs
    });
    this.tracker = new TonConnectTracker({
      eventDispatcher: options === null || options === void 0 ? void 0 : options.eventDispatcher,
      tonConnectSdkVersion: tonConnectSdkVersion
    });
    if (!this.dappSettings.manifestUrl) {
      throw new DappMetadataError('Dapp tonconnect-manifest.json must be specified if window.location.origin is undefined. See more https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest');
    }
    this.bridgeConnectionStorage = new BridgeConnectionStorage(this.dappSettings.storage);
    if (!(options === null || options === void 0 ? void 0 : options.disableAutoPauseConnection)) {
      this.addWindowFocusAndBlurSubscriptions();
    }
  }
  /**
   * Returns available wallets list.
   */
  return _createClass(TonConnect, [{
    key: "connected",
    get:
    /**
     * Shows if the wallet is connected right now.
     */
    function get() {
      return this._wallet !== null;
    }
    /**
     * Current connected account or null if no account is connected.
     */
  }, {
    key: "account",
    get: function get() {
      var _a;
      return ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.account) || null;
    }
    /**
     * Current connected wallet or null if no account is connected.
     */
  }, {
    key: "wallet",
    get: function get() {
      return this._wallet;
    },
    set: function set(value) {
      var _this39 = this;
      this._wallet = value;
      this.statusChangeSubscriptions.forEach(function (callback) {
        return callback(_this39._wallet);
      });
    }
    /**
     * Returns available wallets list.
     */
  }, {
    key: "getWallets",
    value: function getWallets() {
      return this.walletsList.getWallets();
    }
    /**
     * Allows to subscribe to connection status changes and handle connection errors.
     * @param callback will be called after connections status changes with actual wallet or null.
     * @param errorsHandler (optional) will be called with some instance of TonConnectError when connect error is received.
     * @returns unsubscribe callback.
     */
  }, {
    key: "onStatusChange",
    value: function onStatusChange(callback, errorsHandler) {
      var _this40 = this;
      this.statusChangeSubscriptions.push(callback);
      if (errorsHandler) {
        this.statusChangeErrorSubscriptions.push(errorsHandler);
      }
      return function () {
        _this40.statusChangeSubscriptions = _this40.statusChangeSubscriptions.filter(function (item) {
          return item !== callback;
        });
        if (errorsHandler) {
          _this40.statusChangeErrorSubscriptions = _this40.statusChangeErrorSubscriptions.filter(function (item) {
            return item !== errorsHandler;
          });
        }
      };
    }
  }, {
    key: "connect",
    value: function connect(wallet, requestOrOptions) {
      var _this41 = this;
      var _a, _b;
      // TODO: remove deprecated method
      var options = {};
      if (_typeof(requestOrOptions) === 'object' && 'tonProof' in requestOrOptions) {
        options.request = requestOrOptions;
      }
      if (_typeof(requestOrOptions) === 'object' && ('openingDeadlineMS' in requestOrOptions || 'signal' in requestOrOptions || 'request' in requestOrOptions)) {
        options.request = requestOrOptions === null || requestOrOptions === void 0 ? void 0 : requestOrOptions.request;
        options.openingDeadlineMS = requestOrOptions === null || requestOrOptions === void 0 ? void 0 : requestOrOptions.openingDeadlineMS;
        options.signal = requestOrOptions === null || requestOrOptions === void 0 ? void 0 : requestOrOptions.signal;
      }
      if (this.connected) {
        throw new WalletAlreadyConnectedError();
      }
      var abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);
      (_a = this.abortController) === null || _a === void 0 ? void 0 : _a.abort();
      this.abortController = abortController;
      if (abortController.signal.aborted) {
        throw new TonConnectError('Connection was aborted');
      }
      (_b = this.provider) === null || _b === void 0 ? void 0 : _b.closeConnection();
      this.provider = this.createProvider(wallet);
      abortController.signal.addEventListener('abort', function () {
        var _a;
        (_a = _this41.provider) === null || _a === void 0 ? void 0 : _a.closeConnection();
        _this41.provider = null;
      });
      this.tracker.trackConnectionStarted();
      return this.provider.connect(this.createConnectRequest(options === null || options === void 0 ? void 0 : options.request), {
        openingDeadlineMS: options === null || options === void 0 ? void 0 : options.openingDeadlineMS,
        signal: abortController.signal
      });
    }
    /**
     * Try to restore existing session and reconnect to the corresponding wallet. Call it immediately when your app is loaded.
     */
  }, {
    key: "restoreConnection",
    value: function restoreConnection(options) {
      var _a, _b;
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee66() {
        var _this42 = this;
        var abortController, _yield$Promise$all, _yield$Promise$all2, bridgeConnectionType, embeddedWallet, provider, onAbortRestore, restoreConnectionTask, restoreConnectionTimeout;
        return _regeneratorRuntime().wrap(function _callee66$(_context66) {
          while (1) switch (_context66.prev = _context66.next) {
            case 0:
              this.tracker.trackConnectionRestoringStarted();
              abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);
              (_a = this.abortController) === null || _a === void 0 ? void 0 : _a.abort();
              this.abortController = abortController;
              if (!abortController.signal.aborted) {
                _context66.next = 7;
                break;
              }
              this.tracker.trackConnectionRestoringError('Connection restoring was aborted');
              return _context66.abrupt("return");
            case 7:
              _context66.next = 9;
              return Promise.all([this.bridgeConnectionStorage.storedConnectionType(), this.walletsList.getEmbeddedWallet()]);
            case 9:
              _yield$Promise$all = _context66.sent;
              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);
              bridgeConnectionType = _yield$Promise$all2[0];
              embeddedWallet = _yield$Promise$all2[1];
              if (!abortController.signal.aborted) {
                _context66.next = 16;
                break;
              }
              this.tracker.trackConnectionRestoringError('Connection restoring was aborted');
              return _context66.abrupt("return");
            case 16:
              provider = null;
              _context66.prev = 17;
              _context66.t0 = bridgeConnectionType;
              _context66.next = _context66.t0 === 'http' ? 21 : _context66.t0 === 'injected' ? 25 : 29;
              break;
            case 21:
              _context66.next = 23;
              return BridgeProvider.fromStorage(this.dappSettings.storage);
            case 23:
              provider = _context66.sent;
              return _context66.abrupt("break", 34);
            case 25:
              _context66.next = 27;
              return InjectedProvider.fromStorage(this.dappSettings.storage);
            case 27:
              provider = _context66.sent;
              return _context66.abrupt("break", 34);
            case 29:
              if (!embeddedWallet) {
                _context66.next = 33;
                break;
              }
              provider = this.createProvider(embeddedWallet);
              _context66.next = 34;
              break;
            case 33:
              return _context66.abrupt("return");
            case 34:
              _context66.next = 44;
              break;
            case 36:
              _context66.prev = 36;
              _context66.t1 = _context66["catch"](17);
              this.tracker.trackConnectionRestoringError('Provider is not restored');
              _context66.next = 41;
              return this.bridgeConnectionStorage.removeConnection();
            case 41:
              provider === null || provider === void 0 ? void 0 : provider.closeConnection();
              provider = null;
              return _context66.abrupt("return");
            case 44:
              if (!abortController.signal.aborted) {
                _context66.next = 48;
                break;
              }
              provider === null || provider === void 0 ? void 0 : provider.closeConnection();
              this.tracker.trackConnectionRestoringError('Connection restoring was aborted');
              return _context66.abrupt("return");
            case 48:
              if (provider) {
                _context66.next = 52;
                break;
              }
              logError('Provider is not restored');
              this.tracker.trackConnectionRestoringError('Provider is not restored');
              return _context66.abrupt("return");
            case 52:
              (_b = this.provider) === null || _b === void 0 ? void 0 : _b.closeConnection();
              this.provider = provider;
              provider.listen(this.walletEventsListener.bind(this));
              onAbortRestore = function onAbortRestore() {
                _this42.tracker.trackConnectionRestoringError('Connection restoring was aborted');
                provider === null || provider === void 0 ? void 0 : provider.closeConnection();
                provider = null;
              };
              abortController.signal.addEventListener('abort', onAbortRestore);
              restoreConnectionTask = callForSuccess(function (_options) {
                return __awaiter(_this42, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee65() {
                  return _regeneratorRuntime().wrap(function _callee65$(_context65) {
                    while (1) switch (_context65.prev = _context65.next) {
                      case 0:
                        _context65.next = 2;
                        return provider === null || provider === void 0 ? void 0 : provider.restoreConnection({
                          openingDeadlineMS: options === null || options === void 0 ? void 0 : options.openingDeadlineMS,
                          signal: _options.signal
                        });
                      case 2:
                        abortController.signal.removeEventListener('abort', onAbortRestore);
                        if (this.connected) {
                          this.tracker.trackConnectionRestoringCompleted(this.wallet);
                        } else {
                          this.tracker.trackConnectionRestoringError('Connection restoring failed');
                        }
                      case 4:
                      case "end":
                        return _context65.stop();
                    }
                  }, _callee65, this);
                }));
              }, {
                attempts: Number.MAX_SAFE_INTEGER,
                delayMs: 2000,
                signal: options === null || options === void 0 ? void 0 : options.signal
              });
              restoreConnectionTimeout = new Promise(function (resolve) {
                return setTimeout(function () {
                  return resolve();
                }, 12000);
              } // connection deadline
              );
              return _context66.abrupt("return", Promise.race([restoreConnectionTask, restoreConnectionTimeout]));
            case 60:
            case "end":
              return _context66.stop();
          }
        }, _callee66, this, [[17, 36]]);
      }));
    }
  }, {
    key: "sendTransaction",
    value: function sendTransaction(transaction, optionsOrOnRequestSent) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee67() {
        var options, abortController, validUntil, tx, from, network, response, result;
        return _regeneratorRuntime().wrap(function _callee67$(_context67) {
          while (1) switch (_context67.prev = _context67.next) {
            case 0:
              // TODO: remove deprecated method
              options = {};
              if (typeof optionsOrOnRequestSent === 'function') {
                options.onRequestSent = optionsOrOnRequestSent;
              } else {
                options.onRequestSent = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.onRequestSent;
                options.signal = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.signal;
              }
              abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);
              if (!abortController.signal.aborted) {
                _context67.next = 5;
                break;
              }
              throw new TonConnectError('Transaction sending was aborted');
            case 5:
              this.checkConnection();
              checkSendTransactionSupport(this.wallet.device.features, {
                requiredMessagesNumber: transaction.messages.length
              });
              this.tracker.trackTransactionSentForSignature(this.wallet, transaction);
              validUntil = transaction.validUntil, tx = __rest(transaction, ["validUntil"]);
              from = transaction.from || this.account.address;
              network = transaction.network || this.account.chain;
              _context67.next = 13;
              return this.provider.sendRequest(sendTransactionParser.convertToRpcRequest(Object.assign(Object.assign({}, tx), {
                valid_until: validUntil,
                from: from,
                network: network
              })), {
                onRequestSent: options.onRequestSent,
                signal: abortController.signal
              });
            case 13:
              response = _context67.sent;
              if (!sendTransactionParser.isError(response)) {
                _context67.next = 17;
                break;
              }
              this.tracker.trackTransactionSigningFailed(this.wallet, transaction, response.error.message, response.error.code);
              return _context67.abrupt("return", sendTransactionParser.parseAndThrowError(response));
            case 17:
              result = sendTransactionParser.convertFromRpcResponse(response);
              this.tracker.trackTransactionSigned(this.wallet, transaction, result);
              return _context67.abrupt("return", result);
            case 20:
            case "end":
              return _context67.stop();
          }
        }, _callee67, this);
      }));
    }
    /**
     * Disconnect form thw connected wallet and drop current session.
     */
  }, {
    key: "disconnect",
    value: function disconnect(options) {
      var _a;
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee68() {
        var abortController, prevAbortController;
        return _regeneratorRuntime().wrap(function _callee68$(_context68) {
          while (1) switch (_context68.prev = _context68.next) {
            case 0:
              if (this.connected) {
                _context68.next = 2;
                break;
              }
              throw new WalletNotConnectedError();
            case 2:
              abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);
              prevAbortController = this.abortController;
              this.abortController = abortController;
              if (!abortController.signal.aborted) {
                _context68.next = 7;
                break;
              }
              throw new TonConnectError('Disconnect was aborted');
            case 7:
              this.onWalletDisconnected('dapp');
              _context68.next = 10;
              return (_a = this.provider) === null || _a === void 0 ? void 0 : _a.disconnect({
                signal: abortController.signal
              });
            case 10:
              prevAbortController === null || prevAbortController === void 0 ? void 0 : prevAbortController.abort();
            case 11:
            case "end":
              return _context68.stop();
          }
        }, _callee68, this);
      }));
    }
    /**
     * Pause bridge HTTP connection. Might be helpful, if you want to pause connections while browser tab is unfocused,
     * or if you use SDK with NodeJS and want to save server resources.
     */
  }, {
    key: "pauseConnection",
    value: function pauseConnection() {
      var _a;
      if (((_a = this.provider) === null || _a === void 0 ? void 0 : _a.type) !== 'http') {
        return;
      }
      this.provider.pause();
    }
    /**
     * Unpause bridge HTTP connection if it is paused.
     */
  }, {
    key: "unPauseConnection",
    value: function unPauseConnection() {
      var _a;
      if (((_a = this.provider) === null || _a === void 0 ? void 0 : _a.type) !== 'http') {
        return Promise.resolve();
      }
      return this.provider.unPause();
    }
  }, {
    key: "addWindowFocusAndBlurSubscriptions",
    value: function addWindowFocusAndBlurSubscriptions() {
      var _this43 = this;
      var document = getDocument();
      if (!document) {
        return;
      }
      try {
        document.addEventListener('visibilitychange', function () {
          if (document.hidden) {
            _this43.pauseConnection();
          } else {
            _this43.unPauseConnection()["catch"]();
          }
        });
      } catch (e) {
        logError('Cannot subscribe to the document.visibilitychange: ', e);
      }
    }
  }, {
    key: "createProvider",
    value: function createProvider(wallet) {
      var provider;
      if (!Array.isArray(wallet) && isWalletConnectionSourceJS(wallet)) {
        provider = new InjectedProvider(this.dappSettings.storage, wallet.jsBridgeKey);
      } else {
        provider = new BridgeProvider(this.dappSettings.storage, wallet);
      }
      provider.listen(this.walletEventsListener.bind(this));
      return provider;
    }
  }, {
    key: "walletEventsListener",
    value: function walletEventsListener(e) {
      switch (e.event) {
        case 'connect':
          this.onWalletConnected(e.payload);
          break;
        case 'connect_error':
          this.onWalletConnectError(e.payload);
          break;
        case 'disconnect':
          this.onWalletDisconnected('wallet');
      }
    }
  }, {
    key: "onWalletConnected",
    value: function onWalletConnected(connectEvent) {
      var tonAccountItem = connectEvent.items.find(function (item) {
        return item.name === 'ton_addr';
      });
      var tonProofItem = connectEvent.items.find(function (item) {
        return item.name === 'ton_proof';
      });
      if (!tonAccountItem) {
        throw new TonConnectError('ton_addr connection item was not found');
      }
      var wallet = {
        device: connectEvent.device,
        provider: this.provider.type,
        account: {
          address: tonAccountItem.address,
          chain: tonAccountItem.network,
          walletStateInit: tonAccountItem.walletStateInit,
          publicKey: tonAccountItem.publicKey
        }
      };
      if (tonProofItem) {
        wallet.connectItems = {
          tonProof: tonProofItem
        };
      }
      this.wallet = wallet;
      this.tracker.trackConnectionCompleted(wallet);
    }
  }, {
    key: "onWalletConnectError",
    value: function onWalletConnectError(connectEventError) {
      var error = connectErrorsParser.parseError(connectEventError);
      this.statusChangeErrorSubscriptions.forEach(function (errorsHandler) {
        return errorsHandler(error);
      });
      logDebug(error);
      this.tracker.trackConnectionError(connectEventError.message, connectEventError.code);
      if (error instanceof ManifestNotFoundError || error instanceof ManifestContentErrorError) {
        logError(error);
        throw error;
      }
    }
  }, {
    key: "onWalletDisconnected",
    value: function onWalletDisconnected(scope) {
      this.tracker.trackDisconnection(this.wallet, scope);
      this.wallet = null;
    }
  }, {
    key: "checkConnection",
    value: function checkConnection() {
      if (!this.connected) {
        throw new WalletNotConnectedError();
      }
    }
  }, {
    key: "createConnectRequest",
    value: function createConnectRequest(request) {
      var items = [{
        name: 'ton_addr'
      }];
      if (request === null || request === void 0 ? void 0 : request.tonProof) {
        items.push({
          name: 'ton_proof',
          payload: request.tonProof
        });
      }
      return {
        manifestUrl: this.dappSettings.manifestUrl,
        items: items
      };
    }
  }], [{
    key: "getWallets",
    value: function getWallets() {
      return this.walletsList.getWallets();
    }
  }]);
}();
TonConnect.walletsList = new WalletsListManager();
/**
 * Check if specified wallet is injected and available to use with the app.
 * @param walletJSKey target wallet's js bridge key.
 */
TonConnect.isWalletInjected = function (walletJSKey) {
  return InjectedProvider.isWalletInjected(walletJSKey);
};
/**
 * Check if the app is opened inside specified wallet's browser.
 * @param walletJSKey target wallet's js bridge key.
 */
TonConnect.isInsideWalletBrowser = function (walletJSKey) {
  return InjectedProvider.isInsideWalletBrowser(walletJSKey);
};
var noBounceableTag = 0x51;
var testOnlyTag = 0x80;
/**
 * Converts raw TON address to no-bounceable user-friendly format. [See details]{@link https://ton.org/docs/learn/overviews/addresses#user-friendly-address}
 * @param hexAddress raw TON address formatted as "0:<hex string without 0x>".
 * @param [testOnly=false] convert address to test-only form. [See details]{@link https://ton.org/docs/learn/overviews/addresses#user-friendly-address}
 */
function toUserFriendlyAddress(hexAddress) {
  var testOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var _parseHexAddress = parseHexAddress(hexAddress),
    wc = _parseHexAddress.wc,
    hex = _parseHexAddress.hex;
  var tag = noBounceableTag;
  if (testOnly) {
    tag |= testOnlyTag;
  }
  var addr = new Int8Array(34);
  addr[0] = tag;
  addr[1] = wc;
  addr.set(hex, 2);
  var addressWithChecksum = new Uint8Array(36);
  addressWithChecksum.set(addr);
  addressWithChecksum.set(crc16(addr), 34);
  var addressBase64 = _protocol.Base64.encode(addressWithChecksum);
  return addressBase64.replace(/\+/g, '-').replace(/\//g, '_');
}
function parseHexAddress(hexAddress) {
  if (!hexAddress.includes(':')) {
    throw new WrongAddressError("Wrong address ".concat(hexAddress, ". Address must include \":\"."));
  }
  var parts = hexAddress.split(':');
  if (parts.length !== 2) {
    throw new WrongAddressError("Wrong address ".concat(hexAddress, ". Address must include \":\" only once."));
  }
  var wc = parseInt(parts[0]);
  if (wc !== 0 && wc !== -1) {
    throw new WrongAddressError("Wrong address ".concat(hexAddress, ". WC must be eq 0 or -1, but ").concat(wc, " received."));
  }
  var hex = parts[1];
  if ((hex === null || hex === void 0 ? void 0 : hex.length) !== 64) {
    throw new WrongAddressError("Wrong address ".concat(hexAddress, ". Hex part must be 64bytes length, but ").concat(hex === null || hex === void 0 ? void 0 : hex.length, " received."));
  }
  return {
    wc: wc,
    hex: hexToBytes(hex)
  };
}
function crc16(data) {
  var poly = 0x1021;
  var reg = 0;
  var message = new Uint8Array(data.length + 2);
  message.set(data);
  var _iterator = _createForOfIteratorHelper(message),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var _byte = _step.value;
      var mask = 0x80;
      while (mask > 0) {
        reg <<= 1;
        if (_byte & mask) {
          reg += 1;
        }
        mask >>= 1;
        if (reg > 0xffff) {
          reg &= 0xffff;
          reg ^= poly;
        }
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return new Uint8Array([Math.floor(reg / 256), reg % 256]);
}
var toByteMap = {};
for (var ord = 0; ord <= 0xff; ord++) {
  var s = ord.toString(16);
  if (s.length < 2) {
    s = '0' + s;
  }
  toByteMap[s] = ord;
}
function hexToBytes(hex) {
  hex = hex.toLowerCase();
  var length2 = hex.length;
  if (length2 % 2 !== 0) {
    throw new ParseHexError('Hex string must have length a multiple of 2: ' + hex);
  }
  var length = length2 / 2;
  var result = new Uint8Array(length);
  for (var i = 0; i < length; i++) {
    var doubled = i * 2;
    var hexSubstring = hex.substring(doubled, doubled + 2);
    if (!toByteMap.hasOwnProperty(hexSubstring)) {
      throw new ParseHexError('Invalid hex character: ' + hexSubstring);
    }
    result[i] = toByteMap[hexSubstring];
  }
  return result;
}

}).call(this)}).call(this,require('_process'))
},{"@tonconnect/isomorphic-eventsource":139,"@tonconnect/isomorphic-fetch":140,"@tonconnect/protocol":141,"_process":203}],143:[function(require,module,exports){
(function (process){(function (){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  THEME: true,
  TonConnectUI: true,
  TonConnectUIError: true
};
exports.TonConnectUIError = exports.TonConnectUI = exports.THEME = void 0;
var _sdk = require("@tonconnect/sdk");
Object.keys(_sdk).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _sdk[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _sdk[key];
    }
  });
});
var _uaParserJs = _interopRequireDefault(require("ua-parser-js"));
var _deepmerge = _interopRequireDefault(require("deepmerge"));
var _classnames = _interopRequireDefault(require("classnames"));
var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19, _templateObject20, _templateObject21, _templateObject22, _templateObject23, _templateObject24, _templateObject25, _templateObject26, _templateObject27, _templateObject28, _templateObject29, _templateObject30, _templateObject31, _templateObject32, _templateObject33, _templateObject34, _templateObject35, _templateObject36, _templateObject37, _templateObject38, _templateObject39, _templateObject40, _templateObject41, _templateObject42, _templateObject43, _templateObject44, _templateObject45, _templateObject46, _templateObject47, _templateObject48, _templateObject49, _templateObject50, _templateObject51, _templateObject52, _templateObject53, _templateObject54, _templateObject55, _templateObject56, _templateObject57, _templateObject58, _templateObject59, _templateObject60, _templateObject61, _templateObject62, _templateObject63, _templateObject64, _templateObject65, _templateObject66, _templateObject67, _templateObject68, _templateObject69, _templateObject70, _templateObject71, _templateObject72, _templateObject73, _templateObject74, _templateObject75, _templateObject76, _templateObject77, _templateObject78, _templateObject79, _templateObject80, _templateObject81, _templateObject82, _templateObject83, _templateObject84, _templateObject85, _templateObject86, _templateObject87, _templateObject88, _templateObject89, _templateObject90, _templateObject91, _templateObject92, _templateObject93, _templateObject94, _templateObject95, _templateObject96, _templateObject97, _templateObject98, _templateObject99, _templateObject100, _templateObject101, _templateObject102, _templateObject103, _templateObject104, _templateObject105, _templateObject106, _templateObject107, _templateObject108, _templateObject109, _templateObject110, _templateObject111, _templateObject112, _templateObject113, _templateObject114, _templateObject115, _templateObject116, _templateObject117, _templateObject118, _templateObject119, _templateObject120, _templateObject121, _templateObject122, _templateObject123, _templateObject124, _templateObject125, _templateObject126, _templateObject127, _templateObject128, _templateObject129, _templateObject130, _templateObject131, _templateObject132, _templateObject133, _templateObject134, _templateObject135, _templateObject136;
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _defineAccessor(e, r, n, t) { var c = { configurable: !0, enumerable: !0 }; return c[e] = t, Object.defineProperty(r, n, c); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function _wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return _wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return _construct(t, arguments, _getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf(Wrapper, t); }, _wrapNativeSuper(t); }
function _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }
function _isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _taggedTemplateLiteral(e, t) { return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } })); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = function __defNormalProp(obj, key, value) {
  return key in obj ? __defProp(obj, key, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
  }) : obj[key] = value;
};
var __spreadValues = function __spreadValues(a2, b) {
  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a2, prop, b[prop]);
  if (__getOwnPropSymbols) {
    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var prop = _step.value;
        if (__propIsEnum.call(b, prop)) __defNormalProp(a2, prop, b[prop]);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  return a2;
};
var __spreadProps = function __spreadProps(a2, b) {
  return __defProps(a2, __getOwnPropDescs(b));
};
var __publicField = function __publicField(obj, key, value) {
  __defNormalProp(obj, _typeof(key) !== "symbol" ? key + "" : key, value);
  return value;
};
var __async = function __async(__this, __arguments, generator) {
  return new Promise(function (resolve, reject) {
    var fulfilled = function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    };
    var rejected = function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    };
    var step = function step(x) {
      return x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    };
    step((generator = generator.apply(__this, __arguments)).next());
  });
};
var _a, _b, _c, _d, _e, _f, _g, _h;
var sharedConfig = {};
function setHydrateContext(context) {
  sharedConfig.context = context;
}
var equalFn = function equalFn(a2, b) {
  return a2 === b;
};
var $PROXY = Symbol("solid-proxy");
var $TRACK = Symbol("solid-track");
var signalOptions = {
  equals: equalFn
};
var runEffects = runQueue;
var STALE = 1;
var PENDING = 2;
var UNOWNED = {
  owned: null,
  cleanups: null,
  context: null,
  owner: null
};
var NO_INIT = {};
var Owner = null;
var Transition$1 = null;
var Listener = null;
var Updates = null;
var Effects = null;
var ExecCount = 0;
function createRoot(fn, detachedOwner) {
  var listener = Listener,
    owner = Owner,
    unowned = fn.length === 0,
    root = unowned ? UNOWNED : {
      owned: null,
      cleanups: null,
      context: null,
      owner: detachedOwner === void 0 ? owner : detachedOwner
    },
    updateFn = unowned ? fn : function () {
      return fn(function () {
        return untrack(function () {
          return cleanNode(root);
        });
      });
    };
  Owner = root;
  Listener = null;
  try {
    return runUpdates(updateFn, true);
  } finally {
    Listener = listener;
    Owner = owner;
  }
}
function createSignal(value, options) {
  options = options ? Object.assign({}, signalOptions, options) : signalOptions;
  var s2 = {
    value: value,
    observers: null,
    observerSlots: null,
    comparator: options.equals || void 0
  };
  var setter = function setter(value2) {
    if (typeof value2 === "function") {
      value2 = value2(s2.value);
    }
    return writeSignal(s2, value2);
  };
  return [readSignal.bind(s2), setter];
}
function createComputed(fn, value, options) {
  var c2 = createComputation(fn, value, true, STALE);
  updateComputation(c2);
}
function createRenderEffect(fn, value, options) {
  var c2 = createComputation(fn, value, false, STALE);
  updateComputation(c2);
}
function createEffect(fn, value, options) {
  runEffects = runUserEffects;
  var c2 = createComputation(fn, value, false, STALE);
  c2.user = true;
  Effects ? Effects.push(c2) : updateComputation(c2);
}
function createMemo(fn, value, options) {
  options = options ? Object.assign({}, signalOptions, options) : signalOptions;
  var c2 = createComputation(fn, value, true, 0);
  c2.observers = null;
  c2.observerSlots = null;
  c2.comparator = options.equals || void 0;
  updateComputation(c2);
  return readSignal.bind(c2);
}
function createResource(pSource, pFetcher, pOptions) {
  var source;
  var fetcher;
  var options;
  if (arguments.length === 2 && _typeof(pFetcher) === "object" || arguments.length === 1) {
    source = true;
    fetcher = pSource;
    options = pFetcher || {};
  } else {
    source = pSource;
    fetcher = pFetcher;
    options = pOptions || {};
  }
  var pr = null,
    initP = NO_INIT,
    id = null,
    scheduled = false,
    resolved = "initialValue" in options,
    dynamic = typeof source === "function" && createMemo(source);
  var contexts = /* @__PURE__ */new Set(),
    _ref2 = (options.storage || createSignal)(options.initialValue),
    _ref3 = _slicedToArray(_ref2, 2),
    value = _ref3[0],
    setValue = _ref3[1],
    _createSignal = createSignal(void 0),
    _createSignal2 = _slicedToArray(_createSignal, 2),
    error = _createSignal2[0],
    setError = _createSignal2[1],
    _createSignal3 = createSignal(void 0, {
      equals: false
    }),
    _createSignal4 = _slicedToArray(_createSignal3, 2),
    track = _createSignal4[0],
    trigger = _createSignal4[1],
    _createSignal5 = createSignal(resolved ? "ready" : "unresolved"),
    _createSignal6 = _slicedToArray(_createSignal5, 2),
    state = _createSignal6[0],
    setState = _createSignal6[1];
  if (sharedConfig.context) {
    id = "".concat(sharedConfig.context.id).concat(sharedConfig.context.count++);
    var v;
    if (options.ssrLoadFrom === "initial") initP = options.initialValue;else if (sharedConfig.load && (v = sharedConfig.load(id))) initP = v[0];
  }
  function loadEnd(p2, v, error2, key) {
    if (pr === p2) {
      pr = null;
      resolved = true;
      if ((p2 === initP || v === initP) && options.onHydrated) queueMicrotask(function () {
        return options.onHydrated(key, {
          value: v
        });
      });
      initP = NO_INIT;
      completeLoad(v, error2);
    }
    return v;
  }
  function completeLoad(v, err) {
    runUpdates(function () {
      if (err === void 0) setValue(function () {
        return v;
      });
      setState(err !== void 0 ? "errored" : "ready");
      setError(err);
      var _iterator2 = _createForOfIteratorHelper(contexts.keys()),
        _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var c2 = _step2.value;
          c2.decrement();
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      contexts.clear();
    }, false);
  }
  function read() {
    var c2 = SuspenseContext,
      v = value(),
      err = error();
    if (err !== void 0 && !pr) throw err;
    if (Listener && !Listener.user && c2) {
      createComputed(function () {
        track();
        if (pr) {
          if (c2.resolved) ;else if (!contexts.has(c2)) {
            c2.increment();
            contexts.add(c2);
          }
        }
      });
    }
    return v;
  }
  function load() {
    var refetching = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
    if (refetching !== false && scheduled) return;
    scheduled = false;
    var lookup2 = dynamic ? dynamic() : source;
    if (lookup2 == null || lookup2 === false) {
      loadEnd(pr, untrack(value));
      return;
    }
    var p2 = initP !== NO_INIT ? initP : untrack(function () {
      return fetcher(lookup2, {
        value: value(),
        refetching: refetching
      });
    });
    if (_typeof(p2) !== "object" || !(p2 && "then" in p2)) {
      loadEnd(pr, p2, void 0, lookup2);
      return p2;
    }
    pr = p2;
    scheduled = true;
    queueMicrotask(function () {
      return scheduled = false;
    });
    runUpdates(function () {
      setState(resolved ? "refreshing" : "pending");
      trigger();
    }, false);
    return p2.then(function (v) {
      return loadEnd(p2, v, void 0, lookup2);
    }, function (e2) {
      return loadEnd(p2, void 0, castError(e2), lookup2);
    });
  }
  Object.defineProperties(read, {
    state: {
      get: function get() {
        return state();
      }
    },
    error: {
      get: function get() {
        return error();
      }
    },
    loading: {
      get: function get() {
        var s2 = state();
        return s2 === "pending" || s2 === "refreshing";
      }
    },
    latest: {
      get: function get() {
        if (!resolved) return read();
        var err = error();
        if (err && !pr) throw err;
        return value();
      }
    }
  });
  if (dynamic) createComputed(function () {
    return load(false);
  });else load(false);
  return [read, {
    refetch: load,
    mutate: setValue
  }];
}
function batch(fn) {
  return runUpdates(fn, false);
}
function untrack(fn) {
  if (Listener === null) return fn();
  var listener = Listener;
  Listener = null;
  try {
    return fn();
  } finally {
    Listener = listener;
  }
}
function on(deps, fn, options) {
  var isArray = Array.isArray(deps);
  var prevInput;
  var defer = options && options.defer;
  return function (prevValue) {
    var input;
    if (isArray) {
      input = Array(deps.length);
      for (var i2 = 0; i2 < deps.length; i2++) input[i2] = deps[i2]();
    } else input = deps();
    if (defer) {
      defer = false;
      return void 0;
    }
    var result = untrack(function () {
      return fn(input, prevInput, prevValue);
    });
    prevInput = input;
    return result;
  };
}
function onMount(fn) {
  createEffect(function () {
    return untrack(fn);
  });
}
function onCleanup(fn) {
  if (Owner === null) ;else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);
  return fn;
}
function getListener() {
  return Listener;
}
function getOwner() {
  return Owner;
}
function createContext(defaultValue, options) {
  var id = Symbol("context");
  return {
    id: id,
    Provider: createProvider(id),
    defaultValue: defaultValue
  };
}
function useContext(context) {
  var ctx;
  return (ctx = lookup(Owner, context.id)) !== void 0 ? ctx : context.defaultValue;
}
function children(fn) {
  var children2 = createMemo(fn);
  var memo = createMemo(function () {
    return resolveChildren(children2());
  });
  memo.toArray = function () {
    var c2 = memo();
    return Array.isArray(c2) ? c2 : c2 != null ? [c2] : [];
  };
  return memo;
}
var SuspenseContext;
function readSignal() {
  var _this3 = this;
  var runningTransition = Transition$1;
  if (this.sources && (this.state || runningTransition)) {
    if (this.state === STALE || runningTransition) updateComputation(this);else {
      var updates = Updates;
      Updates = null;
      runUpdates(function () {
        return lookUpstream(_this3);
      }, false);
      Updates = updates;
    }
  }
  if (Listener) {
    var sSlot = this.observers ? this.observers.length : 0;
    if (!Listener.sources) {
      Listener.sources = [this];
      Listener.sourceSlots = [sSlot];
    } else {
      Listener.sources.push(this);
      Listener.sourceSlots.push(sSlot);
    }
    if (!this.observers) {
      this.observers = [Listener];
      this.observerSlots = [Listener.sources.length - 1];
    } else {
      this.observers.push(Listener);
      this.observerSlots.push(Listener.sources.length - 1);
    }
  }
  return this.value;
}
function writeSignal(node, value, isComp) {
  var current = node.value;
  if (!node.comparator || !node.comparator(current, value)) {
    node.value = value;
    if (node.observers && node.observers.length) {
      runUpdates(function () {
        for (var i2 = 0; i2 < node.observers.length; i2 += 1) {
          var o2 = node.observers[i2];
          var TransitionRunning = Transition$1 && Transition$1.running;
          if (TransitionRunning && Transition$1.disposed.has(o2)) ;
          if (TransitionRunning && !o2.tState || !TransitionRunning && !o2.state) {
            if (o2.pure) Updates.push(o2);else Effects.push(o2);
            if (o2.observers) markDownstream(o2);
          }
          if (TransitionRunning) ;else o2.state = STALE;
        }
        if (Updates.length > 1e6) {
          Updates = [];
          if (false) ;
          throw new Error();
        }
      }, false);
    }
  }
  return value;
}
function updateComputation(node) {
  if (!node.fn) return;
  cleanNode(node);
  var owner = Owner,
    listener = Listener,
    time = ExecCount;
  Listener = Owner = node;
  runComputation(node, node.value, time);
  Listener = listener;
  Owner = owner;
}
function runComputation(node, value, time) {
  var nextValue;
  try {
    nextValue = node.fn(value);
  } catch (err) {
    if (node.pure) {
      {
        node.state = STALE;
        node.owned && node.owned.forEach(cleanNode);
        node.owned = null;
      }
    }
    handleError(err);
  }
  if (!node.updatedAt || node.updatedAt <= time) {
    if (node.updatedAt != null && "observers" in node) {
      writeSignal(node, nextValue);
    } else node.value = nextValue;
    node.updatedAt = time;
  }
}
function createComputation(fn, init, pure) {
  var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : STALE;
  var options = arguments.length > 4 ? arguments[4] : undefined;
  var c2 = {
    fn: fn,
    state: state,
    updatedAt: null,
    owned: null,
    sources: null,
    sourceSlots: null,
    cleanups: null,
    value: init,
    owner: Owner,
    context: null,
    pure: pure
  };
  if (Owner === null) ;else if (Owner !== UNOWNED) {
    {
      if (!Owner.owned) Owner.owned = [c2];else Owner.owned.push(c2);
    }
  }
  return c2;
}
function runTop(node) {
  var runningTransition = Transition$1;
  if (node.state === 0 || runningTransition) return;
  if (node.state === PENDING || runningTransition) return lookUpstream(node);
  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);
  var ancestors = [node];
  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {
    if (node.state || runningTransition) ancestors.push(node);
  }
  for (var i2 = ancestors.length - 1; i2 >= 0; i2--) {
    node = ancestors[i2];
    if (node.state === STALE || runningTransition) {
      updateComputation(node);
    } else if (node.state === PENDING || runningTransition) {
      var updates = Updates;
      Updates = null;
      runUpdates(function () {
        return lookUpstream(node, ancestors[0]);
      }, false);
      Updates = updates;
    }
  }
}
function runUpdates(fn, init) {
  if (Updates) return fn();
  var wait = false;
  if (!init) Updates = [];
  if (Effects) wait = true;else Effects = [];
  ExecCount++;
  try {
    var res = fn();
    completeUpdates(wait);
    return res;
  } catch (err) {
    if (!wait) Effects = null;
    Updates = null;
    handleError(err);
  }
}
function completeUpdates(wait) {
  if (Updates) {
    runQueue(Updates);
    Updates = null;
  }
  if (wait) return;
  var e2 = Effects;
  Effects = null;
  if (e2.length) runUpdates(function () {
    return runEffects(e2);
  }, false);
}
function runQueue(queue) {
  for (var i2 = 0; i2 < queue.length; i2++) runTop(queue[i2]);
}
function runUserEffects(queue) {
  var i2,
    userLength = 0;
  for (i2 = 0; i2 < queue.length; i2++) {
    var e2 = queue[i2];
    if (!e2.user) runTop(e2);else queue[userLength++] = e2;
  }
  if (sharedConfig.context) setHydrateContext();
  for (i2 = 0; i2 < userLength; i2++) runTop(queue[i2]);
}
function lookUpstream(node, ignore) {
  var runningTransition = Transition$1;
  node.state = 0;
  for (var i2 = 0; i2 < node.sources.length; i2 += 1) {
    var source = node.sources[i2];
    if (source.sources) {
      if (source.state === STALE || runningTransition) {
        if (source !== ignore) runTop(source);
      } else if (source.state === PENDING || runningTransition) lookUpstream(source, ignore);
    }
  }
}
function markDownstream(node) {
  var runningTransition = Transition$1;
  for (var i2 = 0; i2 < node.observers.length; i2 += 1) {
    var o2 = node.observers[i2];
    if (!o2.state || runningTransition) {
      o2.state = PENDING;
      if (o2.pure) Updates.push(o2);else Effects.push(o2);
      o2.observers && markDownstream(o2);
    }
  }
}
function cleanNode(node) {
  var i2;
  if (node.sources) {
    while (node.sources.length) {
      var source = node.sources.pop(),
        index = node.sourceSlots.pop(),
        obs = source.observers;
      if (obs && obs.length) {
        var n2 = obs.pop(),
          s2 = source.observerSlots.pop();
        if (index < obs.length) {
          n2.sourceSlots[s2] = index;
          obs[index] = n2;
          source.observerSlots[index] = s2;
        }
      }
    }
  }
  if (node.owned) {
    for (i2 = 0; i2 < node.owned.length; i2++) cleanNode(node.owned[i2]);
    node.owned = null;
  }
  if (node.cleanups) {
    for (i2 = 0; i2 < node.cleanups.length; i2++) node.cleanups[i2]();
    node.cleanups = null;
  }
  node.state = 0;
  node.context = null;
}
function castError(err) {
  if (err instanceof Error || typeof err === "string") return err;
  return new Error("Unknown error");
}
function handleError(err) {
  err = castError(err);
  throw err;
}
function lookup(owner, key) {
  return owner ? owner.context && owner.context[key] !== void 0 ? owner.context[key] : lookup(owner.owner, key) : void 0;
}
function resolveChildren(children2) {
  if (typeof children2 === "function" && !children2.length) return resolveChildren(children2());
  if (Array.isArray(children2)) {
    var results = [];
    for (var i2 = 0; i2 < children2.length; i2++) {
      var result = resolveChildren(children2[i2]);
      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);
    }
    return results;
  }
  return children2;
}
function createProvider(id, options) {
  return function provider(props) {
    var res;
    createRenderEffect(function () {
      return res = untrack(function () {
        Owner.context = _defineProperty({}, id, props.value);
        return children(function () {
          return props.children;
        });
      });
    }, void 0);
    return res;
  };
}
var FALLBACK = Symbol("fallback");
function dispose(d) {
  for (var i2 = 0; i2 < d.length; i2++) d[i2]();
}
function mapArray(list, mapFn) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var items = [],
    mapped = [],
    disposers = [],
    len = 0,
    indexes = mapFn.length > 1 ? [] : null;
  onCleanup(function () {
    return dispose(disposers);
  });
  return function () {
    var newItems = list() || [],
      i2,
      j;
    newItems[$TRACK];
    return untrack(function () {
      var newLen = newItems.length,
        newIndices,
        newIndicesNext,
        temp,
        tempdisposers,
        tempIndexes,
        start,
        end,
        newEnd,
        item;
      if (newLen === 0) {
        if (len !== 0) {
          dispose(disposers);
          disposers = [];
          items = [];
          mapped = [];
          len = 0;
          indexes && (indexes = []);
        }
        if (options.fallback) {
          items = [FALLBACK];
          mapped[0] = createRoot(function (disposer) {
            disposers[0] = disposer;
            return options.fallback();
          });
          len = 1;
        }
      } else if (len === 0) {
        mapped = new Array(newLen);
        for (j = 0; j < newLen; j++) {
          items[j] = newItems[j];
          mapped[j] = createRoot(mapper);
        }
        len = newLen;
      } else {
        temp = new Array(newLen);
        tempdisposers = new Array(newLen);
        indexes && (tempIndexes = new Array(newLen));
        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);
        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {
          temp[newEnd] = mapped[end];
          tempdisposers[newEnd] = disposers[end];
          indexes && (tempIndexes[newEnd] = indexes[end]);
        }
        newIndices = /* @__PURE__ */new Map();
        newIndicesNext = new Array(newEnd + 1);
        for (j = newEnd; j >= start; j--) {
          item = newItems[j];
          i2 = newIndices.get(item);
          newIndicesNext[j] = i2 === void 0 ? -1 : i2;
          newIndices.set(item, j);
        }
        for (i2 = start; i2 <= end; i2++) {
          item = items[i2];
          j = newIndices.get(item);
          if (j !== void 0 && j !== -1) {
            temp[j] = mapped[i2];
            tempdisposers[j] = disposers[i2];
            indexes && (tempIndexes[j] = indexes[i2]);
            j = newIndicesNext[j];
            newIndices.set(item, j);
          } else disposers[i2]();
        }
        for (j = start; j < newLen; j++) {
          if (j in temp) {
            mapped[j] = temp[j];
            disposers[j] = tempdisposers[j];
            if (indexes) {
              indexes[j] = tempIndexes[j];
              indexes[j](j);
            }
          } else mapped[j] = createRoot(mapper);
        }
        mapped = mapped.slice(0, len = newLen);
        items = newItems.slice(0);
      }
      return mapped;
    });
    function mapper(disposer) {
      disposers[j] = disposer;
      if (indexes) {
        var _createSignal7 = createSignal(j),
          _createSignal8 = _slicedToArray(_createSignal7, 2),
          s2 = _createSignal8[0],
          set = _createSignal8[1];
        indexes[j] = set;
        return mapFn(newItems[j], s2);
      }
      return mapFn(newItems[j]);
    }
  };
}
function createComponent(Comp, props) {
  return untrack(function () {
    return Comp(props || {});
  });
}
function trueFn() {
  return true;
}
var propTraps = {
  get: function get(_, property, receiver) {
    if (property === $PROXY) return receiver;
    return _.get(property);
  },
  has: function has(_, property) {
    if (property === $PROXY) return true;
    return _.has(property);
  },
  set: trueFn,
  deleteProperty: trueFn,
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(_, property) {
    return {
      configurable: true,
      enumerable: true,
      get: function get() {
        return _.get(property);
      },
      set: trueFn,
      deleteProperty: trueFn
    };
  },
  ownKeys: function ownKeys(_) {
    return _.keys();
  }
};
function resolveSource(s2) {
  return !(s2 = typeof s2 === "function" ? s2() : s2) ? {} : s2;
}
function mergeProps() {
  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {
    sources[_key] = arguments[_key];
  }
  var proxy = false;
  for (var i2 = 0; i2 < sources.length; i2++) {
    var s2 = sources[i2];
    proxy = proxy || !!s2 && $PROXY in s2;
    sources[i2] = typeof s2 === "function" ? (proxy = true, createMemo(s2)) : s2;
  }
  if (proxy) {
    return new Proxy({
      get: function get(property) {
        for (var _i = sources.length - 1; _i >= 0; _i--) {
          var v = resolveSource(sources[_i])[property];
          if (v !== void 0) return v;
        }
      },
      has: function has(property) {
        for (var _i2 = sources.length - 1; _i2 >= 0; _i2--) {
          if (property in resolveSource(sources[_i2])) return true;
        }
        return false;
      },
      keys: function keys() {
        var keys = [];
        for (var _i3 = 0; _i3 < sources.length; _i3++) keys.push.apply(keys, _toConsumableArray(Object.keys(resolveSource(sources[_i3]))));
        return _toConsumableArray(new Set(keys));
      }
    }, propTraps);
  }
  var target = {};
  for (var _i4 = sources.length - 1; _i4 >= 0; _i4--) {
    if (sources[_i4]) {
      var descriptors = Object.getOwnPropertyDescriptors(sources[_i4]);
      var _loop = function _loop(key) {
        if (key in target) return 1; // continue
        Object.defineProperty(target, key, {
          enumerable: true,
          get: function get() {
            for (var i3 = sources.length - 1; i3 >= 0; i3--) {
              var v = (sources[i3] || {})[key];
              if (v !== void 0) return v;
            }
          }
        });
      };
      for (var key in descriptors) {
        if (_loop(key)) continue;
      }
    }
  }
  return target;
}
function splitProps(props) {
  for (var _len2 = arguments.length, keys = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    keys[_key2 - 1] = arguments[_key2];
  }
  var blocked = new Set(keys.flat());
  if ($PROXY in props) {
    var res = keys.map(function (k) {
      return new Proxy({
        get: function get(property) {
          return k.includes(property) ? props[property] : void 0;
        },
        has: function has(property) {
          return k.includes(property) && property in props;
        },
        keys: function keys() {
          return k.filter(function (property) {
            return property in props;
          });
        }
      }, propTraps);
    });
    res.push(new Proxy({
      get: function get(property) {
        return blocked.has(property) ? void 0 : props[property];
      },
      has: function has(property) {
        return blocked.has(property) ? false : property in props;
      },
      keys: function keys() {
        return Object.keys(props).filter(function (k) {
          return !blocked.has(k);
        });
      }
    }, propTraps));
    return res;
  }
  var descriptors = Object.getOwnPropertyDescriptors(props);
  keys.push(Object.keys(descriptors).filter(function (k) {
    return !blocked.has(k);
  }));
  return keys.map(function (k) {
    var clone = {};
    var _loop2 = function _loop2() {
      var key = k[i2];
      if (!(key in props)) return 1; // continue
      Object.defineProperty(clone, key, descriptors[key] ? descriptors[key] : {
        get: function get() {
          return props[key];
        },
        set: function set() {
          return true;
        },
        enumerable: true
      });
    };
    for (var i2 = 0; i2 < k.length; i2++) {
      if (_loop2()) continue;
    }
    return clone;
  });
}
function For(props) {
  var fallback = "fallback" in props && {
    fallback: function fallback() {
      return props.fallback;
    }
  };
  return createMemo(mapArray(function () {
    return props.each;
  }, props.children, fallback || void 0));
}
function Show(props) {
  var strictEqual = false;
  var keyed = props.keyed;
  var condition = createMemo(function () {
    return props.when;
  }, void 0, {
    equals: function equals(a2, b) {
      return strictEqual ? a2 === b : !a2 === !b;
    }
  });
  return createMemo(function () {
    var c2 = condition();
    if (c2) {
      var child = props.children;
      var fn = typeof child === "function" && child.length > 0;
      strictEqual = keyed || fn;
      return fn ? untrack(function () {
        return child(c2);
      }) : child;
    }
    return props.fallback;
  }, void 0, void 0);
}
function Switch(props) {
  var strictEqual = false;
  var keyed = false;
  var equals = function equals(a2, b) {
    return a2[0] === b[0] && (strictEqual ? a2[1] === b[1] : !a2[1] === !b[1]) && a2[2] === b[2];
  };
  var conditions = children(function () {
      return props.children;
    }),
    evalConditions = createMemo(function () {
      var conds = conditions();
      if (!Array.isArray(conds)) conds = [conds];
      for (var i2 = 0; i2 < conds.length; i2++) {
        var c2 = conds[i2].when;
        if (c2) {
          keyed = !!conds[i2].keyed;
          return [i2, c2, conds[i2]];
        }
      }
      return [-1];
    }, void 0, {
      equals: equals
    });
  return createMemo(function () {
    var _evalConditions = evalConditions(),
      _evalConditions2 = _slicedToArray(_evalConditions, 3),
      index = _evalConditions2[0],
      when = _evalConditions2[1],
      cond = _evalConditions2[2];
    if (index < 0) return props.fallback;
    var c2 = cond.children;
    var fn = typeof c2 === "function" && c2.length > 0;
    strictEqual = keyed || fn;
    return fn ? untrack(function () {
      return c2(when);
    }) : c2;
  }, void 0, void 0);
}
function Match(props) {
  return props;
}
var booleans = ["allowfullscreen", "async", "autofocus", "autoplay", "checked", "controls", "default", "disabled", "formnovalidate", "hidden", "indeterminate", "ismap", "loop", "multiple", "muted", "nomodule", "novalidate", "open", "playsinline", "readonly", "required", "reversed", "seamless", "selected"];
var Properties = /* @__PURE__ */new Set(["className", "value", "readOnly", "formNoValidate", "isMap", "noModule", "playsInline"].concat(booleans));
var ChildProperties = /* @__PURE__ */new Set(["innerHTML", "textContent", "innerText", "children"]);
var Aliases = /* @__PURE__ */Object.assign(/* @__PURE__ */Object.create(null), {
  className: "class",
  htmlFor: "for"
});
var PropAliases = /* @__PURE__ */Object.assign(/* @__PURE__ */Object.create(null), {
  "class": "className",
  formnovalidate: "formNoValidate",
  ismap: "isMap",
  nomodule: "noModule",
  playsinline: "playsInline",
  readonly: "readOnly"
});
var DelegatedEvents = /* @__PURE__ */new Set(["beforeinput", "click", "dblclick", "contextmenu", "focusin", "focusout", "input", "keydown", "keyup", "mousedown", "mousemove", "mouseout", "mouseover", "mouseup", "pointerdown", "pointermove", "pointerout", "pointerover", "pointerup", "touchend", "touchmove", "touchstart"]);
var SVGElements = /* @__PURE__ */new Set(["altGlyph", "altGlyphDef", "altGlyphItem", "animate", "animateColor", "animateMotion", "animateTransform", "circle", "clipPath", "color-profile", "cursor", "defs", "desc", "ellipse", "feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence", "filter", "font", "font-face", "font-face-format", "font-face-name", "font-face-src", "font-face-uri", "foreignObject", "g", "glyph", "glyphRef", "hkern", "image", "line", "linearGradient", "marker", "mask", "metadata", "missing-glyph", "mpath", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "set", "stop", "svg", "switch", "symbol", "text", "textPath", "tref", "tspan", "use", "view", "vkern"]);
var SVGNamespace = {
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace"
};
function reconcileArrays(parentNode, a2, b) {
  var bLength = b.length,
    aEnd = a2.length,
    bEnd = bLength,
    aStart = 0,
    bStart = 0,
    after = a2[aEnd - 1].nextSibling,
    map = null;
  while (aStart < aEnd || bStart < bEnd) {
    if (a2[aStart] === b[bStart]) {
      aStart++;
      bStart++;
      continue;
    }
    while (a2[aEnd - 1] === b[bEnd - 1]) {
      aEnd--;
      bEnd--;
    }
    if (aEnd === aStart) {
      var node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;
      while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);
    } else if (bEnd === bStart) {
      while (aStart < aEnd) {
        if (!map || !map.has(a2[aStart])) a2[aStart].remove();
        aStart++;
      }
    } else if (a2[aStart] === b[bEnd - 1] && b[bStart] === a2[aEnd - 1]) {
      var _node = a2[--aEnd].nextSibling;
      parentNode.insertBefore(b[bStart++], a2[aStart++].nextSibling);
      parentNode.insertBefore(b[--bEnd], _node);
      a2[aEnd] = b[bEnd];
    } else {
      if (!map) {
        map = /* @__PURE__ */new Map();
        var i2 = bStart;
        while (i2 < bEnd) map.set(b[i2], i2++);
      }
      var index = map.get(a2[aStart]);
      if (index != null) {
        if (bStart < index && index < bEnd) {
          var _i5 = aStart,
            sequence = 1,
            t2 = void 0;
          while (++_i5 < aEnd && _i5 < bEnd) {
            if ((t2 = map.get(a2[_i5])) == null || t2 !== index + sequence) break;
            sequence++;
          }
          if (sequence > index - bStart) {
            var _node2 = a2[aStart];
            while (bStart < index) parentNode.insertBefore(b[bStart++], _node2);
          } else parentNode.replaceChild(b[bStart++], a2[aStart++]);
        } else aStart++;
      } else a2[aStart++].remove();
    }
  }
}
var $$EVENTS = "_$DX_DELEGATE";
function render(code, element, init) {
  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  var disposer;
  createRoot(function (dispose2) {
    disposer = dispose2;
    element === document ? code() : insert(element, code(), element.firstChild ? null : void 0, init);
  }, options.owner);
  return function () {
    disposer();
    element.textContent = "";
  };
}
function template$1(html, check, isSVG) {
  if (typeof window === 'undefined') {
    return null;
  }
  var t2 = document.createElement("template");
  t2.innerHTML = html;
  var node = t2.content.firstChild;
  if (isSVG) node = node.firstChild;
  return node;
}
function delegateEvents(eventNames) {
  var document2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.document;
  var e2 = document2[$$EVENTS] || (document2[$$EVENTS] = /* @__PURE__ */new Set());
  for (var i2 = 0, l2 = eventNames.length; i2 < l2; i2++) {
    var name = eventNames[i2];
    if (!e2.has(name)) {
      e2.add(name);
      document2.addEventListener(name, eventHandler);
    }
  }
}
function setAttribute(node, name, value) {
  if (value == null) node.removeAttribute(name);else node.setAttribute(name, value);
}
function setAttributeNS(node, namespace, name, value) {
  if (value == null) node.removeAttributeNS(namespace, name);else node.setAttributeNS(namespace, name, value);
}
function className(node, value) {
  if (value == null) node.removeAttribute("class");else node.className = value;
}
function addEventListener(node, name, handler, delegate) {
  if (delegate) {
    if (Array.isArray(handler)) {
      node["$$".concat(name)] = handler[0];
      node["$$".concat(name, "Data")] = handler[1];
    } else node["$$".concat(name)] = handler;
  } else if (Array.isArray(handler)) {
    var handlerFn = handler[0];
    node.addEventListener(name, handler[0] = function (e2) {
      return handlerFn.call(node, handler[1], e2);
    });
  } else node.addEventListener(name, handler);
}
function classList(node, value) {
  var prev = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var classKeys = Object.keys(value || {}),
    prevKeys = Object.keys(prev);
  var i2, len;
  for (i2 = 0, len = prevKeys.length; i2 < len; i2++) {
    var key = prevKeys[i2];
    if (!key || key === "undefined" || value[key]) continue;
    toggleClassKey(node, key, false);
    delete prev[key];
  }
  for (i2 = 0, len = classKeys.length; i2 < len; i2++) {
    var _key3 = classKeys[i2],
      classValue = !!value[_key3];
    if (!_key3 || _key3 === "undefined" || prev[_key3] === classValue || !classValue) continue;
    toggleClassKey(node, _key3, true);
    prev[_key3] = classValue;
  }
  return prev;
}
function style(node, value, prev) {
  if (!value) return prev ? setAttribute(node, "style") : value;
  var nodeStyle = node.style;
  if (typeof value === "string") return nodeStyle.cssText = value;
  typeof prev === "string" && (nodeStyle.cssText = prev = void 0);
  prev || (prev = {});
  value || (value = {});
  var v, s2;
  for (s2 in prev) {
    value[s2] == null && nodeStyle.removeProperty(s2);
    delete prev[s2];
  }
  for (s2 in value) {
    v = value[s2];
    if (v !== prev[s2]) {
      nodeStyle.setProperty(s2, v);
      prev[s2] = v;
    }
  }
  return prev;
}
function spread(node) {
  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var isSVG = arguments.length > 2 ? arguments[2] : undefined;
  var skipChildren = arguments.length > 3 ? arguments[3] : undefined;
  var prevProps = {};
  if (!skipChildren) {
    createRenderEffect(function () {
      return prevProps.children = insertExpression(node, props.children, prevProps.children);
    });
  }
  createRenderEffect(function () {
    return props.ref && props.ref(node);
  });
  createRenderEffect(function () {
    return assign(node, props, isSVG, true, prevProps, true);
  });
  return prevProps;
}
function use(fn, element, arg) {
  return untrack(function () {
    return fn(element, arg);
  });
}
function insert(parent, accessor, marker, initial) {
  if (marker !== void 0 && !initial) initial = [];
  if (typeof accessor !== "function") return insertExpression(parent, accessor, initial, marker);
  createRenderEffect(function (current) {
    return insertExpression(parent, accessor(), current, marker);
  }, initial);
}
function assign(node, props, isSVG, skipChildren) {
  var prevProps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
  var skipRef = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
  props || (props = {});
  for (var prop in prevProps) {
    if (!(prop in props)) {
      if (prop === "children") continue;
      prevProps[prop] = assignProp(node, prop, null, prevProps[prop], isSVG, skipRef);
    }
  }
  for (var _prop in props) {
    if (_prop === "children") {
      if (!skipChildren) insertExpression(node, props.children);
      continue;
    }
    var value = props[_prop];
    prevProps[_prop] = assignProp(node, _prop, value, prevProps[_prop], isSVG, skipRef);
  }
}
function getNextElement(template2) {
  var node, key;
  if (!sharedConfig.context || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {
    return template2.cloneNode(true);
  }
  if (sharedConfig.completed) sharedConfig.completed.add(node);
  sharedConfig.registry["delete"](key);
  return node;
}
function toPropertyName(name) {
  return name.toLowerCase().replace(/-([a-z])/g, function (_, w) {
    return w.toUpperCase();
  });
}
function toggleClassKey(node, key, value) {
  var classNames = key.trim().split(/\s+/);
  for (var i2 = 0, nameLen = classNames.length; i2 < nameLen; i2++) node.classList.toggle(classNames[i2], value);
}
function assignProp(node, prop, value, prev, isSVG, skipRef) {
  var isCE, isProp, isChildProp;
  if (prop === "style") return style(node, value, prev);
  if (prop === "classList") return classList(node, value, prev);
  if (value === prev) return prev;
  if (prop === "ref") {
    if (!skipRef) value(node);
  } else if (prop.slice(0, 3) === "on:") {
    var e2 = prop.slice(3);
    prev && node.removeEventListener(e2, prev);
    value && node.addEventListener(e2, value);
  } else if (prop.slice(0, 10) === "oncapture:") {
    var _e3 = prop.slice(10);
    prev && node.removeEventListener(_e3, prev, true);
    value && node.addEventListener(_e3, value, true);
  } else if (prop.slice(0, 2) === "on") {
    var name = prop.slice(2).toLowerCase();
    var delegate = DelegatedEvents.has(name);
    if (!delegate && prev) {
      var h2 = Array.isArray(prev) ? prev[0] : prev;
      node.removeEventListener(name, h2);
    }
    if (delegate || value) {
      addEventListener(node, name, value, delegate);
      delegate && delegateEvents([name]);
    }
  } else if ((isChildProp = ChildProperties.has(prop)) || !isSVG && (PropAliases[prop] || (isProp = Properties.has(prop))) || (isCE = node.nodeName.includes("-"))) {
    if (prop === "class" || prop === "className") className(node, value);else if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;else node[PropAliases[prop] || prop] = value;
  } else {
    var ns = isSVG && prop.indexOf(":") > -1 && SVGNamespace[prop.split(":")[0]];
    if (ns) setAttributeNS(node, ns, prop, value);else setAttribute(node, Aliases[prop] || prop, value);
  }
  return value;
}
function eventHandler(e2) {
  var key = "$$".concat(e2.type);
  var node = e2.composedPath && e2.composedPath()[0] || e2.target;
  if (e2.target !== node) {
    Object.defineProperty(e2, "target", {
      configurable: true,
      value: node
    });
  }
  Object.defineProperty(e2, "currentTarget", {
    configurable: true,
    get: function get() {
      return node || document;
    }
  });
  if (sharedConfig.registry && !sharedConfig.done) {
    sharedConfig.done = true;
    document.querySelectorAll("[id^=pl-]").forEach(function (elem) {
      while (elem && elem.nodeType !== 8 && elem.nodeValue !== "pl-" + e2) {
        var x = elem.nextSibling;
        elem.remove();
        elem = x;
      }
      elem && elem.remove();
    });
  }
  while (node) {
    var handler = node[key];
    if (handler && !node.disabled) {
      var data = node["".concat(key, "Data")];
      data !== void 0 ? handler.call(node, data, e2) : handler.call(node, e2);
      if (e2.cancelBubble) return;
    }
    node = node._$host || node.parentNode || node.host;
  }
}
function insertExpression(parent, value, current, marker, unwrapArray) {
  if (sharedConfig.context && !current) current = _toConsumableArray(parent.childNodes);
  while (typeof current === "function") current = current();
  if (value === current) return current;
  var t2 = _typeof(value),
    multi = marker !== void 0;
  parent = multi && current[0] && current[0].parentNode || parent;
  if (t2 === "string" || t2 === "number") {
    if (sharedConfig.context) return current;
    if (t2 === "number") value = value.toString();
    if (multi) {
      var node = current[0];
      if (node && node.nodeType === 3) {
        node.data = value;
      } else node = document.createTextNode(value);
      current = cleanChildren(parent, current, marker, node);
    } else {
      if (current !== "" && typeof current === "string") {
        current = parent.firstChild.data = value;
      } else current = parent.textContent = value;
    }
  } else if (value == null || t2 === "boolean") {
    if (sharedConfig.context) return current;
    current = cleanChildren(parent, current, marker);
  } else if (t2 === "function") {
    createRenderEffect(function () {
      var v = value();
      while (typeof v === "function") v = v();
      current = insertExpression(parent, v, current, marker);
    });
    return function () {
      return current;
    };
  } else if (Array.isArray(value)) {
    var array = [];
    var currentArray = current && Array.isArray(current);
    if (normalizeIncomingArray(array, value, current, unwrapArray)) {
      createRenderEffect(function () {
        return current = insertExpression(parent, array, current, marker, true);
      });
      return function () {
        return current;
      };
    }
    if (sharedConfig.context) {
      if (!array.length) return current;
      for (var i2 = 0; i2 < array.length; i2++) {
        if (array[i2].parentNode) return current = array;
      }
    }
    if (array.length === 0) {
      current = cleanChildren(parent, current, marker);
      if (multi) return current;
    } else if (currentArray) {
      if (current.length === 0) {
        appendNodes(parent, array, marker);
      } else reconcileArrays(parent, current, array);
    } else {
      current && cleanChildren(parent);
      appendNodes(parent, array);
    }
    current = array;
  } else if (value instanceof Node) {
    if (sharedConfig.context && value.parentNode) return current = multi ? [value] : value;
    if (Array.isArray(current)) {
      if (multi) return current = cleanChildren(parent, current, marker, value);
      cleanChildren(parent, current, null, value);
    } else if (current == null || current === "" || !parent.firstChild) {
      parent.appendChild(value);
    } else parent.replaceChild(value, parent.firstChild);
    current = value;
  } else ;
  return current;
}
function normalizeIncomingArray(normalized, array, current, unwrap2) {
  var dynamic = false;
  for (var i2 = 0, len = array.length; i2 < len; i2++) {
    var item = array[i2],
      prev = current && current[i2];
    if (item instanceof Node) {
      normalized.push(item);
    } else if (item == null || item === true || item === false) ;else if (Array.isArray(item)) {
      dynamic = normalizeIncomingArray(normalized, item, prev) || dynamic;
    } else if (typeof item === "function") {
      if (unwrap2) {
        while (typeof item === "function") item = item();
        dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item], Array.isArray(prev) ? prev : [prev]) || dynamic;
      } else {
        normalized.push(item);
        dynamic = true;
      }
    } else {
      var value = String(item);
      if (prev && prev.nodeType === 3 && prev.data === value) {
        normalized.push(prev);
      } else normalized.push(document.createTextNode(value));
    }
  }
  return dynamic;
}
function appendNodes(parent, array) {
  var marker = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  for (var i2 = 0, len = array.length; i2 < len; i2++) parent.insertBefore(array[i2], marker);
}
function cleanChildren(parent, current, marker, replacement) {
  if (marker === void 0) return parent.textContent = "";
  var node = replacement || document.createTextNode("");
  if (current.length) {
    var inserted = false;
    for (var i2 = current.length - 1; i2 >= 0; i2--) {
      var el = current[i2];
      if (node !== el) {
        var isParent = el.parentNode === parent;
        if (!inserted && !i2) isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);else isParent && el.remove();
      } else inserted = true;
    }
  } else parent.insertBefore(node, marker);
  return [node];
}
function getHydrationKey() {
  var hydrate = sharedConfig.context;
  return "".concat(hydrate.id).concat(hydrate.count++);
}
var SVG_NAMESPACE = "http://www.w3.org/2000/svg";
function createElement(tagName) {
  var isSVG = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);
}
function Portal(props) {
  var useShadow = props.useShadow,
    marker = document.createTextNode(""),
    mount = props.mount || document.body;
  function renderPortal() {
    if (sharedConfig.context) {
      var _createSignal9 = createSignal(false),
        _createSignal10 = _slicedToArray(_createSignal9, 2),
        s2 = _createSignal10[0],
        set = _createSignal10[1];
      queueMicrotask(function () {
        return set(true);
      });
      return function () {
        return s2() && props.children;
      };
    } else return function () {
      return props.children;
    };
  }
  if (mount instanceof HTMLHeadElement) {
    var _createSignal11 = createSignal(false),
      _createSignal12 = _slicedToArray(_createSignal11, 2),
      clean = _createSignal12[0],
      setClean = _createSignal12[1];
    var cleanup = function cleanup() {
      return setClean(true);
    };
    createRoot(function (dispose2) {
      return insert(mount, function () {
        return !clean() ? renderPortal()() : dispose2();
      }, null);
    });
    onCleanup(function () {
      if (sharedConfig.context) queueMicrotask(cleanup);else cleanup();
    });
  } else {
    var container = createElement(props.isSVG ? "g" : "div", props.isSVG),
      renderRoot = useShadow && container.attachShadow ? container.attachShadow({
        mode: "open"
      }) : container;
    Object.defineProperty(container, "_$host", {
      get: function get() {
        return marker.parentNode;
      },
      configurable: true
    });
    insert(renderRoot, renderPortal());
    mount.appendChild(container);
    props.ref && props.ref(container);
    onCleanup(function () {
      return mount.removeChild(container);
    });
  }
  return marker;
}
function Dynamic(props) {
  var _splitProps = splitProps(props, ["component"]),
    _splitProps2 = _slicedToArray(_splitProps, 2),
    p2 = _splitProps2[0],
    others = _splitProps2[1];
  var cached = createMemo(function () {
    return p2.component;
  });
  return createMemo(function () {
    var component = cached();
    switch (_typeof(component)) {
      case "function":
        return untrack(function () {
          return component(others);
        });
      case "string":
        var isSvg = SVGElements.has(component);
        var el = sharedConfig.context ? getNextElement() : createElement(component, isSvg);
        spread(el, others, isSvg);
        return el;
    }
  });
}
var THEME = exports.THEME = /* @__PURE__ */function (THEME2) {
  THEME2["DARK"] = "DARK";
  THEME2["LIGHT"] = "LIGHT";
  return THEME2;
}(THEME || {});
var e = {
    data: ""
  },
  t = function t(t2) {
    return "object" == (typeof window === "undefined" ? "undefined" : _typeof(window)) ? ((t2 ? t2.querySelector("#_goober") : window._goober) || Object.assign((t2 || document.head).appendChild(document.createElement("style")), {
      innerHTML: " ",
      id: "_goober"
    })).firstChild : t2 || e;
  },
  l = /(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g,
  a = /\/\*[^]*?\*\/|  +/g,
  n = /\n+/g,
  _o = function o(e2, t2) {
    var r = "",
      l2 = "",
      a2 = "";
    var _loop3 = function _loop3(n2) {
      var c2 = e2[n2];
      "@" == n2[0] ? "i" == n2[1] ? r = n2 + " " + c2 + ";" : l2 += "f" == n2[1] ? _o(c2, n2) : n2 + "{" + _o(c2, "k" == n2[1] ? "" : t2) + "}" : "object" == _typeof(c2) ? l2 += _o(c2, t2 ? t2.replace(/([^,])+/g, function (e3) {
        return n2.replace(/(^:.*)|([^,])+/g, function (t3) {
          return /&/.test(t3) ? t3.replace(/&/g, e3) : e3 ? e3 + " " + t3 : t3;
        });
      }) : n2) : null != c2 && (n2 = /^--/.test(n2) ? n2 : n2.replace(/[A-Z]/g, "-$&").toLowerCase(), a2 += _o.p ? _o.p(n2, c2) : n2 + ":" + c2 + ";");
    };
    for (var n2 in e2) {
      _loop3(n2);
    }
    return r + (t2 && a2 ? t2 + "{" + a2 + "}" : a2) + l2;
  },
  c = {},
  _s = function s(e2) {
    if ("object" == _typeof(e2)) {
      var t2 = "";
      for (var r in e2) t2 += r + _s(e2[r]);
      return t2;
    }
    return e2;
  },
  i = function i(e2, t2, r, i2, p2) {
    var u2 = _s(e2),
      d = c[u2] || (c[u2] = function (e3) {
        var t3 = 0,
          r2 = 11;
        for (; t3 < e3.length;) r2 = 101 * r2 + e3.charCodeAt(t3++) >>> 0;
        return "go" + r2;
      }(u2));
    if (!c[d]) {
      var t3 = u2 !== e2 ? e2 : function (e3) {
        var t4,
          r2,
          o2 = [{}];
        for (; t4 = l.exec(e3.replace(a, ""));) t4[4] ? o2.shift() : t4[3] ? (r2 = t4[3].replace(n, " ").trim(), o2.unshift(o2[0][r2] = o2[0][r2] || {})) : o2[0][t4[1]] = t4[2].replace(n, " ").trim();
        return o2[0];
      }(e2);
      c[d] = _o(p2 ? _defineProperty({}, "@keyframes " + d, t3) : t3, r ? "" : "." + d);
    }
    var f = r && c.g ? c.g : null;
    return r && (c.g = c[d]), function (e3, t3, r2, l2) {
      l2 ? t3.data = t3.data.replace(l2, e3) : -1 === t3.data.indexOf(e3) && (t3.data = r2 ? e3 + t3.data : t3.data + e3);
    }(c[d], t2, i2, f), d;
  },
  p = function p(e2, t2, r) {
    return e2.reduce(function (e3, l2, a2) {
      var n2 = t2[a2];
      if (n2 && n2.call) {
        var e4 = n2(r),
          t3 = e4 && e4.props && e4.props.className || /^go/.test(e4) && e4;
        n2 = t3 ? "." + t3 : e4 && "object" == _typeof(e4) ? e4.props ? "" : _o(e4, "") : false === e4 ? "" : e4;
      }
      return e3 + l2 + (null == n2 ? "" : n2);
    }, "");
  };
function u(e2) {
  var r = this || {},
    l2 = e2.call ? e2(r.p) : e2;
  return i(l2.unshift ? l2.raw ? p(l2, [].slice.call(arguments, 1), r.p) : l2.reduce(function (e3, t2) {
    return Object.assign(e3, t2 && t2.call ? t2(r.p) : t2);
  }, {}) : l2, t(r.target), r.g, r.o, r.k);
}
u.bind({
  g: 1
});
var h = u.bind({
  k: 1
});
var ThemeContext = createContext();
function ThemeProvider(props) {
  return createComponent(ThemeContext.Provider, {
    value: props.theme,
    get children() {
      return props.children;
    }
  });
}
function useTheme() {
  return useContext(ThemeContext);
}
function makeStyled(tag) {
  var _ctx = this || {};
  return function () {
    for (var _len3 = arguments.length, args = new Array(_len3), _key4 = 0; _key4 < _len3; _key4++) {
      args[_key4] = arguments[_key4];
    }
    var Styled = function Styled(props) {
      var theme = useContext(ThemeContext);
      var withTheme = mergeProps(props, {
        theme: theme
      });
      var clone = mergeProps(withTheme, {
        get class() {
          var pClass = withTheme["class"],
            append = "class" in withTheme && /^go[0-9]+/.test(pClass);
          var className2 = u.apply({
            target: _ctx.target,
            o: append,
            p: withTheme,
            g: _ctx.g
          }, args);
          return [pClass, className2].filter(Boolean).join(" ");
        }
      });
      var _splitProps3 = splitProps(clone, ["as", "theme"]),
        _splitProps4 = _slicedToArray(_splitProps3, 2),
        local = _splitProps4[0],
        newProps = _splitProps4[1];
      var htmlProps = newProps;
      var createTag = local.as || tag;
      var el;
      if (typeof createTag === "function") {
        el = createTag(htmlProps);
      } else {
        {
          if (_ctx.g == 1) {
            el = document.createElement(createTag);
            spread(el, htmlProps);
          } else {
            el = Dynamic(mergeProps({
              component: createTag
            }, htmlProps));
          }
        }
      }
      return el;
    };
    Styled["class"] = function (props) {
      return untrack(function () {
        return u.apply({
          target: _ctx.target,
          p: props,
          g: _ctx.g
        }, args);
      });
    };
    return Styled;
  };
}
var styled = new Proxy(makeStyled, {
  get: function get(target, tag) {
    return target(tag);
  }
});
function createGlobalStyles() {
  var fn = makeStyled.call({
    g: 1
  }, "div").apply(null, arguments);
  return function GlobalStyles2(props) {
    fn(props);
    return null;
  };
}
var globalStylesTag = "tc-root";
var disableScrollClass = "tc-disable-scroll";
var usingMouseClass = "tc-using-mouse";
var GlobalStyles = function GlobalStyles() {
  document.body.addEventListener("mousedown", function () {
    return document.body.classList.add(usingMouseClass);
  });
  document.body.addEventListener("keydown", function (event) {
    if (event.key === "Tab") {
      document.body.classList.remove(usingMouseClass);
    }
  });
  var Styles = createGlobalStyles(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n    ", " * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n        \n        font-family: -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', Arial, Tahoma, Verdana, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;        \n        -webkit-tap-highlight-color: transparent;\n    }\n    \n    ", " img {\n      -webkit-user-select: none;\n      -webkit-touch-callout: none;\n    }   \n \n    ", " *:focus {\n        outline: #08f auto 2px;\n    }\n    \n    ", " li {\n        list-style: none;\n    }\n    \n    ", " button {\n        outline: none;\n    }\n    \n    body.", " {\n        position: fixed; \n        overflow-y: scroll;\n        right: 0;\n        left: 0;\n    }\n    \n    body.", " ", " *:focus {\n        outline: none;\n    }\n"])), globalStylesTag, globalStylesTag, globalStylesTag, globalStylesTag, globalStylesTag, disableScrollClass, usingMouseClass, globalStylesTag);
  return createComponent(Styles, {});
};
function hexToRgb(hex) {
  if (hex[0] === "#") {
    hex = hex.slice(1);
  }
  var bigint = parseInt(hex, 16);
  var r = bigint >> 16 & 255;
  var g = bigint >> 8 & 255;
  var b = bigint & 255;
  return [r, g, b].join(",");
}
function rgba(color, opacity) {
  if (color[0] === "#") {
    color = hexToRgb(color);
  }
  return "rgba(".concat(color, ", ").concat(opacity, ")");
}
function toPx(value) {
  return value.toString() + "px";
}
var _InMemoryStorage2 = /*#__PURE__*/function () {
  function _InMemoryStorage() {
    _classCallCheck(this, _InMemoryStorage);
    __publicField(this, "storage", {});
  }
  return _createClass(_InMemoryStorage, [{
    key: "length",
    get: function get() {
      return Object.keys(this.storage).length;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.storage = {};
    }
  }, {
    key: "getItem",
    value: function getItem(key) {
      var _a2;
      return (_a2 = this.storage[key]) != null ? _a2 : null;
    }
  }, {
    key: "key",
    value: function key(index) {
      var _a2;
      var keys = Object.keys(this.storage);
      if (index < 0 || index >= keys.length) {
        return null;
      }
      return (_a2 = keys[index]) != null ? _a2 : null;
    }
  }, {
    key: "removeItem",
    value: function removeItem(key) {
      delete this.storage[key];
    }
  }, {
    key: "setItem",
    value: function setItem(key, value) {
      this.storage[key] = value;
    }
  }], [{
    key: "getInstance",
    value: function getInstance() {
      if (!_InMemoryStorage2.instance) {
        _InMemoryStorage2.instance = new _InMemoryStorage2();
      }
      return _InMemoryStorage2.instance;
    }
  }]);
}();
var InMemoryStorage = _InMemoryStorage2;
__publicField(InMemoryStorage, "instance");
var TonConnectUIError = exports.TonConnectUIError = /*#__PURE__*/function (_TonConnectError) {
  function TonConnectUIError() {
    var _this4;
    _classCallCheck(this, TonConnectUIError);
    for (var _len4 = arguments.length, args = new Array(_len4), _key5 = 0; _key5 < _len4; _key5++) {
      args[_key5] = arguments[_key5];
    }
    _this4 = _callSuper(this, TonConnectUIError, [].concat(args));
    Object.setPrototypeOf(_this4, TonConnectUIError.prototype);
    return _this4;
  }
  _inherits(TonConnectUIError, _TonConnectError);
  return _createClass(TonConnectUIError);
}(_sdk.TonConnectError);
function logDebug() {
  {
    try {
      var _console;
      for (var _len5 = arguments.length, args = new Array(_len5), _key6 = 0; _key6 < _len5; _key6++) {
        args[_key6] = arguments[_key6];
      }
      (_console = console).debug.apply(_console, ["[TON_CONNECT_UI]"].concat(args));
    } catch (e2) {}
  }
}
function logError() {
  {
    try {
      var _console2;
      for (var _len6 = arguments.length, args = new Array(_len6), _key7 = 0; _key7 < _len6; _key7++) {
        args[_key7] = arguments[_key7];
      }
      (_console2 = console).error.apply(_console2, ["[TON_CONNECT_UI]"].concat(args));
    } catch (e2) {}
  }
}
function logWarning() {
  {
    try {
      var _console3;
      for (var _len7 = arguments.length, args = new Array(_len7), _key8 = 0; _key8 < _len7; _key8++) {
        args[_key8] = arguments[_key8];
      }
      (_console3 = console).warn.apply(_console3, ["[TON_CONNECT_UI]"].concat(args));
    } catch (e2) {}
  }
}
function openLink(href) {
  var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "_self";
  logDebug("openLink", href, target);
  window.open(href, target, "noopener noreferrer");
}
function openLinkBlank(href) {
  openLink(href, "_blank");
}
function openDeeplinkWithFallback(href, fallback) {
  var doFallback = function doFallback() {
    if (isBrowser("safari") || isOS("android") && isBrowser("firefox")) {
      return;
    }
    fallback();
  };
  var fallbackTimeout = setTimeout(function () {
    return doFallback();
  }, 200);
  window.addEventListener("blur", function () {
    return clearTimeout(fallbackTimeout);
  }, {
    once: true
  });
  openLink(href, "_self");
}
function getSystemTheme() {
  if (window.matchMedia && window.matchMedia("(prefers-color-scheme: light)").matches) {
    return THEME.LIGHT;
  }
  return THEME.DARK;
}
function subscribeToThemeChange(callback) {
  var handler = function handler(event) {
    return callback(event.matches ? THEME.DARK : THEME.LIGHT);
  };
  window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", handler);
  return function () {
    return window.matchMedia("(prefers-color-scheme: dark)").removeEventListener("change", handler);
  };
}
function disableScroll() {
  if (document.documentElement.scrollHeight === document.documentElement.clientHeight) {
    return;
  }
  document.body.style.top = toPx(-document.documentElement.scrollTop);
  document.body.classList.add(disableScrollClass);
}
function enableScroll() {
  document.body.classList.remove(disableScrollClass);
  document.documentElement.scrollTo({
    top: -parseFloat(getComputedStyle(document.body).top)
  });
  document.body.style.top = "auto";
}
function fixMobileSafariActiveTransition() {
  if (!document.body.hasAttribute("ontouchstart")) {
    document.body.setAttribute("ontouchstart", "");
  }
}
function defineStylesRoot() {
  customElements.define(globalStylesTag, /*#__PURE__*/function (_HTMLElement) {
    function TcRootElement() {
      _classCallCheck(this, TcRootElement);
      return _callSuper(this, TcRootElement, arguments);
    }
    _inherits(TcRootElement, _HTMLElement);
    return _createClass(TcRootElement);
  }(/*#__PURE__*/_wrapNativeSuper(HTMLElement)));
}
function createMacrotask(callback) {
  return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return new Promise(function (resolve) {
            return requestAnimationFrame(resolve);
          });
        case 2:
          callback();
        case 3:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
}
function createMacrotaskAsync(callback) {
  return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return new Promise(function (resolve) {
            return requestAnimationFrame(resolve);
          });
        case 2:
          return _context2.abrupt("return", callback());
        case 3:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
}
function preloadImages(images) {
  if (document.readyState !== "complete") {
    window.addEventListener("load", function () {
      return createMacrotask(function () {
        return preloadImages(images);
      });
    }, {
      once: true
    });
  } else {
    images.forEach(function (img) {
      var node = new window.Image();
      node.src = img;
    });
  }
}
function getWindow$1() {
  if (typeof window !== "undefined") {
    return window;
  }
  return void 0;
}
function tryGetLocalStorage() {
  if (isLocalStorageAvailable()) {
    return localStorage;
  }
  if (isNodeJs()) {
    throw new TonConnectUIError("`localStorage` is unavailable, but it is required for TonConnect. For more details, see https://github.com/ton-connect/sdk/tree/main/packages/sdk#init-connector");
  }
  return InMemoryStorage.getInstance();
}
function isLocalStorageAvailable() {
  try {
    return typeof localStorage !== "undefined";
  } catch (e2) {
    return false;
  }
}
function isNodeJs() {
  return typeof process !== "undefined" && process.versions != null && process.versions.node != null;
}
function getUserAgent() {
  var _a2, _b2, _c2;
  var results = new _uaParserJs["default"]().getResult();
  var osName = (_a2 = results.os.name) == null ? void 0 : _a2.toLowerCase();
  var deviceModel = (_b2 = results.device.model) == null ? void 0 : _b2.toLowerCase();
  var os;
  switch (true) {
    case deviceModel === "ipad":
      os = "ipad";
      break;
    case osName === "ios":
      os = "ios";
      break;
    case osName === "android":
      os = "android";
      break;
    case osName === "mac os":
      os = "macos";
      break;
    case osName === "linux":
      os = "linux";
      break;
    case osName == null ? void 0 : osName.includes("windows"):
      os = "windows";
      break;
  }
  var browserName = (_c2 = results.browser.name) == null ? void 0 : _c2.toLowerCase();
  var browser;
  switch (true) {
    case browserName === "chrome":
      browser = "chrome";
      break;
    case browserName === "firefox":
      browser = "firefox";
      break;
    case browserName == null ? void 0 : browserName.includes("safari"):
      browser = "safari";
      break;
    case browserName == null ? void 0 : browserName.includes("opera"):
      browser = "opera";
      break;
  }
  return {
    os: os,
    browser: browser
  };
}
function isOS() {
  for (var _len8 = arguments.length, os = new Array(_len8), _key9 = 0; _key9 < _len8; _key9++) {
    os[_key9] = arguments[_key9];
  }
  return os.includes(getUserAgent().os);
}
function isBrowser() {
  for (var _len9 = arguments.length, browser = new Array(_len9), _key10 = 0; _key10 < _len9; _key10++) {
    browser[_key10] = arguments[_key10];
  }
  return browser.includes(getUserAgent().browser);
}
function toDeeplink(universalLink, deeplink) {
  var url = new URL(universalLink);
  return deeplink + url.search;
}
var WalletInfoStorage = /*#__PURE__*/function () {
  function WalletInfoStorage() {
    _classCallCheck(this, WalletInfoStorage);
    __publicField(this, "localStorage");
    __publicField(this, "storageKey", "ton-connect-ui_wallet-info");
    this.localStorage = tryGetLocalStorage();
  }
  return _createClass(WalletInfoStorage, [{
    key: "setWalletInfo",
    value: function setWalletInfo(walletInfo) {
      this.localStorage.setItem(this.storageKey, JSON.stringify(walletInfo));
    }
  }, {
    key: "getWalletInfo",
    value: function getWalletInfo() {
      var walletInfoString = this.localStorage.getItem(this.storageKey);
      if (!walletInfoString) {
        return null;
      }
      return JSON.parse(walletInfoString);
    }
  }, {
    key: "removeWalletInfo",
    value: function removeWalletInfo() {
      this.localStorage.removeItem(this.storageKey);
    }
  }]);
}();
var PreferredWalletStorage = /*#__PURE__*/function () {
  function PreferredWalletStorage() {
    _classCallCheck(this, PreferredWalletStorage);
    __publicField(this, "localStorage");
    __publicField(this, "storageKey", "ton-connect-ui_preferred-wallet");
    this.localStorage = tryGetLocalStorage();
  }
  return _createClass(PreferredWalletStorage, [{
    key: "setPreferredWalletAppName",
    value: function setPreferredWalletAppName(name) {
      this.localStorage.setItem(this.storageKey, name);
    }
  }, {
    key: "getPreferredWalletAppName",
    value: function getPreferredWalletAppName() {
      return this.localStorage.getItem(this.storageKey) || void 0;
    }
  }]);
}();
var LastSelectedWalletInfoStorage = /*#__PURE__*/function () {
  function LastSelectedWalletInfoStorage() {
    _classCallCheck(this, LastSelectedWalletInfoStorage);
    __publicField(this, "localStorage");
    __publicField(this, "storageKey", "ton-connect-ui_last-selected-wallet-info");
    this.localStorage = tryGetLocalStorage();
  }
  return _createClass(LastSelectedWalletInfoStorage, [{
    key: "setLastSelectedWalletInfo",
    value: function setLastSelectedWalletInfo(walletInfo) {
      this.localStorage.setItem(this.storageKey, JSON.stringify(walletInfo));
    }
  }, {
    key: "getLastSelectedWalletInfo",
    value: function getLastSelectedWalletInfo() {
      var walletInfoString = this.localStorage.getItem(this.storageKey);
      if (!walletInfoString) {
        return null;
      }
      return JSON.parse(walletInfoString);
    }
  }, {
    key: "removeLastSelectedWalletInfo",
    value: function removeLastSelectedWalletInfo() {
      this.localStorage.removeItem(this.storageKey);
    }
  }]);
}();
var _createSignal13 = createSignal({
    status: "closed",
    closeReason: null
  }),
  _createSignal14 = _slicedToArray(_createSignal13, 2),
  walletsModalState = _createSignal14[0],
  setWalletsModalState = _createSignal14[1];
var getWalletsModalIsOpened = createMemo(function () {
  return walletsModalState().status === "opened";
});
var _createSignal15 = createSignal({
    status: "closed",
    closeReason: null
  }),
  _createSignal16 = _slicedToArray(_createSignal15, 2),
  singleWalletModalState = _createSignal16[0],
  setSingleWalletModalState = _createSignal16[1];
var getSingleWalletModalIsOpened = createMemo(function () {
  return singleWalletModalState().status === "opened";
});
var getSingleWalletModalWalletInfo = createMemo(function () {
  var state = singleWalletModalState();
  if (state.status === "opened") {
    return state.walletInfo;
  }
  return null;
});
var lastSelectedWalletInfoStorage = typeof window !== "undefined" ? new LastSelectedWalletInfoStorage() : void 0;
var _createSignal17 = createSignal((lastSelectedWalletInfoStorage == null ? void 0 : lastSelectedWalletInfoStorage.getLastSelectedWalletInfo()) || null),
  _createSignal18 = _slicedToArray(_createSignal17, 2),
  lastSelectedWalletInfo = _createSignal18[0],
  _setLastSelectedWalletInfo = _createSignal18[1];
var setLastSelectedWalletInfo = function setLastSelectedWalletInfo(walletInfo) {
  if (!lastSelectedWalletInfoStorage) {
    lastSelectedWalletInfoStorage = new LastSelectedWalletInfoStorage();
  }
  if (walletInfo) {
    lastSelectedWalletInfoStorage.setLastSelectedWalletInfo(walletInfo);
  } else {
    lastSelectedWalletInfoStorage.removeLastSelectedWalletInfo();
  }
  _setLastSelectedWalletInfo(walletInfo);
};
var _createSignal19 = createSignal(null),
  _createSignal20 = _slicedToArray(_createSignal19, 2),
  action = _createSignal20[0],
  _setAction = _createSignal20[1];
var common$1 = {
  close: "Close",
  openWallet: "Open wallet",
  copyLink: "Copy Link",
  linkCopied: "Link Copied",
  copied: "Copied",
  yourWallet: "Your Wallet",
  retry: "Retry",
  get: "GET",
  mobile: "Mobile",
  browserExtension: "Browser Extension",
  desktop: "Desktop"
};
var button$1 = {
  connectWallet: "Connect Wallet",
  dropdown: {
    copy: "Copy address",
    copied: "Address copied!",
    disconnect: "Disconnect"
  }
};
var notifications$1 = {
  confirm: {
    header: "Open {{ name }} to\xA0confirm the\xA0transaction."
  },
  transactionSent: {
    header: "Transaction sent",
    text: "Your transaction\xA0will be\xA0processed in\xA0a\xA0few seconds."
  },
  transactionCanceled: {
    header: "Transaction canceled",
    text: "There will be no changes to\xA0your account."
  }
};
var walletItem$1 = {
  walletOn: "Wallet On",
  recent: "Recent",
  installed: "Installed",
  popular: "Popular"
};
var walletModal$1 = {
  loading: "Loading wallets",
  wallets: "Wallets",
  mobileUniversalModal: {
    connectYourWallet: "Connect your wallet",
    openWalletOnTelegramOrSelect: "Open Wallet in Telegram or select your wallet to connect",
    openWalletOnTelegram: "Open Wallet in Telegram",
    openLink: "Open Link",
    scan: "Scan with your mobile wallet"
  },
  desktopUniversalModal: {
    connectYourWallet: "Connect your wallet",
    scan: "Scan with your mobile wallet",
    availableWallets: "Available wallets"
  },
  mobileConnectionModal: {
    showQR: "Show QR Code",
    scanQR: "Scan the\xA0QR code below with your phone\u2019s\xA0or\xA0{{ name }}\u2019s camera",
    continueIn: "Continue in {{ name }}\u2026",
    connectionDeclined: "Connection declined"
  },
  desktopConnectionModal: {
    scanQR: "Scan the\xA0QR code below with your phone\u2019s\xA0or\xA0{{ name }}\u2019s camera",
    continueInExtension: "Continue in\xA0{{ name }} browser extension\u2026",
    dontHaveExtension: "Seems you don't have installed {{ name }}\xA0browser\xA0extension",
    getWallet: "Get {{ name }}",
    continueOnDesktop: "Continue in\xA0{{ name }} on desktop\u2026",
    openWalletOnTelegram: "Open Wallet in Telegram on desktop",
    connectionDeclined: "Connection declined"
  },
  infoModal: {
    whatIsAWallet: "What is a wallet",
    secureDigitalAssets: "Secure digital assets storage",
    walletProtects: "A wallet protects and manages your digital assets\xA0including TON, tokens and collectables.",
    controlIdentity: "Control your Web3 identity",
    manageIdentity: "Manage your digital identity and access decentralized applications with ease. Maintain control over your data and engage securely in\xA0the\xA0blockchain ecosystem.",
    effortlessCryptoTransactions: "Effortless crypto transactions",
    easilySend: "Easily send, receive, monitor your cryptocurrencies.\xA0Streamline your operations with\xA0decentralized applications.",
    getAWallet: "Get a Wallet"
  }
};
var actionModal$1 = {
  confirmTransaction: {
    header: "Confirm the\xA0transaction in\xA0{{ name }}",
    text: "It will only take a\xA0moment."
  },
  transactionSent: "$notifications.transactionSent",
  transactionCanceled: "$notifications.transactionCanceled"
};
var en = {
  common: common$1,
  button: button$1,
  notifications: notifications$1,
  walletItem: walletItem$1,
  walletModal: walletModal$1,
  actionModal: actionModal$1
};
var common = {
  close: "\u0417\u0430\u043A\u0440\u044B\u0442\u044C",
  openWallet: "\u041E\u0442\u043A\u0440\u044B\u0442\u044C \u043A\u043E\u0448\u0435\u043B\u0451\u043A",
  copyLink: "\u041A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0441\u0441\u044B\u043B\u043A\u0443",
  linkCopied: "\u0421\u0441\u044B\u043B\u043A\u0430 \u0441\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D\u0430",
  copied: "\u0421\u0441\u044B\u043B\u043A\u0430 \u0441\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D\u0430",
  yourWallet: "\u0412\u0430\u0448 \u043A\u043E\u0448\u0435\u043B\u0451\u043A",
  retry: "\u041F\u043E\u0432\u0442\u043E\u0440\u0438\u0442\u044C",
  get: "\u0421\u043A\u0430\u0447\u0430\u0442\u044C",
  mobile: "\u041C\u043E\u0431\u0438\u043B\u044C\u043D\u044B\u0439",
  browserExtension: "\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u0438\u0435",
  desktop: "\u0414\u0435\u0441\u043A\u0442\u043E\u043F"
};
var button = {
  connectWallet: "\u041F\u043E\u0434\u043A\u043B\u044E\u0447\u0438\u0442\u044C \u043A\u043E\u0448\u0435\u043B\u0451\u043A",
  dropdown: {
    copy: "\u0421\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0430\u0434\u0440\u0435\u0441",
    copied: "\u0410\u0434\u0440\u0435\u0441 \u0441\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D!",
    disconnect: "\u041E\u0442\u043A\u043B\u044E\u0447\u0438\u0442\u044C \u043A\u043E\u0448\u0435\u043B\u0451\u043A"
  }
};
var notifications = {
  confirm: {
    header: "\u041E\u0442\u043A\u0440\u043E\u0439\u0442\u0435 {{ name }}, \u0447\u0442\u043E\u0431\u044B\xA0\u043F\u043E\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044C \u0442\u0440\u0430\u043D\u0437\u0430\u043A\u0446\u0438\u044E."
  },
  transactionSent: {
    header: "\u0422\u0440\u0430\u043D\u0437\u0430\u043A\u0446\u0438\u044F \u043E\u0442\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u0430",
    text: "\u0412\u0430\u0448\u0430 \u0442\u0440\u0430\u043D\u0437\u0430\u043A\u0446\u0438\u044F\xA0\u0431\u0443\u0434\u0435\u0442 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0430\u043D\u0430 \u0447\u0435\u0440\u0435\u0437\xA0\u043D\u0435\u0441\u043A\u043E\u043B\u044C\u043A\u043E \u0441\u0435\u043A\u0443\u043D\u0434."
  },
  transactionCanceled: {
    header: "\u0422\u0440\u0430\u043D\u0437\u0430\u043A\u0446\u0438\u044F \u043E\u0442\u043C\u0435\u043D\u0435\u043D\u0430",
    text: "\u0421\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u0435 \u0432\u0430\u0448\u0435\u0433\u043E \u0441\u0447\u0451\u0442\u0430 \u043D\u0435\xA0\u0438\u0437\u043C\u0435\u043D\u0438\u0442\u0441\u044F."
  }
};
var walletItem = {
  walletOn: "Wallet \u0432",
  recent: "\u041D\u0435\u0434\u0430\u0432\u043D\u0438\u0439",
  installed: "\u0423\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D",
  popular: "\u041F\u043E\u043F\u0443\u043B\u044F\u0440\u0435\u043D"
};
var walletModal = {
  loading: "\u041A\u043E\u0448\u0435\u043B\u044C\u043A\u0438 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u044E\u0442\u0441\u044F",
  wallets: "\u041A\u043E\u0448\u0435\u043B\u044C\u043A\u0438",
  mobileUniversalModal: {
    connectYourWallet: "\u041F\u043E\u0434\u043A\u043B\u044E\u0447\u0438\u0442\u0435 \u043A\u043E\u0448\u0435\u043B\u0451\u043A",
    openWalletOnTelegramOrSelect: "\u041F\u043E\u0434\u043A\u043B\u044E\u0447\u0438\u0442\u0435 Wallet \u0432\xA0Telegram \u0438\u043B\u0438\xA0\u0432\u044B\u0431\u0435\u0440\u0435\u0442\u0435 \u043A\u043E\u0448\u0435\u043B\u0451\u043A \u0434\u043B\u044F\xA0\u043F\u043E\u0434\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u044F",
    openWalletOnTelegram: "\u041E\u0442\u043A\u0440\u044B\u0442\u044C Wallet \u0432 Telegram",
    openLink: "\u041E\u0442\u043A\u0440\u044B\u0442\u044C \u0441\u0441\u044B\u043B\u043A\u0443",
    scan: "\u041E\u0442\u0441\u043A\u0430\u043D\u0438\u0440\u0443\u0439\u0442\u0435 \u043A\u0430\u043C\u0435\u0440\u043E\u0439 \u0432\u0430\u0448\u0435\u0433\u043E\xA0\u0442\u0435\u043B\u0435\u0444\u043E\u043D\u0430"
  },
  desktopUniversalModal: {
    connectYourWallet: "\u041F\u043E\u0434\u043A\u043B\u044E\u0447\u0438\u0442\u0435 \u043A\u043E\u0448\u0435\u043B\u0451\u043A",
    scan: "\u041E\u0442\u0441\u043A\u0430\u043D\u0438\u0440\u0443\u0439\u0442\u0435 QR-\u043A\u043E\u0434 \u043A\u0430\u043C\u0435\u0440\u043E\u0439 \u0432\u0430\u0448\u0435\u0433\u043E\xA0\u0442\u0435\u043B\u0435\u0444\u043E\u043D\u0430",
    availableWallets: "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u043A\u043E\u0448\u0435\u043B\u044C\u043A\u0438"
  },
  mobileConnectionModal: {
    showQR: "\u041F\u043E\u043A\u0430\u0437\u0430\u0442\u044C QR-\u043A\u043E\u0434",
    scanQR: "\u041E\u0442\u0441\u043A\u0430\u043D\u0438\u0440\u0443\u0439\u0442\u0435 QR-\u043A\u043E\u0434 \u043D\u0438\u0436\u0435 \u043A\u0430\u043C\u0435\u0440\u043E\u0439 \u0432\xA0\u043F\u0440\u0438\u043B\u043E\u0436\u0435\u043D\u0438\u0438 {{ name }}, \u0438\u043B\u0438\xA0\u043A\u0430\u043C\u0435\u0440\u043E\u0439 \u0442\u0435\u043B\u0435\u0444\u043E\u043D\u0430",
    continueIn: "\u041F\u0440\u043E\u0434\u043E\u043B\u0436\u0438\u0442\u0435 \u0432 {{ name }}\u2026",
    connectionDeclined: "\u041F\u043E\u0434\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0435 \u043E\u0442\u043A\u043B\u043E\u043D\u0435\u043D\u043E"
  },
  desktopConnectionModal: {
    scanQR: "\u041E\u0442\u0441\u043A\u0430\u043D\u0438\u0440\u0443\u0439\u0442\u0435 QR-\u043A\u043E\u0434 \u043D\u0438\u0436\u0435 \u043A\u0430\u043C\u0435\u0440\u043E\u0439 \u0432\xA0\u043F\u0440\u0438\u043B\u043E\u0436\u0435\u043D\u0438\u0438 {{ name }}, \u0438\u043B\u0438\xA0\u043A\u0430\u043C\u0435\u0440\u043E\u0439 \u0442\u0435\u043B\u0435\u0444\u043E\u043D\u0430",
    continueInExtension: "\u041E\u0442\u043A\u0440\u043E\u0439\u0442\u0435 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u043D\u043E\u0435 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u0438\u0435 {{ name }}",
    dontHaveExtension: "\u041F\u043E\u0445\u043E\u0436\u0435, \u0443 \u0432\u0430\u0441 \u043D\u0435\xA0\u0443\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u043D\u043E\u0435\xA0\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u0438\u0435\xA0{{ name }}",
    getWallet: "\u0421\u043A\u0430\u0447\u0430\u0442\u044C {{ name }}",
    continueOnDesktop: "\u041E\u0442\u043A\u0440\u043E\u0439\u0442\u0435 {{ name }} \u043D\u0430\xA0\u043A\u043E\u043C\u043F\u044C\u044E\u0442\u0435\u0440\u0435\u2026",
    openWalletOnTelegram: "\u041E\u0442\u043A\u0440\u044B\u0442\u044C Wallet \u0432\xA0Telegram",
    connectionDeclined: "\u041F\u043E\u0434\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0435 \u043E\u0442\u043A\u043B\u043E\u043D\u0435\u043D\u043E"
  },
  infoModal: {
    whatIsAWallet: "\u0427\u0442\u043E \u0442\u0430\u043A\u043E\u0435 \u043A\u043E\u0448\u0435\u043B\u0451\u043A?",
    secureDigitalAssets: "\u041D\u0430\u0434\u0435\u0436\u043D\u043E\u0435 \u0445\u0440\u0430\u043D\u0438\u043B\u0438\u0449\u0435 \u0446\u0438\u0444\u0440\u043E\u0432\u044B\u0445 \u0430\u043A\u0442\u0438\u0432\u043E\u0432",
    walletProtects: "\u041A\u043E\u0448\u0435\u043B\u0451\u043A \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0432\u0430\u0448\u0438 \u0446\u0438\u0444\u0440\u043E\u0432\u044B\u0435 \u0430\u043A\u0442\u0438\u0432\u044B, \u0432\u043A\u043B\u044E\u0447\u0430\u044F TON, \u0442\u043E\u043A\u0435\u043D\u044B \u0438\xA0\u043F\u0440\u0435\u0434\u043C\u0435\u0442\u044B \u043A\u043E\u043B\u043B\u0435\u043A\u0446\u0438\u043E\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F, \u0438\xA0\u0443\u043F\u0440\u0430\u0432\u043B\u044F\u0435\u0442 \u0438\u043C\u0438.",
    controlIdentity: "\u041A\u043E\u043D\u0442\u0440\u043E\u043B\u044C \u0441\u0432\u043E\u0435\u0439 \u043B\u0438\u0447\u043D\u043E\u0441\u0442\u0438 Web3",
    manageIdentity: "\u0423\u043F\u0440\u0430\u0432\u043B\u044F\u0439\u0442\u0435 \u0441\u0432\u043E\u0435\u0439 \u0446\u0438\u0444\u0440\u043E\u0432\u043E\u0439 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0435\u0439 \u0438\xA0\u0441\xA0\u043B\u0435\u0433\u043A\u043E\u0441\u0442\u044C\u044E \u043F\u043E\u043B\u0443\u0447\u0430\u0439\u0442\u0435 \u0434\u043E\u0441\u0442\u0443\u043F \u043A\xA0\u0434\u0435\u0446\u0435\u043D\u0442\u0440\u0430\u043B\u0438\u0437\u043E\u0432\u0430\u043D\u043D\u044B\u043C \u043F\u0440\u0438\u043B\u043E\u0436\u0435\u043D\u0438\u044F\u043C. \u0421\u043E\u0445\u0440\u0430\u043D\u044F\u0439\u0442\u0435 \u043A\u043E\u043D\u0442\u0440\u043E\u043B\u044C \u043D\u0430\u0434\xA0\u0441\u0432\u043E\u0438\u043C\u0438 \u0434\u0430\u043D\u043D\u044B\u043C\u0438 \u0438\xA0\u0431\u0435\u0437\u043E\u043F\u0430\u0441\u043D\u043E \u0443\u0447\u0430\u0441\u0442\u0432\u0443\u0439\u0442\u0435 \u0432\xA0\u044D\u043A\u043E\u0441\u0438\u0441\u0442\u0435\u043C\u0435\xA0\u0431\u043B\u043E\u043A\u0447\u0435\u0439\u043D\u0430.",
    effortlessCryptoTransactions: "\u041F\u0440\u043E\u0441\u0442\u044B\u0435 \u043A\u0440\u0438\u043F\u0442\u043E\u0442\u0440\u0430\u043D\u0437\u0430\u043A\u0446\u0438\u0438",
    easilySend: "\u041B\u0435\u0433\u043A\u043E \u043E\u0442\u043F\u0440\u0430\u0432\u043B\u044F\u0439\u0442\u0435, \u043F\u043E\u043B\u0443\u0447\u0430\u0439\u0442\u0435 \u0438\xA0\u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0439\u0442\u0435 \u0441\u0432\u043E\u0438 \u043A\u0440\u0438\u043F\u0442\u043E\u0432\u0430\u043B\u044E\u0442\u044B. \u041E\u043F\u0442\u0438\u043C\u0438\u0437\u0438\u0440\u0443\u0439\u0442\u0435 \u0441\u0432\u043E\u0438 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438 \u0441\xA0\u043F\u043E\u043C\u043E\u0449\u044C\u044E \u0434\u0435\u0446\u0435\u043D\u0442\u0440\u0430\u043B\u0438\u0437\u043E\u0432\u0430\u043D\u043D\u044B\u0445 \u043F\u0440\u0438\u043B\u043E\u0436\u0435\u043D\u0438\u0439.",
    getAWallet: "\u0421\u043A\u0430\u0447\u0430\u0442\u044C \u043A\u043E\u0448\u0435\u043B\u0451\u043A"
  }
};
var actionModal = {
  confirmTransaction: {
    header: "\u041F\u043E\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0432\xA0{{ name }}",
    text: "\u042D\u0442\u043E \u0437\u0430\u0439\u043C\u0435\u0442 \u043F\u0430\u0440\u0443 \u0441\u0435\u043A\u0443\u043D\u0434."
  },
  transactionSent: "$notifications.transactionSent",
  transactionCanceled: "$notifications.transactionCanceled"
};
var ru = {
  common: common,
  button: button,
  notifications: notifications,
  walletItem: walletItem,
  walletModal: walletModal,
  actionModal: actionModal
};
var i18nDictionary = {
  en: parseDictionary(en),
  ru: parseDictionary(ru)
};
function parseDictionary(dictionary) {
  var refSymbol = "$";
  var _iterate = function iterate(subDictionary) {
    Object.entries(subDictionary).forEach(function (_ref4) {
      var _ref5 = _slicedToArray(_ref4, 2),
        key = _ref5[0],
        value = _ref5[1];
      if (_typeof(value) === "object" && value) {
        return _iterate(value);
      }
      if (typeof value === "string") {
        if (value[0] === refSymbol) {
          var path = value.slice(1).split(".");
          var obj = dictionary;
          path.forEach(function (item) {
            if (item in obj) {
              obj = obj[item];
            } else {
              throw new Error("Cannot parse translations: there is no property ".concat(item, " in translation"));
            }
          });
          subDictionary[key] = obj;
        }
        if (value.slice(0, 2) === "\\".concat(refSymbol)) {
          subDictionary[key] = value.slice(1);
        }
      }
    });
  };
  _iterate(dictionary);
  return dictionary;
}
var ConnectorContext = createContext();
var $RAW = Symbol("store-raw"),
  $NODE = Symbol("store-node"),
  $NAME = Symbol("store-name");
function wrap$1(value, name) {
  var p2 = value[$PROXY];
  if (!p2) {
    Object.defineProperty(value, $PROXY, {
      value: p2 = new Proxy(value, proxyTraps$1)
    });
    if (!Array.isArray(value)) {
      var keys = Object.keys(value),
        desc = Object.getOwnPropertyDescriptors(value);
      for (var i2 = 0, l2 = keys.length; i2 < l2; i2++) {
        var prop = keys[i2];
        if (desc[prop].get) {
          Object.defineProperty(value, prop, {
            enumerable: desc[prop].enumerable,
            get: desc[prop].get.bind(p2)
          });
        }
      }
    }
  }
  return p2;
}
function isWrappable(obj) {
  var proto;
  return obj != null && _typeof(obj) === "object" && (obj[$PROXY] || !(proto = Object.getPrototypeOf(obj)) || proto === Object.prototype || Array.isArray(obj));
}
function unwrap(item) {
  var set = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /* @__PURE__ */new Set();
  var result, unwrapped, v, prop;
  if (result = item != null && item[$RAW]) return result;
  if (!isWrappable(item) || set.has(item)) return item;
  if (Array.isArray(item)) {
    if (Object.isFrozen(item)) item = item.slice(0);else set.add(item);
    for (var i2 = 0, l2 = item.length; i2 < l2; i2++) {
      v = item[i2];
      if ((unwrapped = unwrap(v, set)) !== v) item[i2] = unwrapped;
    }
  } else {
    if (Object.isFrozen(item)) item = Object.assign({}, item);else set.add(item);
    var keys = Object.keys(item),
      desc = Object.getOwnPropertyDescriptors(item);
    for (var _i6 = 0, _l = keys.length; _i6 < _l; _i6++) {
      prop = keys[_i6];
      if (desc[prop].get) continue;
      v = item[prop];
      if ((unwrapped = unwrap(v, set)) !== v) item[prop] = unwrapped;
    }
  }
  return item;
}
function getDataNodes(target) {
  var nodes = target[$NODE];
  if (!nodes) Object.defineProperty(target, $NODE, {
    value: nodes = {}
  });
  return nodes;
}
function getDataNode(nodes, property, value) {
  return nodes[property] || (nodes[property] = createDataNode(value));
}
function proxyDescriptor$1(target, property) {
  var desc = Reflect.getOwnPropertyDescriptor(target, property);
  if (!desc || desc.get || !desc.configurable || property === $PROXY || property === $NODE || property === $NAME) return desc;
  delete desc.value;
  delete desc.writable;
  desc.get = function () {
    return target[$PROXY][property];
  };
  return desc;
}
function trackSelf(target) {
  if (getListener()) {
    var nodes = getDataNodes(target);
    (nodes._ || (nodes._ = createDataNode()))();
  }
}
function ownKeys(target) {
  trackSelf(target);
  return Reflect.ownKeys(target);
}
function createDataNode(value) {
  var _createSignal21 = createSignal(value, {
      equals: false,
      internal: true
    }),
    _createSignal22 = _slicedToArray(_createSignal21, 2),
    s2 = _createSignal22[0],
    set = _createSignal22[1];
  s2.$ = set;
  return s2;
}
var proxyTraps$1 = {
  get: function get(target, property, receiver) {
    if (property === $RAW) return target;
    if (property === $PROXY) return receiver;
    if (property === $TRACK) {
      trackSelf(target);
      return receiver;
    }
    var nodes = getDataNodes(target);
    var tracked = nodes.hasOwnProperty(property);
    var value = tracked ? nodes[property]() : target[property];
    if (property === $NODE || property === "__proto__") return value;
    if (!tracked) {
      var desc = Object.getOwnPropertyDescriptor(target, property);
      if (getListener() && (typeof value !== "function" || target.hasOwnProperty(property)) && !(desc && desc.get)) value = getDataNode(nodes, property, value)();
    }
    return isWrappable(value) ? wrap$1(value) : value;
  },
  has: function has(target, property) {
    if (property === $RAW || property === $PROXY || property === $TRACK || property === $NODE || property === "__proto__") return true;
    this.get(target, property, target);
    return property in target;
  },
  set: function set() {
    return true;
  },
  deleteProperty: function deleteProperty() {
    return true;
  },
  ownKeys: ownKeys,
  getOwnPropertyDescriptor: proxyDescriptor$1
};
function setProperty(state, property, value) {
  var deleting = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  if (!deleting && state[property] === value) return;
  var prev = state[property],
    len = state.length;
  if (value === void 0) delete state[property];else state[property] = value;
  var nodes = getDataNodes(state),
    node;
  if (node = getDataNode(nodes, property, prev)) node.$(function () {
    return value;
  });
  if (Array.isArray(state) && state.length !== len) (node = getDataNode(nodes, "length", len)) && node.$(state.length);
  (node = nodes._) && node.$();
}
function mergeStoreNode(state, value) {
  var keys = Object.keys(value);
  for (var i2 = 0; i2 < keys.length; i2 += 1) {
    var key = keys[i2];
    setProperty(state, key, value[key]);
  }
}
function updateArray(current, next) {
  if (typeof next === "function") next = next(current);
  next = unwrap(next);
  if (Array.isArray(next)) {
    if (current === next) return;
    var i2 = 0,
      len = next.length;
    for (; i2 < len; i2++) {
      var value = next[i2];
      if (current[i2] !== value) setProperty(current, i2, value);
    }
    setProperty(current, "length", len);
  } else mergeStoreNode(current, next);
}
function updatePath(current, path) {
  var traversed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var part,
    prev = current;
  if (path.length > 1) {
    part = path.shift();
    var partType = _typeof(part),
      isArray = Array.isArray(current);
    if (Array.isArray(part)) {
      for (var i2 = 0; i2 < part.length; i2++) {
        updatePath(current, [part[i2]].concat(path), traversed);
      }
      return;
    } else if (isArray && partType === "function") {
      for (var _i7 = 0; _i7 < current.length; _i7++) {
        if (part(current[_i7], _i7)) updatePath(current, [_i7].concat(path), traversed);
      }
      return;
    } else if (isArray && partType === "object") {
      var _part = part,
        _part$from = _part.from,
        from = _part$from === void 0 ? 0 : _part$from,
        _part$to = _part.to,
        to = _part$to === void 0 ? current.length - 1 : _part$to,
        _part$by = _part.by,
        by = _part$by === void 0 ? 1 : _part$by;
      for (var _i8 = from; _i8 <= to; _i8 += by) {
        updatePath(current, [_i8].concat(path), traversed);
      }
      return;
    } else if (path.length > 1) {
      updatePath(current[part], path, [part].concat(traversed));
      return;
    }
    prev = current[part];
    traversed = [part].concat(traversed);
  }
  var value = path[0];
  if (typeof value === "function") {
    value = value(prev, traversed);
    if (value === prev) return;
  }
  if (part === void 0 && value == void 0) return;
  value = unwrap(value);
  if (part === void 0 || isWrappable(prev) && isWrappable(value) && !Array.isArray(value)) {
    mergeStoreNode(prev, value);
  } else setProperty(current, part, value);
}
function createStore() {
  for (var _len10 = arguments.length, _ref6 = new Array(_len10), _key11 = 0; _key11 < _len10; _key11++) {
    _ref6[_key11] = arguments[_key11];
  }
  var store = _ref6[0],
    options = _ref6[1];
  var unwrappedStore = unwrap(store || {});
  var isArray = Array.isArray(unwrappedStore);
  var wrappedStore = wrap$1(unwrappedStore);
  function setStore() {
    for (var _len11 = arguments.length, args = new Array(_len11), _key12 = 0; _key12 < _len11; _key12++) {
      args[_key12] = arguments[_key12];
    }
    batch(function () {
      isArray && args.length === 1 ? updateArray(unwrappedStore, args[0]) : updatePath(unwrappedStore, args);
    });
  }
  return [wrappedStore, setStore];
}
var defaultLightColorsSet = {
  constant: {
    black: "#000000",
    white: "#FFFFFF"
  },
  connectButton: {
    background: "#0098EA",
    foreground: "#FFFFFF"
  },
  accent: "#0098EA",
  telegramButton: "#0098EA",
  icon: {
    primary: "#0F0F0F",
    secondary: "#7A8999",
    tertiary: "#C1CAD2",
    success: "#29CC6A",
    error: "#F5A73B"
  },
  background: {
    primary: "#FFFFFF",
    secondary: "#F1F3F5",
    segment: "#FFFFFF",
    tint: "#F1F3F5",
    qr: "#F1F3F5"
  },
  text: {
    primary: "#0F0F0F",
    secondary: "#6A7785"
  }
};
var defaultDarkColorsSet = {
  constant: {
    black: "#000000",
    white: "#FFFFFF"
  },
  connectButton: {
    background: "#0098EA",
    foreground: "#FFFFFF"
  },
  accent: "#E5E5EA",
  telegramButton: "#31A6F5",
  icon: {
    primary: "#E5E5EA",
    secondary: "#909099",
    tertiary: "#434347",
    success: "#29CC6A",
    error: "#F5A73B"
  },
  background: {
    primary: "#121214",
    secondary: "#18181A",
    segment: "#262629",
    tint: "#222224",
    qr: "#FFFFFF"
  },
  text: {
    primary: "#E5E5EA",
    secondary: "#7D7D85"
  }
};
/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
function isObject(o2) {
  return Object.prototype.toString.call(o2) === "[object Object]";
}
function isPlainObject(o2) {
  var ctor, prot;
  if (isObject(o2) === false) return false;
  ctor = o2.constructor;
  if (ctor === void 0) return true;
  prot = ctor.prototype;
  if (isObject(prot) === false) return false;
  if (prot.hasOwnProperty("isPrototypeOf") === false) {
    return false;
  }
  return true;
}
function mergeOptions(options, defaultOptions) {
  if (!options) {
    return defaultOptions;
  }
  var overwriteMerge = function overwriteMerge(_, sourceArray, __) {
    return sourceArray;
  };
  return (0, _deepmerge["default"])(defaultOptions, options, {
    arrayMerge: overwriteMerge,
    isMergeableObject: isPlainObject
  });
}
var _createStore = createStore({
    theme: THEME.LIGHT,
    colors: defaultLightColorsSet,
    borderRadius: "m"
  }),
  _createStore2 = _slicedToArray(_createStore, 2),
  themeState = _createStore2[0],
  setThemeState = _createStore2[1];
var themeColorsMappingDefault = _defineProperty(_defineProperty({}, THEME.LIGHT, defaultLightColorsSet), THEME.DARK, defaultDarkColorsSet);
var themeCustomColors = _defineProperty(_defineProperty({}, THEME.LIGHT, void 0), THEME.DARK, void 0);
function setTheme(theme, colorsSet) {
  if (colorsSet) {
    themeCustomColors[THEME.DARK] = mergeOptions(colorsSet[THEME.DARK], themeCustomColors[THEME.DARK]);
    themeCustomColors[THEME.LIGHT] = mergeOptions(colorsSet[THEME.LIGHT], themeCustomColors[THEME.LIGHT]);
  }
  setThemeState({
    theme: theme,
    colors: mergeOptions(themeCustomColors[theme], themeColorsMappingDefault[theme])
  });
}
function setBorderRadius(borderRadius) {
  setThemeState({
    borderRadius: borderRadius
  });
}
function setColors(colorsSet) {
  themeCustomColors[THEME.DARK] = mergeOptions(colorsSet[THEME.DARK], themeCustomColors[THEME.DARK]);
  themeCustomColors[THEME.LIGHT] = mergeOptions(colorsSet[THEME.LIGHT], themeCustomColors[THEME.LIGHT]);
  setThemeState(function (state) {
    return {
      colors: mergeOptions(themeCustomColors[state.theme], themeColorsMappingDefault[state.theme])
    };
  });
}
var ImagePlaceholder = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n    background-color: ", ";\n"])), function (props) {
  return props.theme.colors.background.secondary;
});
var Image = function Image(props) {
  var imgRef;
  var _createSignal23 = createSignal(null),
    _createSignal24 = _slicedToArray(_createSignal23, 2),
    image = _createSignal24[0],
    setImage = _createSignal24[1];
  createEffect(function () {
    var img = new window.Image();
    img.src = props.src;
    img.alt = props.alt || "";
    img.setAttribute("draggable", "false");
    if (props["class"]) {
      img.classList.add(props["class"]);
    }
    if (img.complete) {
      return setImage(img);
    }
    img.addEventListener("load", function () {
      return setImage(img);
    });
    return function () {
      return img.removeEventListener("load", function () {
        return setImage(img);
      });
    };
  });
  return [createComponent(Show, {
    get when() {
      return image();
    },
    get children() {
      return image();
    }
  }), createComponent(Show, {
    get when() {
      return !image();
    },
    get children() {
      return createComponent(ImagePlaceholder, _defineProperty(_defineAccessor("get", {}, "class", function () {
        return props["class"];
      }), "ref", function ref(r$) {
        var _ref$ = imgRef;
        typeof _ref$ === "function" ? _ref$(r$) : imgRef = r$;
      }));
    }
  })];
};
var initParams = {};
try {
  var locationHash = location.hash.toString();
  initParams = urlParseHashParams(locationHash);
} catch (e2) {}
var tmaPlatform = "unknown";
if (initParams == null ? void 0 : initParams.tgWebAppPlatform) {
  tmaPlatform = (_a = initParams.tgWebAppPlatform) != null ? _a : "unknown";
}
if (tmaPlatform === "unknown") {
  var window2 = getWindow$1();
  tmaPlatform = (_d = (_c = (_b = window2 == null ? void 0 : window2.Telegram) == null ? void 0 : _b.WebApp) == null ? void 0 : _c.platform) != null ? _d : "unknown";
}
var webAppVersion = "6.0";
if (initParams == null ? void 0 : initParams.tgWebAppVersion) {
  webAppVersion = initParams.tgWebAppVersion;
}
if (!webAppVersion) {
  var _window = getWindow$1();
  webAppVersion = (_g = (_f = (_e = _window == null ? void 0 : _window.Telegram) == null ? void 0 : _e.WebApp) == null ? void 0 : _f.version) != null ? _g : "6.0";
}
function isTmaPlatform() {
  for (var _len12 = arguments.length, platforms = new Array(_len12), _key13 = 0; _key13 < _len12; _key13++) {
    platforms[_key13] = arguments[_key13];
  }
  return platforms.includes(tmaPlatform);
}
function isInTMA() {
  var _a2;
  return tmaPlatform !== "unknown" || !!((_a2 = getWindow$1()) == null ? void 0 : _a2.TelegramWebviewProxy);
}
function isInTelegramBrowser() {
  var _a2;
  var isTelegramWebview = !!((_a2 = getWindow$1()) == null ? void 0 : _a2.TelegramWebview);
  return (isInTMA() || isTelegramWebview) && tmaPlatform === "unknown";
}
function sendExpand() {
  postEvent("web_app_expand", {});
}
function sendOpenTelegramLink(link, fallback) {
  var url = new URL(link);
  if (url.protocol !== "http:" && url.protocol !== "https:") {
    if (fallback) {
      return fallback();
    }
    throw new TonConnectUIError("Url protocol is not supported: ".concat(url));
  }
  if (url.hostname !== "t.me") {
    if (fallback) {
      return fallback();
    }
    throw new TonConnectUIError("Url host is not supported: ".concat(url));
  }
  var pathFull = url.pathname + url.search;
  if (isIframe() || versionAtLeast("6.1")) {
    postEvent("web_app_open_tg_link", {
      path_full: pathFull
    });
  } else {
    openLinkBlank("https://t.me" + pathFull);
  }
}
function isIframe() {
  try {
    var _window2 = getWindow$1();
    if (!_window2) {
      return false;
    }
    return _window2.parent != null && _window2 !== _window2.parent;
  } catch (e2) {
    return false;
  }
}
function postEvent(eventType, eventData) {
  try {
    var _window3 = getWindow$1();
    if (!_window3) {
      throw new TonConnectUIError("Can't post event to parent window: window is not defined");
    }
    if (_window3.TelegramWebviewProxy !== void 0) {
      logDebug("postEvent", eventType, eventData);
      _window3.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));
    } else if (_window3.external && "notify" in _window3.external) {
      logDebug("postEvent", eventType, eventData);
      _window3.external.notify(JSON.stringify({
        eventType: eventType,
        eventData: eventData
      }));
    } else if (isIframe()) {
      var trustedTarget = "*";
      var message = JSON.stringify({
        eventType: eventType,
        eventData: eventData
      });
      logDebug("postEvent", eventType, eventData);
      _window3.parent.postMessage(message, trustedTarget);
    } else {
      throw new TonConnectUIError("Can't post event to TMA");
    }
  } catch (e2) {
    logError("Can't post event to parent window: ".concat(e2));
  }
}
function urlParseHashParams(locationHash) {
  locationHash = locationHash.replace(/^#/, "");
  var params = {};
  if (!locationHash.length) {
    return params;
  }
  if (locationHash.indexOf("=") < 0 && locationHash.indexOf("?") < 0) {
    params._path = urlSafeDecode(locationHash);
    return params;
  }
  var qIndex = locationHash.indexOf("?");
  if (qIndex >= 0) {
    var pathParam = locationHash.substr(0, qIndex);
    params._path = urlSafeDecode(pathParam);
    locationHash = locationHash.substr(qIndex + 1);
  }
  var query_params = urlParseQueryString(locationHash);
  for (var k in query_params) {
    params[k] = query_params[k];
  }
  return params;
}
function urlSafeDecode(urlencoded) {
  try {
    urlencoded = urlencoded.replace(/\+/g, "%20");
    return decodeURIComponent(urlencoded);
  } catch (e2) {
    return urlencoded;
  }
}
function urlParseQueryString(queryString) {
  var params = {};
  if (!queryString.length) {
    return params;
  }
  var queryStringParams = queryString.split("&");
  var i2, param, paramName, paramValue;
  for (i2 = 0; i2 < queryStringParams.length; i2++) {
    param = queryStringParams[i2].split("=");
    paramName = urlSafeDecode(param[0]);
    paramValue = param[1] == null ? null : urlSafeDecode(param[1]);
    params[paramName] = paramValue;
  }
  return params;
}
function versionCompare(v1, v2) {
  if (typeof v1 !== "string") v1 = "";
  if (typeof v2 !== "string") v2 = "";
  var v1List = v1.replace(/^\s+|\s+$/g, "").split(".");
  var v2List = v2.replace(/^\s+|\s+$/g, "").split(".");
  var a2, i2, p1, p2;
  a2 = Math.max(v1List.length, v2List.length);
  for (i2 = 0; i2 < a2; i2++) {
    p1 = parseInt(v1List[i2]) || 0;
    p2 = parseInt(v2List[i2]) || 0;
    if (p1 === p2) continue;
    if (p1 > p2) return 1;
    return -1;
  }
  return 0;
}
function versionAtLeast(ver) {
  return versionCompare(webAppVersion, ver) >= 0;
}
var maxWidth = {
  mobile: 440,
  tablet: 1020
};
function isDevice(device) {
  var window2 = getWindow$1();
  if (!window2) {
    return device === "desktop";
  }
  if (isTmaPlatform("weba")) {
    return true;
  }
  var width = window2.innerWidth;
  switch (device) {
    case "desktop":
      return width > maxWidth.tablet;
    case "tablet":
      return width > maxWidth.mobile;
    default:
    case "mobile":
      return width <= maxWidth.mobile || isOS("ios", "android", "ipad");
  }
}
function media(device) {
  switch (device) {
    case "mobile":
      return "@media (max-width: ".concat(maxWidth.mobile, "px)");
    case "tablet":
      return "@media (max-width: ".concat(maxWidth.tablet, "px) (min-width: ").concat(maxWidth.mobile, "px)");
    default:
    case "desktop":
      return "@media (min-width: ".concat(maxWidth.tablet, "px)");
  }
}
var mediaTouch = "@media (hover: none)";
var mediaNotTouch = "@media not all and (hover: none)";
var borders$5 = {
  m: "100vh",
  s: "8px",
  none: "0"
};
var scaleValues = {
  s: 0.02,
  m: 0.04
};
var ButtonStyled$1 = styled.button(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n    display: ", ";\n    gap: ", ";\n    align-items: ", ";\n    justify-content: ", ";\n    background-color: ", ";\n    color: ", ";\n\n    padding: ", ";\n    padding-left: ", ";\n    padding-right: ", ";\n    border: none;\n    border-radius: ", ";\n    cursor: ", ";\n\n    font-size: 14px;\n    font-weight: 510;\n    line-height: 18px;\n\n    transition: transform 0.125s ease-in-out;\n\n    ", " {\n        &:hover {\n            transform: ", ";\n        }\n    }\n\n    &:active {\n        transform: ", ";\n    }\n\n    ", " {\n        &:active {\n            transform: ", ";\n        }\n    }\n"])), function (props) {
  return props.leftIcon || props.rightIcon ? "flex" : "inline-block";
}, function (props) {
  return props.leftIcon || props.rightIcon ? "6px" : "unset";
}, function (props) {
  return props.leftIcon || props.rightIcon ? "center" : "unset";
}, function (props) {
  return props.leftIcon || props.rightIcon ? "space-between" : "unset";
}, function (props) {
  return props.appearance === "flat" ? "transparent" : props.appearance === "secondary" ? props.theme.colors.background.tint : rgba(props.theme.colors.accent, 0.12);
}, function (props) {
  return props.appearance === "secondary" ? props.theme.colors.text.primary : props.theme.colors.accent;
}, function (props) {
  return props.appearance === "flat" ? "0" : "9px 16px";
}, function (props) {
  return props.leftIcon && props.appearance !== "flat" ? "12px" : "16px";
}, function (props) {
  return props.rightIcon && props.appearance !== "flat" ? "12px" : "16px";
}, function (props) {
  return borders$5[props.theme.borderRadius];
}, function (props) {
  return props.disabled ? "not-allowed" : "pointer";
}, mediaNotTouch, function (props) {
  return props.disabled ? "unset" : "scale(".concat(1 + scaleValues[props.scale], ")");
}, function (props) {
  return props.disabled ? "unset" : "scale(".concat(1 - scaleValues[props.scale], ")");
}, mediaTouch, function (props) {
  return props.disabled ? "unset" : "scale(".concat(1 - scaleValues[props.scale] * 2, ")");
});
function useDataAttributes(props) {
  var keys = untrack(function () {
    return Object.keys(props).filter(function (key) {
      return key.startsWith("data-");
    });
  });
  var _splitProps5 = splitProps(props, keys),
    _splitProps6 = _slicedToArray(_splitProps5, 1),
    dataAttrs = _splitProps6[0];
  return dataAttrs;
}
var Button = function Button(props) {
  var dataAttrs = useDataAttributes(props);
  return createComponent(ButtonStyled$1, mergeProps(_defineProperty(_defineAccessor("get", _defineAccessor("get", _defineAccessor("get", _defineAccessor("get", _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineAccessor("get", {
    get appearance() {
      return props.appearance || "primary";
    }
  }, "class", function () {
    return props["class"];
  }), "onClick", function onClick(e2) {
    var _a2;
    return (_a2 = props.onClick) == null ? void 0 : _a2.call(props, e2);
  }), "onMouseEnter", function onMouseEnter(e2) {
    var _a2;
    return (_a2 = props.onMouseEnter) == null ? void 0 : _a2.call(props, e2);
  }), "onMouseLeave", function onMouseLeave(e2) {
    var _a2;
    return (_a2 = props.onMouseLeave) == null ? void 0 : _a2.call(props, e2);
  }), "ref", function ref(r$) {
    var _ref$ = props.ref;
    typeof _ref$ === "function" ? _ref$(r$) : props.ref = r$;
  }), "disabled", function () {
    return props.disabled;
  }), "scale", function () {
    return props.scale || "m";
  }), "leftIcon", function () {
    return !!props.leftIcon;
  }), "rightIcon", function () {
    return !!props.rightIcon;
  }), "data-tc-button", "true"), dataAttrs, {
    get children() {
      return [createMemo(function () {
        return props.leftIcon;
      }), createMemo(function () {
        return props.children;
      }), createMemo(function () {
        return props.rightIcon;
      })];
    }
  }));
};
function nextFrame(fn) {
  requestAnimationFrame(function () {
    requestAnimationFrame(fn);
  });
}
var Transition = function Transition(props) {
  var el;
  var first = true;
  var _createSignal25 = createSignal(),
    _createSignal26 = _slicedToArray(_createSignal25, 2),
    s1 = _createSignal26[0],
    set1 = _createSignal26[1];
  var _createSignal27 = createSignal(),
    _createSignal28 = _slicedToArray(_createSignal27, 2),
    s2 = _createSignal28[0],
    set2 = _createSignal28[1];
  var resolved = children(function () {
    return props.children;
  });
  var onBeforeEnter = props.onBeforeEnter,
    onEnter = props.onEnter,
    onAfterEnter = props.onAfterEnter,
    onBeforeExit = props.onBeforeExit,
    onExit = props.onExit,
    onAfterExit = props.onAfterExit;
  var classnames = createMemo(function () {
    var name = props.name || "s";
    return {
      enterActiveClass: props.enterActiveClass || name + "-enter-active",
      enterClass: props.enterClass || name + "-enter",
      enterToClass: props.enterToClass || name + "-enter-to",
      exitActiveClass: props.exitActiveClass || name + "-exit-active",
      exitClass: props.exitClass || name + "-exit",
      exitToClass: props.exitToClass || name + "-exit-to"
    };
  });
  function enterTransition(el2, prev) {
    if (!first || props.appear) {
      var _el2$classList3, _el2$classList4;
      var _endTransition = function endTransition(e2) {
        if (el2 && (!e2 || e2.target === el2)) {
          var _el2$classList, _el2$classList2;
          el2.removeEventListener("transitionend", _endTransition);
          el2.removeEventListener("animationend", _endTransition);
          (_el2$classList = el2.classList).remove.apply(_el2$classList, _toConsumableArray(enterActiveClasses));
          (_el2$classList2 = el2.classList).remove.apply(_el2$classList2, _toConsumableArray(enterToClasses));
          batch(function () {
            s1() !== el2 && set1(el2);
            s2() === el2 && set2(void 0);
          });
          onAfterEnter && onAfterEnter(el2);
          if (props.mode === "inout") exitTransition(el2, prev);
        }
      };
      var enterClasses = classnames().enterClass.split(" ");
      var enterActiveClasses = classnames().enterActiveClass.split(" ");
      var enterToClasses = classnames().enterToClass.split(" ");
      onBeforeEnter && onBeforeEnter(el2);
      (_el2$classList3 = el2.classList).add.apply(_el2$classList3, _toConsumableArray(enterClasses));
      (_el2$classList4 = el2.classList).add.apply(_el2$classList4, _toConsumableArray(enterActiveClasses));
      nextFrame(function () {
        var _el2$classList5, _el2$classList6;
        (_el2$classList5 = el2.classList).remove.apply(_el2$classList5, _toConsumableArray(enterClasses));
        (_el2$classList6 = el2.classList).add.apply(_el2$classList6, _toConsumableArray(enterToClasses));
        onEnter && onEnter(el2, function () {
          return _endTransition();
        });
        if (!onEnter || onEnter.length < 2) {
          el2.addEventListener("transitionend", _endTransition);
          el2.addEventListener("animationend", _endTransition);
        }
      });
    }
    prev && !props.mode ? set2(el2) : set1(el2);
  }
  function exitTransition(el2, prev) {
    var _prev$classList, _prev$classList2;
    var exitClasses = classnames().exitClass.split(" ");
    var exitActiveClasses = classnames().exitActiveClass.split(" ");
    var exitToClasses = classnames().exitToClass.split(" ");
    if (!prev.parentNode) return endTransition();
    onBeforeExit && onBeforeExit(prev);
    (_prev$classList = prev.classList).add.apply(_prev$classList, _toConsumableArray(exitClasses));
    (_prev$classList2 = prev.classList).add.apply(_prev$classList2, _toConsumableArray(exitActiveClasses));
    nextFrame(function () {
      var _prev$classList3, _prev$classList4;
      (_prev$classList3 = prev.classList).remove.apply(_prev$classList3, _toConsumableArray(exitClasses));
      (_prev$classList4 = prev.classList).add.apply(_prev$classList4, _toConsumableArray(exitToClasses));
    });
    onExit && onExit(prev, function () {
      return endTransition();
    });
    if (!onExit || onExit.length < 2) {
      prev.addEventListener("transitionend", endTransition);
      prev.addEventListener("animationend", endTransition);
    }
    function endTransition(e2) {
      if (!e2 || e2.target === prev) {
        var _prev$classList5, _prev$classList6;
        prev.removeEventListener("transitionend", endTransition);
        prev.removeEventListener("animationend", endTransition);
        (_prev$classList5 = prev.classList).remove.apply(_prev$classList5, _toConsumableArray(exitActiveClasses));
        (_prev$classList6 = prev.classList).remove.apply(_prev$classList6, _toConsumableArray(exitToClasses));
        s1() === prev && set1(void 0);
        onAfterExit && onAfterExit(prev);
        if (props.mode === "outin") enterTransition(el2, prev);
      }
    }
  }
  createComputed(function (prev) {
    el = resolved();
    while (typeof el === "function") el = el();
    return untrack(function () {
      if (el && el !== prev) {
        if (props.mode !== "outin") enterTransition(el, prev);else if (first) set1(el);
      }
      if (prev && prev !== el && props.mode !== "inout") exitTransition(el, prev);
      first = false;
      return el;
    });
  });
  return [s1, s2];
};
function getRect(element) {
  var _element$getBoundingC = element.getBoundingClientRect(),
    top = _element$getBoundingC.top,
    bottom = _element$getBoundingC.bottom,
    left = _element$getBoundingC.left,
    right = _element$getBoundingC.right,
    width = _element$getBoundingC.width,
    height = _element$getBoundingC.height;
  var parentRect = element.parentNode.getBoundingClientRect();
  return {
    top: top - parentRect.top,
    bottom: bottom,
    left: left - parentRect.left,
    right: right,
    width: width,
    height: height
  };
}
var TransitionGroup = function TransitionGroup(props) {
  var resolved = children(function () {
    return props.children;
  });
  var classnames = createMemo(function () {
    var name = props.name || "s";
    return {
      enterActiveClass: props.enterActiveClass || name + "-enter-active",
      enterClass: props.enterClass || name + "-enter",
      enterToClass: props.enterToClass || name + "-enter-to",
      exitActiveClass: props.exitActiveClass || name + "-exit-active",
      exitClass: props.exitClass || name + "-exit",
      exitToClass: props.exitToClass || name + "-exit-to",
      moveClass: props.moveClass || name + "-move"
    };
  });
  var onBeforeEnter = props.onBeforeEnter,
    onEnter = props.onEnter,
    onAfterEnter = props.onAfterEnter,
    onBeforeExit = props.onBeforeExit,
    onExit = props.onExit,
    onAfterExit = props.onAfterExit;
  var _createSignal29 = createSignal(),
    _createSignal30 = _slicedToArray(_createSignal29, 2),
    combined = _createSignal30[0],
    setCombined = _createSignal30[1];
  var p2 = [];
  var first = true;
  createComputed(function () {
    var c2 = resolved();
    var comb = _toConsumableArray(c2);
    var next = new Set(c2);
    var prev = new Set(p2);
    var enterClasses = classnames().enterClass.split(" ");
    var enterActiveClasses = classnames().enterActiveClass.split(" ");
    var enterToClasses = classnames().enterToClass.split(" ");
    var exitClasses = classnames().exitClass.split(" ");
    var exitActiveClasses = classnames().exitActiveClass.split(" ");
    var exitToClasses = classnames().exitToClass.split(" ");
    var _loop4 = function _loop4() {
      var el = c2[i2];
      if (!first && !prev.has(el)) {
        var _el$classList3, _el$classList4;
        var _endTransition2 = function endTransition(e2) {
          if (el && (!e2 || e2.target === el)) {
            var _el$classList, _el$classList2;
            el.removeEventListener("transitionend", _endTransition2);
            el.removeEventListener("animationend", _endTransition2);
            (_el$classList = el.classList).remove.apply(_el$classList, _toConsumableArray(enterActiveClasses));
            (_el$classList2 = el.classList).remove.apply(_el$classList2, _toConsumableArray(enterToClasses));
            onAfterEnter && onAfterEnter(el);
          }
        };
        onBeforeEnter && onBeforeEnter(el);
        (_el$classList3 = el.classList).add.apply(_el$classList3, _toConsumableArray(enterClasses));
        (_el$classList4 = el.classList).add.apply(_el$classList4, _toConsumableArray(enterActiveClasses));
        nextFrame(function () {
          var _el$classList5, _el$classList6;
          (_el$classList5 = el.classList).remove.apply(_el$classList5, _toConsumableArray(enterClasses));
          (_el$classList6 = el.classList).add.apply(_el$classList6, _toConsumableArray(enterToClasses));
          onEnter && onEnter(el, function () {
            return _endTransition2();
          });
          if (!onEnter || onEnter.length < 2) {
            el.addEventListener("transitionend", _endTransition2);
            el.addEventListener("animationend", _endTransition2);
          }
        });
      }
    };
    for (var i2 = 0; i2 < c2.length; i2++) {
      _loop4();
    }
    var _loop5 = function _loop5() {
      var old = p2[_i9];
      if (!next.has(old) && old.parentNode) {
        var _old$classList3, _old$classList4;
        var _endTransition3 = function endTransition(e2) {
          if (!e2 || e2.target === old) {
            var _old$classList, _old$classList2;
            old.removeEventListener("transitionend", _endTransition3);
            old.removeEventListener("animationend", _endTransition3);
            (_old$classList = old.classList).remove.apply(_old$classList, _toConsumableArray(exitActiveClasses));
            (_old$classList2 = old.classList).remove.apply(_old$classList2, _toConsumableArray(exitToClasses));
            onAfterExit && onAfterExit(old);
            p2 = p2.filter(function (i3) {
              return i3 !== old;
            });
            setCombined(p2);
          }
        };
        comb.splice(_i9, 0, old);
        onBeforeExit && onBeforeExit(old);
        (_old$classList3 = old.classList).add.apply(_old$classList3, _toConsumableArray(exitClasses));
        (_old$classList4 = old.classList).add.apply(_old$classList4, _toConsumableArray(exitActiveClasses));
        nextFrame(function () {
          var _old$classList5, _old$classList6;
          (_old$classList5 = old.classList).remove.apply(_old$classList5, _toConsumableArray(exitClasses));
          (_old$classList6 = old.classList).add.apply(_old$classList6, _toConsumableArray(exitToClasses));
        });
        onExit && onExit(old, function () {
          return _endTransition3();
        });
        if (!onExit || onExit.length < 2) {
          old.addEventListener("transitionend", _endTransition3);
          old.addEventListener("animationend", _endTransition3);
        }
      }
    };
    for (var _i9 = 0; _i9 < p2.length; _i9++) {
      _loop5();
    }
    p2 = comb;
    setCombined(comb);
  });
  createEffect(function (nodes) {
    var c2 = combined();
    c2.forEach(function (child) {
      var n2;
      if (!(n2 = nodes.get(child))) {
        nodes.set(child, n2 = {
          pos: getRect(child),
          "new": !first
        });
      } else if (n2["new"]) {
        n2["new"] = false;
        n2.newPos = getRect(child);
      }
      if (n2["new"]) {
        child.addEventListener("transitionend", function () {
          n2["new"] = false;
          child.parentNode && (n2.newPos = getRect(child));
        }, {
          once: true
        });
      }
      n2.newPos && (n2.pos = n2.newPos);
      n2.newPos = getRect(child);
    });
    if (first) {
      first = false;
      return nodes;
    }
    c2.forEach(function (child) {
      var c3 = nodes.get(child);
      var oldPos = c3.pos;
      var newPos = c3.newPos;
      var dx = oldPos.left - newPos.left;
      var dy = oldPos.top - newPos.top;
      if (dx || dy) {
        c3.moved = true;
        var s2 = child.style;
        s2.transform = "translate(".concat(dx, "px,").concat(dy, "px)");
        s2.transitionDuration = "0s";
      }
    });
    document.body.offsetHeight;
    c2.forEach(function (child) {
      var c3 = nodes.get(child);
      if (c3.moved) {
        var _child$classList2;
        var _endTransition4 = function endTransition(e2) {
          if (e2 && e2.target !== child || !child.parentNode) return;
          if (!e2 || /transform$/.test(e2.propertyName)) {
            var _child$classList;
            child.removeEventListener("transitionend", _endTransition4);
            (_child$classList = child.classList).remove.apply(_child$classList, _toConsumableArray(moveClasses));
          }
        };
        c3.moved = false;
        var s2 = child.style;
        var moveClasses = classnames().moveClass.split(" ");
        (_child$classList2 = child.classList).add.apply(_child$classList2, _toConsumableArray(moveClasses));
        s2.transform = s2.transitionDuration = "";
        child.addEventListener("transitionend", _endTransition4);
      }
    });
    return nodes;
  }, /* @__PURE__ */new Map());
  return combined;
};
function clickOutside$1(el, accessor) {
  var onClick = function onClick(e2) {
    var _a2;
    return !el.contains(e2.target) && ((_a2 = accessor()) == null ? void 0 : _a2());
  };
  document.body.addEventListener("click", onClick);
  onCleanup(function () {
    return document.body.removeEventListener("click", onClick);
  });
}
function escPressed(_, accessor) {
  var onKeyPress = function onKeyPress(e2) {
    var _a2, _b2;
    if (e2.key === "Escape") {
      (_a2 = document.activeElement) == null ? void 0 : _a2.blur();
      (_b2 = accessor()) == null ? void 0 : _b2();
    }
  };
  document.body.addEventListener("keydown", onKeyPress);
  onCleanup(function () {
    return document.body.removeEventListener("keydown", onKeyPress);
  });
}
function androidBackHandler$1(_, config) {
  var _config = config(),
    isEnabled = _config.isEnabled,
    onClose = _config.onClose;
  if (!isEnabled) {
    return;
  }
  var userOSIsAndroid = getUserAgent().os === "android";
  if (!userOSIsAndroid) {
    return;
  }
  window.history.pushState(ROUTE_STATE, "");
  var popstateHandler = function popstateHandler(event) {
    event.preventDefault();
    onClose();
  };
  window.addEventListener("popstate", popstateHandler, {
    once: true
  });
  onCleanup(function () {
    window.removeEventListener("popstate", popstateHandler);
    createMacrotask(function () {
      var _a2;
      if (((_a2 = window.history.state) == null ? void 0 : _a2[ROUTE_STATE_KEY]) === true) {
        window.history.back();
      }
    });
  });
}
var ROUTE_STATE_KEY = "androidBackHandler";
var ROUTE_STATE = _defineProperty({}, ROUTE_STATE_KEY, true);
var _tmpl$$w = /* @__PURE__ */template$1("<svg><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.2122 14.3407C10.5384 14.0854 10.5959 13.614 10.3406 13.2878L6.20237 8.00003L10.3406 2.71227C10.5959 2.38607 10.5384 1.91469 10.2122 1.6594C9.88604 1.40412 9.41465 1.46161 9.15937 1.7878L4.65937 7.5378C4.44688 7.80932 4.44688 8.19074 4.65937 8.46226L9.15937 14.2123C9.41465 14.5385 9.88604 14.5959 10.2122 14.3407Z\"></path></svg>", 4, true);
var rotationDegrees = {
  left: 0,
  top: 90,
  right: 180,
  bottom: 270
};
var ArrowIcon = function ArrowIcon(props) {
  var theme = useTheme();
  var fill = function fill() {
    return props.fill || theme.colors.icon.secondary;
  };
  var direction = function direction() {
    return props.direction || "left";
  };
  var Svg = styled("svg")(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n        transform: rotate(", "deg);\n        transition: transform 0.1s ease-in-out;\n    "])), function (props2) {
    return rotationDegrees[props2.svgDirection];
  });
  return createComponent(Svg, {
    xmlns: "http://www.w3.org/2000/svg",
    width: "16",
    height: "16",
    viewBox: "0 0 16 16",
    fill: "none",
    get svgDirection() {
      return direction();
    },
    get children() {
      var _el$ = _tmpl$$w.cloneNode(true);
      createRenderEffect(function () {
        return setAttribute(_el$, "fill", fill());
      });
      return _el$;
    }
  });
};
var _tmpl$$v = /* @__PURE__ */template$1("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.71966 2.71968C3.01255 2.42678 3.48743 2.42677 3.78032 2.71966L8.00002 6.93925L12.2197 2.71967C12.5126 2.42677 12.9874 2.42678 13.2803 2.71967C13.5732 3.01257 13.5732 3.48744 13.2803 3.78033L9.06068 7.99991L13.2803 12.2197C13.5732 12.5126 13.5732 12.9874 13.2803 13.2803C12.9874 13.5732 12.5126 13.5732 12.2197 13.2803L8.00002 9.06057L3.78033 13.2803C3.48744 13.5732 3.01257 13.5732 2.71967 13.2803C2.42678 12.9874 2.42677 12.5126 2.71967 12.2197L6.93936 7.99991L2.71968 3.78034C2.42678 3.48745 2.42677 3.01257 2.71966 2.71968Z\"></path></svg>");
var CloseIcon = function CloseIcon(props) {
  var theme = useTheme();
  var fill = function fill() {
    return props.fill || theme.colors.icon.secondary;
  };
  return function () {
    var _el$ = _tmpl$$v.cloneNode(true),
      _el$2 = _el$.firstChild;
    createRenderEffect(function () {
      return setAttribute(_el$2, "fill", fill());
    });
    return _el$;
  }();
};
var IconButtonStyled = styled.button(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n    padding: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    background-color: ", ";\n    border: none;\n    cursor: pointer;\n\n    transition: transform 0.125s ease-in-out;\n\n    ", " {\n        &:hover {\n            transform: scale(1.04);\n        }\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n\n    ", " {\n        &:active {\n            transform: scale(0.92);\n        }\n    }\n"])), function (props) {
  return props.theme.colors.background.tint;
}, mediaNotTouch, mediaTouch);
var IconButton = function IconButton(props) {
  var dataAttrs = useDataAttributes(props);
  var icon = function icon() {
    return props.icon || "close";
  };
  return createComponent(IconButtonStyled, mergeProps(_defineProperty(_defineProperty(_defineAccessor("get", {}, "class", function () {
    return props["class"];
  }), "onClick", function onClick() {
    return props.onClick();
  }), "data-tc-icon-button", "true"), dataAttrs, {
    get children() {
      return [createComponent(Show, {
        get when() {
          return !!props.children;
        },
        get children() {
          return props.children;
        }
      }), createComponent(Show, {
        get when() {
          return !props.children;
        },
        get children() {
          return createComponent(Switch, {
            get children() {
              return [createComponent(Match, {
                get when() {
                  return icon() === "close";
                },
                get children() {
                  return createComponent(CloseIcon, {
                    get fill() {
                      return props.fill;
                    }
                  });
                }
              }), createComponent(Match, {
                get when() {
                  return icon() === "arrow";
                },
                get children() {
                  return createComponent(ArrowIcon, {
                    get fill() {
                      return props.fill;
                    }
                  });
                }
              }), createComponent(Match, {
                get when() {
                  return icon() === "question";
                },
                get children() {
                  return createComponent(QuestionIcon, {
                    get fill() {
                      return props.fill;
                    }
                  });
                }
              }), createComponent(Match, {
                get when() {
                  return typeof icon() !== "string";
                },
                get children() {
                  return icon();
                }
              })];
            }
          });
        }
      })];
    }
  }));
};
var borders$4 = {
  m: "24px",
  s: "16px",
  none: "0"
};
var ModalBackgroundStyled = styled.div(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n    display: flex;\n    position: fixed;\n    z-index: 1000;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.4);\n    padding: 20px 0;\n    overflow-y: auto;\n\n    ", " {\n        padding-bottom: 0;\n    }\n"])), media("mobile"));
var ModalWrapperClass = u(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\n    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08), 0 16px 64px rgba(0, 0, 0, 0.16);\n    width: fit-content;\n    margin: auto;\n\n    ", " {\n        width: 100%;\n        height: fit-content;\n        margin: auto 0 0 0;\n    }\n"])), media("mobile"));
var ModalBodyStyled = styled.div(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["\n    position: relative;\n    min-height: 100px;\n    width: 416px;\n    padding: 44px 56px 24px;\n\n    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.04);\n\n    background-color: ", ";\n    border-radius: ", ";\n\n    ", " {\n        width: 100%;\n    }\n"])), function (props) {
  return props.theme.colors.background.primary;
}, function (props) {
  return borders$4[props.theme.borderRadius];
}, media("mobile"));
var CloseButtonStyled = styled(IconButton)(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["\n    position: absolute;\n    right: 16px;\n    top: 16px;\n"])));
var ModalFooterStyled = styled.div(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral(["\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 16px 16px 16px 18px;\n    border-radius: 0 0 ", "\n        ", ";\n"])), function (props) {
  return borders$4[props.theme.borderRadius];
}, function (props) {
  return borders$4[props.theme.borderRadius];
});
var QuestionButtonStyled = styled(IconButton)(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral(["\n    background-color: ", ";\n"])), function (props) {
  return rgba(props.theme.colors.icon.secondary, 0.12);
});
var AnimationTimelineNoop = /*#__PURE__*/_createClass(function AnimationTimelineNoop() {
  _classCallCheck(this, AnimationTimelineNoop);
  __publicField(this, "currentTime", 0);
});
var _AnimationNoop2 = /*#__PURE__*/function () {
  function _AnimationNoop() {
    _classCallCheck(this, _AnimationNoop);
    __publicField(this, "currentTime", 0);
    __publicField(this, "playbackRate", 1);
    __publicField(this, "startTime", null);
    __publicField(this, "timeline", new AnimationTimelineNoop());
    __publicField(this, "finished", Promise.resolve(this));
    __publicField(this, "effect", null);
    __publicField(this, "id", "");
    __publicField(this, "pending", false);
    __publicField(this, "playState", "finished");
    __publicField(this, "replaceState", "active");
    __publicField(this, "ready", Promise.resolve(this));
    __publicField(this, "oncancel", null);
    __publicField(this, "onfinish", null);
    __publicField(this, "onremove", null);
  }
  return _createClass(_AnimationNoop, [{
    key: "cancel",
    value: function cancel() {}
  }, {
    key: "finish",
    value: function finish() {}
  }, {
    key: "pause",
    value: function pause() {}
  }, {
    key: "play",
    value: function play() {}
  }, {
    key: "reverse",
    value: function reverse() {}
  }, {
    key: "addEventListener",
    value: function addEventListener(_type, _listener, _options) {}
  }, {
    key: "dispatchEvent",
    value: function dispatchEvent(_event) {
      return false;
    }
  }, {
    key: "removeEventListener",
    value: function removeEventListener(_type, _callback, _options) {}
  }, {
    key: "updatePlaybackRate",
    value: function updatePlaybackRate(_playbackRate) {}
  }, {
    key: "commitStyles",
    value: function commitStyles() {}
  }, {
    key: "persist",
    value: function persist() {}
  }], [{
    key: "create",
    value: function create() {
      if (!_AnimationNoop2._instance) {
        logWarning("Animation is not supported in this environment: please consider using the `web-animations-js` polyfill to provide a fallback implementation of the Web Animations API.");
        _AnimationNoop2._instance = new _AnimationNoop2();
      }
      return _AnimationNoop2._instance;
    }
  }]);
}();
var AnimationNoop = _AnimationNoop2;
__publicField(AnimationNoop, "_instance", null);
function animate(element, keyframes, options) {
  if ("animate" in element) {
    return element.animate(keyframes, options);
  }
  return AnimationNoop.create();
}
var _tmpl$$u = /* @__PURE__ */template$1("<div></div>");
var clickOutside = clickOutside$1;
var keyPressed = escPressed;
var androidBackHandler = androidBackHandler$1;
var Modal = function Modal(props) {
  var theme = useTheme();
  var dataAttrs = useDataAttributes(props);
  createEffect(function () {
    if (props.opened) {
      disableScroll();
    } else {
      enableScroll();
    }
  });
  return createComponent(Transition, {
    onBeforeEnter: function onBeforeEnter(el) {
      var duration = isDevice("mobile") ? 200 : 100;
      animate(el, [{
        opacity: 0
      }, {
        opacity: 1
      }], {
        duration: duration
      });
      if (isDevice("mobile")) {
        animate(el.firstElementChild, [{
          transform: "translateY(390px)"
        }, {
          transform: "translateY(0)"
        }], {
          duration: duration
        });
      }
    },
    onExit: function onExit(el, done) {
      var duration = isDevice("mobile") ? 200 : 100;
      var backgroundAnimation = animate(el, [{
        opacity: 1
      }, {
        opacity: 0
      }], {
        duration: duration
      });
      if (isDevice("mobile")) {
        var contentAnimation = animate(el.firstElementChild, [{
          transform: "translateY(0)"
        }, {
          transform: "translateY(390px)"
        }], {
          duration: duration
        });
        Promise.all([backgroundAnimation.finished, contentAnimation.finished]).then(done);
      } else {
        backgroundAnimation.finished.then(done);
      }
    },
    get children() {
      return createComponent(Show, {
        get when() {
          return props.opened;
        },
        get children() {
          return createComponent(ModalBackgroundStyled, mergeProps({
            "data-tc-modal": "true"
          }, dataAttrs, {
            get children() {
              var _el$ = _tmpl$$u.cloneNode(true);
              use(androidBackHandler, _el$, function () {
                return {
                  isEnabled: props.enableAndroidBackHandler,
                  onClose: function onClose() {
                    return props.onClose();
                  }
                };
              });
              use(keyPressed, _el$, function () {
                return function () {
                  return props.onClose();
                };
              });
              use(clickOutside, _el$, function () {
                return function () {
                  return props.onClose();
                };
              });
              insert(_el$, createComponent(ModalBodyStyled, _defineAccessor("get", _defineAccessor("get", {}, "class", function () {
                return props["class"];
              }), "children", function () {
                return [createComponent(CloseButtonStyled, {
                  icon: "close",
                  onClick: function onClick() {
                    return props.onClose();
                  }
                }), createMemo(function () {
                  return props.children;
                })];
              })), null);
              insert(_el$, createComponent(Show, {
                get when() {
                  return props.onClickQuestion;
                },
                get children() {
                  return createComponent(ModalFooterStyled, {
                    get children() {
                      return [createComponent(TonConnectBrand, {}), createComponent(QuestionButtonStyled, {
                        get onClick() {
                          return props.onClickQuestion;
                        },
                        icon: "question"
                      })];
                    }
                  });
                }
              }), null);
              createRenderEffect(function () {
                return className(_el$, (0, _classnames["default"])(ModalWrapperClass, u(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral(["\n                                border-radius: ", ";\n                                background-color: ", ";\n\n                                ", " {\n                                    border-radius: ", "\n                                        ", " 0 0;\n                                }\n                            "])), borders$4[theme.borderRadius], theme.colors.background.tint, media("mobile"), borders$4[theme.borderRadius], borders$4[theme.borderRadius])));
              });
              return _el$;
            }
          }));
        }
      });
    }
  });
};
var wrapperBorderRadius = {
  m: "22px",
  s: "12px",
  none: "0"
};
var sliderBorderRadius = {
  m: "18px",
  s: "8px",
  none: "0"
};
var TabBarStyled = styled.div(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral(["\n    display: grid;\n    grid-template: 1fr / 1fr 1fr;\n    width: fit-content;\n    justify-items: center;\n    gap: 4px;\n\n    position: relative;\n    padding: 4px;\n    border-radius: ", ";\n\n    background-color: ", ";\n"])), function (props) {
  return wrapperBorderRadius[props.theme.borderRadius];
}, function (props) {
  return props.theme.colors.background.secondary;
});
var SliderStyled = styled.div(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral(["\n    position: absolute;\n    top: 4px;\n    left: 4px;\n\n    height: calc(100% - 8px);\n    width: calc(50% - 4px);\n\n    border-radius: ", ";\n    background-color: ", ";\n\n    transform: ", ";\n\n    transition: transform 0.13s ease-in-out;\n"])), function (props) {
  return sliderBorderRadius[props.theme.borderRadius];
}, function (props) {
  return props.theme.colors.background.segment;
}, function (props) {
  return props.right ? "translateX(100%)" : "translateX(0)";
});
var InputStyled = styled.input(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral(["\n    display: none;\n"])));
var LabelStyled = styled.label(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral(["\n    padding: 9px 12px;\n    z-index: 1;\n\n    cursor: ", ";\n\n    transition: transform 0.13s ease-in-out;\n\n    &:hover {\n        transform: ", ";\n    }\n\n    > * {\n        ", "\n    }\n"])), function (props) {
  return props.isActive ? "default" : "pointer";
}, function (props) {
  return props.isActive ? "none" : "scale(1.025)";
}, function (props) {
  return !props.isActive ? "color: ".concat(props.theme.colors.text.secondary, ";") : "";
});
var TabBar = function TabBar(props) {
  var groupName = "tabBar" + Math.floor(Math.random() * 1e4);
  return createComponent(TabBarStyled, _defineAccessor("get", _defineProperty(_defineAccessor("get", {}, "class", function () {
    return props["class"];
  }), "data-tc-tab-bar", "true"), "children", function () {
    return [createComponent(SliderStyled, {
      get right() {
        return props.selectedTabIndex === 1;
      }
    }), createComponent(LabelStyled, {
      get isActive() {
        return props.selectedTabIndex === 0;
      },
      get children() {
        return [createComponent(InputStyled, {
          type: "radio",
          name: groupName,
          get checked() {
            return props.selectedTabIndex === 0;
          },
          onInput: function onInput() {
            var _a2;
            return (_a2 = props.onSelectedTabIndexChange) == null ? void 0 : _a2.call(props, 0);
          }
        }), createMemo(function () {
          return props.tab1;
        })];
      }
    }), createComponent(LabelStyled, {
      get isActive() {
        return props.selectedTabIndex === 1;
      },
      get children() {
        return [createComponent(InputStyled, {
          type: "radio",
          get checked() {
            return props.selectedTabIndex === 1;
          },
          name: groupName,
          onInput: function onInput() {
            var _a2;
            return (_a2 = props.onSelectedTabIndexChange) == null ? void 0 : _a2.call(props, 1);
          }
        }), createMemo(function () {
          return props.tab2;
        })];
      }
    })];
  }));
};
var backgroundBorders = {
  m: "16px",
  s: "12px",
  none: "0"
};
var imageBorders = {
  m: "12px",
  s: "8px",
  none: "0"
};
var qrNormalSize = 256;
var imgSizeDefault = 60;
var picSizeDefault = 48;
var qrPaddingTop = 24;
var CopyIconButton = styled.div(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral(["\n    width: 52px;\n    height: 52px;\n    background: transparent;\n    position: absolute;\n    right: 0;\n    bottom: 0;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: transform 0.125s ease-in-out;\n"])));
var QrCodeBackground = styled.button(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral(["\n    display: flex;\n    align-items: center;\n    position: relative;\n    background-color: ", ";\n    border-radius: ", ";\n    padding: ", " 0;\n    height: ", ";\n    width: 100%;\n\n    overflow: hidden;\n    cursor: pointer;\n    border: none;\n\n    ", " {\n        &:hover {\n            ", " {\n                transform: scale(1.04);\n            }\n        }\n    }\n\n    &:active {\n        ", " {\n            transform: scale(0.96);\n        }\n    }\n\n    ", " {\n        &:active {\n            ", " {\n                transform: scale(0.92);\n            }\n        }\n    }\n"])), function (props) {
  return props.theme.colors.background.qr;
}, function (props) {
  return backgroundBorders[props.theme.borderRadius];
}, toPx(qrPaddingTop), toPx(qrNormalSize + qrPaddingTop * 2), mediaNotTouch, CopyIconButton["class"], CopyIconButton["class"], mediaTouch, CopyIconButton["class"]);
var QrCodeWrapper$2 = styled.div(_templateObject19 || (_templateObject19 = _taggedTemplateLiteral(["\n    position: relative;\n\n    width: fit-content;\n    margin: 0 auto;\n\n    > div:first-child {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    rect {\n        fill: transparent;\n    }\n\n    path {\n        fill: ", ";\n    }\n"])), function (props) {
  return props.theme.colors.constant.black;
});
var ImageBackground = styled.div(_templateObject20 || (_templateObject20 = _taggedTemplateLiteral(["\n    position: absolute;\n    width: ", ";\n    height: ", ";\n    background: ", ";\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n"])), toPx(imgSizeDefault), toPx(imgSizeDefault), function (props) {
  return props.theme.colors.background.qr;
});
var ImageStyled$3 = styled(Image)(_templateObject21 || (_templateObject21 = _taggedTemplateLiteral(["\n    width: ", ";\n    height: ", ";\n    border-radius: ", ";\n    background-color: ", ";\n"])), function (props) {
  return toPx(props.size);
}, function (props) {
  return toPx(props.size);
}, function (props) {
  return imageBorders[props.theme.borderRadius];
}, function (props) {
  return props.theme.colors.background.qr;
});
var CopiedBoxStyled = styled.div(_templateObject22 || (_templateObject22 = _taggedTemplateLiteral(["\n    position: absolute;\n    bottom: 14px;\n    left: 50%;\n    transform: translate(-50%, 0);\n\n    display: flex;\n    gap: 6px;\n    align-items: center;\n    border-radius: 18px;\n    min-width: 126px;\n    padding: 9px 16px 9px 10px;\n\n    filter: drop-shadow(0px 2px 8px rgba(0, 0, 0, 0.08));\n    background-color: ", ";\n"])), function (props) {
  return props.theme.colors.background.segment;
});
var qrcode$1 = {
  exports: {}
};
(function (module, exports) {
  var qrcode2 = function () {
    var qrcode3 = function qrcode3(typeNumber, errorCorrectionLevel) {
      var PAD0 = 236;
      var PAD1 = 17;
      var _typeNumber = typeNumber;
      var _errorCorrectionLevel = QRErrorCorrectionLevel[errorCorrectionLevel];
      var _modules = null;
      var _moduleCount = 0;
      var _dataCache = null;
      var _dataList = [];
      var _this = {};
      var makeImpl = function makeImpl(test, maskPattern) {
        _moduleCount = _typeNumber * 4 + 17;
        _modules = function (moduleCount) {
          var modules = new Array(moduleCount);
          for (var row = 0; row < moduleCount; row += 1) {
            modules[row] = new Array(moduleCount);
            for (var col = 0; col < moduleCount; col += 1) {
              modules[row][col] = null;
            }
          }
          return modules;
        }(_moduleCount);
        setupPositionProbePattern(0, 0);
        setupPositionProbePattern(_moduleCount - 7, 0);
        setupPositionProbePattern(0, _moduleCount - 7);
        setupPositionAdjustPattern();
        setupTimingPattern();
        setupTypeInfo(test, maskPattern);
        if (_typeNumber >= 7) {
          setupTypeNumber(test);
        }
        if (_dataCache == null) {
          _dataCache = createData(_typeNumber, _errorCorrectionLevel, _dataList);
        }
        mapData(_dataCache, maskPattern);
      };
      var setupPositionProbePattern = function setupPositionProbePattern(row, col) {
        for (var r = -1; r <= 7; r += 1) {
          if (row + r <= -1 || _moduleCount <= row + r) continue;
          for (var c2 = -1; c2 <= 7; c2 += 1) {
            if (col + c2 <= -1 || _moduleCount <= col + c2) continue;
            if (0 <= r && r <= 6 && (c2 == 0 || c2 == 6) || 0 <= c2 && c2 <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c2 && c2 <= 4) {
              _modules[row + r][col + c2] = true;
            } else {
              _modules[row + r][col + c2] = false;
            }
          }
        }
      };
      var getBestMaskPattern = function getBestMaskPattern() {
        var minLostPoint = 0;
        var pattern = 0;
        for (var i2 = 0; i2 < 8; i2 += 1) {
          makeImpl(true, i2);
          var lostPoint = QRUtil.getLostPoint(_this);
          if (i2 == 0 || minLostPoint > lostPoint) {
            minLostPoint = lostPoint;
            pattern = i2;
          }
        }
        return pattern;
      };
      var setupTimingPattern = function setupTimingPattern() {
        for (var r = 8; r < _moduleCount - 8; r += 1) {
          if (_modules[r][6] != null) {
            continue;
          }
          _modules[r][6] = r % 2 == 0;
        }
        for (var c2 = 8; c2 < _moduleCount - 8; c2 += 1) {
          if (_modules[6][c2] != null) {
            continue;
          }
          _modules[6][c2] = c2 % 2 == 0;
        }
      };
      var setupPositionAdjustPattern = function setupPositionAdjustPattern() {
        var pos = QRUtil.getPatternPosition(_typeNumber);
        for (var i2 = 0; i2 < pos.length; i2 += 1) {
          for (var j = 0; j < pos.length; j += 1) {
            var row = pos[i2];
            var col = pos[j];
            if (_modules[row][col] != null) {
              continue;
            }
            for (var r = -2; r <= 2; r += 1) {
              for (var c2 = -2; c2 <= 2; c2 += 1) {
                if (r == -2 || r == 2 || c2 == -2 || c2 == 2 || r == 0 && c2 == 0) {
                  _modules[row + r][col + c2] = true;
                } else {
                  _modules[row + r][col + c2] = false;
                }
              }
            }
          }
        }
      };
      var setupTypeNumber = function setupTypeNumber(test) {
        var bits = QRUtil.getBCHTypeNumber(_typeNumber);
        for (var i2 = 0; i2 < 18; i2 += 1) {
          var mod = !test && (bits >> i2 & 1) == 1;
          _modules[Math.floor(i2 / 3)][i2 % 3 + _moduleCount - 8 - 3] = mod;
        }
        for (var i2 = 0; i2 < 18; i2 += 1) {
          var mod = !test && (bits >> i2 & 1) == 1;
          _modules[i2 % 3 + _moduleCount - 8 - 3][Math.floor(i2 / 3)] = mod;
        }
      };
      var setupTypeInfo = function setupTypeInfo(test, maskPattern) {
        var data = _errorCorrectionLevel << 3 | maskPattern;
        var bits = QRUtil.getBCHTypeInfo(data);
        for (var i2 = 0; i2 < 15; i2 += 1) {
          var mod = !test && (bits >> i2 & 1) == 1;
          if (i2 < 6) {
            _modules[i2][8] = mod;
          } else if (i2 < 8) {
            _modules[i2 + 1][8] = mod;
          } else {
            _modules[_moduleCount - 15 + i2][8] = mod;
          }
        }
        for (var i2 = 0; i2 < 15; i2 += 1) {
          var mod = !test && (bits >> i2 & 1) == 1;
          if (i2 < 8) {
            _modules[8][_moduleCount - i2 - 1] = mod;
          } else if (i2 < 9) {
            _modules[8][15 - i2 - 1 + 1] = mod;
          } else {
            _modules[8][15 - i2 - 1] = mod;
          }
        }
        _modules[_moduleCount - 8][8] = !test;
      };
      var mapData = function mapData(data, maskPattern) {
        var inc = -1;
        var row = _moduleCount - 1;
        var bitIndex = 7;
        var byteIndex = 0;
        var maskFunc = QRUtil.getMaskFunction(maskPattern);
        for (var col = _moduleCount - 1; col > 0; col -= 2) {
          if (col == 6) col -= 1;
          while (true) {
            for (var c2 = 0; c2 < 2; c2 += 1) {
              if (_modules[row][col - c2] == null) {
                var dark = false;
                if (byteIndex < data.length) {
                  dark = (data[byteIndex] >>> bitIndex & 1) == 1;
                }
                var mask = maskFunc(row, col - c2);
                if (mask) {
                  dark = !dark;
                }
                _modules[row][col - c2] = dark;
                bitIndex -= 1;
                if (bitIndex == -1) {
                  byteIndex += 1;
                  bitIndex = 7;
                }
              }
            }
            row += inc;
            if (row < 0 || _moduleCount <= row) {
              row -= inc;
              inc = -inc;
              break;
            }
          }
        }
      };
      var createBytes = function createBytes(buffer, rsBlocks) {
        var offset = 0;
        var maxDcCount = 0;
        var maxEcCount = 0;
        var dcdata = new Array(rsBlocks.length);
        var ecdata = new Array(rsBlocks.length);
        for (var r = 0; r < rsBlocks.length; r += 1) {
          var dcCount = rsBlocks[r].dataCount;
          var ecCount = rsBlocks[r].totalCount - dcCount;
          maxDcCount = Math.max(maxDcCount, dcCount);
          maxEcCount = Math.max(maxEcCount, ecCount);
          dcdata[r] = new Array(dcCount);
          for (var i2 = 0; i2 < dcdata[r].length; i2 += 1) {
            dcdata[r][i2] = 255 & buffer.getBuffer()[i2 + offset];
          }
          offset += dcCount;
          var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);
          var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);
          var modPoly = rawPoly.mod(rsPoly);
          ecdata[r] = new Array(rsPoly.getLength() - 1);
          for (var i2 = 0; i2 < ecdata[r].length; i2 += 1) {
            var modIndex = i2 + modPoly.getLength() - ecdata[r].length;
            ecdata[r][i2] = modIndex >= 0 ? modPoly.getAt(modIndex) : 0;
          }
        }
        var totalCodeCount = 0;
        for (var i2 = 0; i2 < rsBlocks.length; i2 += 1) {
          totalCodeCount += rsBlocks[i2].totalCount;
        }
        var data = new Array(totalCodeCount);
        var index = 0;
        for (var i2 = 0; i2 < maxDcCount; i2 += 1) {
          for (var r = 0; r < rsBlocks.length; r += 1) {
            if (i2 < dcdata[r].length) {
              data[index] = dcdata[r][i2];
              index += 1;
            }
          }
        }
        for (var i2 = 0; i2 < maxEcCount; i2 += 1) {
          for (var r = 0; r < rsBlocks.length; r += 1) {
            if (i2 < ecdata[r].length) {
              data[index] = ecdata[r][i2];
              index += 1;
            }
          }
        }
        return data;
      };
      var createData = function createData(typeNumber2, errorCorrectionLevel2, dataList) {
        var rsBlocks = QRRSBlock.getRSBlocks(typeNumber2, errorCorrectionLevel2);
        var buffer = qrBitBuffer();
        for (var i2 = 0; i2 < dataList.length; i2 += 1) {
          var data = dataList[i2];
          buffer.put(data.getMode(), 4);
          buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber2));
          data.write(buffer);
        }
        var totalDataCount = 0;
        for (var i2 = 0; i2 < rsBlocks.length; i2 += 1) {
          totalDataCount += rsBlocks[i2].dataCount;
        }
        if (buffer.getLengthInBits() > totalDataCount * 8) {
          throw "code length overflow. (" + buffer.getLengthInBits() + ">" + totalDataCount * 8 + ")";
        }
        if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {
          buffer.put(0, 4);
        }
        while (buffer.getLengthInBits() % 8 != 0) {
          buffer.putBit(false);
        }
        while (true) {
          if (buffer.getLengthInBits() >= totalDataCount * 8) {
            break;
          }
          buffer.put(PAD0, 8);
          if (buffer.getLengthInBits() >= totalDataCount * 8) {
            break;
          }
          buffer.put(PAD1, 8);
        }
        return createBytes(buffer, rsBlocks);
      };
      _this.addData = function (data, mode) {
        mode = mode || "Byte";
        var newData = null;
        switch (mode) {
          case "Numeric":
            newData = qrNumber(data);
            break;
          case "Alphanumeric":
            newData = qrAlphaNum(data);
            break;
          case "Byte":
            newData = qr8BitByte(data);
            break;
          case "Kanji":
            newData = qrKanji(data);
            break;
          default:
            throw "mode:" + mode;
        }
        _dataList.push(newData);
        _dataCache = null;
      };
      _this.isDark = function (row, col) {
        if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {
          throw row + "," + col;
        }
        return _modules[row][col];
      };
      _this.getModuleCount = function () {
        return _moduleCount;
      };
      _this.make = function () {
        if (_typeNumber < 1) {
          var typeNumber2 = 1;
          for (; typeNumber2 < 40; typeNumber2++) {
            var rsBlocks = QRRSBlock.getRSBlocks(typeNumber2, _errorCorrectionLevel);
            var buffer = qrBitBuffer();
            for (var i2 = 0; i2 < _dataList.length; i2++) {
              var data = _dataList[i2];
              buffer.put(data.getMode(), 4);
              buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber2));
              data.write(buffer);
            }
            var totalDataCount = 0;
            for (var i2 = 0; i2 < rsBlocks.length; i2++) {
              totalDataCount += rsBlocks[i2].dataCount;
            }
            if (buffer.getLengthInBits() <= totalDataCount * 8) {
              break;
            }
          }
          _typeNumber = typeNumber2;
        }
        makeImpl(false, getBestMaskPattern());
      };
      _this.createTableTag = function (cellSize, margin) {
        cellSize = cellSize || 2;
        margin = typeof margin == "undefined" ? cellSize * 4 : margin;
        var qrHtml = "";
        qrHtml += '<table style="';
        qrHtml += " border-width: 0px; border-style: none;";
        qrHtml += " border-collapse: collapse;";
        qrHtml += " padding: 0px; margin: " + margin + "px;";
        qrHtml += '">';
        qrHtml += "<tbody>";
        for (var r = 0; r < _this.getModuleCount(); r += 1) {
          qrHtml += "<tr>";
          for (var c2 = 0; c2 < _this.getModuleCount(); c2 += 1) {
            qrHtml += '<td style="';
            qrHtml += " border-width: 0px; border-style: none;";
            qrHtml += " border-collapse: collapse;";
            qrHtml += " padding: 0px; margin: 0px;";
            qrHtml += " width: " + cellSize + "px;";
            qrHtml += " height: " + cellSize + "px;";
            qrHtml += " background-color: ";
            qrHtml += _this.isDark(r, c2) ? "#000000" : "#ffffff";
            qrHtml += ";";
            qrHtml += '"/>';
          }
          qrHtml += "</tr>";
        }
        qrHtml += "</tbody>";
        qrHtml += "</table>";
        return qrHtml;
      };
      _this.createSvgTag = function (cellSize, margin, alt, title) {
        var opts = {};
        if (_typeof(arguments[0]) == "object") {
          opts = arguments[0];
          cellSize = opts.cellSize;
          margin = opts.margin;
          alt = opts.alt;
          title = opts.title;
        }
        cellSize = cellSize || 2;
        margin = typeof margin == "undefined" ? cellSize * 4 : margin;
        alt = typeof alt === "string" ? {
          text: alt
        } : alt || {};
        alt.text = alt.text || null;
        alt.id = alt.text ? alt.id || "qrcode-description" : null;
        title = typeof title === "string" ? {
          text: title
        } : title || {};
        title.text = title.text || null;
        title.id = title.text ? title.id || "qrcode-title" : null;
        var size = _this.getModuleCount() * cellSize + margin * 2;
        var c2,
          mc,
          r,
          mr,
          qrSvg = "",
          rect;
        rect = "l" + cellSize + ",0 0," + cellSize + " -" + cellSize + ",0 0,-" + cellSize + "z ";
        qrSvg += '<svg version="1.1" xmlns="http://www.w3.org/2000/svg"';
        qrSvg += !opts.scalable ? ' width="' + size + 'px" height="' + size + 'px"' : "";
        qrSvg += ' viewBox="0 0 ' + size + " " + size + '" ';
        qrSvg += ' preserveAspectRatio="xMinYMin meet"';
        qrSvg += title.text || alt.text ? ' role="img" aria-labelledby="' + escapeXml([title.id, alt.id].join(" ").trim()) + '"' : "";
        qrSvg += ">";
        qrSvg += title.text ? '<title id="' + escapeXml(title.id) + '">' + escapeXml(title.text) + "</title>" : "";
        qrSvg += alt.text ? '<description id="' + escapeXml(alt.id) + '">' + escapeXml(alt.text) + "</description>" : "";
        qrSvg += '<rect width="100%" height="100%" fill="white" cx="0" cy="0"/>';
        qrSvg += '<path d="';
        for (r = 0; r < _this.getModuleCount(); r += 1) {
          mr = r * cellSize + margin;
          for (c2 = 0; c2 < _this.getModuleCount(); c2 += 1) {
            if (_this.isDark(r, c2)) {
              mc = c2 * cellSize + margin;
              qrSvg += "M" + mc + "," + mr + rect;
            }
          }
        }
        qrSvg += '" stroke="transparent" fill="black"/>';
        qrSvg += "</svg>";
        return qrSvg;
      };
      _this.createDataURL = function (cellSize, margin) {
        cellSize = cellSize || 2;
        margin = typeof margin == "undefined" ? cellSize * 4 : margin;
        var size = _this.getModuleCount() * cellSize + margin * 2;
        var min2 = margin;
        var max2 = size - margin;
        return createDataURL(size, size, function (x, y) {
          if (min2 <= x && x < max2 && min2 <= y && y < max2) {
            var c2 = Math.floor((x - min2) / cellSize);
            var r = Math.floor((y - min2) / cellSize);
            return _this.isDark(r, c2) ? 0 : 1;
          } else {
            return 1;
          }
        });
      };
      _this.createImgTag = function (cellSize, margin, alt) {
        cellSize = cellSize || 2;
        margin = typeof margin == "undefined" ? cellSize * 4 : margin;
        var size = _this.getModuleCount() * cellSize + margin * 2;
        var img = "";
        img += "<img";
        img += ' src="';
        img += _this.createDataURL(cellSize, margin);
        img += '"';
        img += ' width="';
        img += size;
        img += '"';
        img += ' height="';
        img += size;
        img += '"';
        if (alt) {
          img += ' alt="';
          img += escapeXml(alt);
          img += '"';
        }
        img += "/>";
        return img;
      };
      var escapeXml = function escapeXml(s2) {
        var escaped = "";
        for (var i2 = 0; i2 < s2.length; i2 += 1) {
          var c2 = s2.charAt(i2);
          switch (c2) {
            case "<":
              escaped += "&lt;";
              break;
            case ">":
              escaped += "&gt;";
              break;
            case "&":
              escaped += "&amp;";
              break;
            case '"':
              escaped += "&quot;";
              break;
            default:
              escaped += c2;
              break;
          }
        }
        return escaped;
      };
      var _createHalfASCII = function _createHalfASCII(margin) {
        var cellSize = 1;
        margin = typeof margin == "undefined" ? cellSize * 2 : margin;
        var size = _this.getModuleCount() * cellSize + margin * 2;
        var min2 = margin;
        var max2 = size - margin;
        var y, x, r1, r2, p2;
        var blocks = {
          "\u2588\u2588": "\u2588",
          "\u2588 ": "\u2580",
          " \u2588": "\u2584",
          "  ": " "
        };
        var blocksLastLineNoMargin = {
          "\u2588\u2588": "\u2580",
          "\u2588 ": "\u2580",
          " \u2588": " ",
          "  ": " "
        };
        var ascii = "";
        for (y = 0; y < size; y += 2) {
          r1 = Math.floor((y - min2) / cellSize);
          r2 = Math.floor((y + 1 - min2) / cellSize);
          for (x = 0; x < size; x += 1) {
            p2 = "\u2588";
            if (min2 <= x && x < max2 && min2 <= y && y < max2 && _this.isDark(r1, Math.floor((x - min2) / cellSize))) {
              p2 = " ";
            }
            if (min2 <= x && x < max2 && min2 <= y + 1 && y + 1 < max2 && _this.isDark(r2, Math.floor((x - min2) / cellSize))) {
              p2 += " ";
            } else {
              p2 += "\u2588";
            }
            ascii += margin < 1 && y + 1 >= max2 ? blocksLastLineNoMargin[p2] : blocks[p2];
          }
          ascii += "\n";
        }
        if (size % 2 && margin > 0) {
          return ascii.substring(0, ascii.length - size - 1) + Array(size + 1).join("\u2580");
        }
        return ascii.substring(0, ascii.length - 1);
      };
      _this.createASCII = function (cellSize, margin) {
        cellSize = cellSize || 1;
        if (cellSize < 2) {
          return _createHalfASCII(margin);
        }
        cellSize -= 1;
        margin = typeof margin == "undefined" ? cellSize * 2 : margin;
        var size = _this.getModuleCount() * cellSize + margin * 2;
        var min2 = margin;
        var max2 = size - margin;
        var y, x, r, p2;
        var white = Array(cellSize + 1).join("\u2588\u2588");
        var black = Array(cellSize + 1).join("  ");
        var ascii = "";
        var line = "";
        for (y = 0; y < size; y += 1) {
          r = Math.floor((y - min2) / cellSize);
          line = "";
          for (x = 0; x < size; x += 1) {
            p2 = 1;
            if (min2 <= x && x < max2 && min2 <= y && y < max2 && _this.isDark(r, Math.floor((x - min2) / cellSize))) {
              p2 = 0;
            }
            line += p2 ? white : black;
          }
          for (r = 0; r < cellSize; r += 1) {
            ascii += line + "\n";
          }
        }
        return ascii.substring(0, ascii.length - 1);
      };
      _this.renderTo2dContext = function (context, cellSize) {
        cellSize = cellSize || 2;
        var length = _this.getModuleCount();
        for (var row = 0; row < length; row++) {
          for (var col = 0; col < length; col++) {
            context.fillStyle = _this.isDark(row, col) ? "black" : "white";
            context.fillRect(row * cellSize, col * cellSize, cellSize, cellSize);
          }
        }
      };
      return _this;
    };
    qrcode3.stringToBytesFuncs = {
      "default": function _default(s2) {
        var bytes = [];
        for (var i2 = 0; i2 < s2.length; i2 += 1) {
          var c2 = s2.charCodeAt(i2);
          bytes.push(c2 & 255);
        }
        return bytes;
      }
    };
    qrcode3.stringToBytes = qrcode3.stringToBytesFuncs["default"];
    qrcode3.createStringToBytes = function (unicodeData, numChars) {
      var unicodeMap = function () {
        var bin = base64DecodeInputStream(unicodeData);
        var read = function read() {
          var b = bin.read();
          if (b == -1) throw "eof";
          return b;
        };
        var count = 0;
        var unicodeMap2 = {};
        while (true) {
          var b0 = bin.read();
          if (b0 == -1) break;
          var b1 = read();
          var b2 = read();
          var b3 = read();
          var k = String.fromCharCode(b0 << 8 | b1);
          var v = b2 << 8 | b3;
          unicodeMap2[k] = v;
          count += 1;
        }
        if (count != numChars) {
          throw count + " != " + numChars;
        }
        return unicodeMap2;
      }();
      var unknownChar = "?".charCodeAt(0);
      return function (s2) {
        var bytes = [];
        for (var i2 = 0; i2 < s2.length; i2 += 1) {
          var c2 = s2.charCodeAt(i2);
          if (c2 < 128) {
            bytes.push(c2);
          } else {
            var b = unicodeMap[s2.charAt(i2)];
            if (typeof b == "number") {
              if ((b & 255) == b) {
                bytes.push(b);
              } else {
                bytes.push(b >>> 8);
                bytes.push(b & 255);
              }
            } else {
              bytes.push(unknownChar);
            }
          }
        }
        return bytes;
      };
    };
    var QRMode = {
      MODE_NUMBER: 1 << 0,
      MODE_ALPHA_NUM: 1 << 1,
      MODE_8BIT_BYTE: 1 << 2,
      MODE_KANJI: 1 << 3
    };
    var QRErrorCorrectionLevel = {
      L: 1,
      M: 0,
      Q: 3,
      H: 2
    };
    var QRMaskPattern = {
      PATTERN000: 0,
      PATTERN001: 1,
      PATTERN010: 2,
      PATTERN011: 3,
      PATTERN100: 4,
      PATTERN101: 5,
      PATTERN110: 6,
      PATTERN111: 7
    };
    var QRUtil = function () {
      var PATTERN_POSITION_TABLE = [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]];
      var G15 = 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0;
      var G18 = 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0;
      var G15_MASK = 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1;
      var _this = {};
      var getBCHDigit = function getBCHDigit(data) {
        var digit = 0;
        while (data != 0) {
          digit += 1;
          data >>>= 1;
        }
        return digit;
      };
      _this.getBCHTypeInfo = function (data) {
        var d = data << 10;
        while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {
          d ^= G15 << getBCHDigit(d) - getBCHDigit(G15);
        }
        return (data << 10 | d) ^ G15_MASK;
      };
      _this.getBCHTypeNumber = function (data) {
        var d = data << 12;
        while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {
          d ^= G18 << getBCHDigit(d) - getBCHDigit(G18);
        }
        return data << 12 | d;
      };
      _this.getPatternPosition = function (typeNumber) {
        return PATTERN_POSITION_TABLE[typeNumber - 1];
      };
      _this.getMaskFunction = function (maskPattern) {
        switch (maskPattern) {
          case QRMaskPattern.PATTERN000:
            return function (i2, j) {
              return (i2 + j) % 2 == 0;
            };
          case QRMaskPattern.PATTERN001:
            return function (i2, j) {
              return i2 % 2 == 0;
            };
          case QRMaskPattern.PATTERN010:
            return function (i2, j) {
              return j % 3 == 0;
            };
          case QRMaskPattern.PATTERN011:
            return function (i2, j) {
              return (i2 + j) % 3 == 0;
            };
          case QRMaskPattern.PATTERN100:
            return function (i2, j) {
              return (Math.floor(i2 / 2) + Math.floor(j / 3)) % 2 == 0;
            };
          case QRMaskPattern.PATTERN101:
            return function (i2, j) {
              return i2 * j % 2 + i2 * j % 3 == 0;
            };
          case QRMaskPattern.PATTERN110:
            return function (i2, j) {
              return (i2 * j % 2 + i2 * j % 3) % 2 == 0;
            };
          case QRMaskPattern.PATTERN111:
            return function (i2, j) {
              return (i2 * j % 3 + (i2 + j) % 2) % 2 == 0;
            };
          default:
            throw "bad maskPattern:" + maskPattern;
        }
      };
      _this.getErrorCorrectPolynomial = function (errorCorrectLength) {
        var a2 = qrPolynomial([1], 0);
        for (var i2 = 0; i2 < errorCorrectLength; i2 += 1) {
          a2 = a2.multiply(qrPolynomial([1, QRMath.gexp(i2)], 0));
        }
        return a2;
      };
      _this.getLengthInBits = function (mode, type) {
        if (1 <= type && type < 10) {
          switch (mode) {
            case QRMode.MODE_NUMBER:
              return 10;
            case QRMode.MODE_ALPHA_NUM:
              return 9;
            case QRMode.MODE_8BIT_BYTE:
              return 8;
            case QRMode.MODE_KANJI:
              return 8;
            default:
              throw "mode:" + mode;
          }
        } else if (type < 27) {
          switch (mode) {
            case QRMode.MODE_NUMBER:
              return 12;
            case QRMode.MODE_ALPHA_NUM:
              return 11;
            case QRMode.MODE_8BIT_BYTE:
              return 16;
            case QRMode.MODE_KANJI:
              return 10;
            default:
              throw "mode:" + mode;
          }
        } else if (type < 41) {
          switch (mode) {
            case QRMode.MODE_NUMBER:
              return 14;
            case QRMode.MODE_ALPHA_NUM:
              return 13;
            case QRMode.MODE_8BIT_BYTE:
              return 16;
            case QRMode.MODE_KANJI:
              return 12;
            default:
              throw "mode:" + mode;
          }
        } else {
          throw "type:" + type;
        }
      };
      _this.getLostPoint = function (qrcode4) {
        var moduleCount = qrcode4.getModuleCount();
        var lostPoint = 0;
        for (var row = 0; row < moduleCount; row += 1) {
          for (var col = 0; col < moduleCount; col += 1) {
            var sameCount = 0;
            var dark = qrcode4.isDark(row, col);
            for (var r = -1; r <= 1; r += 1) {
              if (row + r < 0 || moduleCount <= row + r) {
                continue;
              }
              for (var c2 = -1; c2 <= 1; c2 += 1) {
                if (col + c2 < 0 || moduleCount <= col + c2) {
                  continue;
                }
                if (r == 0 && c2 == 0) {
                  continue;
                }
                if (dark == qrcode4.isDark(row + r, col + c2)) {
                  sameCount += 1;
                }
              }
            }
            if (sameCount > 5) {
              lostPoint += 3 + sameCount - 5;
            }
          }
        }
        for (var row = 0; row < moduleCount - 1; row += 1) {
          for (var col = 0; col < moduleCount - 1; col += 1) {
            var count = 0;
            if (qrcode4.isDark(row, col)) count += 1;
            if (qrcode4.isDark(row + 1, col)) count += 1;
            if (qrcode4.isDark(row, col + 1)) count += 1;
            if (qrcode4.isDark(row + 1, col + 1)) count += 1;
            if (count == 0 || count == 4) {
              lostPoint += 3;
            }
          }
        }
        for (var row = 0; row < moduleCount; row += 1) {
          for (var col = 0; col < moduleCount - 6; col += 1) {
            if (qrcode4.isDark(row, col) && !qrcode4.isDark(row, col + 1) && qrcode4.isDark(row, col + 2) && qrcode4.isDark(row, col + 3) && qrcode4.isDark(row, col + 4) && !qrcode4.isDark(row, col + 5) && qrcode4.isDark(row, col + 6)) {
              lostPoint += 40;
            }
          }
        }
        for (var col = 0; col < moduleCount; col += 1) {
          for (var row = 0; row < moduleCount - 6; row += 1) {
            if (qrcode4.isDark(row, col) && !qrcode4.isDark(row + 1, col) && qrcode4.isDark(row + 2, col) && qrcode4.isDark(row + 3, col) && qrcode4.isDark(row + 4, col) && !qrcode4.isDark(row + 5, col) && qrcode4.isDark(row + 6, col)) {
              lostPoint += 40;
            }
          }
        }
        var darkCount = 0;
        for (var col = 0; col < moduleCount; col += 1) {
          for (var row = 0; row < moduleCount; row += 1) {
            if (qrcode4.isDark(row, col)) {
              darkCount += 1;
            }
          }
        }
        var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;
        lostPoint += ratio * 10;
        return lostPoint;
      };
      return _this;
    }();
    var QRMath = function () {
      var EXP_TABLE = new Array(256);
      var LOG_TABLE = new Array(256);
      for (var i2 = 0; i2 < 8; i2 += 1) {
        EXP_TABLE[i2] = 1 << i2;
      }
      for (var i2 = 8; i2 < 256; i2 += 1) {
        EXP_TABLE[i2] = EXP_TABLE[i2 - 4] ^ EXP_TABLE[i2 - 5] ^ EXP_TABLE[i2 - 6] ^ EXP_TABLE[i2 - 8];
      }
      for (var i2 = 0; i2 < 255; i2 += 1) {
        LOG_TABLE[EXP_TABLE[i2]] = i2;
      }
      var _this = {};
      _this.glog = function (n2) {
        if (n2 < 1) {
          throw "glog(" + n2 + ")";
        }
        return LOG_TABLE[n2];
      };
      _this.gexp = function (n2) {
        while (n2 < 0) {
          n2 += 255;
        }
        while (n2 >= 256) {
          n2 -= 255;
        }
        return EXP_TABLE[n2];
      };
      return _this;
    }();
    function qrPolynomial(num, shift) {
      if (typeof num.length == "undefined") {
        throw num.length + "/" + shift;
      }
      var _num = function () {
        var offset = 0;
        while (offset < num.length && num[offset] == 0) {
          offset += 1;
        }
        var _num2 = new Array(num.length - offset + shift);
        for (var i2 = 0; i2 < num.length - offset; i2 += 1) {
          _num2[i2] = num[i2 + offset];
        }
        return _num2;
      }();
      var _this = {};
      _this.getAt = function (index) {
        return _num[index];
      };
      _this.getLength = function () {
        return _num.length;
      };
      _this.multiply = function (e2) {
        var num2 = new Array(_this.getLength() + e2.getLength() - 1);
        for (var i2 = 0; i2 < _this.getLength(); i2 += 1) {
          for (var j = 0; j < e2.getLength(); j += 1) {
            num2[i2 + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i2)) + QRMath.glog(e2.getAt(j)));
          }
        }
        return qrPolynomial(num2, 0);
      };
      _this.mod = function (e2) {
        if (_this.getLength() - e2.getLength() < 0) {
          return _this;
        }
        var ratio = QRMath.glog(_this.getAt(0)) - QRMath.glog(e2.getAt(0));
        var num2 = new Array(_this.getLength());
        for (var i2 = 0; i2 < _this.getLength(); i2 += 1) {
          num2[i2] = _this.getAt(i2);
        }
        for (var i2 = 0; i2 < e2.getLength(); i2 += 1) {
          num2[i2] ^= QRMath.gexp(QRMath.glog(e2.getAt(i2)) + ratio);
        }
        return qrPolynomial(num2, 0).mod(e2);
      };
      return _this;
    }
    var QRRSBlock = function () {
      var RS_BLOCK_TABLE = [[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], [1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], [1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], [1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], [1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], [2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], [2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], [2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], [2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], [2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], [4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], [2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], [4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], [3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], [5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12, 7, 37, 13], [5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], [1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], [5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], [3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], [3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], [4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], [2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], [4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], [6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], [8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], [10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], [8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], [3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], [7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], [5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], [13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], [17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], [17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], [13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], [12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], [6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], [17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], [4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], [20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], [19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];
      var qrRSBlock = function qrRSBlock(totalCount, dataCount) {
        var _this2 = {};
        _this2.totalCount = totalCount;
        _this2.dataCount = dataCount;
        return _this2;
      };
      var _this = {};
      var getRsBlockTable = function getRsBlockTable(typeNumber, errorCorrectionLevel) {
        switch (errorCorrectionLevel) {
          case QRErrorCorrectionLevel.L:
            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];
          case QRErrorCorrectionLevel.M:
            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];
          case QRErrorCorrectionLevel.Q:
            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];
          case QRErrorCorrectionLevel.H:
            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];
          default:
            return void 0;
        }
      };
      _this.getRSBlocks = function (typeNumber, errorCorrectionLevel) {
        var rsBlock = getRsBlockTable(typeNumber, errorCorrectionLevel);
        if (typeof rsBlock == "undefined") {
          throw "bad rs block @ typeNumber:" + typeNumber + "/errorCorrectionLevel:" + errorCorrectionLevel;
        }
        var length = rsBlock.length / 3;
        var list = [];
        for (var i2 = 0; i2 < length; i2 += 1) {
          var count = rsBlock[i2 * 3 + 0];
          var totalCount = rsBlock[i2 * 3 + 1];
          var dataCount = rsBlock[i2 * 3 + 2];
          for (var j = 0; j < count; j += 1) {
            list.push(qrRSBlock(totalCount, dataCount));
          }
        }
        return list;
      };
      return _this;
    }();
    var qrBitBuffer = function qrBitBuffer() {
      var _buffer = [];
      var _length = 0;
      var _this = {};
      _this.getBuffer = function () {
        return _buffer;
      };
      _this.getAt = function (index) {
        var bufIndex = Math.floor(index / 8);
        return (_buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;
      };
      _this.put = function (num, length) {
        for (var i2 = 0; i2 < length; i2 += 1) {
          _this.putBit((num >>> length - i2 - 1 & 1) == 1);
        }
      };
      _this.getLengthInBits = function () {
        return _length;
      };
      _this.putBit = function (bit) {
        var bufIndex = Math.floor(_length / 8);
        if (_buffer.length <= bufIndex) {
          _buffer.push(0);
        }
        if (bit) {
          _buffer[bufIndex] |= 128 >>> _length % 8;
        }
        _length += 1;
      };
      return _this;
    };
    var qrNumber = function qrNumber(data) {
      var _mode = QRMode.MODE_NUMBER;
      var _data = data;
      var _this = {};
      _this.getMode = function () {
        return _mode;
      };
      _this.getLength = function (buffer) {
        return _data.length;
      };
      _this.write = function (buffer) {
        var data2 = _data;
        var i2 = 0;
        while (i2 + 2 < data2.length) {
          buffer.put(strToNum(data2.substring(i2, i2 + 3)), 10);
          i2 += 3;
        }
        if (i2 < data2.length) {
          if (data2.length - i2 == 1) {
            buffer.put(strToNum(data2.substring(i2, i2 + 1)), 4);
          } else if (data2.length - i2 == 2) {
            buffer.put(strToNum(data2.substring(i2, i2 + 2)), 7);
          }
        }
      };
      var strToNum = function strToNum(s2) {
        var num = 0;
        for (var i2 = 0; i2 < s2.length; i2 += 1) {
          num = num * 10 + chatToNum(s2.charAt(i2));
        }
        return num;
      };
      var chatToNum = function chatToNum(c2) {
        if ("0" <= c2 && c2 <= "9") {
          return c2.charCodeAt(0) - "0".charCodeAt(0);
        }
        throw "illegal char :" + c2;
      };
      return _this;
    };
    var qrAlphaNum = function qrAlphaNum(data) {
      var _mode = QRMode.MODE_ALPHA_NUM;
      var _data = data;
      var _this = {};
      _this.getMode = function () {
        return _mode;
      };
      _this.getLength = function (buffer) {
        return _data.length;
      };
      _this.write = function (buffer) {
        var s2 = _data;
        var i2 = 0;
        while (i2 + 1 < s2.length) {
          buffer.put(getCode(s2.charAt(i2)) * 45 + getCode(s2.charAt(i2 + 1)), 11);
          i2 += 2;
        }
        if (i2 < s2.length) {
          buffer.put(getCode(s2.charAt(i2)), 6);
        }
      };
      var getCode = function getCode(c2) {
        if ("0" <= c2 && c2 <= "9") {
          return c2.charCodeAt(0) - "0".charCodeAt(0);
        } else if ("A" <= c2 && c2 <= "Z") {
          return c2.charCodeAt(0) - "A".charCodeAt(0) + 10;
        } else {
          switch (c2) {
            case " ":
              return 36;
            case "$":
              return 37;
            case "%":
              return 38;
            case "*":
              return 39;
            case "+":
              return 40;
            case "-":
              return 41;
            case ".":
              return 42;
            case "/":
              return 43;
            case ":":
              return 44;
            default:
              throw "illegal char :" + c2;
          }
        }
      };
      return _this;
    };
    var qr8BitByte = function qr8BitByte(data) {
      var _mode = QRMode.MODE_8BIT_BYTE;
      var _bytes = qrcode3.stringToBytes(data);
      var _this = {};
      _this.getMode = function () {
        return _mode;
      };
      _this.getLength = function (buffer) {
        return _bytes.length;
      };
      _this.write = function (buffer) {
        for (var i2 = 0; i2 < _bytes.length; i2 += 1) {
          buffer.put(_bytes[i2], 8);
        }
      };
      return _this;
    };
    var qrKanji = function qrKanji(data) {
      var _mode = QRMode.MODE_KANJI;
      var stringToBytes = qrcode3.stringToBytesFuncs["SJIS"];
      if (!stringToBytes) {
        throw "sjis not supported.";
      }
      !function (c2, code) {
        var test = stringToBytes(c2);
        if (test.length != 2 || (test[0] << 8 | test[1]) != code) {
          throw "sjis not supported.";
        }
      }("\u53CB", 38726);
      var _bytes = stringToBytes(data);
      var _this = {};
      _this.getMode = function () {
        return _mode;
      };
      _this.getLength = function (buffer) {
        return ~~(_bytes.length / 2);
      };
      _this.write = function (buffer) {
        var data2 = _bytes;
        var i2 = 0;
        while (i2 + 1 < data2.length) {
          var c2 = (255 & data2[i2]) << 8 | 255 & data2[i2 + 1];
          if (33088 <= c2 && c2 <= 40956) {
            c2 -= 33088;
          } else if (57408 <= c2 && c2 <= 60351) {
            c2 -= 49472;
          } else {
            throw "illegal char at " + (i2 + 1) + "/" + c2;
          }
          c2 = (c2 >>> 8 & 255) * 192 + (c2 & 255);
          buffer.put(c2, 13);
          i2 += 2;
        }
        if (i2 < data2.length) {
          throw "illegal char at " + (i2 + 1);
        }
      };
      return _this;
    };
    var byteArrayOutputStream = function byteArrayOutputStream() {
      var _bytes = [];
      var _this = {};
      _this.writeByte = function (b) {
        _bytes.push(b & 255);
      };
      _this.writeShort = function (i2) {
        _this.writeByte(i2);
        _this.writeByte(i2 >>> 8);
      };
      _this.writeBytes = function (b, off, len) {
        off = off || 0;
        len = len || b.length;
        for (var i2 = 0; i2 < len; i2 += 1) {
          _this.writeByte(b[i2 + off]);
        }
      };
      _this.writeString = function (s2) {
        for (var i2 = 0; i2 < s2.length; i2 += 1) {
          _this.writeByte(s2.charCodeAt(i2));
        }
      };
      _this.toByteArray = function () {
        return _bytes;
      };
      _this.toString = function () {
        var s2 = "";
        s2 += "[";
        for (var i2 = 0; i2 < _bytes.length; i2 += 1) {
          if (i2 > 0) {
            s2 += ",";
          }
          s2 += _bytes[i2];
        }
        s2 += "]";
        return s2;
      };
      return _this;
    };
    var base64EncodeOutputStream = function base64EncodeOutputStream() {
      var _buffer = 0;
      var _buflen = 0;
      var _length = 0;
      var _base64 = "";
      var _this = {};
      var writeEncoded = function writeEncoded(b) {
        _base64 += String.fromCharCode(encode(b & 63));
      };
      var encode = function encode(n2) {
        if (n2 < 0) ;else if (n2 < 26) {
          return 65 + n2;
        } else if (n2 < 52) {
          return 97 + (n2 - 26);
        } else if (n2 < 62) {
          return 48 + (n2 - 52);
        } else if (n2 == 62) {
          return 43;
        } else if (n2 == 63) {
          return 47;
        }
        throw "n:" + n2;
      };
      _this.writeByte = function (n2) {
        _buffer = _buffer << 8 | n2 & 255;
        _buflen += 8;
        _length += 1;
        while (_buflen >= 6) {
          writeEncoded(_buffer >>> _buflen - 6);
          _buflen -= 6;
        }
      };
      _this.flush = function () {
        if (_buflen > 0) {
          writeEncoded(_buffer << 6 - _buflen);
          _buffer = 0;
          _buflen = 0;
        }
        if (_length % 3 != 0) {
          var padlen = 3 - _length % 3;
          for (var i2 = 0; i2 < padlen; i2 += 1) {
            _base64 += "=";
          }
        }
      };
      _this.toString = function () {
        return _base64;
      };
      return _this;
    };
    var base64DecodeInputStream = function base64DecodeInputStream(str) {
      var _str = str;
      var _pos = 0;
      var _buffer = 0;
      var _buflen = 0;
      var _this = {};
      _this.read = function () {
        while (_buflen < 8) {
          if (_pos >= _str.length) {
            if (_buflen == 0) {
              return -1;
            }
            throw "unexpected end of file./" + _buflen;
          }
          var c2 = _str.charAt(_pos);
          _pos += 1;
          if (c2 == "=") {
            _buflen = 0;
            return -1;
          } else if (c2.match(/^\s$/)) {
            continue;
          }
          _buffer = _buffer << 6 | decode(c2.charCodeAt(0));
          _buflen += 6;
        }
        var n2 = _buffer >>> _buflen - 8 & 255;
        _buflen -= 8;
        return n2;
      };
      var decode = function decode(c2) {
        if (65 <= c2 && c2 <= 90) {
          return c2 - 65;
        } else if (97 <= c2 && c2 <= 122) {
          return c2 - 97 + 26;
        } else if (48 <= c2 && c2 <= 57) {
          return c2 - 48 + 52;
        } else if (c2 == 43) {
          return 62;
        } else if (c2 == 47) {
          return 63;
        } else {
          throw "c:" + c2;
        }
      };
      return _this;
    };
    var gifImage = function gifImage(width, height) {
      var _width = width;
      var _height = height;
      var _data = new Array(width * height);
      var _this = {};
      _this.setPixel = function (x, y, pixel) {
        _data[y * _width + x] = pixel;
      };
      _this.write = function (out) {
        out.writeString("GIF87a");
        out.writeShort(_width);
        out.writeShort(_height);
        out.writeByte(128);
        out.writeByte(0);
        out.writeByte(0);
        out.writeByte(0);
        out.writeByte(0);
        out.writeByte(0);
        out.writeByte(255);
        out.writeByte(255);
        out.writeByte(255);
        out.writeString(",");
        out.writeShort(0);
        out.writeShort(0);
        out.writeShort(_width);
        out.writeShort(_height);
        out.writeByte(0);
        var lzwMinCodeSize = 2;
        var raster = getLZWRaster(lzwMinCodeSize);
        out.writeByte(lzwMinCodeSize);
        var offset = 0;
        while (raster.length - offset > 255) {
          out.writeByte(255);
          out.writeBytes(raster, offset, 255);
          offset += 255;
        }
        out.writeByte(raster.length - offset);
        out.writeBytes(raster, offset, raster.length - offset);
        out.writeByte(0);
        out.writeString(";");
      };
      var bitOutputStream = function bitOutputStream(out) {
        var _out = out;
        var _bitLength = 0;
        var _bitBuffer = 0;
        var _this2 = {};
        _this2.write = function (data, length) {
          if (data >>> length != 0) {
            throw "length over";
          }
          while (_bitLength + length >= 8) {
            _out.writeByte(255 & (data << _bitLength | _bitBuffer));
            length -= 8 - _bitLength;
            data >>>= 8 - _bitLength;
            _bitBuffer = 0;
            _bitLength = 0;
          }
          _bitBuffer = data << _bitLength | _bitBuffer;
          _bitLength = _bitLength + length;
        };
        _this2.flush = function () {
          if (_bitLength > 0) {
            _out.writeByte(_bitBuffer);
          }
        };
        return _this2;
      };
      var getLZWRaster = function getLZWRaster(lzwMinCodeSize) {
        var clearCode = 1 << lzwMinCodeSize;
        var endCode = (1 << lzwMinCodeSize) + 1;
        var bitLength = lzwMinCodeSize + 1;
        var table = lzwTable();
        for (var i2 = 0; i2 < clearCode; i2 += 1) {
          table.add(String.fromCharCode(i2));
        }
        table.add(String.fromCharCode(clearCode));
        table.add(String.fromCharCode(endCode));
        var byteOut = byteArrayOutputStream();
        var bitOut = bitOutputStream(byteOut);
        bitOut.write(clearCode, bitLength);
        var dataIndex = 0;
        var s2 = String.fromCharCode(_data[dataIndex]);
        dataIndex += 1;
        while (dataIndex < _data.length) {
          var c2 = String.fromCharCode(_data[dataIndex]);
          dataIndex += 1;
          if (table.contains(s2 + c2)) {
            s2 = s2 + c2;
          } else {
            bitOut.write(table.indexOf(s2), bitLength);
            if (table.size() < 4095) {
              if (table.size() == 1 << bitLength) {
                bitLength += 1;
              }
              table.add(s2 + c2);
            }
            s2 = c2;
          }
        }
        bitOut.write(table.indexOf(s2), bitLength);
        bitOut.write(endCode, bitLength);
        bitOut.flush();
        return byteOut.toByteArray();
      };
      var lzwTable = function lzwTable() {
        var _map = {};
        var _size = 0;
        var _this2 = {};
        _this2.add = function (key) {
          if (_this2.contains(key)) {
            throw "dup key:" + key;
          }
          _map[key] = _size;
          _size += 1;
        };
        _this2.size = function () {
          return _size;
        };
        _this2.indexOf = function (key) {
          return _map[key];
        };
        _this2.contains = function (key) {
          return typeof _map[key] != "undefined";
        };
        return _this2;
      };
      return _this;
    };
    var createDataURL = function createDataURL(width, height, getPixel) {
      var gif = gifImage(width, height);
      for (var y = 0; y < height; y += 1) {
        for (var x = 0; x < width; x += 1) {
          gif.setPixel(x, y, getPixel(x, y));
        }
      }
      var b = byteArrayOutputStream();
      gif.write(b);
      var base64 = base64EncodeOutputStream();
      var bytes = b.toByteArray();
      for (var i2 = 0; i2 < bytes.length; i2 += 1) {
        base64.writeByte(bytes[i2]);
      }
      base64.flush();
      return "data:image/gif;base64," + base64;
    };
    return qrcode3;
  }();
  !function () {
    qrcode2.stringToBytesFuncs["UTF-8"] = function (s2) {
      function toUTF8Array(str) {
        var utf8 = [];
        for (var i2 = 0; i2 < str.length; i2++) {
          var charcode = str.charCodeAt(i2);
          if (charcode < 128) utf8.push(charcode);else if (charcode < 2048) {
            utf8.push(192 | charcode >> 6, 128 | charcode & 63);
          } else if (charcode < 55296 || charcode >= 57344) {
            utf8.push(224 | charcode >> 12, 128 | charcode >> 6 & 63, 128 | charcode & 63);
          } else {
            i2++;
            charcode = 65536 + ((charcode & 1023) << 10 | str.charCodeAt(i2) & 1023);
            utf8.push(240 | charcode >> 18, 128 | charcode >> 12 & 63, 128 | charcode >> 6 & 63, 128 | charcode & 63);
          }
        }
        return utf8;
      }
      return toUTF8Array(s2);
    };
  }();
  (function (factory) {
    {
      module.exports = factory();
    }
  })(function () {
    return qrcode2;
  });
})(qrcode$1);
var qrcode = qrcode$1.exports;
function copyToClipboard(text) {
  return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          _context3.prev = 0;
          if (navigator == null ? void 0 : navigator.clipboard) {
            _context3.next = 3;
            break;
          }
          throw new TonConnectUIError("Clipboard API not available");
        case 3:
          _context3.next = 5;
          return navigator.clipboard.writeText(text);
        case 5:
          return _context3.abrupt("return", _context3.sent);
        case 8:
          _context3.prev = 8;
          _context3.t0 = _context3["catch"](0);
        case 10:
          fallbackCopyTextToClipboard(text);
        case 11:
        case "end":
          return _context3.stop();
      }
    }, _callee3, null, [[0, 8]]);
  }));
}
function fallbackCopyTextToClipboard(text) {
  var textArea = document.createElement("textarea");
  textArea.value = text;
  textArea.style.top = "0";
  textArea.style.left = "0";
  textArea.style.position = "fixed";
  document.body.appendChild(textArea);
  textArea.focus();
  textArea.select();
  try {
    document.execCommand("copy");
  } finally {
    document.body.removeChild(textArea);
  }
}
var _tmpl$$t = /* @__PURE__ */template$1("<div></div>");
var QRCode = function QRCode(props) {
  var qrCodeCanvasRef;
  var qrCodeWrapperRef;
  var imageRef;
  var _createSignal31 = createSignal(false),
    _createSignal32 = _slicedToArray(_createSignal31, 2),
    copyButtonOpened = _createSignal32[0],
    setCopyButtonOpened = _createSignal32[1];
  var _createSignal33 = createSignal(picSizeDefault),
    _createSignal34 = _slicedToArray(_createSignal33, 2),
    picSize = _createSignal34[0],
    setPicSize = _createSignal34[1];
  createEffect(function () {
    var errorCorrectionLevel = "L";
    var cellSize = 4;
    var qr = qrcode(0, errorCorrectionLevel);
    qr.addData(props.sourceUrl);
    qr.make();
    qrCodeCanvasRef.innerHTML = qr.createSvgTag(cellSize, 0);
    var qrSize = qrCodeCanvasRef.firstElementChild.clientWidth;
    var scale = Math.round(qrNormalSize / qrSize * 1e5) / 1e5;
    if (imageRef) {
      var imgSize = Math.ceil(imgSizeDefault / (scale * cellSize)) * cellSize;
      var imgOffset = toPx(Math.ceil((qrSize - imgSize) / (2 * cellSize)) * cellSize);
      imageRef.style.top = imgOffset;
      imageRef.style.left = imgOffset;
      imageRef.style.height = toPx(imgSize);
      imageRef.style.width = toPx(imgSize);
      setPicSize(Math.round(picSizeDefault / scale));
    }
    qrCodeWrapperRef.style.transform = "scale(".concat(scale, ")");
  });
  var timeoutId = null;
  var onCopyClick = function onCopyClick() {
    setCopyButtonOpened(true);
    copyToClipboard(props.sourceUrl);
    if (timeoutId != null) {
      clearTimeout(timeoutId);
    }
    timeoutId = setTimeout(function () {
      return setCopyButtonOpened(false);
    }, 1500);
  };
  return createComponent(QrCodeBackground, _defineAccessor("get", _defineProperty(_defineAccessor("get", {}, "class", function () {
    return props["class"];
  }), "onClick", onCopyClick), "children", function () {
    return [createComponent(QrCodeWrapper$2, {
      ref: function ref(r$) {
        var _ref$ = qrCodeWrapperRef;
        typeof _ref$ === "function" ? _ref$(r$) : qrCodeWrapperRef = r$;
      },
      get children() {
        return [function () {
          var _el$ = _tmpl$$t.cloneNode(true);
          var _ref$2 = qrCodeCanvasRef;
          typeof _ref$2 === "function" ? use(_ref$2, _el$) : qrCodeCanvasRef = _el$;
          return _el$;
        }(), createComponent(Show, {
          get when() {
            return props.imageUrl;
          },
          get children() {
            return createComponent(ImageBackground, {
              ref: function ref(r$) {
                var _ref$3 = imageRef;
                typeof _ref$3 === "function" ? _ref$3(r$) : imageRef = r$;
              },
              get children() {
                return createComponent(ImageStyled$3, {
                  get src() {
                    return props.imageUrl;
                  },
                  alt: "",
                  get size() {
                    return picSize();
                  }
                });
              }
            });
          }
        })];
      }
    }), createComponent(Transition, {
      onBeforeEnter: function onBeforeEnter(el) {
        animate(el, [{
          opacity: 0,
          transform: "translate(-50%, 44px)"
        }, {
          opacity: 1,
          transform: "translate(-50%, 0)"
        }], {
          duration: 150,
          easing: "ease-out"
        });
      },
      onExit: function onExit(el, done) {
        animate(el, [{
          opacity: 1,
          transform: "translate(-50%, 0)"
        }, {
          opacity: 0,
          transform: "translate(-50%, 44px)"
        }], {
          duration: 150,
          easing: "ease-out"
        }).finished.then(function () {
          done();
        });
      },
      get children() {
        return createComponent(Show, {
          get when() {
            return copyButtonOpened() && !props.disableCopy;
          },
          get children() {
            return createComponent(CopiedBoxStyled, {
              get children() {
                return [createComponent(SuccessIcon, {
                  size: "xs"
                }), createComponent(Text, {
                  translationKey: "common.linkCopied",
                  children: "Link Copied"
                })];
              }
            });
          }
        });
      }
    }), createComponent(Show, {
      get when() {
        return !props.disableCopy;
      },
      get children() {
        return createComponent(CopyIconButton, {
          get children() {
            return createComponent(CopyLightIcon, {});
          }
        });
      }
    })];
  }));
};
var deepReadObject = function deepReadObject(obj, path, defaultValue) {
  var value = path.trim().split(".").reduce(function (a2, b) {
    return a2 ? a2[b] : void 0;
  }, obj);
  return value !== void 0 ? value : defaultValue;
};
var template = function template(str, params) {
  var reg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : /{{(.*?)}}/g;
  return str.replace(reg, function (_, key) {
    return deepReadObject(params, key, "");
  });
};
var createI18nContext = function createI18nContext() {
  var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var lang = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : navigator.language in init ? navigator.language : Object.keys(init)[0];
  var _createSignal35 = createSignal(lang),
    _createSignal36 = _slicedToArray(_createSignal35, 2),
    _locale = _createSignal36[0],
    setLocale = _createSignal36[1];
  var _createStore3 = createStore(init),
    _createStore4 = _slicedToArray(_createStore3, 2),
    _dict = _createStore4[0],
    setDict = _createStore4[1];
  var translate = function translate(key, params, defaultValue) {
    var val = deepReadObject(_dict[_locale()], key, defaultValue || "");
    if (typeof val === "function") return val(params);
    if (typeof val === "string") return template(val, params || {});
    return val;
  };
  var actions = {
    add: function add(lang2, table) {
      setDict(lang2, function (t2) {
        return Object.assign(t2 || {}, table);
      });
    },
    locale: function locale(lang2) {
      return lang2 ? setLocale(lang2) : _locale();
    },
    dict: function dict(lang2) {
      return deepReadObject(_dict, lang2);
    }
  };
  return [translate, actions];
};
var I18nContext = createContext({});
var useI18n = function useI18n() {
  return useContext(I18nContext);
};
var TextStyled$3 = styled.div(_templateObject23 || (_templateObject23 = _taggedTemplateLiteral(["\n    font-style: normal;\n    font-weight: ", ";\n    font-size: ", ";\n    line-height: ", ";\n\n    color: ", ";\n"])), function (props) {
  return props.fontWeight;
}, function (props) {
  return props.fontSize;
}, function (props) {
  return props.lineHeight;
}, function (props) {
  return props.color;
});
var Text = function Text(inputs) {
  var theme = useTheme();
  var _useI18n = useI18n(),
    _useI18n2 = _slicedToArray(_useI18n, 1),
    t2 = _useI18n2[0];
  var textRef;
  var color = function color() {
    return inputs.color || theme.colors.text.primary;
  };
  var props = mergeProps({
    fontSize: "14px",
    fontWeight: "510",
    lineHeight: "130%"
  }, inputs);
  createEffect(function () {
    if (!textRef) {
      return;
    }
    if (props.cursor === "unset") {
      return;
    }
    if (getComputedStyle(textRef).cursor !== "pointer") {
      textRef.style.cursor = "default";
    }
  });
  return createComponent(TextStyled$3, _defineAccessor("get", _defineProperty(_defineProperty(_defineAccessor("get", {
    get fontSize() {
      return props.fontSize;
    },
    get fontWeight() {
      return props.fontWeight;
    },
    get lineHeight() {
      return props.lineHeight;
    },
    get color() {
      return color();
    }
  }, "class", function () {
    return props["class"];
  }), "ref", function ref(r$) {
    var _ref$ = textRef;
    typeof _ref$ === "function" ? _ref$(r$) : textRef = r$;
  }), "data-tc-text", "true"), "children", function () {
    var _a2;
    return createMemo(function () {
      return !!props.translationKey;
    })() ? t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString()) : props.children;
  }));
};
var ImageContainer = styled.div(_templateObject24 || (_templateObject24 = _taggedTemplateLiteral(["\n    position: relative;\n\n    &::after {\n        content: '';\n        display: block;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        border: 0.5px solid rgba(0, 0, 0, 0.08);\n\n        border-radius: inherit;\n    }\n"])));
var ImageStyled$2 = styled(Image)(_templateObject25 || (_templateObject25 = _taggedTemplateLiteral(["\n    width: 100%;\n    height: 100%;\n    border-radius: inherit;\n"])));
var WalletImage = function WalletImage(props) {
  return createComponent(ImageContainer, _defineAccessor("get", _defineAccessor("get", {}, "class", function () {
    return props["class"];
  }), "children", function () {
    return createComponent(ImageStyled$2, {
      get src() {
        return props.src;
      }
    });
  }));
};
var borders$3 = {
  m: "16px",
  s: "12px",
  none: "0"
};
var badgeBorders = {
  m: "6px",
  s: "6px",
  none: "0"
};
var WalletItemStyled = styled.button(_templateObject26 || (_templateObject26 = _taggedTemplateLiteral(["\n    position: relative;\n    cursor: pointer;\n    border: none;\n    background-color: unset;\n    padding: 8px 4px;\n    width: 92px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    transition: transform 0.125s ease-in-out;\n\n    ", " {\n        &:hover {\n            transform: scale(1.04);\n        }\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n\n    ", " {\n        padding: 8px 4px;\n        width: 82px;\n    }\n\n    ", " {\n        &:active {\n            transform: scale(0.92);\n        }\n    }\n"])), mediaNotTouch, media("mobile"), mediaTouch);
var ImageStyled$1 = styled(WalletImage)(_templateObject27 || (_templateObject27 = _taggedTemplateLiteral(["\n    width: 60px;\n    height: 60px;\n    border-radius: ", ";\n\n    margin-bottom: 8px;\n"])), function (props) {
  return borders$3[props.theme.borderRadius];
});
var BadgeStyled = styled(Image)(_templateObject28 || (_templateObject28 = _taggedTemplateLiteral(["\n    position: absolute;\n    right: 10px;\n    top: 50px;\n    width: 24px;\n    height: 24px;\n    border-radius: ", ";\n    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.08);\n"])), function (props) {
  return badgeBorders[props.theme.borderRadius];
});
var StyledText = styled(Text)(_templateObject29 || (_templateObject29 = _taggedTemplateLiteral(["\n    max-width: 90px;\n    font-weight: 510;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n\n    ", " {\n        max-width: 80px;\n    }\n"])), media("mobile"));
var StyledSecondLine = styled(Text)(_templateObject30 || (_templateObject30 = _taggedTemplateLiteral(["\n    font-weight: ", ";\n    max-width: 90px;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    color: ", ";\n\n    ", " {\n        max-width: 80px;\n    }\n"])), function (props) {
  return props.colorPrimary ? "510" : "400";
}, function (props) {
  return props.colorPrimary ? props.theme.colors.text.primary : props.theme.colors.text.secondary;
}, media("mobile"));
var _tmpl$$s = /* @__PURE__ */template$1("<div></div>");
var WalletItem = function WalletItem(props) {
  var ctxRef = null;
  var adjustLetterSpacing = function adjustLetterSpacing() {
    var name = ctxRef == null ? void 0 : ctxRef.querySelector("div");
    if (name && name.scrollWidth > name.clientWidth) {
      var spacing = 0;
      var minSpacing = -0.4;
      var step = 0.05;
      while (name.scrollWidth > name.clientWidth && spacing >= minSpacing) {
        spacing -= step;
        name.style.letterSpacing = "".concat(spacing, "px");
      }
      if (spacing !== 0) {
        spacing -= step;
        name.style.letterSpacing = "".concat(spacing, "px");
      }
    }
  };
  onMount(function () {
    return adjustLetterSpacing();
  });
  createEffect(function () {
    adjustLetterSpacing();
  });
  return createComponent(WalletItemStyled, _defineAccessor("get", _defineProperty(_defineProperty(_defineAccessor("get", {}, "class", function () {
    return props["class"];
  }), "onClick", function onClick() {
    return props.onClick();
  }), "data-tc-wallet-item", "true"), "children", function () {
    return [createMemo(function () {
      return createMemo(function () {
        return typeof props.icon === "string";
      })() ? createComponent(ImageStyled$1, {
        get src() {
          return props.icon;
        }
      }) : props.icon;
    }), createMemo(function () {
      return createMemo(function () {
        return !!props.badgeUrl;
      })() && createComponent(BadgeStyled, {
        get src() {
          return props.badgeUrl;
        }
      });
    }), function () {
      var _el$ = _tmpl$$s.cloneNode(true);
      use(function (el) {
        return ctxRef = el;
      }, _el$);
      insert(_el$, createComponent(StyledText, {
        get children() {
          return props.name;
        }
      }));
      return _el$;
    }(), createMemo(function () {
      return createMemo(function () {
        return !!props.secondLine;
      })() && createComponent(StyledSecondLine, {
        get colorPrimary() {
          var _a2;
          return (_a2 = props.secondLineColorPrimary) != null ? _a2 : true;
        },
        get children() {
          return props.secondLine;
        }
      });
    })];
  }));
};
var H1Styled$9 = styled.h1(_templateObject31 || (_templateObject31 = _taggedTemplateLiteral(["\n    font-style: normal;\n    font-weight: 590;\n    font-size: 20px;\n    line-height: 28px;\n\n    text-align: center;\n\n    color: ", ";\n\n    margin-top: 0;\n    margin-bottom: 0;\n\n    cursor: default;\n"])), function (props) {
  return props.theme.colors.text.primary;
});
var H1 = function H1(props) {
  var _useI18n3 = useI18n(),
    _useI18n4 = _slicedToArray(_useI18n3, 1),
    t2 = _useI18n4[0];
  return createComponent(H1Styled$9, _defineAccessor("get", _defineProperty(_defineAccessor("get", {}, "class", function () {
    return props["class"];
  }), "data-tc-h1", "true"), "children", function () {
    var _a2;
    return createMemo(function () {
      return !!props.translationKey;
    })() ? t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString()) : props.children;
  }));
};
var H2Styled$5 = styled.h2(_templateObject32 || (_templateObject32 = _taggedTemplateLiteral(["\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 22px;\n\n    text-align: center;\n\n    color: ", ";\n\n    margin-top: 0;\n    margin-bottom: 32px;\n\n    cursor: default;\n"])), function (props) {
  return props.theme.colors.text.secondary;
});
var H2 = function H2(props) {
  var _useI18n5 = useI18n(),
    _useI18n6 = _slicedToArray(_useI18n5, 1),
    t2 = _useI18n6[0];
  return createComponent(H2Styled$5, _defineAccessor("get", _defineProperty(_defineAccessor("get", {}, "class", function () {
    return props["class"];
  }), "data-tc-h2", "true"), "children", function () {
    var _a2;
    return createMemo(function () {
      return !!props.translationKey;
    })() ? t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString()) : props.children;
  }));
};
var H3Styled$1 = styled.h3(_templateObject33 || (_templateObject33 = _taggedTemplateLiteral(["\n    font-style: normal;\n    font-weight: 510;\n    font-size: 16px;\n    line-height: 20px;\n\n    color: ", ";\n\n    margin-top: 0;\n    margin-bottom: 0;\n\n    cursor: default;\n"])), function (props) {
  return props.theme.colors.text.primary;
});
var H3 = function H3(props) {
  var _useI18n7 = useI18n(),
    _useI18n8 = _slicedToArray(_useI18n7, 1),
    t2 = _useI18n8[0];
  return createComponent(H3Styled$1, _defineAccessor("get", _defineAccessor("get", {
    "data-tc-h3": "true"
  }, "class", function () {
    return props["class"];
  }), "children", function () {
    var _a2;
    return createMemo(function () {
      return !!props.translationKey;
    })() ? t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString()) : props.children;
  }));
};
var _tmpl$$r = /* @__PURE__ */template$1("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.75 7.5C9.33579 7.5 9 7.16421 9 6.75C9 6.33579 9.33579 6 9.75 6H21.25C21.6642 6 22 6.33579 22 6.75V18.25C22 18.6642 21.6642 19 21.25 19C20.8358 19 20.5 18.6642 20.5 18.25V8.56066L6.28033 22.7803C5.98744 23.0732 5.51256 23.0732 5.21967 22.7803C4.92678 22.4874 4.92678 22.0126 5.21967 21.7197L19.4393 7.5H9.75Z\"></path></svg>");
var LongArrowIcon = function LongArrowIcon(props) {
  var theme = useTheme();
  var fill = function fill() {
    return props.fill || theme.colors.icon.secondary;
  };
  return function () {
    var _el$ = _tmpl$$r.cloneNode(true),
      _el$2 = _el$.firstChild;
    createRenderEffect(function (_p$) {
      var _v$ = fill(),
        _v$2 = fill();
      _v$ !== _p$._v$ && setAttribute(_el$, "fill", _p$._v$ = _v$);
      _v$2 !== _p$._v$2 && setAttribute(_el$2, "fill", _p$._v$2 = _v$2);
      return _p$;
    }, {
      _v$: void 0,
      _v$2: void 0
    });
    return _el$;
  }();
};
var _tmpl$$q = /* @__PURE__ */template$1("<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.1839 17.7069C13.6405 18.6507 13.3688 19.1226 13.0591 19.348C12.4278 19.8074 11.5723 19.8074 10.941 19.348C10.6312 19.1226 10.3595 18.6507 9.81613 17.7069L5.52066 10.2464C4.76864 8.94024 4.39263 8.28717 4.33762 7.75894C4.2255 6.68236 4.81894 5.65591 5.80788 5.21589C6.29309 5 7.04667 5 8.55383 5H15.4462C16.9534 5 17.7069 5 18.1922 5.21589C19.1811 5.65591 19.7745 6.68236 19.6624 7.75894C19.6074 8.28717 19.2314 8.94024 18.4794 10.2464L14.1839 17.7069ZM11.1 16.3412L6.56139 8.48002C6.31995 8.06185 6.19924 7.85276 6.18146 7.68365C6.14523 7.33896 6.33507 7.01015 6.65169 6.86919C6.80703 6.80002 7.04847 6.80002 7.53133 6.80002H7.53134L11.1 6.80002V16.3412ZM12.9 16.3412L17.4387 8.48002C17.6801 8.06185 17.8008 7.85276 17.8186 7.68365C17.8548 7.33896 17.665 7.01015 17.3484 6.86919C17.193 6.80002 16.9516 6.80002 16.4687 6.80002L12.9 6.80002V16.3412Z\"></path></svg>");
var TonIcon = function TonIcon(props) {
  var theme = useTheme();
  var fill = function fill() {
    return props.fill || theme.colors.icon.primary;
  };
  return function () {
    var _el$ = _tmpl$$q.cloneNode(true),
      _el$2 = _el$.firstChild;
    createRenderEffect(function () {
      return setAttribute(_el$2, "fill", fill());
    });
    return _el$;
  }();
};
var _tmpl$$p = /* @__PURE__ */template$1("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><g clip-path=\"url(#clip0_3783_2045)\"><circle cx=\"8\" cy=\"8.00098\" r=\"8\"></circle><path d=\"M4.75 8.50098L7 10.751L11.75 6.00098\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g><defs><clipPath id=\"clip0_3783_2045\"><rect width=\"16\" height=\"16\" fill=\"white\" transform=\"translate(0 0.000976562)\"></rect></clipPath></defs></svg>"),
  _tmpl$2$3 = /* @__PURE__ */template$1("<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"12\" cy=\"12\" r=\"11\"></circle><path d=\"M17.1364 9.6364C17.4879 9.28493 17.4879 8.71508 17.1364 8.36361C16.7849 8.01214 16.2151 8.01214 15.8636 8.36361L10 14.2272L8.1364 12.3636C7.78493 12.0121 7.21508 12.0121 6.86361 12.3636C6.51214 12.7151 6.51214 13.2849 6.86361 13.6364L9.36361 16.1364C9.71508 16.4879 10.2849 16.4879 10.6364 16.1364L17.1364 9.6364Z\"></path></svg>"),
  _tmpl$3$2 = /* @__PURE__ */template$1("<svg width=\"72\" height=\"72\" viewBox=\"0 0 72 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"36\" cy=\"36\" r=\"33\"></circle><path d=\"M50.9142 28.4142C51.6953 27.6332 51.6953 26.3668 50.9142 25.5858C50.1332 24.8047 48.8668 24.8047 48.0858 25.5858L30 43.6716L23.9142 37.5858C23.1332 36.8047 21.8668 36.8047 21.0858 37.5858C20.3047 38.3668 20.3047 39.6332 21.0858 40.4142L28.5858 47.9142C29.3668 48.6953 30.6332 48.6953 31.4142 47.9142L50.9142 28.4142Z\"></path></svg>");
var SuccessIcon = function SuccessIcon(props) {
  var theme = useTheme();
  var size = function size() {
    return props.size || "s";
  };
  var fill = function fill() {
    return props.fill || theme.colors.icon.success;
  };
  return createMemo(function () {
    var _c$ = createMemo(function () {
      return size() === "xs";
    });
    return function () {
      return _c$() ? function () {
        var _el$ = _tmpl$$p.cloneNode(true),
          _el$2 = _el$.firstChild,
          _el$3 = _el$2.firstChild,
          _el$4 = _el$3.nextSibling;
        createRenderEffect(function (_p$) {
          var _v$ = props["class"],
            _v$2 = fill(),
            _v$3 = theme.colors.constant.white;
          _v$ !== _p$._v$ && setAttribute(_el$, "class", _p$._v$ = _v$);
          _v$2 !== _p$._v$2 && setAttribute(_el$3, "fill", _p$._v$2 = _v$2);
          _v$3 !== _p$._v$3 && setAttribute(_el$4, "stroke", _p$._v$3 = _v$3);
          return _p$;
        }, {
          _v$: void 0,
          _v$2: void 0,
          _v$3: void 0
        });
        return _el$;
      }() : function () {
        var _c$2 = createMemo(function () {
          return size() === "s";
        });
        return function () {
          return _c$2() ? function () {
            var _el$5 = _tmpl$2$3.cloneNode(true),
              _el$6 = _el$5.firstChild,
              _el$7 = _el$6.nextSibling;
            createRenderEffect(function (_p$) {
              var _v$4 = props["class"],
                _v$5 = fill(),
                _v$6 = theme.colors.constant.white;
              _v$4 !== _p$._v$4 && setAttribute(_el$5, "class", _p$._v$4 = _v$4);
              _v$5 !== _p$._v$5 && setAttribute(_el$6, "fill", _p$._v$5 = _v$5);
              _v$6 !== _p$._v$6 && setAttribute(_el$7, "fill", _p$._v$6 = _v$6);
              return _p$;
            }, {
              _v$4: void 0,
              _v$5: void 0,
              _v$6: void 0
            });
            return _el$5;
          }() : function () {
            var _el$8 = _tmpl$3$2.cloneNode(true),
              _el$9 = _el$8.firstChild,
              _el$10 = _el$9.nextSibling;
            createRenderEffect(function (_p$) {
              var _v$7 = props["class"],
                _v$8 = fill(),
                _v$9 = theme.colors.constant.white;
              _v$7 !== _p$._v$7 && setAttribute(_el$8, "class", _p$._v$7 = _v$7);
              _v$8 !== _p$._v$8 && setAttribute(_el$9, "fill", _p$._v$8 = _v$8);
              _v$9 !== _p$._v$9 && setAttribute(_el$10, "fill", _p$._v$9 = _v$9);
              return _p$;
            }, {
              _v$7: void 0,
              _v$8: void 0,
              _v$9: void 0
            });
            return _el$8;
          }();
        };
      }();
    };
  }());
};
var _tmpl$$o = /* @__PURE__ */template$1("<svg width=\"72\" height=\"72\" viewBox=\"0 0 72 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"36\" cy=\"36\" r=\"33\"></circle><path d=\"M24.0858 26.9142C23.3047 26.1332 23.3047 24.8668 24.0858 24.0858C24.8668 23.3047 26.1332 23.3047 26.9142 24.0858L36 33.1716L45.0858 24.0858C45.8668 23.3047 47.1332 23.3047 47.9142 24.0858C48.6953 24.8668 48.6953 26.1332 47.9142 26.9142L38.8284 36L47.9142 45.0858C48.6953 45.8668 48.6953 47.1332 47.9142 47.9142C47.1332 48.6953 45.8668 48.6953 45.0858 47.9142L36 38.8284L26.9142 47.9142C26.1332 48.6953 24.8668 48.6953 24.0858 47.9142C23.3047 47.1332 23.3047 45.8668 24.0858 45.0858L33.1716 36L24.0858 26.9142Z\"></path></svg>"),
  _tmpl$2$2 = /* @__PURE__ */template$1("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\"><circle cx=\"24\" cy=\"24.001\" r=\"22\"></circle><path d=\"M24 24.001L31.5 16.501M24 24.001L16.5 16.501M24 24.001L16.5 31.501M24 24.001L31.5 31.501\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>"),
  _tmpl$3$1 = /* @__PURE__ */template$1("<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"12\" cy=\"12\" r=\"11\"></circle><path d=\"M7.86361 9.1364C7.51214 8.78493 7.51214 8.21508 7.86361 7.86361C8.21508 7.51214 8.78493 7.51214 9.1364 7.86361L12 10.7272L14.8636 7.86361C15.2151 7.51214 15.7849 7.51214 16.1364 7.86361C16.4879 8.21508 16.4879 8.78493 16.1364 9.1364L13.2728 12L16.1364 14.8636C16.4879 15.2151 16.4879 15.7849 16.1364 16.1364C15.7849 16.4879 15.2151 16.4879 14.8636 16.1364L12 13.2728L9.1364 16.1364C8.78493 16.4879 8.21508 16.4879 7.86361 16.1364C7.51214 15.7849 7.51214 15.2151 7.86361 14.8636L10.7272 12L7.86361 9.1364Z\"></path></svg>");
var ErrorIcon = function ErrorIcon(props) {
  var theme = useTheme();
  var size = function size() {
    return props.size || "m";
  };
  var fill = function fill() {
    return props.fill || theme.colors.icon.error;
  };
  return createMemo(function () {
    var _c$ = createMemo(function () {
      return size() === "m";
    });
    return function () {
      return _c$() ? function () {
        var _el$ = _tmpl$$o.cloneNode(true),
          _el$2 = _el$.firstChild,
          _el$3 = _el$2.nextSibling;
        createRenderEffect(function (_p$) {
          var _v$ = props["class"],
            _v$2 = fill(),
            _v$3 = theme.colors.constant.white;
          _v$ !== _p$._v$ && setAttribute(_el$, "class", _p$._v$ = _v$);
          _v$2 !== _p$._v$2 && setAttribute(_el$2, "fill", _p$._v$2 = _v$2);
          _v$3 !== _p$._v$3 && setAttribute(_el$3, "fill", _p$._v$3 = _v$3);
          return _p$;
        }, {
          _v$: void 0,
          _v$2: void 0,
          _v$3: void 0
        });
        return _el$;
      }() : function () {
        var _c$2 = createMemo(function () {
          return size() === "s";
        });
        return function () {
          return _c$2() ? function () {
            var _el$4 = _tmpl$2$2.cloneNode(true),
              _el$5 = _el$4.firstChild,
              _el$6 = _el$5.nextSibling;
            createRenderEffect(function (_p$) {
              var _v$4 = props["class"],
                _v$5 = fill(),
                _v$6 = theme.colors.constant.white;
              _v$4 !== _p$._v$4 && setAttribute(_el$4, "class", _p$._v$4 = _v$4);
              _v$5 !== _p$._v$5 && setAttribute(_el$5, "fill", _p$._v$5 = _v$5);
              _v$6 !== _p$._v$6 && setAttribute(_el$6, "stroke", _p$._v$6 = _v$6);
              return _p$;
            }, {
              _v$4: void 0,
              _v$5: void 0,
              _v$6: void 0
            });
            return _el$4;
          }() : function () {
            var _el$7 = _tmpl$3$1.cloneNode(true),
              _el$8 = _el$7.firstChild,
              _el$9 = _el$8.nextSibling;
            createRenderEffect(function (_p$) {
              var _v$7 = props["class"],
                _v$8 = fill(),
                _v$9 = theme.colors.constant.white;
              _v$7 !== _p$._v$7 && setAttribute(_el$7, "class", _p$._v$7 = _v$7);
              _v$8 !== _p$._v$8 && setAttribute(_el$8, "fill", _p$._v$8 = _v$8);
              _v$9 !== _p$._v$9 && setAttribute(_el$9, "fill", _p$._v$9 = _v$9);
              return _p$;
            }, {
              _v$7: void 0,
              _v$8: void 0,
              _v$9: void 0
            });
            return _el$7;
          }();
        };
      }();
    };
  }());
};
var _tmpl$$n = /* @__PURE__ */template$1("<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.55 5.85123C18.9459 7.81184 20.1094 12.1541 18.1488 15.55C16.1882 18.9459 11.8459 20.1094 8.44998 18.1488C8.01952 17.9003 7.46909 18.0478 7.22056 18.4782C6.97203 18.9087 7.11952 19.4591 7.54998 19.7076C11.8068 22.1653 17.2499 20.7068 19.7076 16.45C22.1653 12.1932 20.7068 6.75005 16.45 4.29239C12.1932 1.83472 6.75003 3.29321 4.29236 7.55001C4.04383 7.98047 4.19132 8.53091 4.62178 8.77943C5.05224 9.02796 5.60268 8.88048 5.8512 8.45001C7.81181 5.05413 12.1541 3.89062 15.55 5.85123Z\"></path></svg>"),
  _tmpl$2$1 = /* @__PURE__ */template$1("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"44\" height=\"44\" viewBox=\"0 0 44 44\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22 2.99951C11.5066 2.99951 3 11.5061 3 21.9995C3 32.4929 11.5066 40.9995 22 40.9995C22.8284 40.9995 23.5 41.6711 23.5 42.4995C23.5 43.3279 22.8284 43.9995 22 43.9995C9.84974 43.9995 0 34.1498 0 21.9995C0 9.84925 9.84974 -0.000488281 22 -0.000488281C34.1503 -0.000488281 44 9.84925 44 21.9995C44 22.8279 43.3284 23.4995 42.5 23.4995C41.6716 23.4995 41 22.8279 41 21.9995C41 11.5061 32.4934 2.99951 22 2.99951Z\"></path></svg>"),
  _tmpl$3 = /* @__PURE__ */template$1("<svg width=\"72\" height=\"72\" viewBox=\"0 0 72 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M24 56.7846C35.479 63.412 50.1572 59.479 56.7846 47.9999C63.412 36.5209 59.479 21.8427 48 15.2153C36.521 8.58791 21.8428 12.5209 15.2154 23.9999\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>");
var LoaderIcon = function LoaderIcon(props) {
  var theme = useTheme();
  var size = function size() {
    return props.size || "xs";
  };
  var fill = function fill() {
    return props.fill || theme.colors.icon.tertiary;
  };
  var rotateAnimation = h(_templateObject34 || (_templateObject34 = _taggedTemplateLiteral(["\n        0% {\n          transform: rotate(0deg);\n        }\n        100% {\n          transform: rotate(360deg);\n        }\n    "])));
  var svgClass = u(_templateObject35 || (_templateObject35 = _taggedTemplateLiteral(["\n        animation: ", " 1s linear infinite;\n    "])), rotateAnimation);
  return createMemo(function () {
    var _c$ = createMemo(function () {
      return size() === "xs";
    });
    return function () {
      return _c$() ? function () {
        var _el$ = _tmpl$$n.cloneNode(true),
          _el$2 = _el$.firstChild;
        createRenderEffect(function (_p$) {
          var _v$ = (0, _classnames["default"])(svgClass, props["class"]),
            _v$2 = fill();
          _v$ !== _p$._v$ && setAttribute(_el$, "class", _p$._v$ = _v$);
          _v$2 !== _p$._v$2 && setAttribute(_el$2, "fill", _p$._v$2 = _v$2);
          return _p$;
        }, {
          _v$: void 0,
          _v$2: void 0
        });
        return _el$;
      }() : function () {
        var _c$2 = createMemo(function () {
          return size() === "s";
        });
        return function () {
          return _c$2() ? function () {
            var _el$3 = _tmpl$2$1.cloneNode(true),
              _el$4 = _el$3.firstChild;
            createRenderEffect(function (_p$) {
              var _v$3 = (0, _classnames["default"])(svgClass, props["class"]),
                _v$4 = fill();
              _v$3 !== _p$._v$3 && setAttribute(_el$3, "class", _p$._v$3 = _v$3);
              _v$4 !== _p$._v$4 && setAttribute(_el$4, "fill", _p$._v$4 = _v$4);
              return _p$;
            }, {
              _v$3: void 0,
              _v$4: void 0
            });
            return _el$3;
          }() : function () {
            var _el$5 = _tmpl$3.cloneNode(true),
              _el$6 = _el$5.firstChild;
            createRenderEffect(function (_p$) {
              var _v$5 = (0, _classnames["default"])(svgClass, props["class"]),
                _v$6 = fill();
              _v$5 !== _p$._v$5 && setAttribute(_el$5, "class", _p$._v$5 = _v$5);
              _v$6 !== _p$._v$6 && setAttribute(_el$6, "stroke", _p$._v$6 = _v$6);
              return _p$;
            }, {
              _v$5: void 0,
              _v$6: void 0
            });
            return _el$5;
          }();
        };
      }();
    };
  }());
};
var _tmpl$$m = /* @__PURE__ */template$1("<svg width=\"158\" height=\"28\" viewBox=\"0 0 158 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28 14.001C28 21.733 21.732 28.001 14 28.001C6.26801 28.001 0 21.733 0 14.001C0 6.26899 6.26801 0.000976562 14 0.000976562C21.732 0.000976562 28 6.26899 28 14.001ZM9.21931 8.00098H18.7801H18.7813C20.538 8.00098 21.6522 9.89966 20.7691 11.4302L14.8672 21.6576C14.4822 22.3254 13.5172 22.3254 13.1322 21.6576L7.23158 11.4302C6.34721 9.89726 7.4614 8.00098 9.21931 8.00098ZM13.1262 18.5882V9.74806H9.21811C8.78976 9.74806 8.53708 10.2029 8.74163 10.5578L11.8423 16.1035L13.1262 18.5882ZM16.1559 16.1047L19.2554 10.5566C19.4599 10.2017 19.2073 9.74685 18.7789 9.74685H14.8709V18.5906L16.1559 16.1047Z\" fill=\"#0098EA\"></path><path d=\"M18.7802 8.00098H9.21936C7.46145 8.00098 6.34727 9.89726 7.23164 11.4302L13.1322 21.6576C13.5173 22.3254 14.4823 22.3254 14.8673 21.6576L20.7691 11.4302C21.6523 9.89966 20.5381 8.00098 18.7814 8.00098H18.7802ZM13.1274 18.5906L11.8424 16.1035L8.74168 10.5578C8.53714 10.2029 8.78981 9.74806 9.21816 9.74806H13.1262V18.5918L13.1274 18.5906ZM19.2555 10.5566L16.156 16.1047L14.8709 18.5906V9.74685H18.779C19.2073 9.74685 19.46 10.2017 19.2555 10.5566Z\" fill=\"white\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M51.7483 22.1967C55.7182 22.1967 58.9609 18.954 58.9609 14.9841C58.9609 11.0142 55.7182 7.77148 51.7483 7.77148C47.7588 7.77148 44.5357 11.0142 44.5357 14.9841C44.5357 18.954 47.7588 22.1967 51.7483 22.1967ZM51.7483 19.1702C49.4686 19.1702 47.6802 17.2442 47.6802 14.9841C47.6802 12.724 49.4686 10.798 51.7483 10.798C54.0084 10.798 55.7968 12.724 55.7968 14.9841C55.7968 17.2442 54.0084 19.1702 51.7483 19.1702ZM37.0698 21.9609H40.2142V10.9946H44.2843V8.00732H33V10.9946H37.0698V21.9609ZM69.9379 8.00732H73.0823V21.9609H70.3899L63.59 13.3333V21.9609H60.4652V8.00732H63.1576L69.9379 16.6153V8.00732ZM79.2259 14.9887C79.2259 10.9202 82.351 7.77539 86.4982 7.77539C89.8592 7.77539 92.5519 9.95709 93.2202 12.6891H90.7437C90.154 11.0971 88.4637 9.9964 86.4982 9.9964C83.5893 9.9964 81.5452 12.1781 81.5452 14.9887C81.5452 17.7994 83.5893 19.9811 86.4982 19.9811C88.4637 19.9811 90.154 18.8804 90.7437 17.2884H93.2202C92.5519 20.0204 89.8592 22.2021 86.4982 22.2021C82.351 22.2021 79.2259 19.0573 79.2259 14.9887ZM104.584 17.0525C104.584 19.9025 102.343 22.1628 99.4342 22.1628C96.5253 22.1628 94.2846 19.9025 94.2846 17.0525C94.2846 14.2025 96.5253 11.9422 99.4342 11.9422C102.343 11.9422 104.584 14.2025 104.584 17.0525ZM96.4663 17.0525C96.4663 18.8018 97.6849 20.158 99.4342 20.158C101.164 20.158 102.382 18.8018 102.382 17.0525C102.382 15.3032 101.164 13.947 99.4342 13.947C97.6849 13.947 96.4663 15.3032 96.4663 17.0525ZM108.626 12.1388H106.463V21.9662H108.626V17.1311C108.626 15.0281 109.726 13.9077 111.161 13.9077C112.419 13.9077 113.205 14.8512 113.205 16.4039V21.9662H115.367V16.0501C115.367 13.5539 113.893 11.9422 111.613 11.9422C110.335 11.9422 109.215 12.4926 108.626 13.4753V12.1388ZM117.839 12.1388H120.001V13.4753C120.59 12.4926 121.711 11.9422 122.988 11.9422C125.268 11.9422 126.742 13.5539 126.742 16.0501V21.9662H124.58V16.4039C124.58 14.8512 123.794 13.9077 122.536 13.9077C121.101 13.9077 120.001 15.0281 120.001 17.1311V21.9662H117.839V12.1388ZM133.558 22.1628C136.054 22.1628 137.823 20.728 138.373 18.8804H136.113C135.661 19.8238 134.717 20.2563 133.636 20.2563C131.887 20.2563 130.747 19.077 130.668 17.5832H138.491C138.688 14.2419 136.585 11.9422 133.577 11.9422C130.551 11.9422 128.526 14.1436 128.526 17.0525C128.526 20.0007 130.629 22.1628 133.558 22.1628ZM130.747 16.0501C131.042 14.5367 132.162 13.7505 133.518 13.7505C134.717 13.7505 135.838 14.4581 136.172 16.0501H130.747ZM149.851 18.3694C149.32 20.5511 147.453 22.1628 144.859 22.1628C141.871 22.1628 139.709 19.8828 139.709 17.0525C139.709 14.2222 141.871 11.9422 144.859 11.9422C147.453 11.9422 149.32 13.5539 149.851 15.7356H147.571C147.178 14.6743 146.215 13.9077 144.859 13.9077C143.109 13.9077 141.91 15.2246 141.91 17.0525C141.91 18.8804 143.109 20.1973 144.859 20.1973C146.215 20.1973 147.178 19.4307 147.571 18.3694H149.851ZM155.75 22.0645C156.418 22.0645 156.929 21.9859 157.362 21.8483V19.9221C157.047 20.0401 156.615 20.1187 156.202 20.1187C155.082 20.1187 154.551 19.6666 154.551 18.448V14.065H157.362V12.1388H154.551V9.40675H152.389V12.1388H150.345V14.065H152.389V18.8018C152.389 21.0228 153.863 22.0645 155.75 22.0645Z\"></path></svg>");
var TonConnectBrand = function TonConnectBrand() {
  var theme = useTheme();
  var fill = function fill() {
    return theme.theme === THEME.DARK ? theme.colors.constant.white : theme.colors.constant.black;
  };
  return function () {
    var _el$ = _tmpl$$m.cloneNode(true),
      _el$2 = _el$.firstChild,
      _el$3 = _el$2.nextSibling,
      _el$4 = _el$3.nextSibling;
    createRenderEffect(function () {
      return setAttribute(_el$4, "fill", fill());
    });
    return _el$;
  }();
};
var _tmpl$$l = /* @__PURE__ */template$1("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.56608 4.42584C5.82527 3.32158 6.8176 2.5 8.00001 2.5C9.38072 2.5 10.5 3.61929 10.5 5C10.5 5.63026 10.3391 6.0386 10.1264 6.34455C9.90018 6.66993 9.58561 6.92478 9.18864 7.20877C9.12579 7.25372 9.05873 7.30025 8.9887 7.34883C8.27392 7.84472 7.25001 8.55507 7.25001 10V10.25C7.25001 10.6642 7.5858 11 8.00001 11C8.41422 11 8.75001 10.6642 8.75001 10.25V10C8.75001 9.36502 9.10777 9.1096 9.94554 8.51149L10.0614 8.42873C10.4769 8.13147 10.9748 7.75194 11.358 7.20076C11.7547 6.63015 12 5.91973 12 5C12 2.79086 10.2091 1 8.00001 1C6.10564 1 4.5205 2.31615 4.10577 4.08308C4.01112 4.48634 4.26129 4.88997 4.66454 4.98462C5.0678 5.07927 5.47143 4.8291 5.56608 4.42584ZM8.00001 15C8.60752 15 9.10001 14.5075 9.10001 13.9C9.10001 13.2925 8.60752 12.8 8.00001 12.8C7.39249 12.8 6.90001 13.2925 6.90001 13.9C6.90001 14.5075 7.39249 15 8.00001 15Z\"></path></svg>");
var QuestionIcon = function QuestionIcon(props) {
  var theme = useTheme();
  var fill = function fill() {
    return props.fill || theme.colors.icon.secondary;
  };
  return function () {
    var _el$ = _tmpl$$l.cloneNode(true),
      _el$2 = _el$.firstChild;
    createRenderEffect(function () {
      return setAttribute(_el$2, "fill", fill());
    });
    return _el$;
  }();
};
var _tmpl$$k = /* @__PURE__ */template$1("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.98156 8.75C9.84854 11.4328 9.01206 13.5 8 13.5C6.98794 13.5 6.15146 11.4328 6.01844 8.75H9.98156ZM11.4832 8.75C11.4217 10.1155 11.1929 11.3869 10.8239 12.4017C10.7734 12.5405 10.7188 12.6789 10.6595 12.8154C12.1454 11.993 13.2103 10.5029 13.4493 8.75H11.4832ZM13.4493 7.25H11.4832C11.4217 5.88453 11.1929 4.61314 10.8239 3.5983C10.7734 3.4595 10.7188 3.32111 10.6595 3.18459C12.1454 4.00697 13.2103 5.49709 13.4493 7.25ZM9.98156 7.25H6.01844C6.15144 4.56764 6.98769 2.50062 7.99955 2.5H8C9.01206 2.5 9.84854 4.56724 9.98156 7.25ZM4.51678 7.25C4.57826 5.88453 4.80706 4.61314 5.1761 3.5983C5.22657 3.4595 5.28124 3.32111 5.3405 3.18459C3.85463 4.00697 2.78972 5.49709 2.55071 7.25H4.51678ZM2.55071 8.75C2.78972 10.5029 3.85463 11.993 5.3405 12.8154C5.28124 12.6789 5.22657 12.5405 5.1761 12.4017C4.80706 11.3869 4.57826 10.1155 4.51678 8.75H2.55071ZM15 8C15 11.866 11.866 15 8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 1 8 1C11.866 1 15 4.13401 15 8Z\"></path></svg>");
var BrowserIcon = function BrowserIcon(props) {
  var theme = useTheme();
  var fill = function fill() {
    return props.fill || theme.colors.icon.primary;
  };
  return function () {
    var _el$ = _tmpl$$k.cloneNode(true),
      _el$2 = _el$.firstChild;
    createRenderEffect(function () {
      return setAttribute(_el$2, "fill", fill());
    });
    return _el$;
  }();
};
var _tmpl$$j = /* @__PURE__ */template$1("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.5 4.8C2.5 3.11984 2.5 2.27976 2.82698 1.63803C3.1146 1.07354 3.57354 0.614601 4.13803 0.32698C4.77976 0 5.61984 0 7.3 0H8.7C10.3802 0 11.2202 0 11.862 0.32698C12.4265 0.614601 12.8854 1.07354 13.173 1.63803C13.5 2.27976 13.5 3.11984 13.5 4.8V11.2C13.5 12.8802 13.5 13.7202 13.173 14.362C12.8854 14.9265 12.4265 15.3854 11.862 15.673C11.2202 16 10.3802 16 8.7 16H7.3C5.61984 16 4.77976 16 4.13803 15.673C3.57354 15.3854 3.1146 14.9265 2.82698 14.362C2.5 13.7202 2.5 12.8802 2.5 11.2V4.8ZM4 3.9C4 3.05992 4 2.63988 4.16349 2.31901C4.3073 2.03677 4.53677 1.8073 4.81901 1.66349C5.13988 1.5 5.55992 1.5 6.4 1.5H9.6C10.4401 1.5 10.8601 1.5 11.181 1.66349C11.4632 1.8073 11.6927 2.03677 11.8365 2.31901C12 2.63988 12 3.05992 12 3.9V12.1C12 12.9401 12 13.3601 11.8365 13.681C11.6927 13.9632 11.4632 14.1927 11.181 14.3365C10.8601 14.5 10.4401 14.5 9.6 14.5H6.4C5.55992 14.5 5.13988 14.5 4.81901 14.3365C4.53677 14.1927 4.3073 13.9632 4.16349 13.681C4 13.3601 4 12.9401 4 12.1V3.9ZM7 2.5C6.58579 2.5 6.25 2.83579 6.25 3.25C6.25 3.66421 6.58579 4 7 4H9C9.41421 4 9.75 3.66421 9.75 3.25C9.75 2.83579 9.41421 2.5 9 2.5H7Z\"></path></svg>");
var MobileIcon = function MobileIcon(props) {
  var theme = useTheme();
  var fill = function fill() {
    return props.fill || theme.colors.icon.primary;
  };
  return function () {
    var _el$ = _tmpl$$j.cloneNode(true),
      _el$2 = _el$.firstChild;
    createRenderEffect(function () {
      return setAttribute(_el$2, "fill", fill());
    });
    return _el$;
  }();
};
var _tmpl$$i = /* @__PURE__ */template$1("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.5 6.8C1.5 5.11984 1.5 4.27976 1.82698 3.63803C2.1146 3.07354 2.57354 2.6146 3.13803 2.32698C3.77976 2 4.61984 2 6.3 2H9.7C11.3802 2 12.2202 2 12.862 2.32698C13.4265 2.6146 13.8854 3.07354 14.173 3.63803C14.5 4.27976 14.5 5.11984 14.5 6.8V11.5H15.25C15.6642 11.5 16 11.8358 16 12.25C16 12.6642 15.6642 13 15.25 13H0.75C0.335786 13 0 12.6642 0 12.25C0 11.8358 0.335786 11.5 0.75 11.5H1.5V6.8ZM3 11.5H13V5.9C13 5.05992 13 4.63988 12.8365 4.31901C12.6927 4.03677 12.4632 3.8073 12.181 3.66349C11.8601 3.5 11.4401 3.5 10.6 3.5H5.4C4.55992 3.5 4.13988 3.5 3.81901 3.66349C3.53677 3.8073 3.3073 4.03677 3.16349 4.31901C3 4.63988 3 5.05992 3 5.9V11.5Z\"></path></svg>");
var DesktopIcon = function DesktopIcon(props) {
  var theme = useTheme();
  var fill = function fill() {
    return props.fill || theme.colors.icon.primary;
  };
  return function () {
    var _el$ = _tmpl$$i.cloneNode(true),
      _el$2 = _el$.firstChild;
    createRenderEffect(function () {
      return setAttribute(_el$2, "fill", fill());
    });
    return _el$;
  }();
};
var _tmpl$$h = /* @__PURE__ */template$1("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"16\" viewBox=\"0 0 17 16\" fill=\"none\"><g clip-path=\"url(#clip0_3676_1603)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.5 1.25049C15.5 0.836275 15.1642 0.500488 14.75 0.500488C14.3358 0.500488 14 0.836275 14 1.25049V3.67012C12.7187 2.04487 10.7318 1.00049 8.5 1.00049C4.63401 1.00049 1.5 4.1345 1.5 8.00049C1.5 11.8665 4.63401 15.0005 8.5 15.0005C11.6844 15.0005 14.3703 12.8748 15.2199 9.96661C15.3361 9.56902 15.1079 9.15254 14.7103 9.03638C14.3127 8.92023 13.8962 9.14838 13.7801 9.54597C13.1123 11.8319 11 13.5005 8.5 13.5005C5.46243 13.5005 3 11.0381 3 8.00049C3 4.96292 5.46243 2.50049 8.5 2.50049C10.321 2.50049 11.9363 3.3855 12.9377 4.75049H10.5C10.0858 4.75049 9.75 5.08627 9.75 5.50049C9.75 5.9147 10.0858 6.25049 10.5 6.25049H14.75C15.1642 6.25049 15.5 5.9147 15.5 5.50049V1.25049Z\"></path></g><defs><clipPath id=\"clip0_3676_1603\"><rect width=\"16\" height=\"16\" fill=\"white\" transform=\"translate(0.5 0.000488281)\"></rect></clipPath></defs></svg>");
var RetryIcon = function RetryIcon(props) {
  var theme = useTheme();
  var fill = function fill() {
    return props.fill || theme.colors.accent;
  };
  return function () {
    var _el$ = _tmpl$$h.cloneNode(true),
      _el$2 = _el$.firstChild,
      _el$3 = _el$2.firstChild;
    createRenderEffect(function () {
      return setAttribute(_el$3, "fill", fill());
    });
    return _el$;
  }();
};
var _tmpl$$g = /* @__PURE__ */template$1("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13 4.06119V6.75053C13 7.16474 13.3358 7.50053 13.75 7.50053C14.1642 7.50053 14.5 7.16474 14.5 6.75053V2.75053L14.5 2.72807C14.5001 2.63191 14.5003 2.49627 14.4842 2.37627C14.4638 2.22503 14.4063 1.99261 14.2071 1.79342C14.0079 1.59423 13.7755 1.5367 13.6243 1.51637C13.5043 1.50023 13.3686 1.50039 13.2725 1.50051L13.25 1.50053H9.25C8.83579 1.50053 8.5 1.83631 8.5 2.25053C8.5 2.66474 8.83579 3.00053 9.25 3.00053H11.9393L7.21967 7.7202C6.92678 8.01309 6.92678 8.48796 7.21967 8.78086C7.51256 9.07375 7.98744 9.07375 8.28033 8.78086L13 4.06119ZM5.85 1.50053H5.81903H5.81899C5.21528 1.50052 4.71702 1.50051 4.31113 1.53367C3.88956 1.56812 3.50203 1.64204 3.13803 1.82751C2.57354 2.11513 2.1146 2.57407 1.82698 3.13856C1.64151 3.50256 1.56759 3.89009 1.53315 4.31166C1.49998 4.71755 1.49999 5.21581 1.5 5.81953V5.81955V5.85053V10.1505V10.1815V10.1815C1.49999 10.7852 1.49998 11.2835 1.53315 11.6894C1.56759 12.111 1.64151 12.4985 1.82698 12.8625C2.1146 13.427 2.57354 13.8859 3.13803 14.1735C3.50203 14.359 3.88956 14.4329 4.31113 14.4674C4.71702 14.5005 5.21527 14.5005 5.81897 14.5005H5.81901H5.85H10.15H10.181H10.181C10.7847 14.5005 11.283 14.5005 11.6889 14.4674C12.1104 14.4329 12.498 14.359 12.862 14.1735C13.4265 13.8859 13.8854 13.427 14.173 12.8625C14.3585 12.4985 14.4324 12.111 14.4669 11.6894C14.5 11.2835 14.5 10.7853 14.5 10.1816V10.1815V10.1505V9.75053C14.5 9.33631 14.1642 9.00053 13.75 9.00053C13.3358 9.00053 13 9.33631 13 9.75053V10.1505C13 10.793 12.9994 11.2297 12.9718 11.5672C12.945 11.8961 12.8963 12.0642 12.8365 12.1815C12.6927 12.4638 12.4632 12.6932 12.181 12.837C12.0637 12.8968 11.8955 12.9455 11.5667 12.9724C11.2292 12.9999 10.7924 13.0005 10.15 13.0005H5.85C5.20757 13.0005 4.77085 12.9999 4.43328 12.9724C4.10447 12.9455 3.93632 12.8968 3.81902 12.837C3.53677 12.6932 3.3073 12.4638 3.16349 12.1815C3.10372 12.0642 3.05503 11.8961 3.02816 11.5672C3.00058 11.2297 3 10.793 3 10.1505V5.85053C3 5.20809 3.00058 4.77137 3.02816 4.43381C3.05503 4.10499 3.10372 3.93684 3.16349 3.81954C3.3073 3.5373 3.53677 3.30783 3.81902 3.16402C3.93632 3.10425 4.10447 3.05556 4.43328 3.02869C4.77085 3.00111 5.20757 3.00053 5.85 3.00053H6.25C6.66422 3.00053 7 2.66474 7 2.25053C7 1.83631 6.66422 1.50053 6.25 1.50053H5.85Z\"></path></svg>");
var LinkIcon = function LinkIcon(props) {
  var theme = useTheme();
  var fill = function fill() {
    return props.fill || theme.colors.accent;
  };
  return function () {
    var _el$ = _tmpl$$g.cloneNode(true),
      _el$2 = _el$.firstChild;
    createRenderEffect(function () {
      return setAttribute(_el$2, "fill", fill());
    });
    return _el$;
  }();
};
var _tmpl$$f = /* @__PURE__ */template$1("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"16\" viewBox=\"0 0 17 16\" fill=\"none\"><g clip-path=\"url(#clip0_3676_1274)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.82698 2.63901C1.5 3.28074 1.5 4.12082 1.5 5.80098V8.80098V9.00098V10.201C1.5 11.8811 1.5 12.7212 1.82698 13.3629C2.1146 13.9274 2.57354 14.3864 3.13803 14.674C3.77976 15.001 4.61984 15.001 6.3 15.001H11.7C13.3802 15.001 14.2202 15.001 14.862 14.674C15.4265 14.3864 15.8854 13.9274 16.173 13.3629C16.5 12.7212 16.5 11.8811 16.5 10.201V8.80098C16.5 7.12082 16.5 6.28074 16.173 5.63901C15.8854 5.07452 15.4265 4.61558 14.862 4.32796C14.743 4.26733 14.6172 4.21795 14.4805 4.17772C14.4501 3.49449 14.3722 3.02994 14.173 2.63901C13.8854 2.07452 13.4265 1.61558 12.862 1.32796C12.2202 1.00098 11.3802 1.00098 9.7 1.00098H6.3C4.61984 1.00098 3.77976 1.00098 3.13803 1.32796C2.57354 1.61558 2.1146 2.07452 1.82698 2.63901ZM12.9861 4.00942C12.9684 3.7108 12.9281 3.49982 12.8365 3.31999C12.6927 3.03775 12.4632 2.80828 12.181 2.66447C11.8601 2.50098 11.4401 2.50098 10.6 2.50098H5.4C4.55992 2.50098 4.13988 2.50098 3.81901 2.66447C3.53677 2.80828 3.3073 3.03775 3.16349 3.31999C3.03615 3.56991 3.00799 3.88 3.00177 4.40188C3.04646 4.37612 3.09189 4.35146 3.13803 4.32796C3.77976 4.00098 4.61984 4.00098 6.3 4.00098H11.7C12.1966 4.00098 12.6197 4.00098 12.9861 4.00942ZM3 7.90098V8.10098C3 8.47468 3 8.76527 3.01439 9.00098H3V11.101C3 11.9411 3 12.3611 3.16349 12.682C3.3073 12.9642 3.53677 13.1937 3.81901 13.3375C4.13988 13.501 4.55992 13.501 5.4 13.501H12.6C13.4401 13.501 13.8601 13.501 14.181 13.3375C14.4632 13.1937 14.6927 12.9642 14.8365 12.682C15 12.3611 15 11.9411 15 11.101V7.90098C15 7.0609 15 6.64086 14.8365 6.31999C14.6927 6.03775 14.4632 5.80828 14.181 5.66447C13.8601 5.50098 13.4401 5.50098 12.6 5.50098H5.4C4.55992 5.50098 4.13988 5.50098 3.81901 5.66447C3.53677 5.80828 3.3073 6.03775 3.16349 6.31999C3 6.64086 3 7.0609 3 7.90098ZM10.5 9.75098C10.5 9.33676 10.8358 9.00098 11.25 9.00098H12.75C13.1642 9.00098 13.5 9.33676 13.5 9.75098C13.5 10.1652 13.1642 10.501 12.75 10.501H11.25C10.8358 10.501 10.5 10.1652 10.5 9.75098Z\"></path></g><defs><clipPath id=\"clip0_3676_1274\"><rect width=\"16\" height=\"16\" fill=\"white\" transform=\"translate(0.5 0.000976562)\"></rect></clipPath></defs></svg>");
var WalletIcon = function WalletIcon(props) {
  var theme = useTheme();
  var fill = function fill() {
    return props.fill || theme.colors.accent;
  };
  return function () {
    var _el$ = _tmpl$$f.cloneNode(true),
      _el$2 = _el$.firstChild,
      _el$3 = _el$2.firstChild;
    createRenderEffect(function () {
      return setAttribute(_el$3, "fill", fill());
    });
    return _el$;
  }();
};
var _tmpl$$e = /* @__PURE__ */template$1("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M39.6319 16.8719C38.3212 16.2041 36.7002 16.0478 34 16.0112V11C34 5.47715 29.5228 1 24 1C18.4772 1 14 5.47715 14 11V16.0112C11.2998 16.0478 9.6788 16.2041 8.36808 16.8719C6.86278 17.6389 5.63893 18.8628 4.87195 20.3681C4 22.0794 4 24.3196 4 28.8V32.2C4 36.6804 4 38.9206 4.87195 40.6319C5.63893 42.1372 6.86278 43.3611 8.36808 44.1281C10.0794 45 12.3196 45 16.8 45H31.2C35.6804 45 37.9206 45 39.6319 44.1281C41.1372 43.3611 42.3611 42.1372 43.1281 40.6319C44 38.9206 44 36.6804 44 32.2V28.8C44 24.3196 44 22.0794 43.1281 20.3681C42.3611 18.8628 41.1372 17.6389 39.6319 16.8719ZM31 11V16H17V11C17 7.13401 20.134 4 24 4C27.866 4 31 7.13401 31 11ZM7.54497 21.73C7 22.7996 7 24.1997 7 27V34C7 36.8003 7 38.2004 7.54497 39.27C8.02433 40.2108 8.78924 40.9757 9.73005 41.455C10.7996 42 12.1997 42 15 42H33C35.8003 42 37.2004 42 38.27 41.455C39.2108 40.9757 39.9757 40.2108 40.455 39.27C41 38.2004 41 36.8003 41 34V27C41 24.1997 41 22.7996 40.455 21.73C39.9757 20.7892 39.2108 20.0243 38.27 19.545C37.2004 19 35.8003 19 33 19H15C12.1997 19 10.7996 19 9.73005 19.545C8.78924 20.0243 8.02433 20.7892 7.54497 21.73ZM24 24C23.1716 24 22.5 24.6716 22.5 25.5V29.5C22.5 30.3284 23.1716 31 24 31C24.8284 31 25.5 30.3284 25.5 29.5V25.5C25.5 24.6716 24.8284 24 24 24Z\"></path></svg>");
var SecurityIcon = function SecurityIcon(props) {
  var theme = useTheme();
  var fill = function fill() {
    return props.fill || theme.colors.icon.secondary;
  };
  return function () {
    var _el$ = _tmpl$$e.cloneNode(true),
      _el$2 = _el$.firstChild;
    createRenderEffect(function (_p$) {
      var _v$ = props["class"],
        _v$2 = fill();
      _v$ !== _p$._v$ && setAttribute(_el$, "class", _p$._v$ = _v$);
      _v$2 !== _p$._v$2 && setAttribute(_el$2, "fill", _p$._v$2 = _v$2);
      return _p$;
    }, {
      _v$: void 0,
      _v$2: void 0
    });
    return _el$;
  }();
};
var _tmpl$$d = /* @__PURE__ */template$1("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M37.485 37.3849C40.894 33.9506 43 29.2212 43 24C43 13.5066 34.4934 5 24 5C13.5066 5 5 13.5066 5 24C5 29.2213 7.1061 33.9507 10.5151 37.385C13.3583 32.9438 18.3354 30 24.0001 30C29.6647 30 34.6418 32.9437 37.485 37.3849ZM35.1809 39.3635C32.9143 35.5532 28.7554 33 24.0001 33C19.2448 33 15.0858 35.5533 12.8193 39.3636C15.9564 41.6506 19.8206 43 24 43C28.1795 43 32.0437 41.6505 35.1809 39.3635ZM24 46C36.1503 46 46 36.1503 46 24C46 11.8497 36.1503 2 24 2C11.8497 2 2 11.8497 2 24C2 36.1503 11.8497 46 24 46ZM24 24C26.7614 24 29 21.7614 29 19C29 16.2386 26.7614 14 24 14C21.2386 14 19 16.2386 19 19C19 21.7614 21.2386 24 24 24ZM24 27C28.4183 27 32 23.4183 32 19C32 14.5817 28.4183 11 24 11C19.5817 11 16 14.5817 16 19C16 23.4183 19.5817 27 24 27Z\"></path></svg>");
var PersonalityIcon = function PersonalityIcon(props) {
  var theme = useTheme();
  var fill = function fill() {
    return props.fill || theme.colors.icon.secondary;
  };
  return function () {
    var _el$ = _tmpl$$d.cloneNode(true),
      _el$2 = _el$.firstChild;
    createRenderEffect(function (_p$) {
      var _v$ = props["class"],
        _v$2 = fill();
      _v$ !== _p$._v$ && setAttribute(_el$, "class", _p$._v$ = _v$);
      _v$2 !== _p$._v$2 && setAttribute(_el$2, "fill", _p$._v$2 = _v$2);
      return _p$;
    }, {
      _v$: void 0,
      _v$2: void 0
    });
    return _el$;
  }();
};
var _tmpl$$c = /* @__PURE__ */template$1("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M34.5607 4.43934C33.9749 3.85355 33.0251 3.85355 32.4393 4.43934C31.8536 5.02513 31.8536 5.97487 32.4393 6.56066L37.8787 12H10.5C9.67157 12 9 12.6716 9 13.5C9 14.3284 9.67157 15 10.5 15H37.8787L32.4393 20.4393C31.8536 21.0251 31.8536 21.9749 32.4393 22.5607C33.0251 23.1464 33.9749 23.1464 34.5607 22.5607L42.5607 14.5607C43.1464 13.9749 43.1464 13.0251 42.5607 12.4393L34.5607 4.43934ZM13.4393 25.4393C14.0251 24.8536 14.9749 24.8536 15.5607 25.4393C16.1464 26.0251 16.1464 26.9749 15.5607 27.5607L10.1213 33H37.5C38.3284 33 39 33.6716 39 34.5C39 35.3284 38.3284 36 37.5 36H10.1213L15.5607 41.4393C16.1464 42.0251 16.1464 42.9749 15.5607 43.5607C14.9749 44.1464 14.0251 44.1464 13.4393 43.5607L5.43934 35.5607C4.85355 34.9749 4.85355 34.0251 5.43934 33.4393L13.4393 25.4393Z\"></path></svg>");
var SwapIcon = function SwapIcon(props) {
  var theme = useTheme();
  var fill = function fill() {
    return props.fill || theme.colors.icon.secondary;
  };
  return function () {
    var _el$ = _tmpl$$c.cloneNode(true),
      _el$2 = _el$.firstChild;
    createRenderEffect(function (_p$) {
      var _v$ = props["class"],
        _v$2 = fill();
      _v$ !== _p$._v$ && setAttribute(_el$, "class", _p$._v$ = _v$);
      _v$2 !== _p$._v$2 && setAttribute(_el$2, "fill", _p$._v$2 = _v$2);
      return _p$;
    }, {
      _v$: void 0,
      _v$2: void 0
    });
    return _el$;
  }();
};
var _tmpl$$b = /* @__PURE__ */template$1("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"29\" viewBox=\"0 0 28 29\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.75 12.002C1.75 9.20169 1.75 7.80156 2.29497 6.732C2.77433 5.79119 3.53924 5.02629 4.48005 4.54692C5.54961 4.00195 6.94974 4.00195 9.75 4.00195H17.25C20.0503 4.00195 21.4504 4.00195 22.52 4.54692C23.4608 5.02629 24.2257 5.79119 24.705 6.732C24.8256 6.96861 24.9195 7.2214 24.9926 7.50195H21.5C19.6377 7.50195 18.7065 7.50195 17.9609 7.77334C16.711 8.22828 15.7263 9.21291 15.2714 10.4629C15 11.2085 15 12.1396 15 14.002C15 15.8643 15 16.7954 15.2714 17.541C15.7263 18.791 16.711 19.7756 17.9609 20.2306C18.7065 20.502 19.6377 20.502 21.5 20.502H24.9926C24.9195 20.7825 24.8256 21.0353 24.705 21.2719C24.2257 22.2127 23.4608 22.9776 22.52 23.457C21.4504 24.002 20.0503 24.002 17.25 24.002H9.75C6.94974 24.002 5.54961 24.002 4.48005 23.457C3.53924 22.9776 2.77433 22.2127 2.29497 21.2719C1.75 20.2023 1.75 18.8022 1.75 16.002V12.002ZM16.4999 13.802C16.4999 12.1218 16.4999 11.2817 16.8269 10.64C17.1145 10.0755 17.5735 9.61656 18.138 9.32894C18.7797 9.00196 19.6198 9.00196 21.2999 9.00196H23.1999C24.8801 9.00196 25.7202 9.00196 26.3619 9.32894C26.9264 9.61656 27.3853 10.0755 27.673 10.64C27.9999 11.2817 27.9999 12.1218 27.9999 13.802V14.202C27.9999 15.8821 27.9999 16.7222 27.673 17.3639C27.3853 17.9284 26.9264 18.3874 26.3619 18.675C25.7202 19.002 24.8801 19.002 23.1999 19.002H21.2999C19.6198 19.002 18.7797 19.002 18.138 18.675C17.5735 18.3874 17.1145 17.9284 16.8269 17.3639C16.4999 16.7222 16.4999 15.8821 16.4999 14.202V13.802ZM22.4999 14.002C22.4999 14.9685 21.7164 15.752 20.7499 15.752C19.7834 15.752 18.9999 14.9685 18.9999 14.002C18.9999 13.0355 19.7834 12.252 20.7499 12.252C21.7164 12.252 22.4999 13.0355 22.4999 14.002Z\"></path></svg>");
var AtWalletIcon = function AtWalletIcon(props) {
  var theme = useTheme();
  var fill = function fill() {
    return props.fill || theme.colors.constant.white;
  };
  return function () {
    var _el$ = _tmpl$$b.cloneNode(true),
      _el$2 = _el$.firstChild;
    createRenderEffect(function (_p$) {
      var _v$ = props["class"],
        _v$2 = fill();
      _v$ !== _p$._v$ && setAttribute(_el$, "class", _p$._v$ = _v$);
      _v$2 !== _p$._v$2 && setAttribute(_el$2, "fill", _p$._v$2 = _v$2);
      return _p$;
    }, {
      _v$: void 0,
      _v$2: void 0
    });
    return _el$;
  }();
};
var _tmpl$$a = /* @__PURE__ */template$1("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M24.7803 7.21967C25.0732 7.51256 25.0732 7.98744 24.7803 8.28033L11.5303 21.5303C11.2374 21.8232 10.7626 21.8232 10.4697 21.5303L4.21967 15.2803C3.92678 14.9874 3.92678 14.5126 4.21967 14.2197C4.51256 13.9268 4.98744 13.9268 5.28033 14.2197L11 19.9393L23.7197 7.21967C24.0126 6.92678 24.4874 6.92678 24.7803 7.21967Z\"></path></svg>");
var DoneIcon = function DoneIcon(props) {
  var theme = useTheme();
  var fill = function fill() {
    return props.fill || theme.colors.icon.secondary;
  };
  return function () {
    var _el$ = _tmpl$$a.cloneNode(true),
      _el$2 = _el$.firstChild;
    createRenderEffect(function (_p$) {
      var _v$ = props["class"],
        _v$2 = fill();
      _v$ !== _p$._v$ && setAttribute(_el$, "class", _p$._v$ = _v$);
      _v$2 !== _p$._v$2 && setAttribute(_el$2, "fill", _p$._v$2 = _v$2);
      return _p$;
    }, {
      _v$: void 0,
      _v$2: void 0
    });
    return _el$;
  }();
};
var _tmpl$$9 = /* @__PURE__ */template$1("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.0001 10.0001C10.0016 8.02333 10.0267 6.98719 10.436 6.18404C10.8195 5.43139 11.4314 4.81947 12.184 4.43597C13.0397 4 14.1598 4 16.4 4H17.6C19.8402 4 20.9603 4 21.816 4.43597C22.5686 4.81947 23.1805 5.43139 23.564 6.18404C24 7.03969 24 8.15979 24 10.4V11.6C24 13.8402 24 14.9603 23.564 15.816C23.1805 16.5686 22.5686 17.1805 21.816 17.564C21.0128 17.9733 19.9767 17.9984 17.9999 17.9999C17.9984 19.9767 17.9733 21.0128 17.564 21.816C17.1805 22.5686 16.5686 23.1805 15.816 23.564C14.9603 24 13.8402 24 11.6 24H10.4C8.15979 24 7.03969 24 6.18404 23.564C5.43139 23.1805 4.81947 22.5686 4.43597 21.816C4 20.9603 4 19.8402 4 17.6V16.4C4 14.1598 4 13.0397 4.43597 12.184C4.81947 11.4314 5.43139 10.8195 6.18404 10.436C6.98719 10.0267 8.02333 10.0016 10.0001 10.0001ZM10 11.5H9.5C8.09987 11.5 7.3998 11.5 6.86502 11.7725C6.39462 12.0122 6.01217 12.3946 5.77248 12.865C5.5 13.3998 5.5 14.0999 5.5 15.5V18.5C5.5 19.9001 5.5 20.6002 5.77248 21.135C6.01217 21.6054 6.39462 21.9878 6.86502 22.2275C7.3998 22.5 8.09987 22.5 9.5 22.5H12.5C13.9001 22.5 14.6002 22.5 15.135 22.2275C15.6054 21.9878 15.9878 21.6054 16.2275 21.135C16.5 20.6002 16.5 19.9001 16.5 18.5V18H16.4C14.1598 18 13.0397 18 12.184 17.564C11.4314 17.1805 10.8195 16.5686 10.436 15.816C10 14.9603 10 13.8402 10 11.6V11.5ZM11.5 9.5C11.5 8.09987 11.5 7.3998 11.7725 6.86502C12.0122 6.39462 12.3946 6.01217 12.865 5.77248C13.3998 5.5 14.0999 5.5 15.5 5.5H18.5C19.9001 5.5 20.6002 5.5 21.135 5.77248C21.6054 6.01217 21.9878 6.39462 22.2275 6.86502C22.5 7.3998 22.5 8.09987 22.5 9.5V12.5C22.5 13.9001 22.5 14.6002 22.2275 15.135C21.9878 15.6054 21.6054 15.9878 21.135 16.2275C20.6002 16.5 19.9001 16.5 18.5 16.5H15.5C14.0999 16.5 13.3998 16.5 12.865 16.2275C12.3946 15.9878 12.0122 15.6054 11.7725 15.135C11.5 14.6002 11.5 13.9001 11.5 12.5V9.5Z\"></path></svg>");
var CopyLightIcon = function CopyLightIcon(props) {
  var theme = useTheme();
  var fill = function fill() {
    return props.fill || theme.colors.icon.secondary;
  };
  return function () {
    var _el$ = _tmpl$$9.cloneNode(true),
      _el$2 = _el$.firstChild;
    createRenderEffect(function (_p$) {
      var _v$ = fill(),
        _v$2 = fill();
      _v$ !== _p$._v$ && setAttribute(_el$, "fill", _p$._v$ = _v$);
      _v$2 !== _p$._v$2 && setAttribute(_el$2, "fill", _p$._v$2 = _v$2);
      return _p$;
    }, {
      _v$: void 0,
      _v$2: void 0
    });
    return _el$;
  }();
};
var _tmpl$$8 = /* @__PURE__ */template$1("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"17\" viewBox=\"0 0 16 17\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1 4.12695C1 3.07754 1 2.55284 1.19202 2.14684C1.38986 1.72856 1.7266 1.39181 2.14489 1.19397C2.55088 1.00195 3.07559 1.00195 4.125 1.00195C5.17441 1.00195 5.69912 1.00195 6.10511 1.19397C6.5234 1.39181 6.86014 1.72856 7.05798 2.14684C7.25 2.55284 7.25 3.07754 7.25 4.12695C7.25 5.17636 7.25 5.70107 7.05798 6.10706C6.86014 6.52535 6.5234 6.8621 6.10511 7.05993C5.69912 7.25195 5.17441 7.25195 4.125 7.25195C3.07559 7.25195 2.55088 7.25195 2.14489 7.05993C1.7266 6.8621 1.38986 6.52535 1.19202 6.10706C1 5.70107 1 5.17636 1 4.12695ZM2.5 3.30195C2.5 3.02193 2.5 2.88191 2.5545 2.77496C2.60243 2.68088 2.67892 2.60439 2.773 2.55645C2.87996 2.50195 3.01997 2.50195 3.3 2.50195H4.95C5.23003 2.50195 5.37004 2.50195 5.477 2.55645C5.57108 2.60439 5.64757 2.68088 5.6955 2.77496C5.75 2.88191 5.75 3.02193 5.75 3.30195V4.95195C5.75 5.23198 5.75 5.37199 5.6955 5.47895C5.64757 5.57303 5.57108 5.64952 5.477 5.69746C5.37004 5.75195 5.23003 5.75195 4.95 5.75195H3.3C3.01997 5.75195 2.87996 5.75195 2.773 5.69746C2.67892 5.64952 2.60243 5.57303 2.5545 5.47895C2.5 5.37199 2.5 5.23198 2.5 4.95195V3.30195ZM1 11.877C1 10.8275 1 10.3028 1.19202 9.89684C1.38986 9.47856 1.7266 9.14181 2.14489 8.94397C2.55088 8.75195 3.07559 8.75195 4.125 8.75195C5.17441 8.75195 5.69912 8.75195 6.10511 8.94397C6.5234 9.14181 6.86014 9.47856 7.05798 9.89684C7.25 10.3028 7.25 10.8275 7.25 11.877C7.25 12.9264 7.25 13.4511 7.05798 13.8571C6.86014 14.2753 6.5234 14.6121 6.10511 14.8099C5.69912 15.002 5.17441 15.002 4.125 15.002C3.07559 15.002 2.55088 15.002 2.14489 14.8099C1.7266 14.6121 1.38986 14.2753 1.19202 13.8571C1 13.4511 1 12.9264 1 11.877ZM2.5 11.052C2.5 10.7719 2.5 10.6319 2.5545 10.525C2.60243 10.4309 2.67892 10.3544 2.773 10.3064C2.87996 10.252 3.01997 10.252 3.3 10.252H4.95C5.23003 10.252 5.37004 10.252 5.477 10.3064C5.57108 10.3544 5.64757 10.4309 5.6955 10.525C5.75 10.6319 5.75 10.7719 5.75 11.052V12.702C5.75 12.982 5.75 13.122 5.6955 13.2289C5.64757 13.323 5.57108 13.3995 5.477 13.4475C5.37004 13.502 5.23003 13.502 4.95 13.502H3.3C3.01997 13.502 2.87996 13.502 2.773 13.4475C2.67892 13.3995 2.60243 13.323 2.5545 13.2289C2.5 13.122 2.5 12.982 2.5 12.702V11.052ZM8.94202 2.14684C8.75 2.55284 8.75 3.07754 8.75 4.12695C8.75 5.17636 8.75 5.70107 8.94202 6.10706C9.13986 6.52535 9.4766 6.8621 9.89489 7.05993C10.3009 7.25195 10.8256 7.25195 11.875 7.25195C12.9244 7.25195 13.4491 7.25195 13.8551 7.05993C14.2734 6.8621 14.6101 6.52535 14.808 6.10706C15 5.70107 15 5.17636 15 4.12695C15 3.07754 15 2.55284 14.808 2.14684C14.6101 1.72856 14.2734 1.39181 13.8551 1.19397C13.4491 1.00195 12.9244 1.00195 11.875 1.00195C10.8256 1.00195 10.3009 1.00195 9.89489 1.19397C9.4766 1.39181 9.13986 1.72856 8.94202 2.14684ZM10.3045 2.77496C10.25 2.88191 10.25 3.02193 10.25 3.30195V4.95195C10.25 5.23198 10.25 5.37199 10.3045 5.47895C10.3524 5.57303 10.4289 5.64952 10.523 5.69746C10.63 5.75195 10.77 5.75195 11.05 5.75195H12.7C12.98 5.75195 13.12 5.75195 13.227 5.69746C13.3211 5.64952 13.3976 5.57303 13.4455 5.47895C13.5 5.37199 13.5 5.23198 13.5 4.95195V3.30195C13.5 3.02193 13.5 2.88191 13.4455 2.77496C13.3976 2.68088 13.3211 2.60439 13.227 2.55645C13.12 2.50195 12.98 2.50195 12.7 2.50195H11.05C10.77 2.50195 10.63 2.50195 10.523 2.55645C10.4289 2.60439 10.3524 2.68088 10.3045 2.77496ZM8.80727 9.13518C8.75 9.26242 8.75 9.4256 8.75 9.75195C8.75 10.0783 8.75 10.2415 8.80727 10.3687C8.87245 10.5136 8.9884 10.6295 9.13323 10.6947C9.26047 10.752 9.42365 10.752 9.75 10.752C10.0764 10.752 10.2395 10.752 10.3668 10.6947C10.5116 10.6295 10.6276 10.5136 10.6927 10.3687C10.75 10.2415 10.75 10.0783 10.75 9.75195C10.75 9.4256 10.75 9.26242 10.6927 9.13518C10.6276 8.99035 10.5116 8.8744 10.3668 8.80922C10.2395 8.75195 10.0764 8.75195 9.75 8.75195C9.42365 8.75195 9.26047 8.75195 9.13323 8.80922C8.9884 8.8744 8.87245 8.99035 8.80727 9.13518ZM10.87 11.8771C10.87 11.546 10.87 11.3805 10.9289 11.2517C10.9938 11.1098 11.1077 10.9959 11.2497 10.931C11.3784 10.8721 11.5439 10.8721 11.875 10.8721C12.2061 10.8721 12.3716 10.8721 12.5003 10.931C12.6423 10.9959 12.7562 11.1098 12.8211 11.2517C12.88 11.3805 12.88 11.546 12.88 11.8771C12.88 12.2081 12.88 12.3737 12.8211 12.5024C12.7562 12.6444 12.6423 12.7583 12.5003 12.8232C12.3716 12.8821 12.2061 12.8821 11.875 12.8821C11.5439 12.8821 11.3784 12.8821 11.2497 12.8232C11.1077 12.7583 10.9938 12.6444 10.9289 12.5024C10.87 12.3737 10.87 12.2081 10.87 11.8771ZM8.80727 13.3852C8.75 13.5124 8.75 13.6756 8.75 14.002C8.75 14.3283 8.75 14.4915 8.80727 14.6187C8.87245 14.7636 8.9884 14.8795 9.13323 14.9447C9.26047 15.002 9.42365 15.002 9.75 15.002C10.0764 15.002 10.2395 15.002 10.3668 14.9447C10.5116 14.8795 10.6276 14.7636 10.6927 14.6187C10.75 14.4915 10.75 14.3283 10.75 14.002C10.75 13.6756 10.75 13.5124 10.6927 13.3852C10.6276 13.2404 10.5116 13.1244 10.3668 13.0592C10.2395 13.002 10.0764 13.002 9.75 13.002C9.42365 13.002 9.26047 13.002 9.13323 13.0592C8.9884 13.1244 8.87245 13.2404 8.80727 13.3852ZM13 9.75195C13 9.4256 13 9.26242 13.0573 9.13518C13.1224 8.99035 13.2384 8.8744 13.3832 8.80922C13.5105 8.75195 13.6736 8.75195 14 8.75195C14.3264 8.75195 14.4895 8.75195 14.6168 8.80922C14.7616 8.8744 14.8776 8.99035 14.9427 9.13518C15 9.26242 15 9.4256 15 9.75195C15 10.0783 15 10.2415 14.9427 10.3687C14.8776 10.5136 14.7616 10.6295 14.6168 10.6947C14.4895 10.752 14.3264 10.752 14 10.752C13.6736 10.752 13.5105 10.752 13.3832 10.6947C13.2384 10.6295 13.1224 10.5136 13.0573 10.3687C13 10.2415 13 10.0783 13 9.75195ZM13.0573 13.3852C13 13.5124 13 13.6756 13 14.002C13 14.3283 13 14.4915 13.0573 14.6187C13.1224 14.7636 13.2384 14.8795 13.3832 14.9447C13.5105 15.002 13.6736 15.002 14 15.002C14.3264 15.002 14.4895 15.002 14.6168 14.9447C14.7616 14.8795 14.8776 14.7636 14.9427 14.6187C15 14.4915 15 14.3283 15 14.002C15 13.6756 15 13.5124 14.9427 13.3852C14.8776 13.2404 14.7616 13.1244 14.6168 13.0592C14.4895 13.002 14.3264 13.002 14 13.002C13.6736 13.002 13.5105 13.002 13.3832 13.0592C13.2384 13.1244 13.1224 13.2404 13.0573 13.3852Z\"></path></svg>");
var QRIcon = function QRIcon(props) {
  var theme = useTheme();
  var fill = function fill() {
    return props.fill || theme.colors.icon.secondary;
  };
  return function () {
    var _el$ = _tmpl$$8.cloneNode(true),
      _el$2 = _el$.firstChild;
    createRenderEffect(function () {
      return setAttribute(_el$2, "fill", fill());
    });
    return _el$;
  }();
};
var containerBorders = {
  m: "16px",
  s: "12px",
  none: "0"
};
var walletBorders = {
  m: "6px",
  s: "6px",
  none: "0"
};
var FourWalletsCard = styled.div(_templateObject36 || (_templateObject36 = _taggedTemplateLiteral(["\n    width: 60px;\n    height: 60px;\n    padding: 8px;\n    margin-bottom: 8px;\n    border-radius: ", ";\n    background-color: ", ";\n    display: grid;\n    grid-template: 1fr 1fr / 1fr 1fr;\n    gap: 4px;\n"])), function (props) {
  return containerBorders[props.theme.borderRadius];
}, function (props) {
  return props.theme.colors.background.tint;
});
var FourWalletsImage = styled(WalletImage)(_templateObject37 || (_templateObject37 = _taggedTemplateLiteral(["\n    width: 20px;\n    height: 20px;\n    border-radius: ", ";\n"])), function (props) {
  return walletBorders[props.theme.borderRadius];
});
var FourWalletsItem = function FourWalletsItem(props) {
  return createComponent(WalletItem, {
    get name() {
      return props.labelLine1;
    },
    get secondLine() {
      return props.labelLine2;
    },
    get icon() {
      return createComponent(FourWalletsCard, {
        get children() {
          return createComponent(For, {
            each: [0, 1, 2, 3],
            children: function children(index) {
              return createComponent(FourWalletsImage, {
                get src() {
                  return props.images[index];
                }
              });
            }
          });
        }
      });
    },
    onClick: function onClick() {
      return props.onClick();
    }
  });
};
var AT_WALLET_APP_NAME = "telegram-wallet";
var IMG = {
  TON: "https://raw.githubusercontent.com/ton-connect/sdk/main/assets/ton-icon-48.png",
  TG: "https://raw.githubusercontent.com/ton-connect/sdk/main/assets/tg.png"
};
var WalletLabeledItem = function WalletLabeledItem(props) {
  var _useI18n9 = useI18n(),
    _useI18n10 = _slicedToArray(_useI18n9, 1),
    t2 = _useI18n10[0];
  var walletsSecondLine = function walletsSecondLine() {
    if (props.wallet.appName === AT_WALLET_APP_NAME) {
      return void 0;
    }
    if ("isPreferred" in props.wallet && props.wallet.isPreferred) {
      return t2("walletItem.recent", {}, "Recent");
    }
    if ((0, _sdk.isWalletInfoCurrentlyInjected)(props.wallet)) {
      return t2("walletItem.installed", {}, "Installed");
    }
    if (props.wallet.name === "Tonkeeper") {
      return t2("walletItem.popular", {}, "Popular");
    }
    return void 0;
  };
  return createMemo(function () {
    var _c$ = createMemo(function () {
      return props.wallet.appName === AT_WALLET_APP_NAME;
    });
    return function () {
      return _c$() ? createComponent(WalletItem, {
        get icon() {
          return props.wallet.imageUrl;
        },
        get name() {
          return t2("walletItem.walletOn", {}, "Wallet On");
        },
        secondLine: "Telegram",
        get badgeUrl() {
          return IMG.TG;
        },
        onClick: function onClick() {
          return props.onClick();
        }
      }) : createComponent(WalletItem, {
        get icon() {
          return props.wallet.imageUrl;
        },
        get name() {
          return props.wallet.name;
        },
        get secondLine() {
          return walletsSecondLine();
        },
        secondLineColorPrimary: false,
        onClick: function onClick() {
          return props.onClick();
        }
      });
    };
  }());
};
var ScrollContainerStyled = styled.div(_templateObject38 || (_templateObject38 = _taggedTemplateLiteral(["\n    width: 100%;\n    overflow-y: auto;\n    max-height: ", ";\n\n    scrollbar-width: none;\n    &&::-webkit-scrollbar {\n        display: none;\n    }\n\n    &&::-webkit-scrollbar-track {\n        background: transparent;\n    }\n\n    &&::-webkit-scrollbar-thumb {\n        display: none;\n    }\n"])), function (props) {
  return props.maxHeight;
});
var ScrollDivider = styled.div(_templateObject39 || (_templateObject39 = _taggedTemplateLiteral(["\n    height: 1px;\n    margin: 0 -24px;\n    width: calc(100% + 48px);\n    opacity: 0.08;\n    background: ", ";\n    transition: background 0.15s ease-in-out;\n\n    ", " {\n        width: 100%;\n        margin: 0;\n    }\n"])), function (props) {
  return props.isShown ? props.theme.colors.icon.secondary : "transparent";
}, media("mobile"));
var _createSignal37 = createSignal(((_h = getWindow$1()) == null ? void 0 : _h.innerHeight) || 0),
  _createSignal38 = _slicedToArray(_createSignal37, 2),
  windowHeight = _createSignal38[0],
  setWindowHeight = _createSignal38[1];
if (getWindow$1()) {
  window.addEventListener("resize", function () {
    return setWindowHeight(window.innerHeight);
  });
}
var _createSignal39 = createSignal(isDevice("mobile")),
  _createSignal40 = _slicedToArray(_createSignal39, 2),
  isMobile = _createSignal40[0],
  setIsMobile = _createSignal40[1];
var updateIsMobile = function updateIsMobile() {
  return setIsMobile(isDevice("mobile"));
};
if (getWindow$1()) {
  window.addEventListener("resize", function () {
    return updateIsMobile();
  });
  window.addEventListener("load", function () {
    return updateIsMobile();
  }, {
    once: true
  });
}
var ScrollContainer = function ScrollContainer(props) {
  var _createSignal41 = createSignal(false),
    _createSignal42 = _slicedToArray(_createSignal41, 2),
    scrolled = _createSignal42[0],
    setScrolled = _createSignal42[1];
  var onScroll = function onScroll(e2) {
    setScrolled(e2.target.scrollTop > 0);
  };
  var offset = function offset() {
    return isMobile() ? 150 : 200;
  };
  var maxHeight = function maxHeight() {
    return props.maxHeight !== void 0 ? "".concat(props.maxHeight, "px") : "".concat(windowHeight() - offset(), "px");
  };
  return [createComponent(ScrollDivider, {
    get isShown() {
      return scrolled();
    }
  }), createComponent(ScrollContainerStyled, _defineAccessor("get", _defineAccessor("get", {
    get maxHeight() {
      return maxHeight();
    },
    onScroll: onScroll
  }, "class", function () {
    return props["class"];
  }), "children", function () {
    return props.children;
  }))];
};
var AStyled = styled.a(_templateObject40 || (_templateObject40 = _taggedTemplateLiteral(["\n    display: block;\n    text-decoration: unset;\n"])));
var Link = function Link(props) {
  var attributes = function attributes() {
    return props.blank ? {
      rel: "noreferrer noopener"
    } : {};
  };
  return createComponent(AStyled, mergeProps(_defineAccessor("get", {
    get href() {
      return props.href;
    },
    get target() {
      return props.blank ? "_blank" : "_self";
    }
  }, "class", function () {
    return props["class"];
  }), attributes, {
    get children() {
      return props.children;
    }
  }));
};
var TonConnectUiContext = createContext();
var _tmpl$$7 = /* @__PURE__ */template$1("<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.76228 2.09998H10.2378C11.0458 2.09997 11.7067 2.09996 12.2438 2.14384C12.7997 2.18926 13.3017 2.28614 13.7706 2.52505C14.5045 2.89896 15.1011 3.49558 15.475 4.22941C15.7139 4.6983 15.8108 5.20038 15.8562 5.75629C15.9001 6.29337 15.9001 6.95422 15.9001 7.76227V8.1H16.2377C17.0457 8.09999 17.7066 8.09998 18.2437 8.14386C18.7996 8.18928 19.3017 8.28616 19.7705 8.52507C20.5044 8.89898 21.101 9.4956 21.4749 10.2294C21.7138 10.6983 21.8107 11.2004 21.8561 11.7563C21.9 12.2934 21.9 12.9542 21.9 13.7623V16.2377C21.9 17.0458 21.9 17.7066 21.8561 18.2437C21.8107 18.7996 21.7138 19.3017 21.4749 19.7706C21.101 20.5044 20.5044 21.101 19.7705 21.4749C19.3017 21.7138 18.7996 21.8107 18.2437 21.8561C17.7066 21.9 17.0458 21.9 16.2378 21.9H13.7623C12.9543 21.9 12.2934 21.9 11.7563 21.8561C11.2004 21.8107 10.6983 21.7138 10.2294 21.4749C9.49561 21.101 8.89898 20.5044 8.52508 19.7706C8.28616 19.3017 8.18928 18.7996 8.14386 18.2437C8.09998 17.7066 8.09999 17.0458 8.1 16.2377V15.9H7.76227C6.95426 15.9 6.29335 15.9 5.75629 15.8561C5.20038 15.8107 4.6983 15.7138 4.22941 15.4749C3.49558 15.101 2.89896 14.5044 2.52505 13.7705C2.28614 13.3017 2.18926 12.7996 2.14384 12.2437C2.09996 11.7066 2.09997 11.0458 2.09998 10.2377V7.76228C2.09997 6.95424 2.09996 6.29336 2.14384 5.75629C2.18926 5.20038 2.28614 4.6983 2.52505 4.22941C2.89896 3.49558 3.49558 2.89896 4.22941 2.52505C4.6983 2.28614 5.20038 2.18926 5.75629 2.14384C6.29336 2.09996 6.95425 2.09997 7.76228 2.09998ZM8.1 14.1V13.7623C8.09999 12.9542 8.09998 12.2934 8.14386 11.7563C8.18928 11.2004 8.28616 10.6983 8.52508 10.2294C8.89898 9.4956 9.49561 8.89898 10.2294 8.52507C10.6983 8.28616 11.2004 8.18928 11.7563 8.14386C12.2934 8.09998 12.9542 8.09999 13.7623 8.1H14.1001V7.79998C14.1001 6.94505 14.0994 6.35798 14.0622 5.90287C14.0259 5.45827 13.9593 5.21944 13.8712 5.0466C13.6699 4.65146 13.3486 4.3302 12.9535 4.12886C12.7806 4.04079 12.5418 3.97419 12.0972 3.93786C11.6421 3.90068 11.055 3.89998 10.2001 3.89998H7.79998C6.94505 3.89998 6.35798 3.90068 5.90287 3.93786C5.45827 3.97419 5.21944 4.04079 5.0466 4.12886C4.65146 4.3302 4.3302 4.65146 4.12886 5.0466C4.04079 5.21944 3.97419 5.45827 3.93786 5.90287C3.90068 6.35798 3.89998 6.94505 3.89998 7.79998V10.2C3.89998 11.0549 3.90068 11.642 3.93786 12.0971C3.97419 12.5417 4.04079 12.7805 4.12886 12.9534C4.3302 13.3485 4.65146 13.6698 5.0466 13.8711C5.21944 13.9592 5.45827 14.0258 5.90287 14.0621C6.35798 14.0993 6.94505 14.1 7.79998 14.1H8.1ZM11.0466 10.1289C11.2195 10.0408 11.4583 9.97421 11.9029 9.93788C12.358 9.9007 12.9451 9.9 13.8 9.9H16.2C17.0549 9.9 17.642 9.9007 18.0971 9.93788C18.5417 9.97421 18.7805 10.0408 18.9534 10.1289C19.3485 10.3302 19.6698 10.6515 19.8711 11.0466C19.9592 11.2195 20.0258 11.4583 20.0621 11.9029C20.0993 12.358 20.1 12.9451 20.1 13.8V16.2C20.1 17.0549 20.0993 17.642 20.0621 18.0971C20.0258 18.5417 19.9592 18.7805 19.8711 18.9534C19.6698 19.3485 19.3485 19.6698 18.9534 19.8711C18.7805 19.9592 18.5417 20.0258 18.0971 20.0621C17.642 20.0993 17.0549 20.1 16.2 20.1H13.8C12.9451 20.1 12.358 20.0993 11.9029 20.0621C11.4583 20.0258 11.2195 19.9592 11.0466 19.8711C10.6515 19.6698 10.3302 19.3485 10.1289 18.9534C10.0408 18.7805 9.97421 18.5417 9.93788 18.0971C9.9007 17.642 9.9 17.0549 9.9 16.2V13.8C9.9 12.9451 9.9007 12.358 9.93788 11.9029C9.97421 11.4583 10.0408 11.2195 10.1289 11.0466C10.3302 10.6515 10.6515 10.3302 11.0466 10.1289Z\"></path></svg>");
var CopyIcon = function CopyIcon(props) {
  var theme = useTheme();
  var fill = function fill() {
    return props.fill || theme.colors.icon.primary;
  };
  return function () {
    var _el$ = _tmpl$$7.cloneNode(true),
      _el$2 = _el$.firstChild;
    createRenderEffect(function (_p$) {
      var _v$ = props["class"],
        _v$2 = fill();
      _v$ !== _p$._v$ && setAttribute(_el$, "class", _p$._v$ = _v$);
      _v$2 !== _p$._v$2 && setAttribute(_el$2, "fill", _p$._v$2 = _v$2);
      return _p$;
    }, {
      _v$: void 0,
      _v$2: void 0
    });
    return _el$;
  }();
};
var _tmpl$$6 = /* @__PURE__ */template$1("<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.7624 3.10001C7.95435 3.1 7.29349 3.09999 6.75642 3.14387C6.2005 3.18929 5.69842 3.28617 5.22954 3.52508C4.4957 3.89899 3.89908 4.49561 3.52517 5.22944C3.28626 5.69833 3.18938 6.20041 3.14396 6.75632C3.10008 7.2934 3.10009 7.95424 3.1001 8.76229V15.2377C3.10009 16.0458 3.10008 16.7066 3.14396 17.2437C3.18938 17.7996 3.28626 18.3017 3.52517 18.7706C3.89908 19.5044 4.4957 20.101 5.22954 20.4749C5.69842 20.7138 6.2005 20.8107 6.75642 20.8561C7.29349 20.9 7.95434 20.9 8.76239 20.9H12.0001C12.4972 20.9 12.9001 20.4971 12.9001 20C12.9001 19.503 12.4972 19.1 12.0001 19.1H8.8001C7.94517 19.1 7.3581 19.0993 6.90299 19.0621C6.45839 19.0258 6.21956 18.9592 6.04672 18.8711C5.65158 18.6698 5.33032 18.3485 5.12898 17.9534C5.04092 17.7805 4.97431 17.5417 4.93798 17.0971C4.9008 16.642 4.9001 16.0549 4.9001 15.2V8.80001C4.9001 7.94508 4.9008 7.35801 4.93798 6.9029C4.97431 6.4583 5.04092 6.21947 5.12898 6.04663C5.33032 5.65149 5.65158 5.33023 6.04672 5.12889C6.21956 5.04082 6.45839 4.97422 6.90299 4.93789C7.3581 4.90071 7.94517 4.90001 8.8001 4.90001H12.0001C12.4972 4.90001 12.9001 4.49706 12.9001 4.00001C12.9001 3.50295 12.4972 3.10001 12.0001 3.10001H8.7624Z\"></path><path d=\"M17.6364 7.3636C17.2849 7.01212 16.7151 7.01212 16.3636 7.3636C16.0121 7.71507 16.0121 8.28492 16.3636 8.63639L18.8272 11.1H9.00001C8.50295 11.1 8.10001 11.5029 8.10001 12C8.10001 12.497 8.50295 12.9 9.00001 12.9H18.8272L16.3636 15.3636C16.0121 15.7151 16.0121 16.2849 16.3636 16.6364C16.7151 16.9879 17.2849 16.9879 17.6364 16.6364L21.6364 12.6364C21.9879 12.2849 21.9879 11.7151 21.6364 11.3636L17.6364 7.3636Z\"></path></svg>");
var DisconnectIcon = function DisconnectIcon(props) {
  var theme = useTheme();
  var fill = function fill() {
    return props.fill || theme.colors.icon.primary;
  };
  return function () {
    var _el$ = _tmpl$$6.cloneNode(true),
      _el$2 = _el$.firstChild,
      _el$3 = _el$2.nextSibling;
    createRenderEffect(function (_p$) {
      var _v$ = fill(),
        _v$2 = fill();
      _v$ !== _p$._v$ && setAttribute(_el$2, "fill", _p$._v$ = _v$);
      _v$2 !== _p$._v$2 && setAttribute(_el$3, "fill", _p$._v$2 = _v$2);
      return _p$;
    }, {
      _v$: void 0,
      _v$2: void 0
    });
    return _el$;
  }();
};
var hoverBorders$1 = {
  m: "8px",
  s: "4px",
  none: "0"
};
var dropdownBorders = {
  m: "16px",
  s: "8px",
  none: "0"
};
var AccountButtonDropdownStyled = styled.div(_templateObject41 || (_templateObject41 = _taggedTemplateLiteral(["\n    width: 256px;\n    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.16);\n    border-radius: ", ";\n\n    background-color: ", "\n           \n    color: ", "\n"])), function (props) {
  return dropdownBorders[props.theme.borderRadius];
}, function (props) {
  return props.theme.colors.background.primary;
}, function (props) {
  return props.theme.colors.text.primary;
});
var UlStyled$1 = styled.ul(_templateObject42 || (_templateObject42 = _taggedTemplateLiteral(["\n    background-color: ", ";\n    padding: 8px;\n"])), function (props) {
  return props.theme.colors.background.primary;
});
var MenuButtonStyled = styled.button(_templateObject43 || (_templateObject43 = _taggedTemplateLiteral(["\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    height: 40px;\n    padding-left: 8px;\n    width: 100%;\n\n    background-color: ", ";\n    border: none;\n    border-radius: ", ";\n    cursor: pointer;\n\n    transition: background-color, transform 0.1s ease-in-out;\n\n    &:hover {\n        background-color: ", ";\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n"])), function (props) {
  return props.theme.colors.background.primary;
}, function (props) {
  return hoverBorders$1[props.theme.borderRadius];
}, function (props) {
  return props.theme.colors.background.secondary;
});
var _tmpl$$5 = /* @__PURE__ */template$1("<li></li>");
var MenuItemText = function MenuItemText(props) {
  return createComponent(Text, {
    get translationKey() {
      return props.translationKey;
    },
    fontSize: "15px",
    fontWeight: "590",
    get children() {
      return props.children;
    }
  });
};
var AccountButtonDropdown = function AccountButtonDropdown(props) {
  var tonConnectUi = useContext(TonConnectUiContext);
  var _createSignal43 = createSignal(false),
    _createSignal44 = _slicedToArray(_createSignal43, 2),
    isCopiedShown = _createSignal44[0],
    setIsCopiedShown = _createSignal44[1];
  var onCopy = function onCopy() {
    return __async(void 0, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
      var userFriendlyAddress;
      return _regeneratorRuntime().wrap(function _callee4$(_context4) {
        while (1) switch (_context4.prev = _context4.next) {
          case 0:
            userFriendlyAddress = (0, _sdk.toUserFriendlyAddress)(tonConnectUi.account.address, tonConnectUi.account.chain === _sdk.CHAIN.TESTNET);
            _context4.next = 3;
            return copyToClipboard(userFriendlyAddress);
          case 3:
            setIsCopiedShown(true);
            setTimeout(function () {
              return setIsCopiedShown(false);
            }, 1e3);
          case 5:
          case "end":
            return _context4.stop();
        }
      }, _callee4);
    }));
  };
  var onDisconnect = function onDisconnect() {
    tonConnectUi.disconnect();
    props.onClose();
  };
  return createComponent(AccountButtonDropdownStyled, _defineAccessor("get", _defineProperty(_defineAccessor("get", {
    ref: function ref(r$) {
      var _ref$ = props.ref;
      typeof _ref$ === "function" ? _ref$(r$) : props.ref = r$;
    }
  }, "class", function () {
    return props["class"];
  }), "data-tc-dropdown", "true"), "children", function () {
    return createComponent(UlStyled$1, {
      get children() {
        return [function () {
          var _el$ = _tmpl$$5.cloneNode(true);
          insert(_el$, createComponent(MenuButtonStyled, {
            onClick: function onClick() {
              return onCopy();
            },
            get children() {
              return [createComponent(CopyIcon, {}), createComponent(Show, {
                get when() {
                  return !isCopiedShown();
                },
                get children() {
                  return createComponent(MenuItemText, {
                    translationKey: "button.dropdown.copy",
                    children: "Copy address"
                  });
                }
              }), createComponent(Show, {
                get when() {
                  return isCopiedShown();
                },
                get children() {
                  return createComponent(MenuItemText, {
                    translationKey: "button.dropdown.copied",
                    children: "Address copied!"
                  });
                }
              })];
            }
          }));
          return _el$;
        }(), function () {
          var _el$2 = _tmpl$$5.cloneNode(true);
          insert(_el$2, createComponent(MenuButtonStyled, {
            onClick: function onClick() {
              return onDisconnect();
            },
            get children() {
              return [createComponent(DisconnectIcon, {}), createComponent(MenuItemText, {
                translationKey: "button.dropdown.disconnect",
                children: "Disconnect"
              })];
            }
          }));
          return _el$2;
        }()];
      }
    });
  }));
};
var borders$2 = {
  m: "16px",
  s: "8px",
  none: "0"
};
var NotificationStyled = styled.div(_templateObject44 || (_templateObject44 = _taggedTemplateLiteral(["\n    width: 256px;\n    padding: 12px 16px;\n    display: flex;\n    gap: 9px;\n\n    background-color: ", ";\n    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.16);\n    border-radius: ", ";\n"])), function (props) {
  return props.theme.colors.background.primary;
}, function (props) {
  return borders$2[props.theme.borderRadius];
});
var NotificationContentStyled = styled.div(_templateObject45 || (_templateObject45 = _taggedTemplateLiteral(["\n    width: 192px;\n\n    > h3 {\n        font-size: 15px;\n    }\n"])));
var TextStyled$2 = styled(Text)(_templateObject46 || (_templateObject46 = _taggedTemplateLiteral(["\n    margin-top: 4px;\n    color: ", ";\n"])), function (props) {
  return props.theme.colors.text.secondary;
});
var Notification = function Notification(props) {
  var dataAttrs = useDataAttributes(props);
  return createComponent(NotificationStyled, mergeProps(_defineProperty(_defineAccessor("get", {}, "class", function () {
    return props["class"];
  }), "data-tc-notification", "true"), dataAttrs, {
    get children() {
      return [createComponent(NotificationContentStyled, {
        get children() {
          return [createComponent(H3, {
            get translationKey() {
              return props.header.translationKey;
            },
            get translationValues() {
              return props.header.translationValues;
            },
            get children() {
              return props.children;
            }
          }), createComponent(Show, {
            get when() {
              return props.text;
            },
            get children() {
              return createComponent(TextStyled$2, {
                get translationKey() {
                  return props.text.translationKey;
                },
                get translationValues() {
                  return props.text.translationValues;
                }
              });
            }
          })];
        }
      }), createMemo(function () {
        return props.icon;
      })];
    }
  }));
};
var LoaderIconStyled$2 = styled(LoaderIcon)(_templateObject47 || (_templateObject47 = _taggedTemplateLiteral(["\n    align-self: center;\n"])));
var ConfirmOperationNotification = function ConfirmOperationNotification(props) {
  var tonConnectUI = useContext(TonConnectUiContext);
  var _useI18n11 = useI18n(),
    _useI18n12 = _slicedToArray(_useI18n11, 1),
    t2 = _useI18n12[0];
  var name = function name() {
    return tonConnectUI.wallet && "name" in tonConnectUI.wallet ? tonConnectUI.wallet.name : t2("common.yourWallet", {}, "Your wallet");
  };
  return createComponent(Notification, _defineProperty(_defineProperty(_defineAccessor("get", _defineAccessor("get", {
    get header() {
      return {
        translationKey: "notifications.confirm.header",
        translationValues: {
          name: name()
        }
      };
    }
  }, "class", function () {
    return props["class"];
  }), "icon", function () {
    return createComponent(LoaderIconStyled$2, {});
  }), "data-tc-notification-confirm", "true"), "children", "Confirm operation in your wallet"));
};
var ErrorIconStyled$2 = styled(ErrorIcon)(_templateObject48 || (_templateObject48 = _taggedTemplateLiteral(["\n    margin-top: 2px;\n"])));
var ErrorTransactionNotification = function ErrorTransactionNotification(props) {
  return createComponent(Notification, _defineProperty(_defineProperty(_defineAccessor("get", {
    header: {
      translationKey: "notifications.transactionCanceled.header"
    },
    text: {
      translationKey: "notifications.transactionCanceled.text"
    },
    get icon() {
      return createComponent(ErrorIconStyled$2, {
        size: "xs"
      });
    }
  }, "class", function () {
    return props["class"];
  }), "data-tc-notification-tx-cancelled", "true"), "children", "Transaction cancelled"));
};
var SuccessIconStyled = styled(SuccessIcon)(_templateObject49 || (_templateObject49 = _taggedTemplateLiteral(["\n    margin-top: 2px;\n"])));
var SuccessTransactionNotification = function SuccessTransactionNotification(props) {
  return createComponent(Notification, _defineProperty(_defineProperty(_defineAccessor("get", {
    header: {
      translationKey: "notifications.transactionSent.header"
    },
    text: {
      translationKey: "notifications.transactionSent.text"
    },
    get icon() {
      return createComponent(SuccessIconStyled, {});
    }
  }, "class", function () {
    return props["class"];
  }), "data-tc-notification-tx-sent", "true"), "children", "Transaction sent"));
};
var NotificationClass = u(_templateObject50 || (_templateObject50 = _taggedTemplateLiteral(["\n    transform: translateY(-8px);\n    margin-bottom: 12px;\n"])));
var defaultConfig = {
  timeout: 4500
};
var _createSignal45 = createSignal(null),
  _createSignal46 = _slicedToArray(_createSignal45, 2),
  latestAction = _createSignal46[0],
  setLatestAction = _createSignal46[1];
function useOpenedNotifications(config) {
  var _spreadValues = __spreadValues(__spreadValues({}, defaultConfig), config),
    timeout = _spreadValues.timeout;
  var _createSignal47 = createSignal([]),
    _createSignal48 = _slicedToArray(_createSignal47, 2),
    openedNotifications = _createSignal48[0],
    setOpenedNotifications = _createSignal48[1];
  var _createSignal49 = createSignal([]),
    _createSignal50 = _slicedToArray(_createSignal49, 2),
    timeoutIds = _createSignal50[0],
    setTimeoutIds = _createSignal50[1];
  createEffect(on(action, function (action2) {
    var _a2;
    if (!action2 || !action2.showNotification) {
      return;
    }
    if (latestAction() === action2) {
      return;
    }
    if (((_a2 = latestAction()) == null ? void 0 : _a2.name) === "confirm-transaction" && action2.name === "confirm-transaction") {
      return;
    }
    setLatestAction(action2);
    setOpenedNotifications(function (openedNotifications2) {
      return openedNotifications2.filter(function (n2) {
        return n2.action !== "confirm-transaction";
      });
    });
    var notification = {
      action: action2.name
    };
    setOpenedNotifications(function (openedNotifications2) {
      return [].concat(_toConsumableArray(openedNotifications2), [notification]);
    });
    var timeoutId = setTimeout(function () {
      setOpenedNotifications(function (openedNotifications2) {
        return openedNotifications2.filter(function (n2) {
          return n2 !== notification;
        });
      });
      setTimeoutIds(function (timeoutIds2) {
        return timeoutIds2.filter(function (id) {
          return id !== timeoutId;
        });
      });
    }, timeout);
    setTimeoutIds(function (timeoutIds2) {
      return [].concat(_toConsumableArray(timeoutIds2), [timeoutId]);
    });
  }));
  onCleanup(function () {
    timeoutIds().forEach(function (id) {
      return clearTimeout(id);
    });
  });
  return openedNotifications;
}
var _tmpl$$4 = /* @__PURE__ */template$1("<div data-tc-list-notifications=\"true\"></div>");
var Notifications = function Notifications(props) {
  var openedNotifications = useOpenedNotifications();
  return function () {
    var _el$ = _tmpl$$4.cloneNode(true);
    insert(_el$, createComponent(TransitionGroup, {
      onBeforeEnter: function onBeforeEnter(el) {
        animate(el, [{
          opacity: 0,
          transform: "translateY(0)"
        }, {
          opacity: 1,
          transform: "translateY(-8px)"
        }], {
          duration: 200
        });
      },
      onExit: function onExit(el, done) {
        var a2 = animate(el, [{
          opacity: 1,
          transform: "translateY(-8px)"
        }, {
          opacity: 0,
          transform: "translateY(-30px)"
        }], {
          duration: 200
        });
        a2.finished.then(done);
      },
      get children() {
        return createComponent(For, {
          get each() {
            return openedNotifications();
          },
          children: function children(openedNotification) {
            return createComponent(Switch, {
              get children() {
                return [createComponent(Match, {
                  get when() {
                    return openedNotification.action === "transaction-sent";
                  },
                  get children() {
                    return createComponent(SuccessTransactionNotification, {
                      "class": NotificationClass
                    });
                  }
                }), createComponent(Match, {
                  get when() {
                    return openedNotification.action === "transaction-canceled";
                  },
                  get children() {
                    return createComponent(ErrorTransactionNotification, {
                      "class": NotificationClass
                    });
                  }
                }), createComponent(Match, {
                  get when() {
                    return openedNotification.action === "confirm-transaction";
                  },
                  get children() {
                    return createComponent(ConfirmOperationNotification, {
                      "class": NotificationClass
                    });
                  }
                })];
              }
            });
          }
        });
      }
    }));
    createRenderEffect(function () {
      return className(_el$, props["class"]);
    });
    return _el$;
  }();
};
var AccountButtonStyled = styled(Button)(_templateObject51 || (_templateObject51 = _taggedTemplateLiteral(["\n    background-color: ", ";\n    color: ", ";\n    box-shadow: ", ";\n    padding: 8px 16px 8px 12px;\n\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    height: 40px;\n"])), function (props) {
  return props.theme.colors.connectButton.background;
}, function (props) {
  return props.theme.colors.connectButton.foreground;
}, function (props) {
  return "0 4px 24px ".concat(rgba(props.theme.colors.constant.black, 0.16));
});
var DropdownButtonStyled = styled(AccountButtonStyled)(_templateObject52 || (_templateObject52 = _taggedTemplateLiteral(["\n    padding: 12px 16px;\n    min-width: 148px;\n    justify-content: center;\n    background-color: ", ";\n"])), function (props) {
  return props.theme.colors.background.primary;
});
var LoaderButtonStyled$1 = styled(Button)(_templateObject53 || (_templateObject53 = _taggedTemplateLiteral(["\n    min-width: 148px;\n    height: 40px;\n\n    background-color: ", ";\n    color: ", ";\n    box-shadow: ", ";\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n"])), function (props) {
  return props.theme.colors.background.primary;
}, function (props) {
  return props.theme.colors.connectButton.foreground;
}, function (props) {
  return "0 4px 24px ".concat(rgba(props.theme.colors.constant.black, 0.16));
});
var LoaderIconStyled$1 = styled(LoaderIcon)(_templateObject54 || (_templateObject54 = _taggedTemplateLiteral(["\n    height: 18px;\n    width: 18px;\n"])));
var DropdownContainerStyled = styled.div(_templateObject55 || (_templateObject55 = _taggedTemplateLiteral(["\n    width: fit-content;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n"])));
var DropdownStyled = styled(AccountButtonDropdown)(_templateObject56 || (_templateObject56 = _taggedTemplateLiteral(["\n    box-sizing: border-box;\n    overflow: hidden;\n    margin-top: 12px;\n"])));
var NotificationsStyled = styled(Notifications)(_templateObject57 || (_templateObject57 = _taggedTemplateLiteral(["\n    > div:first-child {\n        margin-top: 20px;\n    }\n"])));
function getSide(placement) {
  return placement.split("-")[0];
}
function getAlignment(placement) {
  return placement.split("-")[1];
}
function getMainAxisFromPlacement(placement) {
  return ["top", "bottom"].includes(getSide(placement)) ? "x" : "y";
}
function getLengthFromAxis(axis) {
  return axis === "y" ? "height" : "width";
}
function computeCoordsFromPlacement(_ref, placement, rtl) {
  var reference = _ref.reference,
    floating = _ref.floating;
  var commonX = reference.x + reference.width / 2 - floating.width / 2;
  var commonY = reference.y + reference.height / 2 - floating.height / 2;
  var mainAxis = getMainAxisFromPlacement(placement);
  var length = getLengthFromAxis(mainAxis);
  var commonAlign = reference[length] / 2 - floating[length] / 2;
  var side = getSide(placement);
  var isVertical = mainAxis === "x";
  var coords;
  switch (side) {
    case "top":
      coords = {
        x: commonX,
        y: reference.y - floating.height
      };
      break;
    case "bottom":
      coords = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;
    case "right":
      coords = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;
    case "left":
      coords = {
        x: reference.x - floating.width,
        y: commonY
      };
      break;
    default:
      coords = {
        x: reference.x,
        y: reference.y
      };
  }
  switch (getAlignment(placement)) {
    case "start":
      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
      break;
    case "end":
      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
      break;
  }
  return coords;
}
var computePosition$1 = function computePosition$1(reference, floating, config) {
  return __async(void 0, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
    var _config$placement, placement, _config$strategy, strategy, _config$middleware, middleware, platform2, validMiddleware, rtl, rects, _computeCoordsFromPla, x, y, statefulPlacement, middlewareData, resetCount, i2, _validMiddleware$i, name, fn, _yield$fn, nextX, nextY, data, reset, _computeCoordsFromPla2;
    return _regeneratorRuntime().wrap(function _callee5$(_context5) {
      while (1) switch (_context5.prev = _context5.next) {
        case 0:
          _config$placement = config.placement, placement = _config$placement === void 0 ? "bottom" : _config$placement, _config$strategy = config.strategy, strategy = _config$strategy === void 0 ? "absolute" : _config$strategy, _config$middleware = config.middleware, middleware = _config$middleware === void 0 ? [] : _config$middleware, platform2 = config.platform;
          validMiddleware = middleware.filter(Boolean);
          _context5.next = 4;
          return platform2.isRTL == null ? void 0 : platform2.isRTL(floating);
        case 4:
          rtl = _context5.sent;
          if (!({}.NODE_ENV !== "production")) {
            _context5.next = 10;
            break;
          }
          if (platform2 == null) {
            console.error(["Floating UI: `platform` property was not passed to config. If you", "want to use Floating UI on the web, install @floating-ui/dom", "instead of the /core package. Otherwise, you can create your own", "`platform`: https://floating-ui.com/docs/platform"].join(" "));
          }
          if (!(validMiddleware.filter(function (_ref) {
            var name = _ref.name;
            return name === "autoPlacement" || name === "flip";
          }).length > 1)) {
            _context5.next = 9;
            break;
          }
          throw new Error(["Floating UI: duplicate `flip` and/or `autoPlacement` middleware", "detected. This will lead to an infinite loop. Ensure only one of", "either has been passed to the `middleware` array."].join(" "));
        case 9:
          if (!reference || !floating) {
            console.error(["Floating UI: The reference and/or floating element was not defined", "when `computePosition()` was called. Ensure that both elements have", "been created and can be measured."].join(" "));
          }
        case 10:
          _context5.next = 12;
          return platform2.getElementRects({
            reference: reference,
            floating: floating,
            strategy: strategy
          });
        case 12:
          rects = _context5.sent;
          _computeCoordsFromPla = computeCoordsFromPlacement(rects, placement, rtl), x = _computeCoordsFromPla.x, y = _computeCoordsFromPla.y;
          statefulPlacement = placement;
          middlewareData = {};
          resetCount = 0;
          i2 = 0;
        case 18:
          if (!(i2 < validMiddleware.length)) {
            _context5.next = 52;
            break;
          }
          _validMiddleware$i = validMiddleware[i2], name = _validMiddleware$i.name, fn = _validMiddleware$i.fn;
          _context5.next = 22;
          return fn({
            x: x,
            y: y,
            initialPlacement: placement,
            placement: statefulPlacement,
            strategy: strategy,
            middlewareData: middlewareData,
            rects: rects,
            platform: platform2,
            elements: {
              reference: reference,
              floating: floating
            }
          });
        case 22:
          _yield$fn = _context5.sent;
          nextX = _yield$fn.x;
          nextY = _yield$fn.y;
          data = _yield$fn.data;
          reset = _yield$fn.reset;
          x = nextX != null ? nextX : x;
          y = nextY != null ? nextY : y;
          middlewareData = __spreadProps(__spreadValues({}, middlewareData), _defineProperty({}, name, __spreadValues(__spreadValues({}, middlewareData[name]), data)));
          if ({}.NODE_ENV !== "production") {
            if (resetCount > 50) {
              console.warn(["Floating UI: The middleware lifecycle appears to be running in an", "infinite loop. This is usually caused by a `reset` continually", "being returned without a break condition."].join(" "));
            }
          }
          if (!(reset && resetCount <= 50)) {
            _context5.next = 49;
            break;
          }
          resetCount++;
          if (!(_typeof(reset) === "object")) {
            _context5.next = 47;
            break;
          }
          if (reset.placement) {
            statefulPlacement = reset.placement;
          }
          if (!reset.rects) {
            _context5.next = 44;
            break;
          }
          if (!(reset.rects === true)) {
            _context5.next = 42;
            break;
          }
          _context5.next = 39;
          return platform2.getElementRects({
            reference: reference,
            floating: floating,
            strategy: strategy
          });
        case 39:
          _context5.t0 = _context5.sent;
          _context5.next = 43;
          break;
        case 42:
          _context5.t0 = reset.rects;
        case 43:
          rects = _context5.t0;
        case 44:
          _computeCoordsFromPla2 = computeCoordsFromPlacement(rects, statefulPlacement, rtl);
          x = _computeCoordsFromPla2.x;
          y = _computeCoordsFromPla2.y;
        case 47:
          i2 = -1;
          return _context5.abrupt("continue", 49);
        case 49:
          i2++;
          _context5.next = 18;
          break;
        case 52:
          return _context5.abrupt("return", {
            x: x,
            y: y,
            placement: statefulPlacement,
            strategy: strategy,
            middlewareData: middlewareData
          });
        case 53:
        case "end":
          return _context5.stop();
      }
    }, _callee5);
  }));
};
function rectToClientRect(rect) {
  return __spreadProps(__spreadValues({}, rect), {
    top: rect.y,
    left: rect.x,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}
function getWindow(node) {
  var _node$ownerDocument;
  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function getComputedStyle$1(element) {
  return getWindow(element).getComputedStyle(element);
}
function getNodeName(node) {
  return isNode(node) ? (node.nodeName || "").toLowerCase() : "";
}
var uaString;
function getUAString() {
  if (uaString) {
    return uaString;
  }
  var uaData = navigator.userAgentData;
  if (uaData && Array.isArray(uaData.brands)) {
    uaString = uaData.brands.map(function (item) {
      return item.brand + "/" + item.version;
    }).join(" ");
    return uaString;
  }
  return navigator.userAgent;
}
function isHTMLElement(value) {
  return value instanceof getWindow(value).HTMLElement;
}
function isElement(value) {
  return value instanceof getWindow(value).Element;
}
function isNode(value) {
  return value instanceof getWindow(value).Node;
}
function isShadowRoot(node) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  var OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}
function isOverflowElement(element) {
  var _getComputedStyle$ = getComputedStyle$1(element),
    overflow = _getComputedStyle$.overflow,
    overflowX = _getComputedStyle$.overflowX,
    overflowY = _getComputedStyle$.overflowY,
    display = _getComputedStyle$.display;
  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX) && !["inline", "contents"].includes(display);
}
function isTableElement(element) {
  return ["table", "td", "th"].includes(getNodeName(element));
}
function isContainingBlock(element) {
  var isFirefox = /firefox/i.test(getUAString());
  var css = getComputedStyle$1(element);
  var backdropFilter = css.backdropFilter || css.WebkitBackdropFilter;
  return css.transform !== "none" || css.perspective !== "none" || (backdropFilter ? backdropFilter !== "none" : false) || isFirefox && css.willChange === "filter" || isFirefox && (css.filter ? css.filter !== "none" : false) || ["transform", "perspective"].some(function (value) {
    return css.willChange.includes(value);
  }) || ["paint", "layout", "strict", "content"].some(function (value) {
    var contain = css.contain;
    return contain != null ? contain.includes(value) : false;
  });
}
function isLayoutViewport() {
  return !/^((?!chrome|android).)*safari/i.test(getUAString());
}
function isLastTraversableNode(node) {
  return ["html", "body", "#document"].includes(getNodeName(node));
}
var min = Math.min;
var max = Math.max;
var round = Math.round;
var FALLBACK_SCALE = {
  x: 1,
  y: 1
};
function getScale(element) {
  var domElement = !isElement(element) && element.contextElement ? element.contextElement : isElement(element) ? element : null;
  if (!domElement) {
    return FALLBACK_SCALE;
  }
  var rect = domElement.getBoundingClientRect();
  var css = getComputedStyle$1(domElement);
  if (css.boxSizing !== "border-box") {
    if (!isHTMLElement(domElement)) {
      return FALLBACK_SCALE;
    }
    return {
      x: domElement.offsetWidth > 0 ? round(rect.width) / domElement.offsetWidth || 1 : 1,
      y: domElement.offsetHeight > 0 ? round(rect.height) / domElement.offsetHeight || 1 : 1
    };
  }
  var x = rect.width / parseFloat(css.width);
  var y = rect.height / parseFloat(css.height);
  if (!x || !Number.isFinite(x)) {
    x = 1;
  }
  if (!y || !Number.isFinite(y)) {
    y = 1;
  }
  return {
    x: x,
    y: y
  };
}
function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {
  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  var clientRect = element.getBoundingClientRect();
  var scale = FALLBACK_SCALE;
  if (includeScale) {
    if (offsetParent) {
      if (isElement(offsetParent)) {
        scale = getScale(offsetParent);
      }
    } else {
      scale = getScale(element);
    }
  }
  var win = isElement(element) ? getWindow(element) : window;
  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;
  var x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scale.x;
  var y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scale.y;
  var width = clientRect.width / scale.x;
  var height = clientRect.height / scale.y;
  return {
    width: width,
    height: height,
    top: y,
    right: x + width,
    bottom: y + height,
    left: x,
    x: x,
    y: y
  };
}
function getDocumentElement(node) {
  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;
}
function getNodeScroll(element) {
  if (isElement(element)) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }
  return {
    scrollLeft: element.pageXOffset,
    scrollTop: element.pageYOffset
  };
}
function getWindowScrollBarX(element) {
  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;
}
function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(element, true, strategy === "fixed", offsetParent);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };
  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== "fixed") {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      var offsetRect = getBoundingClientRect(offsetParent, true);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}
function getParentNode(node) {
  if (getNodeName(node) === "html") {
    return node;
  }
  var result = node.assignedSlot || node.parentNode || (isShadowRoot(node) ? node.host : null) || getDocumentElement(node);
  return isShadowRoot(result) ? result.host : result;
}
function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || getComputedStyle$1(element).position === "fixed") {
    return null;
  }
  return element.offsetParent;
}
function getContainingBlock(element) {
  var currentNode = getParentNode(element);
  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {
    if (isContainingBlock(currentNode)) {
      return currentNode;
    } else {
      currentNode = getParentNode(currentNode);
    }
  }
  return null;
}
function getOffsetParent(element) {
  var window2 = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);
  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === "static") {
    offsetParent = getTrueOffsetParent(offsetParent);
  }
  if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle$1(offsetParent).position === "static" && !isContainingBlock(offsetParent))) {
    return window2;
  }
  return offsetParent || getContainingBlock(element) || window2;
}
function getDimensions(element) {
  if (isHTMLElement(element)) {
    return {
      width: element.offsetWidth,
      height: element.offsetHeight
    };
  }
  var rect = getBoundingClientRect(element);
  return {
    width: rect.width,
    height: rect.height
  };
}
function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
  var rect = _ref.rect,
    offsetParent = _ref.offsetParent,
    strategy = _ref.strategy;
  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  if (offsetParent === documentElement) {
    return rect;
  }
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var scale = {
    x: 1,
    y: 1
  };
  var offsets = {
    x: 0,
    y: 0
  };
  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== "fixed") {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      var offsetRect = getBoundingClientRect(offsetParent);
      scale = getScale(offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    }
  }
  return {
    width: rect.width * scale.x,
    height: rect.height * scale.y,
    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,
    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y
  };
}
function getViewportRect(element, strategy) {
  var win = getWindow(element);
  var html = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    var layoutViewport = isLayoutViewport();
    if (layoutViewport || !layoutViewport && strategy === "fixed") {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width: width,
    height: height,
    x: x,
    y: y
  };
}
function getDocumentRect(element) {
  var _element$ownerDocumen;
  var html = getDocumentElement(element);
  var scroll = getNodeScroll(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -scroll.scrollLeft + getWindowScrollBarX(element);
  var y = -scroll.scrollTop;
  if (getComputedStyle$1(body || html).direction === "rtl") {
    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }
  return {
    width: width,
    height: height,
    x: x,
    y: y
  };
}
function getNearestOverflowAncestor(node) {
  var parentNode = getParentNode(node);
  if (isLastTraversableNode(parentNode)) {
    return node.ownerDocument.body;
  }
  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {
    return parentNode;
  }
  return getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node, list) {
  var _node$ownerDocument;
  if (list === void 0) {
    list = [];
  }
  var scrollableAncestor = getNearestOverflowAncestor(node);
  var isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);
  var win = getWindow(scrollableAncestor);
  if (isBody) {
    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);
  }
  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));
}
function getInnerBoundingClientRect(element, strategy) {
  var clientRect = getBoundingClientRect(element, true, strategy === "fixed");
  var top = clientRect.top + element.clientTop;
  var left = clientRect.left + element.clientLeft;
  var scale = isHTMLElement(element) ? getScale(element) : {
    x: 1,
    y: 1
  };
  var width = element.clientWidth * scale.x;
  var height = element.clientHeight * scale.y;
  var x = left * scale.x;
  var y = top * scale.y;
  return {
    top: y,
    left: x,
    right: x + width,
    bottom: y + height,
    x: x,
    y: y,
    width: width,
    height: height
  };
}
function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
  if (clippingAncestor === "viewport") {
    return rectToClientRect(getViewportRect(element, strategy));
  }
  if (isElement(clippingAncestor)) {
    return getInnerBoundingClientRect(clippingAncestor, strategy);
  }
  return rectToClientRect(getDocumentRect(getDocumentElement(element)));
}
function getClippingElementAncestors(element, cache) {
  var cachedResult = cache.get(element);
  if (cachedResult) {
    return cachedResult;
  }
  var result = getOverflowAncestors(element).filter(function (el) {
    return isElement(el) && getNodeName(el) !== "body";
  });
  var currentContainingBlockComputedStyle = null;
  var elementIsFixed = getComputedStyle$1(element).position === "fixed";
  var currentNode = elementIsFixed ? getParentNode(element) : element;
  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {
    var computedStyle = getComputedStyle$1(currentNode);
    var containingBlock = isContainingBlock(currentNode);
    var shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === "static" && !!currentContainingBlockComputedStyle && ["absolute", "fixed"].includes(currentContainingBlockComputedStyle.position);
    if (shouldDropCurrentNode) {
      result = result.filter(function (ancestor) {
        return ancestor !== currentNode;
      });
    } else {
      currentContainingBlockComputedStyle = computedStyle;
    }
    currentNode = getParentNode(currentNode);
  }
  cache.set(element, result);
  return result;
}
function getClippingRect(_ref) {
  var element = _ref.element,
    boundary = _ref.boundary,
    rootBoundary = _ref.rootBoundary,
    strategy = _ref.strategy;
  var elementClippingAncestors = boundary === "clippingAncestors" ? getClippingElementAncestors(element, this._c) : [].concat(boundary);
  var clippingAncestors = [].concat(_toConsumableArray(elementClippingAncestors), [rootBoundary]);
  var firstClippingAncestor = clippingAncestors[0];
  var clippingRect = clippingAncestors.reduce(function (accRect, clippingAncestor) {
    var rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
  return {
    width: clippingRect.right - clippingRect.left,
    height: clippingRect.bottom - clippingRect.top,
    x: clippingRect.left,
    y: clippingRect.top
  };
}
var platform = {
  getClippingRect: getClippingRect,
  convertOffsetParentRelativeRectToViewportRelativeRect: convertOffsetParentRelativeRectToViewportRelativeRect,
  isElement: isElement,
  getDimensions: getDimensions,
  getOffsetParent: getOffsetParent,
  getDocumentElement: getDocumentElement,
  getScale: getScale,
  getElementRects: function getElementRects(_ref) {
    return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {
      var reference, floating, strategy, getOffsetParentFn, getDimensionsFn;
      return _regeneratorRuntime().wrap(function _callee6$(_context6) {
        while (1) switch (_context6.prev = _context6.next) {
          case 0:
            reference = _ref.reference, floating = _ref.floating, strategy = _ref.strategy;
            getOffsetParentFn = this.getOffsetParent || getOffsetParent;
            getDimensionsFn = this.getDimensions;
            _context6.t0 = getRectRelativeToOffsetParent;
            _context6.t1 = reference;
            _context6.next = 7;
            return getOffsetParentFn(floating);
          case 7:
            _context6.t2 = _context6.sent;
            _context6.t3 = strategy;
            _context6.t4 = (0, _context6.t0)(_context6.t1, _context6.t2, _context6.t3);
            _context6.t5 = __spreadValues;
            _context6.t6 = {
              x: 0,
              y: 0
            };
            _context6.next = 14;
            return getDimensionsFn(floating);
          case 14:
            _context6.t7 = _context6.sent;
            _context6.t8 = (0, _context6.t5)(_context6.t6, _context6.t7);
            return _context6.abrupt("return", {
              reference: _context6.t4,
              floating: _context6.t8
            });
          case 17:
          case "end":
            return _context6.stop();
        }
      }, _callee6, this);
    }));
  },
  getClientRects: function getClientRects(element) {
    return Array.from(element.getClientRects());
  },
  isRTL: function isRTL(element) {
    return getComputedStyle$1(element).direction === "rtl";
  }
};
function autoUpdate(reference, floating, update, options) {
  if (options === void 0) {
    options = {};
  }
  var _options2 = options,
    _options2$ancestorScr = _options2.ancestorScroll,
    _ancestorScroll = _options2$ancestorScr === void 0 ? true : _options2$ancestorScr,
    _options2$ancestorRes = _options2.ancestorResize,
    ancestorResize = _options2$ancestorRes === void 0 ? true : _options2$ancestorRes,
    _options2$elementResi = _options2.elementResize,
    elementResize = _options2$elementResi === void 0 ? true : _options2$elementResi,
    _options2$animationFr = _options2.animationFrame,
    animationFrame = _options2$animationFr === void 0 ? false : _options2$animationFr;
  var ancestorScroll = _ancestorScroll && !animationFrame;
  var ancestors = ancestorScroll || ancestorResize ? [].concat(_toConsumableArray(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), _toConsumableArray(getOverflowAncestors(floating))) : [];
  ancestors.forEach(function (ancestor) {
    ancestorScroll && ancestor.addEventListener("scroll", update, {
      passive: true
    });
    ancestorResize && ancestor.addEventListener("resize", update);
  });
  var observer = null;
  if (elementResize) {
    var initialUpdate = true;
    observer = new ResizeObserver(function () {
      if (!initialUpdate) {
        update();
      }
      initialUpdate = false;
    });
    isElement(reference) && !animationFrame && observer.observe(reference);
    if (!isElement(reference) && reference.contextElement && !animationFrame) {
      observer.observe(reference.contextElement);
    }
    observer.observe(floating);
  }
  var frameId;
  var prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;
  if (animationFrame) {
    frameLoop();
  }
  function frameLoop() {
    var nextRefRect = getBoundingClientRect(reference);
    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {
      update();
    }
    prevRefRect = nextRefRect;
    frameId = requestAnimationFrame(frameLoop);
  }
  update();
  return function () {
    var _observer;
    ancestors.forEach(function (ancestor) {
      ancestorScroll && ancestor.removeEventListener("scroll", update);
      ancestorResize && ancestor.removeEventListener("resize", update);
    });
    (_observer = observer) == null ? void 0 : _observer.disconnect();
    observer = null;
    if (animationFrame) {
      cancelAnimationFrame(frameId);
    }
  };
}
var computePosition = function computePosition(reference, floating, options) {
  var cache = /* @__PURE__ */new Map();
  var mergedOptions = __spreadValues({
    platform: platform
  }, options);
  var platformWithCache = __spreadProps(__spreadValues({}, mergedOptions.platform), {
    _c: cache
  });
  return computePosition$1(reference, floating, __spreadProps(__spreadValues({}, mergedOptions), {
    platform: platformWithCache
  }));
};
function P(l2, u2, e2) {
  var c2 = function c2() {
      var t2;
      return (t2 = e2 == null ? void 0 : e2.placement) != null ? t2 : "bottom";
    },
    d = function d() {
      var t2;
      return (t2 = e2 == null ? void 0 : e2.strategy) != null ? t2 : "absolute";
    },
    _createSignal51 = createSignal({
      x: null,
      y: null,
      placement: c2(),
      strategy: d(),
      middlewareData: {}
    }),
    _createSignal52 = _slicedToArray(_createSignal51, 2),
    n2 = _createSignal52[0],
    o2 = _createSignal52[1],
    _createSignal53 = createSignal(),
    _createSignal54 = _slicedToArray(_createSignal53, 2),
    x = _createSignal54[0],
    F = _createSignal54[1];
  createEffect(function () {
    var t2 = x();
    if (t2) throw t2.value;
  });
  var s2 = createMemo(function () {
    return l2(), u2(), {};
  });
  function i2() {
    var t2 = l2(),
      r = u2();
    if (t2 && r) {
      var a2 = s2();
      computePosition(t2, r, {
        middleware: e2 == null ? void 0 : e2.middleware,
        placement: c2(),
        strategy: d()
      }).then(function (m) {
        a2 === s2() && o2(m);
      }, function (m) {
        F(m);
      });
    }
  }
  return createEffect(function () {
    var t2 = l2(),
      r = u2();
    if (e2 == null || e2.middleware, c2(), d(), t2 && r) if (e2 != null && e2.whileElementsMounted) {
      var a2 = e2.whileElementsMounted(t2, r, i2);
      a2 && onCleanup(a2);
    } else i2();
  }), {
    get x() {
      return n2().x;
    },
    get y() {
      return n2().y;
    },
    get placement() {
      return n2().placement;
    },
    get strategy() {
      return n2().strategy;
    },
    get middlewareData() {
      return n2().middlewareData;
    },
    update: i2
  };
}
var _tmpl$$3 = /* @__PURE__ */template$1("<tc-root data-tc-dropdown-container=\"true\"></tc-root>");
var AccountButton = function AccountButton() {
  var theme = useTheme();
  var connector = useContext(ConnectorContext);
  var tonConnectUI = useContext(TonConnectUiContext);
  var _createSignal55 = createSignal(false),
    _createSignal56 = _slicedToArray(_createSignal55, 2),
    isOpened = _createSignal56[0],
    setIsOpened = _createSignal56[1];
  var _createSignal57 = createSignal(connector.account),
    _createSignal58 = _slicedToArray(_createSignal57, 2),
    account = _createSignal58[0],
    setAccount = _createSignal58[1];
  var _createSignal59 = createSignal(!connector.account),
    _createSignal60 = _slicedToArray(_createSignal59, 2),
    restoringProcess = _createSignal60[0],
    setRestoringProcess = _createSignal60[1];
  var dropDownRef;
  var _createSignal61 = createSignal(),
    _createSignal62 = _slicedToArray(_createSignal61, 2),
    floating = _createSignal62[0],
    setFloating = _createSignal62[1];
  var _createSignal63 = createSignal(),
    _createSignal64 = _slicedToArray(_createSignal63, 2),
    anchor = _createSignal64[0],
    setAnchor = _createSignal64[1];
  var position = P(anchor, floating, {
    whileElementsMounted: autoUpdate,
    placement: "bottom-end"
  });
  var normalizedAddress = function normalizedAddress() {
    var acc = account();
    if (acc) {
      var userFriendlyAddress = (0, _sdk.toUserFriendlyAddress)(acc.address, acc.chain === _sdk.CHAIN.TESTNET);
      return userFriendlyAddress.slice(0, 4) + "\u2026" + userFriendlyAddress.slice(-4);
    }
    return "";
  };
  tonConnectUI.connectionRestored.then(function () {
    return setRestoringProcess(false);
  });
  var unsubscribe = connector.onStatusChange(function (wallet) {
    if (!wallet) {
      setIsOpened(false);
      setAccount(null);
      setRestoringProcess(false);
      return;
    }
    setAccount(wallet.account);
    setRestoringProcess(false);
  });
  var onClick = function onClick(e2) {
    if (!account() || !isOpened()) {
      return;
    }
    var clickToButton = anchor().contains(e2.target);
    var clickToDropdown = dropDownRef.contains(e2.target);
    if (!clickToButton && !clickToDropdown) {
      setIsOpened(false);
    }
  };
  onMount(function () {
    document.body.addEventListener("click", onClick);
  });
  onCleanup(function () {
    document.body.removeEventListener("click", onClick);
    unsubscribe();
  });
  return createComponent(Dynamic, {
    component: globalStylesTag,
    get children() {
      return [createComponent(Show, {
        get when() {
          return restoringProcess();
        },
        get children() {
          return createComponent(LoaderButtonStyled$1, {
            disabled: true,
            "data-tc-connect-button-loading": "true",
            get children() {
              return createComponent(LoaderIconStyled$1, {});
            }
          });
        }
      }), createComponent(Show, {
        get when() {
          return !restoringProcess();
        },
        get children() {
          return [createComponent(Show, {
            get when() {
              return !account();
            },
            get children() {
              return createComponent(AccountButtonStyled, {
                onClick: function onClick() {
                  return tonConnectUI.openModal();
                },
                "data-tc-connect-button": "true",
                scale: "s",
                get children() {
                  return [createComponent(TonIcon, {
                    get fill() {
                      return theme.colors.connectButton.foreground;
                    }
                  }), createComponent(Text, {
                    translationKey: "button.connectWallet",
                    fontSize: "15px",
                    lineHeight: "18px",
                    fontWeight: "590",
                    get color() {
                      return theme.colors.connectButton.foreground;
                    },
                    children: "Connect wallet"
                  })];
                }
              });
            }
          }), createComponent(Show, {
            get when() {
              return account();
            },
            get children() {
              return createComponent(DropdownContainerStyled, {
                get children() {
                  return [createComponent(DropdownButtonStyled, {
                    onClick: function onClick() {
                      return setIsOpened(function (v) {
                        return !v;
                      });
                    },
                    ref: setAnchor,
                    "data-tc-dropdown-button": "true",
                    scale: "s",
                    get children() {
                      return [createComponent(Text, {
                        fontSize: "15px",
                        fontWeight: "590",
                        lineHeight: "18px",
                        get children() {
                          return normalizedAddress();
                        }
                      }), createComponent(ArrowIcon, {
                        direction: "bottom"
                      })];
                    }
                  }), createComponent(Portal, {
                    get children() {
                      var _el$ = untrack(function () {
                        return document.importNode(_tmpl$$3, true);
                      });
                      use(setFloating, _el$);
                      _el$.style.setProperty("z-index", "999");
                      _el$._$owner = getOwner();
                      insert(_el$, createComponent(Transition, {
                        onBeforeEnter: function onBeforeEnter(el) {
                          animate(el, [{
                            opacity: 0,
                            transform: "translateY(-8px)"
                          }, {
                            opacity: 1,
                            transform: "translateY(0)"
                          }], {
                            duration: 150
                          });
                        },
                        onExit: function onExit(el, done) {
                          var a2 = animate(el, [{
                            opacity: 1,
                            transform: "translateY(0)"
                          }, {
                            opacity: 0,
                            transform: "translateY(-8px)"
                          }], {
                            duration: 150
                          });
                          a2.finished.then(done);
                        },
                        get children() {
                          return createComponent(Show, {
                            get when() {
                              return isOpened();
                            },
                            get children() {
                              return createComponent(DropdownStyled, {
                                get hidden() {
                                  return !isOpened();
                                },
                                onClose: function onClose() {
                                  return setIsOpened(false);
                                },
                                ref: function ref(r$) {
                                  var _ref$ = dropDownRef;
                                  typeof _ref$ === "function" ? _ref$(r$) : dropDownRef = r$;
                                }
                              });
                            }
                          });
                        }
                      }), null);
                      insert(_el$, createComponent(NotificationsStyled, {}), null);
                      createRenderEffect(function (_p$) {
                        var _a2, _b2;
                        var _v$ = position.strategy,
                          _v$2 = "".concat((_a2 = position.y) != null ? _a2 : 0, "px"),
                          _v$3 = "".concat((_b2 = position.x) != null ? _b2 : 0, "px");
                        _v$ !== _p$._v$ && _el$.style.setProperty("position", _p$._v$ = _v$);
                        _v$2 !== _p$._v$2 && _el$.style.setProperty("top", _p$._v$2 = _v$2);
                        _v$3 !== _p$._v$3 && _el$.style.setProperty("left", _p$._v$3 = _v$3);
                        return _p$;
                      }, {
                        _v$: void 0,
                        _v$2: void 0,
                        _v$3: void 0
                      });
                      return _el$;
                    }
                  })];
                }
              });
            }
          })];
        }
      })];
    }
  });
};
var StyledModal = styled(Modal)(_templateObject58 || (_templateObject58 = _taggedTemplateLiteral(["\n    padding-left: 24px;\n    padding-right: 24px;\n    padding-top: 18px;\n    padding-bottom: 0;\n\n    ", " {\n        padding-left: 0;\n        padding-right: 0;\n\n        min-height: 364px;\n    }\n"])), media("mobile"));
var H1Styled$8 = styled(H1)(_templateObject59 || (_templateObject59 = _taggedTemplateLiteral(["\n    margin-top: 12px;\n\n    ", " {\n        padding: 0 10px;\n    }\n"])), media("mobile"));
var LoaderContainerStyled = styled.div(_templateObject60 || (_templateObject60 = _taggedTemplateLiteral(["\n    margin: 30px 0;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n\n    ", " {\n        height: 160px;\n        align-items: center;\n    }\n"])), media("mobile"));
styled(Text)(_templateObject61 || (_templateObject61 = _taggedTemplateLiteral(["\n    min-width: 84px;\n    text-align: center;\n    font-weight: 590;\n"])));
styled(TabBar)(_templateObject62 || (_templateObject62 = _taggedTemplateLiteral(["\n    margin: 0 auto 22px;\n"])));
var _createStore5 = createStore({
    buttonRootId: null,
    language: "en",
    returnStrategy: "back",
    twaReturnUrl: void 0,
    walletsListConfiguration: {},
    enableAndroidBackHandler: true
  }),
  _createStore6 = _slicedToArray(_createStore5, 2),
  appState = _createStore6[0],
  setAppState = _createStore6[1];
function uniq(array) {
  return _toConsumableArray(new Set(array));
}
function mergeConcat(idKey, array1, array2) {
  return array1.map(function (item1) {
    var item2 = array2.find(function (elem) {
      return elem[idKey] === item1[idKey];
    });
    array2 = array2.filter(function (elem) {
      return elem[idKey] !== item1[idKey];
    });
    return item2 === void 0 ? item1 : item2;
  }).concat(array2);
}
function uiWalletToWalletInfo(uiWallet) {
  if ("jsBridgeKey" in uiWallet) {
    return __spreadProps(__spreadValues({}, uiWallet), {
      injected: _sdk.TonConnect.isWalletInjected(uiWallet.jsBridgeKey),
      embedded: _sdk.TonConnect.isInsideWalletBrowser(uiWallet.jsBridgeKey)
    });
  }
  return uiWallet;
}
function applyWalletsListConfiguration(walletsList, configuration) {
  var _a2;
  if (!configuration) {
    return walletsList;
  }
  if ((_a2 = configuration.includeWallets) == null ? void 0 : _a2.length) {
    walletsList = mergeConcat("name", walletsList, configuration.includeWallets.map(uiWalletToWalletInfo));
  }
  return walletsList;
}
function supportsDesktop(walletInfo) {
  return walletInfo.platforms.some(function (w) {
    return ["macos", "linux", "windows"].includes(w);
  });
}
function supportsMobile(walletInfo) {
  return walletInfo.platforms.some(function (w) {
    return ["ios", "android"].includes(w);
  });
}
function supportsExtension(walletInfo) {
  return walletInfo.platforms.some(function (w) {
    return ["chrome", "firefox", "safari"].includes(w);
  });
}
function eqWalletName(wallet1, name) {
  if (!name) {
    return false;
  }
  return wallet1.name.toLowerCase() === name.toLowerCase() || wallet1.appName.toLowerCase() === name.toLowerCase();
}
var DesktopSelectWalletModalStyled = styled.div(_templateObject63 || (_templateObject63 = _taggedTemplateLiteral(["\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n"])));
var H1Styled$7 = styled(H1)(_templateObject64 || (_templateObject64 = _taggedTemplateLiteral(["\n    margin-bottom: 18px;\n"])));
styled.div(_templateObject65 || (_templateObject65 = _taggedTemplateLiteral(["\n    height: 1px;\n    margin: 0 -24px;\n    width: calc(100% + 48px);\n    opacity: 0.12;\n    background: ", ";\n    transition: background 0.15s ease-in-out;\n\n    ", " {\n        width: 100%;\n    }\n"])), function (props) {
  return props.isShown ? props.theme.colors.icon.secondary : "transparent";
}, media("mobile"));
var WalletsUl = styled.ul(_templateObject66 || (_templateObject66 = _taggedTemplateLiteral(["\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 92px);\n    grid-template-rows: auto;\n    align-content: flex-start;\n    justify-content: center;\n    row-gap: 8px;\n    width: 100%;\n    padding: 0 0 16px;\n    align-self: flex-start;\n    max-width: 400px;\n    margin: 0 auto;\n\n    > li {\n        display: block;\n        height: fit-content;\n    }\n\n    ", " {\n        grid-template-columns: repeat(auto-fit, 82px);\n    }\n"])), media("mobile"));
styled(Button)(_templateObject67 || (_templateObject67 = _taggedTemplateLiteral(["\n    display: block;\n    margin: 0 auto 1px;\n    font-size: 15px;\n"])));
var StyledIconButton$3 = styled(IconButton)(_templateObject68 || (_templateObject68 = _taggedTemplateLiteral(["\n    position: absolute;\n    top: 16px;\n    left: 16px;\n"])));
var WalletLabeledItemStyled = styled(WalletLabeledItem)(_templateObject69 || (_templateObject69 = _taggedTemplateLiteral(["\n    height: 100%;\n"])));
var _tmpl$$2 = /* @__PURE__ */template$1("<li></li>");
var AllWalletsListModal = function AllWalletsListModal(props) {
  var maxHeight = function maxHeight() {
    return isMobile() ? void 0 : 510;
  };
  var walletsList = function walletsList() {
    return isMobile() ? props.walletsList.filter(supportsMobile) : props.walletsList;
  };
  return createComponent(DesktopSelectWalletModalStyled, {
    "data-tc-wallets-modal-list": "true",
    get children() {
      return [createComponent(StyledIconButton$3, {
        icon: "arrow",
        onClick: function onClick() {
          return props.onBack();
        }
      }), createComponent(H1Styled$7, {
        translationKey: "walletModal.wallets",
        children: "Wallets"
      }), createComponent(ScrollContainer, {
        get maxHeight() {
          return maxHeight();
        },
        get children() {
          return createComponent(WalletsUl, {
            get children() {
              return createComponent(For, {
                get each() {
                  return walletsList();
                },
                children: function children(wallet) {
                  return function () {
                    var _el$ = _tmpl$$2.cloneNode(true);
                    insert(_el$, createComponent(WalletLabeledItemStyled, {
                      wallet: wallet,
                      onClick: function onClick() {
                        return props.onSelect(wallet);
                      }
                    }));
                    return _el$;
                  }();
                }
              });
            }
          });
        }
      })];
    }
  });
};
var tgButtonBorders = {
  m: "16px",
  s: "12px",
  none: "0"
};
var tgIconBorders = {
  m: "6px",
  s: "6px",
  none: "0"
};
var DesktopConnectionModalStyled = styled.div(_templateObject70 || (_templateObject70 = _taggedTemplateLiteral(["\n    display: flex;\n    flex-direction: column;\n"])));
var BodyStyled$1 = styled.div(_templateObject71 || (_templateObject71 = _taggedTemplateLiteral(["\n    flex: 1;\n    margin-top: ", ";\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    min-height: 232px;\n"])), function (props) {
  return props.qr ? "0" : "18px";
});
var QRCodeStyled$1 = styled(QRCode)(_templateObject72 || (_templateObject72 = _taggedTemplateLiteral(["\n    margin-bottom: 24px;\n"])));
var H1Styled$6 = styled(H1)(_templateObject73 || (_templateObject73 = _taggedTemplateLiteral(["\n    max-width: 288px;\n    margin: 0 auto 2px;\n"])));
var H2Styled$4 = styled(H2)(_templateObject74 || (_templateObject74 = _taggedTemplateLiteral(["\n    max-width: 288px;\n    text-align: center;\n    margin: 0 auto 20px;\n"])));
var StyledIconButton$2 = styled(IconButton)(_templateObject75 || (_templateObject75 = _taggedTemplateLiteral(["\n    position: absolute;\n    top: 16px;\n    left: 16px;\n"])));
var ButtonsContainerStyled$1 = styled.div(_templateObject76 || (_templateObject76 = _taggedTemplateLiteral(["\n    display: flex;\n    justify-content: center;\n    gap: 8px;\n    padding-bottom: 16px;\n"])));
var BottomButtonsContainerStyled = styled(ButtonsContainerStyled$1)(_templateObject77 || (_templateObject77 = _taggedTemplateLiteral(["\n    padding-bottom: 0;\n"])));
var FooterButton$1 = styled(Button)(_templateObject78 || (_templateObject78 = _taggedTemplateLiteral(["\n    margin-bottom: 24px;\n"])));
var LoaderStyled$1 = styled(LoaderIcon)(_templateObject79 || (_templateObject79 = _taggedTemplateLiteral(["\n    margin-bottom: 18px;\n    margin-top: 2px;\n"])));
var ErrorIconStyled$1 = styled(ErrorIcon)(_templateObject80 || (_templateObject80 = _taggedTemplateLiteral(["\n    margin-bottom: 16px;\n"])));
var BodyTextStyled$1 = styled(H2)(_templateObject81 || (_templateObject81 = _taggedTemplateLiteral(["\n    color: ", ";\n    text-align: center;\n    margin-bottom: 20px;\n"])), function (props) {
  return props.theme.colors.text.secondary;
});
var TgButtonStyled = styled(Button)(_templateObject82 || (_templateObject82 = _taggedTemplateLiteral(["\n    margin-top: -8px;\n    margin-bottom: 24px;\n    width: 100%;\n    padding: 12px 12px 12px 20px;\n    border-radius: ", ";\n    font-size: 16px;\n    line-height: 20px;\n"])), function (props) {
  return tgButtonBorders[props.theme.borderRadius];
});
var TgImageStyled = styled(Image)(_templateObject83 || (_templateObject83 = _taggedTemplateLiteral(["\n    width: 32px;\n    height: 32px;\n    border-radius: ", ";\n"])), function (props) {
  return tgIconBorders[props.theme.borderRadius];
});
var Translation = function Translation(props) {
  var _useI18n13 = useI18n(),
    _useI18n14 = _slicedToArray(_useI18n13, 1),
    t2 = _useI18n14[0];
  return createMemo(function () {
    var _a2;
    return t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString());
  });
};
function addReturnStrategy(url, strategy) {
  var returnStrategy;
  if (typeof strategy === "string") {
    returnStrategy = strategy;
  } else {
    returnStrategy = isInTMA() ? strategy.twaReturnUrl || strategy.returnStrategy : "none";
  }
  var newUrl = addQueryParameter(url, "ret", returnStrategy);
  if (!(0, _sdk.isTelegramUrl)(url)) {
    return newUrl;
  }
  var lastParam = newUrl.slice(newUrl.lastIndexOf("&") + 1);
  return newUrl.slice(0, newUrl.lastIndexOf("&")) + "-" + (0, _sdk.encodeTelegramUrlParameters)(lastParam);
}
function redirectToTelegram(universalLink, options) {
  options = __spreadValues({}, options);
  var directLink = convertToTGDirectLink(universalLink);
  var directLinkUrl = new URL(directLink);
  if (!directLinkUrl.searchParams.has("startapp")) {
    directLinkUrl.searchParams.append("startapp", "tonconnect");
  }
  if (isInTelegramBrowser()) {
    options.returnStrategy = "back";
    var linkWitStrategy = addReturnStrategy(directLinkUrl.toString(), options.returnStrategy);
    openLinkBlank(linkWitStrategy);
  } else if (isInTMA()) {
    if (isTmaPlatform("ios", "android", "macos", "tdesktop", "web")) {
      options.returnStrategy = "back";
      var _linkWitStrategy = addReturnStrategy(directLinkUrl.toString(), options.returnStrategy);
      sendOpenTelegramLink(_linkWitStrategy);
    } else if (isTmaPlatform("weba")) {
      sendOpenTelegramLink(addReturnStrategy(directLinkUrl.toString(), options));
    } else {
      openLinkBlank(addReturnStrategy(directLinkUrl.toString(), options));
    }
  } else {
    if (isOS("ios")) {
      if (options.returnStrategy === "back") {
        if (isBrowser("safari")) {
          options.returnStrategy = "back";
        } else if (isBrowser("chrome")) {
          options.returnStrategy = "googlechrome://";
        } else if (isBrowser("firefox")) {
          options.returnStrategy = "firefox://";
        } else if (isBrowser("opera")) {
          options.returnStrategy = "opera-http://";
        } else {
          options.returnStrategy = location.href;
        }
      }
      var isChrome = isBrowser("chrome");
      var isFirefox = isBrowser("firefox");
      var useDeepLink = (isChrome || isFirefox) && !options.forceRedirect;
      if (useDeepLink) {
        var linkWithStrategy = addReturnStrategy(directLinkUrl.toString(), options.returnStrategy);
        var deepLink = convertToTGDeepLink(linkWithStrategy);
        openDeeplinkWithFallback(deepLink, function () {
          return openLinkBlank(linkWithStrategy);
        });
      } else {
        var _linkWithStrategy = addReturnStrategy(directLinkUrl.toString(), options.returnStrategy);
        openLinkBlank(_linkWithStrategy);
      }
    } else if (isOS("android")) {
      options.returnStrategy = "back";
      var _isChrome = isBrowser("chrome");
      var _isFirefox = isBrowser("firefox");
      var _useDeepLink = (_isChrome || _isFirefox) && !options.forceRedirect;
      if (_useDeepLink) {
        var _linkWithStrategy2 = addReturnStrategy(directLinkUrl.toString(), options.returnStrategy);
        var _deepLink = convertToTGDeepLink(_linkWithStrategy2);
        openDeeplinkWithFallback(_deepLink, function () {
          return openLinkBlank(_linkWithStrategy2);
        });
      } else {
        var _linkWithStrategy3 = addReturnStrategy(directLinkUrl.toString(), options.returnStrategy);
        openLinkBlank(_linkWithStrategy3);
      }
    } else if (isOS("ipad")) {
      if (options.returnStrategy === "back") {
        if (isBrowser("safari")) {
          options.returnStrategy = "back";
        } else if (isBrowser("chrome")) {
          options.returnStrategy = "googlechrome://";
        } else if (isBrowser("firefox")) {
          options.returnStrategy = "firefox://";
        } else if (isBrowser("opera")) {
          options.returnStrategy = "opera-http://";
        } else {
          options.returnStrategy = location.href;
        }
      }
      var _isChrome2 = isBrowser("chrome");
      var _isFirefox2 = isBrowser("firefox");
      var _useDeepLink2 = (_isChrome2 || _isFirefox2) && !options.forceRedirect;
      var _linkWithStrategy4 = addReturnStrategy(directLinkUrl.toString(), options.returnStrategy);
      if (_useDeepLink2) {
        var _deepLink2 = convertToTGDeepLink(_linkWithStrategy4);
        openDeeplinkWithFallback(_deepLink2, function () {
          return openLinkBlank(_linkWithStrategy4);
        });
      } else {
        openLinkBlank(_linkWithStrategy4);
      }
    } else if (isOS("macos", "windows", "linux")) {
      options.returnStrategy = "back";
      options.twaReturnUrl = void 0;
      var _linkWithStrategy5 = addReturnStrategy(directLinkUrl.toString(), options.returnStrategy);
      if (options.forceRedirect) {
        openLinkBlank(_linkWithStrategy5);
      } else {
        var _deepLink3 = convertToTGDeepLink(_linkWithStrategy5);
        openDeeplinkWithFallback(_deepLink3, function () {
          return openLinkBlank(_linkWithStrategy5);
        });
      }
    } else {
      openLinkBlank(addReturnStrategy(directLinkUrl.toString(), options));
    }
  }
}
function redirectToWallet(universalLink, deepLink, options, setOpenMethod) {
  options = __spreadValues({}, options);
  if (isInTelegramBrowser()) {
    if (isOS("ios", "android")) {
      if (options.returnStrategy === "back") {
        options.returnStrategy = "tg://resolve";
      }
      setOpenMethod("universal-link");
      openLink(addReturnStrategy(universalLink, options.returnStrategy), "_self");
    } else {
      setOpenMethod("universal-link");
      var linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);
      openLinkBlank(linkWitStrategy);
    }
  } else if (isInTMA()) {
    if (isTmaPlatform("ios", "android")) {
      if (options.returnStrategy === "back") {
        options.returnStrategy = "tg://resolve";
      }
      setOpenMethod("universal-link");
      var _linkWitStrategy2 = addReturnStrategy(universalLink, options.returnStrategy);
      sendOpenTelegramLink(_linkWitStrategy2, function () {
        setOpenMethod("universal-link");
        openLinkBlank(_linkWitStrategy2);
      });
    } else if (isTmaPlatform("macos", "tdesktop")) {
      if (options.returnStrategy === "back") {
        options.returnStrategy = "tg://resolve";
      }
      var _linkWitStrategy3 = addReturnStrategy(universalLink, options.returnStrategy);
      var useDeepLink = !!deepLink && !options.forceRedirect;
      if (useDeepLink) {
        setOpenMethod("custom-deeplink");
        openDeeplinkWithFallback(toDeeplink(_linkWitStrategy3, deepLink), function () {
          setOpenMethod("universal-link");
          openLinkBlank(_linkWitStrategy3);
        });
      } else {
        setOpenMethod("universal-link");
        openLinkBlank(_linkWitStrategy3);
      }
    } else if (isTmaPlatform("weba")) {
      if (options.returnStrategy === "back") {
        if (isBrowser("safari")) {
          options.returnStrategy = location.href;
        } else if (isBrowser("chrome")) {
          options.returnStrategy = "googlechrome://";
        } else if (isBrowser("firefox")) {
          options.returnStrategy = "firefox://";
        } else if (isBrowser("opera")) {
          options.returnStrategy = "opera-http://";
        } else {
          options.returnStrategy = location.href;
        }
      }
      var _linkWitStrategy4 = addReturnStrategy(universalLink, options.returnStrategy);
      var _useDeepLink3 = !!deepLink && !options.forceRedirect;
      if (_useDeepLink3) {
        setOpenMethod("custom-deeplink");
        openDeeplinkWithFallback(toDeeplink(_linkWitStrategy4, deepLink), function () {
          setOpenMethod("universal-link");
          openLinkBlank(_linkWitStrategy4);
        });
      } else {
        setOpenMethod("universal-link");
        openLinkBlank(_linkWitStrategy4);
      }
    } else if (isTmaPlatform("web")) {
      if (options.returnStrategy === "back") {
        if (isBrowser("safari")) {
          options.returnStrategy = location.href;
        } else if (isBrowser("chrome")) {
          options.returnStrategy = "googlechrome://";
        } else if (isBrowser("firefox")) {
          options.returnStrategy = "firefox://";
        } else if (isBrowser("opera")) {
          options.returnStrategy = "opera-http://";
        } else {
          options.returnStrategy = location.href;
        }
      }
      var _linkWitStrategy5 = addReturnStrategy(universalLink, options.returnStrategy);
      var _useDeepLink4 = !!deepLink && !options.forceRedirect;
      if (_useDeepLink4) {
        setOpenMethod("custom-deeplink");
        openDeeplinkWithFallback(toDeeplink(_linkWitStrategy5, deepLink), function () {
          setOpenMethod("universal-link");
          openLinkBlank(_linkWitStrategy5);
        });
      } else {
        setOpenMethod("universal-link");
        openLinkBlank(_linkWitStrategy5);
      }
    } else {
      setOpenMethod("universal-link");
      var _linkWitStrategy6 = addReturnStrategy(universalLink, options.returnStrategy);
      openLinkBlank(_linkWitStrategy6);
    }
  } else {
    if (isOS("ios")) {
      if (options.returnStrategy === "back") {
        if (isBrowser("safari")) {
          options.returnStrategy = "none";
        } else if (isBrowser("chrome")) {
          options.returnStrategy = "googlechrome://";
        } else if (isBrowser("firefox")) {
          options.returnStrategy = "firefox://";
        } else if (isBrowser("opera")) {
          options.returnStrategy = "opera-http://";
        } else {
          options.returnStrategy = location.href;
        }
      }
      if (isBrowser("chrome")) {
        setOpenMethod("universal-link");
        openLink(addReturnStrategy(universalLink, options.returnStrategy), "_self");
      } else {
        setOpenMethod("universal-link");
        openLinkBlank(addReturnStrategy(universalLink, options.returnStrategy));
      }
    } else if (isOS("android")) {
      if (options.returnStrategy === "back") {
        if (isBrowser("chrome")) {
          options.returnStrategy = "googlechrome://";
        } else if (isBrowser("firefox")) {
          options.returnStrategy = "firefox://";
        } else if (isBrowser("opera")) {
          options.returnStrategy = "opera-http://";
        } else {
          options.returnStrategy = location.href;
        }
      }
      setOpenMethod("universal-link");
      openLinkBlank(addReturnStrategy(universalLink, options.returnStrategy));
    } else if (isOS("ipad")) {
      if (options.returnStrategy === "back") {
        if (isBrowser("safari")) {
          options.returnStrategy = "none";
        } else if (isBrowser("chrome")) {
          options.returnStrategy = "googlechrome://";
        } else if (isBrowser("firefox")) {
          options.returnStrategy = "firefox://";
        } else if (isBrowser("opera")) {
          options.returnStrategy = "opera-http://";
        } else {
          options.returnStrategy = location.href;
        }
      }
      if (isBrowser("chrome")) {
        setOpenMethod("universal-link");
        openLink(addReturnStrategy(universalLink, options.returnStrategy), "_self");
      } else {
        setOpenMethod("universal-link");
        openLinkBlank(addReturnStrategy(universalLink, options.returnStrategy));
      }
    } else if (isOS("macos", "windows", "linux")) {
      if (options.returnStrategy === "back") {
        if (isBrowser("safari")) {
          options.returnStrategy = "none";
        } else if (isBrowser("chrome")) {
          options.returnStrategy = "googlechrome://";
        } else if (isBrowser("firefox")) {
          options.returnStrategy = "firefox://";
        } else if (isBrowser("opera")) {
          options.returnStrategy = "opera-http://";
        } else {
          options.returnStrategy = "none";
        }
      }
      var _linkWitStrategy7 = addReturnStrategy(universalLink, options.returnStrategy);
      var _useDeepLink5 = !!deepLink && !options.forceRedirect;
      if (_useDeepLink5) {
        setOpenMethod("custom-deeplink");
        openDeeplinkWithFallback(toDeeplink(_linkWitStrategy7, deepLink), function () {
          setOpenMethod("universal-link");
          openLinkBlank(_linkWitStrategy7);
        });
      } else {
        setOpenMethod("universal-link");
        openLinkBlank(_linkWitStrategy7);
      }
    } else {
      setOpenMethod("universal-link");
      openLinkBlank(addReturnStrategy(universalLink, options.returnStrategy));
    }
  }
}
function addQueryParameter(url, key, value) {
  var parsed = new URL(url);
  parsed.searchParams.append(key, value);
  return parsed.toString();
}
function convertToTGDirectLink(universalLink) {
  var url = new URL(universalLink);
  if (url.searchParams.has("attach")) {
    url.searchParams["delete"]("attach");
    url.pathname += "/start";
  }
  return url.toString();
}
function convertToTGDeepLink(directLink) {
  var parsed = new URL(directLink);
  var _parsed$pathname$spli = parsed.pathname.split("/"),
    _parsed$pathname$spli2 = _slicedToArray(_parsed$pathname$spli, 3),
    domain = _parsed$pathname$spli2[1],
    appname = _parsed$pathname$spli2[2];
  var startapp = parsed.searchParams.get("startapp");
  return "tg://resolve?domain=".concat(domain, "&appname=").concat(appname, "&startapp=").concat(startapp);
}
var DesktopConnectionModal = function DesktopConnectionModal(props) {
  var _createSignal65 = createSignal("mobile"),
    _createSignal66 = _slicedToArray(_createSignal65, 2),
    mode = _createSignal66[0],
    setMode = _createSignal66[1];
  var _createSignal67 = createSignal(false),
    _createSignal68 = _slicedToArray(_createSignal67, 2),
    connectionErrored = _createSignal68[0],
    setConnectionErrored = _createSignal68[1];
  var _createSignal69 = createSignal(),
    _createSignal70 = _slicedToArray(_createSignal69, 2),
    universalLink = _createSignal70[0],
    setUniversalLink = _createSignal70[1];
  var _createSignal71 = createSignal(true),
    _createSignal72 = _slicedToArray(_createSignal71, 2),
    firstClick = _createSignal72[0],
    setFirstClick = _createSignal72[1];
  var connector = useContext(ConnectorContext);
  var unsubscribe = connector.onStatusChange(function () {}, function () {
    if (props.wallet.appName !== AT_WALLET_APP_NAME) {
      setConnectionErrored(true);
    }
  });
  onCleanup(unsubscribe);
  var generateUniversalLink = function generateUniversalLink() {
    try {
      var universalLink2 = connector.connect({
        universalLink: props.wallet.universalLink,
        bridgeUrl: props.wallet.bridgeUrl
      }, props.additionalRequest);
      setUniversalLink(universalLink2);
    } catch (e2) {}
  };
  createEffect(function () {
    if (untrack(mode) !== "extension" && (supportsMobile(props.wallet) || supportsDesktop(props.wallet))) {
      generateUniversalLink();
    }
  });
  var onClickMobile = function onClickMobile() {
    setConnectionErrored(false);
    if (mode() === "extension") {
      generateUniversalLink();
    }
    setMode("mobile");
    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {
      openMethod: "qrcode"
    }));
  };
  var onClickDesktop = function onClickDesktop() {
    setConnectionErrored(false);
    if (mode() === "extension") {
      generateUniversalLink();
    }
    setMode("desktop");
    if ((0, _sdk.isTelegramUrl)(universalLink())) {
      onClickTelegram();
    } else {
      var forceRedirect = !firstClick();
      setFirstClick(false);
      redirectToWallet(universalLink(), props.wallet.deepLink, {
        returnStrategy: appState.returnStrategy,
        forceRedirect: forceRedirect
      }, function (method) {
        setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {
          openMethod: method
        }));
      });
    }
  };
  var onClickTelegram = function onClickTelegram() {
    var forceRedirect = !firstClick();
    setFirstClick(false);
    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {
      openMethod: "universal-link"
    }));
    redirectToTelegram(universalLink(), {
      returnStrategy: appState.returnStrategy,
      twaReturnUrl: appState.twaReturnUrl,
      forceRedirect: forceRedirect
    });
  };
  var onClickExtension = function onClickExtension() {
    setConnectionErrored(false);
    setMode("extension");
    if ((0, _sdk.isWalletInfoCurrentlyInjected)(props.wallet)) {
      setLastSelectedWalletInfo(props.wallet);
      connector.connect({
        jsBridgeKey: props.wallet.jsBridgeKey
      }, props.additionalRequest);
    }
  };
  if (supportsMobile(props.wallet)) {
    onClickMobile();
  } else if (supportsExtension(props.wallet)) {
    onClickExtension();
  } else {
    onClickDesktop();
  }
  return createComponent(DesktopConnectionModalStyled, {
    "data-tc-wallets-modal-connection-desktop": "true",
    get children() {
      return [createComponent(Show, {
        get when() {
          return !props.backDisabled;
        },
        get children() {
          return createComponent(StyledIconButton$2, {
            icon: "arrow",
            onClick: function onClick() {
              return props.onBackClick();
            }
          });
        }
      }), createComponent(H1Styled$6, {
        get children() {
          return props.wallet.name;
        }
      }), createComponent(Show, {
        get when() {
          return mode() === "mobile";
        },
        get children() {
          return createComponent(H2Styled$4, {
            translationKey: "walletModal.desktopConnectionModal.scanQR",
            get translationValues() {
              return {
                name: props.wallet.name
              };
            },
            get children() {
              return ["Scan the QR code below with your phone\u2019s or ", createMemo(function () {
                return props.wallet.name;
              }), "\u2019s camera"];
            }
          });
        }
      }), createComponent(BodyStyled$1, {
        get qr() {
          return mode() === "mobile";
        },
        get children() {
          return createComponent(Switch, {
            get children() {
              return [createComponent(Match, {
                get when() {
                  return mode() === "mobile";
                },
                get children() {
                  return createComponent(QRCodeStyled$1, {
                    disableCopy: false,
                    get sourceUrl() {
                      return addReturnStrategy(universalLink(), "none");
                    },
                    get imageUrl() {
                      return props.wallet.imageUrl;
                    }
                  });
                }
              }), createComponent(Match, {
                get when() {
                  return connectionErrored();
                },
                get children() {
                  return [createComponent(ErrorIconStyled$1, {
                    size: "s"
                  }), createComponent(BodyTextStyled$1, {
                    translationKey: "walletModal.desktopConnectionModal.connectionDeclined",
                    children: "Connection declined"
                  }), createComponent(ButtonsContainerStyled$1, {
                    get children() {
                      return createComponent(Button, {
                        get leftIcon() {
                          return createComponent(RetryIcon, {});
                        },
                        get onClick() {
                          return mode() === "extension" ? onClickExtension : onClickDesktop;
                        },
                        get children() {
                          return createComponent(Translation, {
                            translationKey: "common.retry",
                            children: "Retry"
                          });
                        }
                      });
                    }
                  })];
                }
              }), createComponent(Match, {
                get when() {
                  return mode() === "extension";
                },
                get children() {
                  return [createComponent(Show, {
                    get when() {
                      return (0, _sdk.isWalletInfoCurrentlyInjected)(props.wallet);
                    },
                    get children() {
                      return [createComponent(LoaderStyled$1, {
                        size: "s"
                      }), createComponent(BodyTextStyled$1, {
                        translationKey: "walletModal.desktopConnectionModal.continueInExtension",
                        get translationValues() {
                          return {
                            name: props.wallet.name
                          };
                        },
                        get children() {
                          return ["Continue in ", createMemo(function () {
                            return props.wallet.name;
                          }), " browser extension\u2026"];
                        }
                      }), createComponent(ButtonsContainerStyled$1, {
                        get children() {
                          return createComponent(Button, {
                            get leftIcon() {
                              return createComponent(RetryIcon, {});
                            },
                            onClick: onClickExtension,
                            get children() {
                              return createComponent(Translation, {
                                translationKey: "common.retry",
                                children: "Retry"
                              });
                            }
                          });
                        }
                      })];
                    }
                  }), createComponent(Show, {
                    get when() {
                      return !(0, _sdk.isWalletInfoCurrentlyInjected)(props.wallet);
                    },
                    get children() {
                      return [createComponent(BodyTextStyled$1, {
                        translationKey: "walletModal.desktopConnectionModal.dontHaveExtension",
                        get translationValues() {
                          return {
                            name: props.wallet.name
                          };
                        },
                        get children() {
                          return ["Seems you don't have installed ", createMemo(function () {
                            return props.wallet.name;
                          }), " browser extension"];
                        }
                      }), createComponent(ButtonsContainerStyled$1, {
                        get children() {
                          return createComponent(Link, {
                            get href() {
                              return props.wallet.aboutUrl;
                            },
                            blank: true,
                            get children() {
                              return createComponent(Button, {
                                get rightIcon() {
                                  return createComponent(LinkIcon, {});
                                },
                                onClick: onClickExtension,
                                get children() {
                                  return createComponent(Translation, {
                                    translationKey: "walletModal.desktopConnectionModal.getWallet",
                                    get translationValues() {
                                      return {
                                        name: props.wallet.name
                                      };
                                    },
                                    get children() {
                                      return ["Get ", createMemo(function () {
                                        return props.wallet.name;
                                      })];
                                    }
                                  });
                                }
                              });
                            }
                          });
                        }
                      })];
                    }
                  })];
                }
              }), createComponent(Match, {
                get when() {
                  return mode() === "desktop";
                },
                get children() {
                  return [createComponent(LoaderIcon, {
                    size: "m"
                  }), createComponent(BodyTextStyled$1, {
                    translationKey: "walletModal.desktopConnectionModal.continueOnDesktop",
                    get translationValues() {
                      return {
                        name: props.wallet.name
                      };
                    },
                    get children() {
                      return ["Continue in ", createMemo(function () {
                        return props.wallet.name;
                      }), " on desktop\u2026"];
                    }
                  }), createComponent(ButtonsContainerStyled$1, {
                    get children() {
                      return [createComponent(Button, {
                        get leftIcon() {
                          return createComponent(RetryIcon, {});
                        },
                        onClick: onClickDesktop,
                        get children() {
                          return createComponent(Translation, {
                            translationKey: "common.retry",
                            children: "Retry"
                          });
                        }
                      }), createComponent(Link, {
                        get href() {
                          return props.wallet.aboutUrl;
                        },
                        blank: true,
                        get children() {
                          return createComponent(Button, {
                            get rightIcon() {
                              return createComponent(LinkIcon, {});
                            },
                            get children() {
                              return createComponent(Translation, {
                                translationKey: "walletModal.desktopConnectionModal.getWallet",
                                get translationValues() {
                                  return {
                                    name: props.wallet.name
                                  };
                                },
                                get children() {
                                  return ["Get ", createMemo(function () {
                                    return props.wallet.name;
                                  })];
                                }
                              });
                            }
                          });
                        }
                      })];
                    }
                  })];
                }
              })];
            }
          });
        }
      }), createComponent(Show, {
        get when() {
          return props.wallet.appName === AT_WALLET_APP_NAME;
        },
        get children() {
          return createComponent(TgButtonStyled, {
            get rightIcon() {
              return createComponent(TgImageStyled, {
                get src() {
                  return IMG.TG;
                }
              });
            },
            scale: "s",
            onClick: onClickTelegram,
            get children() {
              return createComponent(Translation, {
                translationKey: "walletModal.desktopConnectionModal.openWalletOnTelegram",
                children: "Open Wallet in Telegram on desktop"
              });
            }
          });
        }
      }), createComponent(Show, {
        get when() {
          return props.wallet.appName !== AT_WALLET_APP_NAME;
        },
        get children() {
          return createComponent(BottomButtonsContainerStyled, {
            get children() {
              return [createComponent(Show, {
                get when() {
                  return createMemo(function () {
                    return mode() !== "mobile";
                  })() && supportsMobile(props.wallet);
                },
                get children() {
                  return createComponent(FooterButton$1, {
                    appearance: "secondary",
                    get leftIcon() {
                      return createComponent(MobileIcon, {});
                    },
                    onClick: onClickMobile,
                    get children() {
                      return createComponent(Translation, {
                        translationKey: "common.mobile",
                        children: "Mobile"
                      });
                    }
                  });
                }
              }), createComponent(Show, {
                get when() {
                  return createMemo(function () {
                    return mode() !== "extension";
                  })() && supportsExtension(props.wallet);
                },
                get children() {
                  return createComponent(FooterButton$1, {
                    appearance: "secondary",
                    get leftIcon() {
                      return createComponent(BrowserIcon, {});
                    },
                    onClick: onClickExtension,
                    get children() {
                      return createComponent(Translation, {
                        translationKey: "common.browserExtension",
                        children: "Browser Extension"
                      });
                    }
                  });
                }
              }), createComponent(Show, {
                get when() {
                  return createMemo(function () {
                    return mode() !== "desktop";
                  })() && supportsDesktop(props.wallet);
                },
                get children() {
                  return createComponent(FooterButton$1, {
                    appearance: "secondary",
                    get leftIcon() {
                      return createComponent(DesktopIcon, {});
                    },
                    onClick: onClickDesktop,
                    get children() {
                      return createComponent(Translation, {
                        translationKey: "common.desktop",
                        children: "Desktop"
                      });
                    }
                  });
                }
              })];
            }
          });
        }
      })];
    }
  });
};
var InfoModalStyled = styled.div(_templateObject84 || (_templateObject84 = _taggedTemplateLiteral([""])));
var StyledIconButton$1 = styled(IconButton)(_templateObject85 || (_templateObject85 = _taggedTemplateLiteral(["\n    position: absolute;\n    top: 16px;\n    left: 16px;\n"])));
var H1Styled$5 = styled(H1)(_templateObject86 || (_templateObject86 = _taggedTemplateLiteral(["\n    margin-bottom: 18px;\n"])));
var InfoBlock = styled.div(_templateObject87 || (_templateObject87 = _taggedTemplateLiteral(["\n    padding: 16px 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n"])));
var InfoBlockIconClass = u(_templateObject88 || (_templateObject88 = _taggedTemplateLiteral(["\n    margin-bottom: 12px;\n"])));
var H3Styled = styled(H3)(_templateObject89 || (_templateObject89 = _taggedTemplateLiteral(["\n    text-align: center;\n    margin-bottom: 4px;\n"])));
var TextStyled$1 = styled(Text)(_templateObject90 || (_templateObject90 = _taggedTemplateLiteral(["\n    text-align: center;\n    max-width: 352px;\n    color: ", ";\n"])), function (props) {
  return props.theme.colors.text.secondary;
});
var ButtonsBlock = styled.div(_templateObject91 || (_templateObject91 = _taggedTemplateLiteral(["\n    padding: 16px 24px 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 8px;\n"])));
var LINKS = {
  GET_A_WALLET: "https://ton.org/wallets?filters[wallet_features][slug][$in]=dapp-auth&pagination[limit]=-1"
};
var InfoModal = function InfoModal(props) {
  return createComponent(InfoModalStyled, {
    "data-tc-wallets-modal-info": "true",
    get children() {
      return [createComponent(StyledIconButton$1, {
        icon: "arrow",
        onClick: function onClick() {
          return props.onBackClick();
        }
      }), createComponent(H1Styled$5, {
        translationKey: "walletModal.infoModal.whatIsAWallet",
        children: "What is a wallet"
      }), createComponent(ScrollContainer, {
        get children() {
          return [createComponent(InfoBlock, {
            get children() {
              return [createComponent(SecurityIcon, {
                "class": InfoBlockIconClass
              }), createComponent(H3Styled, {
                translationKey: "walletModal.infoModal.secureDigitalAssets",
                children: "Secure digital assets storage"
              }), createComponent(TextStyled$1, {
                translationKey: "walletModal.infoModal.walletProtects",
                children: "A wallet protects and manages your digital assets including TON, tokens and collectables."
              })];
            }
          }), createComponent(InfoBlock, {
            get children() {
              return [createComponent(PersonalityIcon, {
                "class": InfoBlockIconClass
              }), createComponent(H3Styled, {
                translationKey: "walletModal.infoModal.controlIdentity",
                children: "Control your Web3 identity"
              }), createComponent(TextStyled$1, {
                translationKey: "walletModal.infoModal.manageIdentity",
                children: "Manage your digital identity and access decentralized applications with ease. Maintain control over your data and engage securely in the blockchain ecosystem."
              })];
            }
          }), createComponent(InfoBlock, {
            get children() {
              return [createComponent(SwapIcon, {
                "class": InfoBlockIconClass
              }), createComponent(H3Styled, {
                translationKey: "walletModal.infoModal.effortlessCryptoTransactions",
                children: "Effortless crypto transactions"
              }), createComponent(TextStyled$1, {
                translationKey: "walletModal.infoModal.easilySend",
                children: "Easily send, receive, monitor your cryptocurrencies. Streamline your operations with decentralized applications."
              })];
            }
          }), createComponent(ButtonsBlock, {
            get children() {
              return createComponent(Link, {
                get href() {
                  return LINKS.GET_A_WALLET;
                },
                blank: true,
                get children() {
                  return createComponent(Button, {
                    get rightIcon() {
                      return createComponent(WalletIcon, {});
                    },
                    get children() {
                      return createComponent(Translation, {
                        translationKey: "walletModal.infoModal.getAWallet",
                        children: "Get a Wallet"
                      });
                    }
                  });
                }
              });
            }
          })];
        }
      })];
    }
  });
};
var MobileConnectionModalStyled = styled.div(_templateObject92 || (_templateObject92 = _taggedTemplateLiteral([""])));
var BodyStyled = styled.div(_templateObject93 || (_templateObject93 = _taggedTemplateLiteral(["\n    flex: 1;\n    margin-top: 18px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    min-height: 232px;\n"])));
var H1Styled$4 = styled(H1)(_templateObject94 || (_templateObject94 = _taggedTemplateLiteral(["\n    max-width: 262px;\n    margin: 0 auto 8px;\n"])));
var StyledIconButton = styled(IconButton)(_templateObject95 || (_templateObject95 = _taggedTemplateLiteral(["\n    position: absolute;\n    top: 16px;\n    left: 16px;\n"])));
var FooterStyled = styled.div(_templateObject96 || (_templateObject96 = _taggedTemplateLiteral(["\n    padding: 16px;\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    border-top: 0.5px solid ", ";\n"])), function (props) {
  return rgba(props.theme.colors.icon.secondary, 0.2);
});
var ImageStyled = styled(Image)(_templateObject97 || (_templateObject97 = _taggedTemplateLiteral(["\n    width: 36px;\n    height: 36px;\n    border-radius: 10px;\n"])));
var FooterButton = styled(Link)(_templateObject98 || (_templateObject98 = _taggedTemplateLiteral(["\n    margin-left: auto;\n"])));
var LoaderStyled = styled(LoaderIcon)(_templateObject99 || (_templateObject99 = _taggedTemplateLiteral(["\n    margin-bottom: 18px;\n    margin-top: 2px;\n"])));
var ErrorIconStyled = styled(ErrorIcon)(_templateObject100 || (_templateObject100 = _taggedTemplateLiteral(["\n    margin-bottom: 16px;\n"])));
var BodyTextStyled = styled(H2)(_templateObject101 || (_templateObject101 = _taggedTemplateLiteral(["\n    color: ", ";\n    text-align: center;\n    margin-bottom: 20px;\n"])), function (props) {
  return props.theme.colors.text.secondary;
});
var ButtonsContainerStyled = styled.div(_templateObject102 || (_templateObject102 = _taggedTemplateLiteral(["\n    display: flex;\n    justify-content: center;\n    gap: 8px;\n    padding-bottom: 16px;\n"])));
var H1Styled$3 = styled(H1)(_templateObject103 || (_templateObject103 = _taggedTemplateLiteral(["\n    margin-bottom: 2px;\n    padding: 0 64px;\n"])));
var H2Styled$3 = styled(H2)(_templateObject104 || (_templateObject104 = _taggedTemplateLiteral(["\n    margin-bottom: 20px;\n    padding: 0 64px;\n    min-height: 44px;\n"])));
var QrCodeWrapper$1 = styled.div(_templateObject105 || (_templateObject105 = _taggedTemplateLiteral(["\n    padding: 0 24px 24px;\n"])));
var MobileConnectionQR = function MobileConnectionQR(props) {
  return [createComponent(H1Styled$3, {
    get children() {
      return props.walletInfo.name;
    }
  }), createComponent(H2Styled$3, {
    translationKey: "walletModal.mobileConnectionModal.scanQR",
    get translationValues() {
      return {
        name: props.walletInfo.name
      };
    },
    get children() {
      return ["Scan the QR code below with your phone\u2019s or ", createMemo(function () {
        return props.walletInfo.name;
      }), "\u2019s camera"];
    }
  }), createComponent(QrCodeWrapper$1, {
    get children() {
      return createComponent(QRCode, {
        get imageUrl() {
          return props.walletInfo.imageUrl;
        },
        get sourceUrl() {
          return addReturnStrategy(props.universalLink, "none");
        },
        disableCopy: true
      });
    }
  })];
};
var MobileConnectionModal = function MobileConnectionModal(props) {
  var theme = useTheme();
  var _createSignal73 = createSignal(true),
    _createSignal74 = _slicedToArray(_createSignal73, 2),
    firstClick = _createSignal74[0],
    setFirstClick = _createSignal74[1];
  var _createSignal75 = createSignal(false),
    _createSignal76 = _slicedToArray(_createSignal75, 2),
    showQR = _createSignal76[0],
    setShowQR = _createSignal76[1];
  var _createSignal77 = createSignal(false),
    _createSignal78 = _slicedToArray(_createSignal77, 2),
    connectionErrored = _createSignal78[0],
    setConnectionErrored = _createSignal78[1];
  var connector = useContext(ConnectorContext);
  var unsubscribe = connector.onStatusChange(function () {}, function () {
    setConnectionErrored(true);
  });
  var universalLink = createMemo(function () {
    return connector.connect({
      universalLink: props.wallet.universalLink,
      bridgeUrl: props.wallet.bridgeUrl
    }, props.additionalRequest);
  });
  var onClickTelegram = function onClickTelegram() {
    var alwaysForceRedirect = true;
    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {
      openMethod: "universal-link"
    }));
    redirectToTelegram(universalLink(), {
      returnStrategy: appState.returnStrategy,
      twaReturnUrl: appState.twaReturnUrl,
      forceRedirect: alwaysForceRedirect
    });
  };
  var onRetry = function onRetry() {
    var currentUniversalLink = universalLink();
    if ((0, _sdk.isTelegramUrl)(currentUniversalLink)) {
      return onClickTelegram();
    }
    setConnectionErrored(false);
    var forceRedirect = !firstClick();
    setFirstClick(false);
    redirectToWallet(universalLink(), props.wallet.deepLink, {
      returnStrategy: appState.returnStrategy,
      forceRedirect: forceRedirect
    }, function (method) {
      setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {
        openMethod: method
      }));
    });
  };
  var onOpenQR = function onOpenQR() {
    setConnectionErrored(false);
    setShowQR(true);
    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {
      openMethod: "qrcode"
    }));
  };
  var onCloseQR = function onCloseQR() {
    setShowQR(false);
    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {
      openMethod: "universal-link"
    }));
  };
  var onBack = function onBack() {
    if (showQR()) {
      onCloseQR();
    } else {
      props.onBackClick();
    }
  };
  onCleanup(unsubscribe);
  onRetry();
  return createComponent(MobileConnectionModalStyled, {
    "data-tc-wallets-modal-connection-mobile": "true",
    get children() {
      return [createComponent(Show, {
        get when() {
          return !props.backDisabled || showQR();
        },
        get children() {
          return createComponent(StyledIconButton, {
            icon: "arrow",
            onClick: onBack
          });
        }
      }), createComponent(Show, {
        get when() {
          return showQR();
        },
        get children() {
          return createComponent(MobileConnectionQR, {
            get universalLink() {
              return universalLink();
            },
            get walletInfo() {
              return props.wallet;
            }
          });
        }
      }), createComponent(Show, {
        get when() {
          return !showQR();
        },
        get children() {
          return [createComponent(H1Styled$4, {
            get children() {
              return props.wallet.name;
            }
          }), createComponent(BodyStyled, {
            get children() {
              return [createComponent(Show, {
                get when() {
                  return connectionErrored();
                },
                get children() {
                  return [createComponent(ErrorIconStyled, {
                    size: "s"
                  }), createComponent(BodyTextStyled, {
                    translationKey: "walletModal.mobileConnectionModal.connectionDeclined",
                    children: "Connection declined"
                  }), createComponent(ButtonsContainerStyled, {
                    get children() {
                      return [createComponent(Button, {
                        get leftIcon() {
                          return createComponent(RetryIcon, {});
                        },
                        onClick: onRetry,
                        get children() {
                          return createComponent(Translation, {
                            translationKey: "common.retry",
                            children: "Retry"
                          });
                        }
                      }), createComponent(Button, {
                        get leftIcon() {
                          return createComponent(QRIcon, {
                            get fill() {
                              return theme.colors.accent;
                            }
                          });
                        },
                        onClick: onOpenQR,
                        get children() {
                          return createComponent(Translation, {
                            translationKey: "walletModal.mobileConnectionModal.showQR",
                            children: "Show QR Code"
                          });
                        }
                      })];
                    }
                  })];
                }
              }), createComponent(Show, {
                get when() {
                  return !connectionErrored();
                },
                get children() {
                  return [createComponent(LoaderStyled, {
                    size: "s"
                  }), createComponent(BodyTextStyled, {
                    translationKey: "walletModal.mobileConnectionModal.continueIn",
                    get translationValues() {
                      return {
                        name: props.wallet.name
                      };
                    },
                    get children() {
                      return ["Continue in ", createMemo(function () {
                        return props.wallet.name;
                      }), "\u2026"];
                    }
                  }), createComponent(ButtonsContainerStyled, {
                    get children() {
                      return [createComponent(Button, {
                        get leftIcon() {
                          return createComponent(RetryIcon, {});
                        },
                        onClick: onRetry,
                        get children() {
                          return createComponent(Translation, {
                            translationKey: "common.retry",
                            children: "Retry"
                          });
                        }
                      }), createComponent(Button, {
                        get leftIcon() {
                          return createComponent(QRIcon, {
                            get fill() {
                              return theme.colors.accent;
                            }
                          });
                        },
                        onClick: onOpenQR,
                        get children() {
                          return createComponent(Translation, {
                            translationKey: "walletModal.mobileConnectionModal.showQR",
                            children: "Show QR Code"
                          });
                        }
                      })];
                    }
                  })];
                }
              })];
            }
          }), createComponent(FooterStyled, {
            get children() {
              return [createComponent(ImageStyled, {
                get src() {
                  return props.wallet.imageUrl;
                }
              }), createComponent(H3, {
                get children() {
                  return props.wallet.name;
                }
              }), createComponent(FooterButton, {
                get href() {
                  return props.wallet.aboutUrl;
                },
                blank: true,
                get children() {
                  return createComponent(Button, {
                    get children() {
                      return createComponent(Translation, {
                        translationKey: "common.get",
                        children: "GET"
                      });
                    }
                  });
                }
              })];
            }
          })];
        }
      })];
    }
  });
};
var borders$1 = {
  m: "16px",
  s: "12px",
  none: "0"
};
var tgBorders = {
  m: "6px",
  s: "6px",
  none: "0"
};
var UlStyled = styled.ul(_templateObject106 || (_templateObject106 = _taggedTemplateLiteral(["\n    display: flex;\n    justify-content: space-between;\n    margin: 0 auto;\n    width: fit-content;\n    max-width: 100%;\n    min-width: 100%;\n    height: fit-content;\n    overflow-x: auto;\n    overflow-y: hidden;\n    padding: 0 13px 24px;\n\n    &&::-webkit-scrollbar {\n        display: none;\n    }\n\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n\n    > li {\n        height: fit-content;\n    }\n"])));
var OtherOptionButton = styled.li(_templateObject107 || (_templateObject107 = _taggedTemplateLiteral(["\n    width: 82px;\n    min-width: 82px;\n    height: 124px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 8px 4px;\n\n    text-align: center;\n    cursor: pointer;\n\n    transition: transform 0.1s ease-in-out;\n\n    ", " {\n        &:hover {\n            transform: scale(1.04);\n        }\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n\n    ", " {\n        &:active {\n            transform: scale(0.92);\n        }\n    }\n"])), mediaNotTouch, mediaTouch);
var Divider = styled.div(_templateObject108 || (_templateObject108 = _taggedTemplateLiteral(["\n    width: 1px;\n    margin: 0 10px;\n    height: 24px;\n    position: relative;\n    top: 26px;\n\n    background-color: ", ";\n    opacity: 0.2;\n"])), function (props) {
  return props.theme.colors.icon.secondary;
});
var IconContainer = styled.div(_templateObject109 || (_templateObject109 = _taggedTemplateLiteral(["\n    width: 60px;\n    height: 60px;\n    border-radius: ", ";\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: ", ";\n    margin-bottom: 8px;\n"])), function (props) {
  return borders$1[props.theme.borderRadius];
}, function (props) {
  return props.theme.colors.background.tint;
});
var H1Styled$2 = styled(H1)(_templateObject110 || (_templateObject110 = _taggedTemplateLiteral(["\n    margin-top: 38px;\n    margin-bottom: 4px;\n    padding: 0 24px;\n"])));
var H2Styled$2 = styled(H2)(_templateObject111 || (_templateObject111 = _taggedTemplateLiteral(["\n    margin-bottom: 24px;\n    padding: 0 24px;\n    min-height: 44px;\n    max-width: ", "px;\n    margin-left: ", ";\n    margin-right: ", ";\n"])), function (props) {
  return props.maxWidth;
}, function (props) {
  return props.maxWidth ? "auto" : "0px";
}, function (props) {
  return props.maxWidth ? "auto" : "0px";
});
styled(Button)(_templateObject112 || (_templateObject112 = _taggedTemplateLiteral(["\n    display: block;\n    margin: 0 auto;\n"])));
var TelegramButtonStyled = styled(Button)(_templateObject113 || (_templateObject113 = _taggedTemplateLiteral(["\n    margin: 0 24px 24px;\n    width: calc(100% - 48px);\n    border-radius: ", ";\n    padding: 14px 16px 14px 14px;\n    background-color: ", ";\n\n    color: ", ";\n    font-weight: 510;\n    font-size: 16px;\n    line-height: 20px;\n"])), function (props) {
  return borders$1[props.theme.borderRadius];
}, function (props) {
  return props.theme.colors.telegramButton;
}, function (props) {
  return props.theme.colors.constant.white;
});
var TGImageStyled = styled(Image)(_templateObject114 || (_templateObject114 = _taggedTemplateLiteral(["\n    background-color: transparent;\n    border-radius: ", ";\n    width: 24px;\n    height: 24px;\n"])), function (props) {
  return tgBorders[props.theme.borderRadius];
});
var StyledLeftActionButton = styled(IconButton)(_templateObject115 || (_templateObject115 = _taggedTemplateLiteral(["\n    position: absolute;\n    top: 16px;\n    left: 16px;\n"])));
var H1Styled$1 = styled(H1)(_templateObject116 || (_templateObject116 = _taggedTemplateLiteral(["\n    margin-bottom: 2px;\n    padding: 0 64px;\n"])));
var H2Styled$1 = styled(H2)(_templateObject117 || (_templateObject117 = _taggedTemplateLiteral(["\n    margin-bottom: 20px;\n    padding: 0 64px;\n"])));
var QrCodeWrapper = styled.div(_templateObject118 || (_templateObject118 = _taggedTemplateLiteral(["\n    padding: 0 24px 24px;\n"])));
var MobileUniversalQR = function MobileUniversalQR(props) {
  return [createComponent(H1Styled$1, {
    translationKey: "walletModal.mobileUniversalModal.connectYourWallet",
    children: "Connect your wallet"
  }), createComponent(H2Styled$1, {
    translationKey: "walletModal.mobileUniversalModal.scan",
    children: "Scan with your mobile wallet"
  }), createComponent(QrCodeWrapper, {
    get children() {
      return createComponent(QRCode, {
        get imageUrl() {
          return IMG.TON;
        },
        get sourceUrl() {
          return addReturnStrategy(props.universalLink, "none");
        },
        disableCopy: true
      });
    }
  })];
};
function getUniqueBridges(walletsList) {
  var uniqueBridges = new Set(walletsList.filter(_sdk.isWalletInfoRemote).map(function (item) {
    return item.bridgeUrl;
  }));
  return Array.from(uniqueBridges).map(function (bridgeUrl) {
    return {
      bridgeUrl: bridgeUrl
    };
  });
}
function bridgesIsEqual(left, right) {
  var leftSet = new Set(left == null ? void 0 : left.map(function (i2) {
    return i2.bridgeUrl;
  }));
  var rightSet = new Set(right == null ? void 0 : right.map(function (i2) {
    return i2.bridgeUrl;
  }));
  return leftSet.size === rightSet.size && _toConsumableArray(leftSet).every(function (value) {
    return rightSet.has(value);
  });
}
var _tmpl$$1 = /* @__PURE__ */template$1("<li></li>"),
  _tmpl$2 = /* @__PURE__ */template$1("<div data-tc-wallets-modal-universal-mobile=\"true\"></div>");
var MobileUniversalModal = function MobileUniversalModal(props) {
  var _createSignal79 = createSignal(false),
    _createSignal80 = _slicedToArray(_createSignal79, 2),
    showQR = _createSignal80[0],
    setShowQR = _createSignal80[1];
  var _createSignal81 = createSignal(true),
    _createSignal82 = _slicedToArray(_createSignal81, 2),
    firstClick = _createSignal82[0],
    setFirstClick = _createSignal82[1];
  var _createSignal83 = createSignal(null),
    _createSignal84 = _slicedToArray(_createSignal83, 2),
    universalLink = _createSignal84[0],
    setUniversalLink = _createSignal84[1];
  var connector = appState.connector;
  var walletsList = function walletsList() {
    return props.walletsList.filter(function (w) {
      return supportsMobile(w) && w.appName !== AT_WALLET_APP_NAME;
    });
  };
  var shouldShowMoreButton = function shouldShowMoreButton() {
    return walletsList().length > 7;
  };
  var walletsBridges = createMemo(function () {
    return getUniqueBridges(props.walletsList);
  }, null, {
    equals: bridgesIsEqual
  });
  var getUniversalLink = function getUniversalLink() {
    if (!universalLink()) {
      setUniversalLink(connector.connect(walletsBridges(), props.additionalRequest));
    }
    return universalLink();
  };
  setLastSelectedWalletInfo({
    openMethod: "universal-link"
  });
  var _createSignal85 = createSignal(void 0),
    _createSignal86 = _slicedToArray(_createSignal85, 2),
    isCopiedShown = _createSignal86[0],
    setIsCopiedShown = _createSignal86[1];
  var onCopy = function onCopy() {
    return __async(void 0, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
      var timeoutId;
      return _regeneratorRuntime().wrap(function _callee7$(_context7) {
        while (1) switch (_context7.prev = _context7.next) {
          case 0:
            if (isCopiedShown() !== void 0) {
              clearTimeout(isCopiedShown());
            }
            _context7.next = 3;
            return copyToClipboard(getUniversalLink());
          case 3:
            timeoutId = setTimeout(function () {
              return setIsCopiedShown(void 0);
            }, 1500);
            setIsCopiedShown(timeoutId);
          case 5:
          case "end":
            return _context7.stop();
        }
      }, _callee7);
    }));
  };
  var onSelectUniversal = function onSelectUniversal() {
    var forceRedirect = !firstClick();
    setFirstClick(false);
    redirectToWallet(getUniversalLink(), void 0, {
      returnStrategy: appState.returnStrategy,
      forceRedirect: forceRedirect
    }, function (method) {
      setLastSelectedWalletInfo({
        openMethod: method
      });
    });
  };
  var onSelectTelegram = function onSelectTelegram() {
    setUniversalLink(null);
    var atWallet = props.walletsList.find(function (wallet) {
      return wallet.appName === AT_WALLET_APP_NAME;
    });
    if (!atWallet || !(0, _sdk.isWalletInfoRemote)(atWallet)) {
      throw new TonConnectUIError("@wallet bot not found in the wallets list");
    }
    var walletLink = connector.connect({
      bridgeUrl: atWallet.bridgeUrl,
      universalLink: atWallet.universalLink
    }, props.additionalRequest);
    var forceRedirect = !firstClick();
    setFirstClick(false);
    redirectToTelegram(walletLink, {
      returnStrategy: appState.returnStrategy,
      twaReturnUrl: appState.twaReturnUrl,
      forceRedirect: forceRedirect
    });
  };
  var onOpenQR = function onOpenQR() {
    setShowQR(true);
    setLastSelectedWalletInfo({
      openMethod: "qrcode"
    });
  };
  var onCloseQR = function onCloseQR() {
    setShowQR(false);
    setLastSelectedWalletInfo({
      openMethod: "universal-link"
    });
  };
  return function () {
    var _el$ = _tmpl$2.cloneNode(true);
    insert(_el$, createComponent(Show, {
      get when() {
        return showQR();
      },
      get children() {
        return [createComponent(StyledLeftActionButton, {
          icon: "arrow",
          onClick: onCloseQR
        }), createComponent(MobileUniversalQR, {
          get universalLink() {
            return getUniversalLink();
          }
        })];
      }
    }), null);
    insert(_el$, createComponent(Show, {
      get when() {
        return !showQR();
      },
      get children() {
        return [createComponent(StyledLeftActionButton, {
          get icon() {
            return createComponent(QRIcon, {});
          },
          onClick: onOpenQR
        }), createComponent(H1Styled$2, {
          translationKey: "walletModal.mobileUniversalModal.connectYourWallet",
          children: "Connect your wallet"
        }), createComponent(H2Styled$2, {
          translationKey: "walletModal.mobileUniversalModal.openWalletOnTelegramOrSelect",
          maxWidth: 342,
          children: "Open Wallet in Telegram or select your wallet to connect"
        }), createComponent(TelegramButtonStyled, {
          get leftIcon() {
            return createComponent(AtWalletIcon, {});
          },
          get rightIcon() {
            return createComponent(TGImageStyled, {
              get src() {
                return IMG.TG;
              }
            });
          },
          onClick: onSelectTelegram,
          scale: "s",
          get children() {
            return createComponent(Translation, {
              translationKey: "walletModal.mobileUniversalModal.openWalletOnTelegram",
              children: "Open Wallet in Telegram"
            });
          }
        }), createComponent(UlStyled, {
          get children() {
            return [createComponent(For, {
              get each() {
                return createMemo(function () {
                  return !!shouldShowMoreButton();
                })() ? walletsList().slice(0, 4) : walletsList();
              },
              children: function children(wallet) {
                return function () {
                  var _el$3 = _tmpl$$1.cloneNode(true);
                  insert(_el$3, createComponent(WalletItem, {
                    get icon() {
                      return wallet.imageUrl;
                    },
                    get name() {
                      return wallet.name;
                    },
                    onClick: function onClick() {
                      return props.onSelect(wallet);
                    }
                  }));
                  return _el$3;
                }();
              }
            }), createComponent(Show, {
              get when() {
                return shouldShowMoreButton();
              },
              get children() {
                var _el$2 = _tmpl$$1.cloneNode(true);
                insert(_el$2, createComponent(FourWalletsItem, {
                  labelLine1: "View all",
                  labelLine2: "wallets",
                  get images() {
                    return walletsList().slice(3, 7).map(function (i2) {
                      return i2.imageUrl;
                    });
                  },
                  onClick: function onClick() {
                    return props.onSelectAllWallets();
                  }
                }));
                return _el$2;
              }
            }), createComponent(Divider, {
              children: "\xA0"
            }), createComponent(OtherOptionButton, {
              onClick: onSelectUniversal,
              get children() {
                return [createComponent(IconContainer, {
                  get children() {
                    return createComponent(LongArrowIcon, {});
                  }
                }), createComponent(Text, {
                  fontWeight: 590,
                  translationKey: "walletModal.mobileUniversalModal.openLink",
                  children: "Open Link"
                })];
              }
            }), createComponent(OtherOptionButton, {
              onClick: onCopy,
              get children() {
                return [createComponent(IconContainer, {
                  get children() {
                    return createMemo(function () {
                      return isCopiedShown() !== void 0;
                    })() ? createComponent(DoneIcon, {}) : createComponent(CopyLightIcon, {});
                  }
                }), createComponent(Text, {
                  fontWeight: 590,
                  get translationKey() {
                    return isCopiedShown() !== void 0 ? "common.copied" : "common.copyLink";
                  },
                  get children() {
                    return isCopiedShown() !== void 0 ? "Copied" : "Copy Link";
                  }
                })];
              }
            })];
          }
        })];
      }
    }), null);
    return _el$;
  }();
};
var borders = {
  m: "16px",
  s: "8px",
  none: "0"
};
var hoverBorders = {
  m: "8px",
  s: "4px",
  none: "0"
};
var DesktopUniversalModalStyled = styled.div(_templateObject119 || (_templateObject119 = _taggedTemplateLiteral(["\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-bottom: 16px;\n"])));
var H2Styled = styled(H2)(_templateObject120 || (_templateObject120 = _taggedTemplateLiteral(["\n    max-width: 320px;\n    margin-top: 2px;\n    margin-bottom: 20px;\n"])));
var H2AvailableWalletsStyled = styled(H2)(_templateObject121 || (_templateObject121 = _taggedTemplateLiteral(["\n    margin-bottom: 16px;\n"])));
var QRCodeStyled = styled(QRCode)(_templateObject122 || (_templateObject122 = _taggedTemplateLiteral(["\n    margin-bottom: 24px;\n"])));
var WalletsContainerStyled = styled.ul(_templateObject123 || (_templateObject123 = _taggedTemplateLiteral(["\n    display: flex;\n"])));
styled.div(_templateObject124 || (_templateObject124 = _taggedTemplateLiteral(["\n    display: flex;\n    gap: 16px;\n    width: 100%;\n"])));
styled(Button)(_templateObject125 || (_templateObject125 = _taggedTemplateLiteral(["\n    position: relative;\n    font-size: 16px;\n    line-height: 20px;\n    width: 100%;\n    padding: 0 16px;\n    height: 56px;\n    border-radius: ", ";\n\n    &:hover {\n        ", "\n    }\n\n    &:active {\n        ", "\n    }\n"])), function (props) {
  return borders[props.theme.borderRadius];
}, function (props) {
  return props.disableEventsAnimation ? "transform: unset;" : "";
}, function (props) {
  return props.disableEventsAnimation ? "transform: unset;" : "";
});
styled.ul(_templateObject126 || (_templateObject126 = _taggedTemplateLiteral(["\n    position: absolute;\n    bottom: 100%;\n    left: 0;\n    margin: 0;\n    padding: 8px;\n    width: 188px;\n    transform: translateY(-16px);\n\n    background-color: ", ";\n    border-radius: ", ";\n    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.16);\n"])), function (props) {
  return props.theme.colors.background.primary;
}, function (props) {
  return borders[props.theme.borderRadius];
});
styled.li(_templateObject127 || (_templateObject127 = _taggedTemplateLiteral(["\n    padding: 8px;\n\n    display: flex;\n    align-items: center;\n    gap: 8px;\n\n    cursor: pointer;\n    border-radius: ", ";\n\n    transition: background-color, transform 0.1s ease-in-out;\n\n    &:hover {\n        background-color: ", ";\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n"])), function (props) {
  return hoverBorders[props.theme.borderRadius];
}, function (props) {
  return props.theme.colors.background.secondary;
});
styled(Image)(_templateObject128 || (_templateObject128 = _taggedTemplateLiteral(["\n    width: 24px;\n    height: 24px;\n\n    border-radius: 6px;\n"])));
styled.div(_templateObject129 || (_templateObject129 = _taggedTemplateLiteral(["\n    margin-top: 23px;\n    margin-bottom: 1px;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n"])));
styled(Text)(_templateObject130 || (_templateObject130 = _taggedTemplateLiteral(["\n    color: ", ";\n    font-size: 16px;\n"])), function (props) {
  return props.theme.colors.text.secondary;
});
var _tmpl$ = /* @__PURE__ */template$1("<li></li>");
var DesktopUniversalModal = function DesktopUniversalModal(props) {
  var _createSignal87 = createSignal(false),
    _createSignal88 = _slicedToArray(_createSignal87, 2),
    popupOpened = _createSignal88[0],
    setPopupOpened = _createSignal88[1];
  var connector = appState.connector;
  var walletsBridges = createMemo(function () {
    return getUniqueBridges(props.walletsList);
  }, null, {
    equals: bridgesIsEqual
  });
  setLastSelectedWalletInfo({
    openMethod: "qrcode"
  });
  var request = createMemo(function () {
    return connector.connect(walletsBridges(), props.additionalRequest);
  });
  return createComponent(DesktopUniversalModalStyled, {
    onClick: function onClick() {
      return setPopupOpened(false);
    },
    "data-tc-wallets-modal-universal-desktop": "true",
    get children() {
      return [createComponent(H1, {
        translationKey: "walletModal.desktopUniversalModal.connectYourWallet",
        children: "Connect your wallet"
      }), createComponent(H2Styled, {
        translationKey: "walletModal.desktopUniversalModal.scan",
        children: "Scan with your mobile wallet"
      }), createComponent(QRCodeStyled, {
        get sourceUrl() {
          return addReturnStrategy(request(), "none");
        },
        get disableCopy() {
          return popupOpened();
        },
        get imageUrl() {
          return IMG.TON;
        }
      }), createComponent(H2AvailableWalletsStyled, {
        translationKey: "walletModal.desktopUniversalModal.availableWallets",
        children: "Available wallets"
      }), createComponent(WalletsContainerStyled, {
        get children() {
          return [createComponent(For, {
            get each() {
              return props.walletsList.slice(0, 3);
            },
            children: function children(wallet) {
              return function () {
                var _el$ = _tmpl$.cloneNode(true);
                insert(_el$, createComponent(WalletLabeledItem, {
                  wallet: wallet,
                  onClick: function onClick() {
                    return props.onSelect(wallet);
                  }
                }));
                return _el$;
              }();
            }
          }), createComponent(FourWalletsItem, {
            labelLine1: "View all",
            labelLine2: "wallets",
            get images() {
              return props.walletsList.slice(3, 7).map(function (i2) {
                return i2.imageUrl;
              });
            },
            onClick: function onClick() {
              return props.onSelectAllWallets();
            }
          })];
        }
      })];
    }
  });
};
var WalletsModal = function WalletsModal() {
  var locale = useI18n()[1].locale;
  createEffect(function () {
    return locale(appState.language);
  });
  createEffect(function () {
    if (getWalletsModalIsOpened()) {
      updateIsMobile();
    } else {
      setSelectedWalletInfo(null);
      setSelectedTab("universal");
      setInfoTab(false);
    }
  });
  var connector = useContext(ConnectorContext);
  var tonConnectUI = useContext(TonConnectUiContext);
  var _createResource = createResource(function () {
      return tonConnectUI.getWallets();
    }),
    _createResource2 = _slicedToArray(_createResource, 1),
    fetchedWalletsList = _createResource2[0];
  var _createSignal89 = createSignal(null),
    _createSignal90 = _slicedToArray(_createSignal89, 2),
    selectedWalletInfo = _createSignal90[0],
    setSelectedWalletInfo = _createSignal90[1];
  var _createSignal91 = createSignal("universal"),
    _createSignal92 = _slicedToArray(_createSignal91, 2),
    selectedTab = _createSignal92[0],
    setSelectedTab = _createSignal92[1];
  var _createSignal93 = createSignal(false),
    _createSignal94 = _slicedToArray(_createSignal93, 2),
    infoTab = _createSignal94[0],
    setInfoTab = _createSignal94[1];
  var walletsList = createMemo(function () {
    if (fetchedWalletsList.state !== "ready") {
      return null;
    }
    var walletsList2 = applyWalletsListConfiguration(fetchedWalletsList(), appState.walletsListConfiguration);
    var injectedWallets = walletsList2.filter(_sdk.isWalletInfoCurrentlyInjected);
    var notInjectedWallets = walletsList2.filter(function (w) {
      return !(0, _sdk.isWalletInfoCurrentlyInjected)(w);
    });
    walletsList2 = (injectedWallets || []).concat(notInjectedWallets);
    var preferredWalletAppName = appState.preferredWalletAppName;
    var preferredWallet = walletsList2.find(function (item) {
      return eqWalletName(item, preferredWalletAppName);
    });
    var someWalletsWithSameName = walletsList2.filter(function (item) {
      return eqWalletName(item, preferredWalletAppName);
    }).length >= 2;
    if (preferredWalletAppName && preferredWallet && !someWalletsWithSameName) {
      walletsList2 = [__spreadProps(__spreadValues({}, preferredWallet), {
        isPreferred: true
      })].concat(walletsList2.filter(function (item) {
        return !eqWalletName(item, preferredWalletAppName);
      }));
    }
    var atWallet = walletsList2.find(function (item) {
      return eqWalletName(item, AT_WALLET_APP_NAME);
    });
    if (atWallet) {
      walletsList2 = [atWallet].concat(walletsList2.filter(function (item) {
        return !eqWalletName(item, AT_WALLET_APP_NAME);
      }));
    }
    return walletsList2;
  });
  var additionalRequestLoading = function additionalRequestLoading() {
    var _a2;
    return ((_a2 = appState.connectRequestParameters) == null ? void 0 : _a2.state) === "loading";
  };
  var additionalRequest = createMemo(function () {
    var _a2;
    if (additionalRequestLoading()) {
      return void 0;
    }
    return (_a2 = appState.connectRequestParameters) == null ? void 0 : _a2.value;
  });
  var _onClose = function onClose(closeReason) {
    tonConnectUI.closeModal(closeReason);
  };
  var unsubscribe = connector.onStatusChange(function (wallet) {
    if (wallet) {
      _onClose("wallet-selected");
    }
  });
  var onSelectAllWallets = function onSelectAllWallets() {
    setSelectedTab("all-wallets");
  };
  var onSelectUniversal = function onSelectUniversal() {
    setSelectedTab("universal");
  };
  var clearSelectedWalletInfo = function clearSelectedWalletInfo() {
    setSelectedWalletInfo(null);
  };
  onCleanup(function () {
    setSelectedWalletInfo(null);
    setInfoTab(false);
  });
  onCleanup(unsubscribe);
  return createComponent(StyledModal, {
    get opened() {
      return getWalletsModalIsOpened();
    },
    get enableAndroidBackHandler() {
      return appState.enableAndroidBackHandler;
    },
    onClose: function onClose() {
      return _onClose("action-cancelled");
    },
    onClickQuestion: function onClickQuestion() {
      return setInfoTab(function (v) {
        return !v;
      });
    },
    "data-tc-wallets-modal-container": "true",
    get children() {
      return [createComponent(Show, {
        get when() {
          return infoTab();
        },
        get children() {
          return createComponent(InfoModal, {
            onBackClick: function onBackClick() {
              return setInfoTab(false);
            }
          });
        }
      }), createComponent(Show, {
        get when() {
          return !infoTab();
        },
        get children() {
          return [createComponent(Show, {
            get when() {
              return additionalRequestLoading() || !walletsList();
            },
            get children() {
              return [createComponent(H1Styled$8, {
                translationKey: "walletModal.loading",
                children: "Wallets list is loading"
              }), createComponent(LoaderContainerStyled, {
                get children() {
                  return createComponent(LoaderIcon, {
                    size: "m"
                  });
                }
              })];
            }
          }), createComponent(Show, {
            get when() {
              return createMemo(function () {
                return !!!additionalRequestLoading();
              })() && walletsList();
            },
            get children() {
              return createComponent(Switch, {
                get children() {
                  return [createComponent(Match, {
                    get when() {
                      return selectedWalletInfo();
                    },
                    get children() {
                      return createComponent(Dynamic, {
                        get component() {
                          return isMobile() ? MobileConnectionModal : DesktopConnectionModal;
                        },
                        get wallet() {
                          return selectedWalletInfo();
                        },
                        get additionalRequest() {
                          return additionalRequest();
                        },
                        onBackClick: clearSelectedWalletInfo
                      });
                    }
                  }), createComponent(Match, {
                    get when() {
                      return selectedTab() === "universal";
                    },
                    get children() {
                      return createComponent(Dynamic, {
                        get component() {
                          return isMobile() ? MobileUniversalModal : DesktopUniversalModal;
                        },
                        onSelect: setSelectedWalletInfo,
                        get walletsList() {
                          return walletsList();
                        },
                        get additionalRequest() {
                          return additionalRequest();
                        },
                        onSelectAllWallets: onSelectAllWallets
                      });
                    }
                  }), createComponent(Match, {
                    get when() {
                      return selectedTab() === "all-wallets";
                    },
                    get children() {
                      return createComponent(AllWalletsListModal, {
                        get walletsList() {
                          return walletsList();
                        },
                        onBack: onSelectUniversal,
                        onSelect: setSelectedWalletInfo
                      });
                    }
                  })];
                }
              });
            }
          })];
        }
      })];
    }
  });
};
var ActionModalStyled = styled.div(_templateObject131 || (_templateObject131 = _taggedTemplateLiteral(["\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-bottom: 8px;\n"])));
var H1Styled = styled(H1)(_templateObject132 || (_templateObject132 = _taggedTemplateLiteral(["\n    margin-top: 16px;\n"])));
var TextStyled = styled(Text)(_templateObject133 || (_templateObject133 = _taggedTemplateLiteral(["\n    font-weight: 510;\n    font-size: 16px;\n    line-height: 20px;\n    text-align: center;\n    max-width: 250px;\n\n    color: ", ";\n"])), function (props) {
  return props.theme.colors.text.secondary;
});
var LoaderButtonStyled = styled(Button)(_templateObject134 || (_templateObject134 = _taggedTemplateLiteral(["\n    min-width: 112px;\n    margin-top: 32px;\n"])));
var LoaderIconStyled = styled(LoaderIcon)(_templateObject135 || (_templateObject135 = _taggedTemplateLiteral(["\n    height: 16px;\n    width: 16px;\n"])));
var ButtonStyled = styled(Button)(_templateObject136 || (_templateObject136 = _taggedTemplateLiteral(["\n    margin-top: 32px;\n"])));
var ActionModal = function ActionModal(props) {
  var dataAttrs = useDataAttributes(props);
  var tonConnectUI = useContext(TonConnectUiContext);
  var _createSignal95 = createSignal(true),
    _createSignal96 = _slicedToArray(_createSignal95, 2),
    firstClick = _createSignal96[0],
    setFirstClick = _createSignal96[1];
  var _createSignal97 = createSignal(false),
    _createSignal98 = _slicedToArray(_createSignal97, 2),
    sent = _createSignal98[0],
    setSent = _createSignal98[1];
  createEffect(function () {
    var currentAction = action();
    setSent(!!currentAction && "sent" in currentAction && currentAction.sent);
  });
  var universalLink;
  if ((tonConnectUI == null ? void 0 : tonConnectUI.wallet) && "universalLink" in tonConnectUI.wallet && (tonConnectUI.wallet.openMethod === "universal-link" || (0, _sdk.isTelegramUrl)(tonConnectUI.wallet.universalLink) && isInTMA())) {
    universalLink = tonConnectUI.wallet.universalLink;
  }
  var deepLink;
  if ((tonConnectUI == null ? void 0 : tonConnectUI.wallet) && "deepLink" in tonConnectUI.wallet && (tonConnectUI.wallet.openMethod === "custom-deeplink" || (0, _sdk.isTelegramUrl)(tonConnectUI.wallet.deepLink) && isInTMA())) {
    deepLink = tonConnectUI.wallet.deepLink;
  }
  var onOpenWallet = function onOpenWallet() {
    var currentAction = action();
    var returnStrategy = "returnStrategy" in currentAction ? currentAction.returnStrategy : appState.returnStrategy;
    var forceRedirect = !firstClick();
    setFirstClick(false);
    if ((0, _sdk.isTelegramUrl)(universalLink)) {
      redirectToTelegram(universalLink, {
        returnStrategy: returnStrategy,
        twaReturnUrl: "twaReturnUrl" in currentAction ? currentAction.twaReturnUrl : appState.twaReturnUrl,
        forceRedirect: forceRedirect
      });
    } else {
      redirectToWallet(universalLink, deepLink, {
        returnStrategy: returnStrategy,
        forceRedirect: forceRedirect
      }, function () {});
    }
  };
  return createComponent(ActionModalStyled, mergeProps(dataAttrs, {
    get children() {
      return [createMemo(function () {
        return props.icon;
      }), createComponent(H1Styled, {
        get translationKey() {
          return props.headerTranslationKey;
        },
        get translationValues() {
          return props.headerTranslationValues;
        }
      }), createComponent(TextStyled, {
        get translationKey() {
          return props.textTranslationKey;
        },
        get translationValues() {
          return props.textTranslationValues;
        }
      }), createComponent(Show, {
        get when() {
          return !sent() && (props.showButton === "open-wallet" && universalLink || props.showButton !== "open-wallet");
        },
        get children() {
          return createComponent(LoaderButtonStyled, {
            disabled: true,
            "data-tc-connect-button-loading": "true",
            get children() {
              return createComponent(LoaderIconStyled, {});
            }
          });
        }
      }), createComponent(Show, {
        get when() {
          return sent();
        },
        get children() {
          return [createComponent(Show, {
            get when() {
              return props.showButton !== "open-wallet";
            },
            get children() {
              return createComponent(ButtonStyled, {
                onClick: function onClick() {
                  return props.onClose();
                },
                get children() {
                  return createComponent(Translation, {
                    translationKey: "common.close",
                    children: "Close"
                  });
                }
              });
            }
          }), createComponent(Show, {
            get when() {
              return props.showButton === "open-wallet" && universalLink;
            },
            get children() {
              return createComponent(ButtonStyled, {
                onClick: onOpenWallet,
                get children() {
                  return createComponent(Translation, {
                    translationKey: "common.openWallet",
                    children: "Open wallet"
                  });
                }
              });
            }
          })];
        }
      })];
    }
  }));
};
var ConfirmTransactionModal = function ConfirmTransactionModal(props) {
  var tonConnectUI = useContext(TonConnectUiContext);
  var _useI18n15 = useI18n(),
    _useI18n16 = _slicedToArray(_useI18n15, 1),
    t2 = _useI18n16[0];
  var name = function name() {
    return tonConnectUI.wallet && "name" in tonConnectUI.wallet ? tonConnectUI.wallet.name : t2("common.yourWallet", {}, "Your wallet");
  };
  return createComponent(ActionModal, {
    headerTranslationKey: "actionModal.confirmTransaction.header",
    get headerTranslationValues() {
      return {
        name: name()
      };
    },
    textTranslationKey: "actionModal.confirmTransaction.text",
    get icon() {
      return createComponent(LoaderIcon, {
        size: "m"
      });
    },
    onClose: function onClose() {
      return props.onClose();
    },
    showButton: "open-wallet",
    "data-tc-confirm-modal": "true"
  });
};
var TransactionCanceledModal = function TransactionCanceledModal(props) {
  return createComponent(ActionModal, {
    headerTranslationKey: "actionModal.transactionCanceled.header",
    textTranslationKey: "actionModal.transactionCanceled.text",
    get icon() {
      return createComponent(ErrorIcon, {
        size: "m"
      });
    },
    onClose: function onClose() {
      return props.onClose();
    },
    "data-tc-transaction-canceled-modal": "true"
  });
};
var TransactionSentModal = function TransactionSentModal(props) {
  return createComponent(ActionModal, {
    headerTranslationKey: "actionModal.transactionSent.header",
    textTranslationKey: "actionModal.transactionSent.text",
    get icon() {
      return createComponent(SuccessIcon, {
        size: "m"
      });
    },
    onClose: function onClose() {
      return props.onClose();
    },
    "data-tc-transaction-sent-modal": "true"
  });
};
var ActionsModal = function ActionsModal() {
  return createComponent(Modal, {
    get opened() {
      var _a2;
      return createMemo(function () {
        return action() !== null;
      })() && ((_a2 = action()) == null ? void 0 : _a2.openModal) === true;
    },
    get enableAndroidBackHandler() {
      return appState.enableAndroidBackHandler;
    },
    onClose: function onClose() {
      return _setAction(null);
    },
    "data-tc-actions-modal-container": "true",
    get children() {
      return createComponent(Switch, {
        get children() {
          return [createComponent(Match, {
            get when() {
              return action().name === "transaction-sent";
            },
            get children() {
              return createComponent(TransactionSentModal, {
                onClose: function onClose() {
                  return _setAction(null);
                }
              });
            }
          }), createComponent(Match, {
            get when() {
              return action().name === "transaction-canceled";
            },
            get children() {
              return createComponent(TransactionCanceledModal, {
                onClose: function onClose() {
                  return _setAction(null);
                }
              });
            }
          }), createComponent(Match, {
            get when() {
              return action().name === "confirm-transaction";
            },
            get children() {
              return createComponent(ConfirmTransactionModal, {
                onClose: function onClose() {
                  return _setAction(null);
                }
              });
            }
          })];
        }
      });
    }
  });
};
var SingleWalletModal = function SingleWalletModal() {
  var locale = useI18n()[1].locale;
  createEffect(function () {
    return locale(appState.language);
  });
  createEffect(function () {
    if (getSingleWalletModalIsOpened()) {
      updateIsMobile();
    }
  });
  var connector = useContext(ConnectorContext);
  var tonConnectUI = useContext(TonConnectUiContext);
  var _createSignal99 = createSignal(false),
    _createSignal100 = _slicedToArray(_createSignal99, 2),
    infoTab = _createSignal100[0],
    setInfoTab = _createSignal100[1];
  var additionalRequestLoading = function additionalRequestLoading() {
    var _a2;
    return ((_a2 = appState.connectRequestParameters) == null ? void 0 : _a2.state) === "loading";
  };
  var additionalRequest = createMemo(function () {
    var _a2;
    if (additionalRequestLoading()) {
      return void 0;
    }
    return (_a2 = appState.connectRequestParameters) == null ? void 0 : _a2.value;
  });
  var _onClose2 = function onClose(closeReason) {
    tonConnectUI.closeSingleWalletModal(closeReason);
  };
  var unsubscribe = connector.onStatusChange(function (wallet) {
    if (wallet) {
      _onClose2("wallet-selected");
    }
  });
  onCleanup(unsubscribe);
  onCleanup(function () {
    setInfoTab(false);
  });
  return createComponent(StyledModal, {
    get opened() {
      return getSingleWalletModalIsOpened();
    },
    get enableAndroidBackHandler() {
      return appState.enableAndroidBackHandler;
    },
    onClose: function onClose() {
      return _onClose2("action-cancelled");
    },
    onClickQuestion: function onClickQuestion() {
      return setInfoTab(function (v) {
        return !v;
      });
    },
    "data-tc-wallets-modal-container": "true",
    get children() {
      return [createComponent(Show, {
        get when() {
          return infoTab();
        },
        get children() {
          return createComponent(InfoModal, {
            onBackClick: function onBackClick() {
              return setInfoTab(false);
            }
          });
        }
      }), createComponent(Show, {
        get when() {
          return !infoTab();
        },
        get children() {
          return [createComponent(Show, {
            get when() {
              return additionalRequestLoading();
            },
            get children() {
              return [createComponent(H1Styled$8, {
                translationKey: "walletModal.loading",
                children: "Wallets list is loading"
              }), createComponent(LoaderContainerStyled, {
                get children() {
                  return createComponent(LoaderIcon, {
                    size: "m"
                  });
                }
              })];
            }
          }), createComponent(Show, {
            get when() {
              return !additionalRequestLoading();
            },
            get children() {
              return createComponent(Dynamic, {
                get component() {
                  return isMobile() ? MobileConnectionModal : DesktopConnectionModal;
                },
                get wallet() {
                  return getSingleWalletModalWalletInfo();
                },
                get additionalRequest() {
                  return additionalRequest();
                },
                onBackClick: function onBackClick() {},
                backDisabled: true
              });
            }
          })];
        }
      })];
    }
  });
};
var App = function App(props) {
  var translations = createI18nContext(i18nDictionary, appState.language);
  defineStylesRoot();
  fixMobileSafariActiveTransition();
  return createComponent(I18nContext.Provider, {
    value: translations,
    get children() {
      return createComponent(TonConnectUiContext.Provider, {
        get value() {
          return props.tonConnectUI;
        },
        get children() {
          return createComponent(ConnectorContext.Provider, {
            get value() {
              return appState.connector;
            },
            get children() {
              return [createComponent(GlobalStyles, {}), createComponent(ThemeProvider, {
                theme: themeState,
                get children() {
                  return [createComponent(Show, {
                    get when() {
                      return appState.buttonRootId;
                    },
                    get children() {
                      return createComponent(Portal, {
                        get mount() {
                          return document.getElementById(appState.buttonRootId);
                        },
                        get children() {
                          return createComponent(AccountButton, {});
                        }
                      });
                    }
                  }), createComponent(Dynamic, {
                    component: globalStylesTag,
                    get children() {
                      return [createComponent(WalletsModal, {}), createComponent(SingleWalletModal, {}), createComponent(ActionsModal, {})];
                    }
                  })];
                }
              })];
            }
          });
        }
      });
    }
  });
};
var widgetController = {
  openWalletsModal: function openWalletsModal() {
    return void setTimeout(function () {
      return setWalletsModalState({
        status: "opened",
        closeReason: null
      });
    });
  },
  closeWalletsModal: function closeWalletsModal(reason) {
    return void setTimeout(function () {
      return setWalletsModalState({
        status: "closed",
        closeReason: reason
      });
    });
  },
  openSingleWalletModal: function openSingleWalletModal(walletInfo) {
    void setTimeout(function () {
      return setSingleWalletModalState({
        status: "opened",
        closeReason: null,
        walletInfo: walletInfo
      });
    });
  },
  closeSingleWalletModal: function closeSingleWalletModal(reason) {
    return void setTimeout(function () {
      return setSingleWalletModalState({
        status: "closed",
        closeReason: reason
      });
    });
  },
  setAction: function setAction(action2) {
    return void setTimeout(function () {
      return _setAction(action2);
    });
  },
  clearAction: function clearAction() {
    return void setTimeout(function () {
      return _setAction(null);
    });
  },
  getSelectedWalletInfo: function getSelectedWalletInfo() {
    return lastSelectedWalletInfo();
  },
  removeSelectedWalletInfo: function removeSelectedWalletInfo() {
    return setLastSelectedWalletInfo(null);
  },
  renderApp: function renderApp(root, tonConnectUI) {
    return render(function () {
      return createComponent(App, {
        tonConnectUI: tonConnectUI
      });
    }, document.getElementById(root));
  }
};
var WalletsModalManager = /*#__PURE__*/function () {
  function WalletsModalManager(options) {
    var _this5 = this;
    _classCallCheck(this, WalletsModalManager);
    __publicField(this, "connector");
    __publicField(this, "setConnectRequestParametersCallback");
    __publicField(this, "consumers", []);
    __publicField(this, "tracker");
    __publicField(this, "state", walletsModalState());
    this.connector = options.connector;
    this.tracker = options.tracker;
    this.setConnectRequestParametersCallback = options.setConnectRequestParametersCallback;
    createEffect(function () {
      var state = walletsModalState();
      _this5.state = state;
      _this5.consumers.forEach(function (consumer) {
        return consumer(state);
      });
    });
  }
  return _createClass(WalletsModalManager, [{
    key: "open",
    value: function open() {
      return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {
        var walletsList, embeddedWallet;
        return _regeneratorRuntime().wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              this.tracker.trackConnectionStarted();
              _context8.next = 3;
              return this.connector.getWallets();
            case 3:
              walletsList = _context8.sent;
              embeddedWallet = walletsList.find(_sdk.isWalletInfoCurrentlyEmbedded);
              if (!embeddedWallet) {
                _context8.next = 9;
                break;
              }
              return _context8.abrupt("return", this.connectEmbeddedWallet(embeddedWallet));
            case 9:
              return _context8.abrupt("return", this.openWalletsModal());
            case 10:
            case "end":
              return _context8.stop();
          }
        }, _callee8, this);
      }));
    }
  }, {
    key: "close",
    value: function close() {
      var reason = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "action-cancelled";
      if (reason === "action-cancelled") {
        this.tracker.trackConnectionError("Connection was cancelled");
      }
      widgetController.closeWalletsModal(reason);
    }
  }, {
    key: "onStateChange",
    value: function onStateChange(onChange) {
      var _this6 = this;
      this.consumers.push(onChange);
      return function () {
        _this6.consumers = _this6.consumers.filter(function (consumer) {
          return consumer !== onChange;
        });
      };
    }
  }, {
    key: "connectEmbeddedWallet",
    value: function connectEmbeddedWallet(embeddedWallet) {
      var _this7 = this;
      var connect = function connect(parameters) {
        setLastSelectedWalletInfo(embeddedWallet);
        _this7.connector.connect({
          jsBridgeKey: embeddedWallet.jsBridgeKey
        }, parameters);
      };
      var additionalRequest = appState.connectRequestParameters;
      if ((additionalRequest == null ? void 0 : additionalRequest.state) === "loading") {
        this.setConnectRequestParametersCallback(connect);
      } else {
        connect(additionalRequest == null ? void 0 : additionalRequest.value);
      }
    }
  }, {
    key: "openWalletsModal",
    value: function openWalletsModal() {
      return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {
        var _this8 = this;
        return _regeneratorRuntime().wrap(function _callee9$(_context9) {
          while (1) switch (_context9.prev = _context9.next) {
            case 0:
              if (isInTMA()) {
                sendExpand();
              }
              widgetController.openWalletsModal();
              return _context9.abrupt("return", new Promise(function (resolve) {
                var unsubscribe = _this8.onStateChange(function (state) {
                  var status = state.status;
                  if (status === "opened") {
                    unsubscribe();
                    resolve();
                  }
                });
              }));
            case 3:
            case "end":
              return _context9.stop();
          }
        }, _callee9);
      }));
    }
  }]);
}();
var TransactionModalManager = /*#__PURE__*/function () {
  function TransactionModalManager(options) {
    var _this9 = this;
    _classCallCheck(this, TransactionModalManager);
    __publicField(this, "connector");
    __publicField(this, "consumers", []);
    this.connector = options.connector;
    createEffect(function () {
      var currentAction = action();
      _this9.consumers.forEach(function (consumer) {
        return consumer(currentAction);
      });
    });
  }
  return _createClass(TransactionModalManager, [{
    key: "onStateChange",
    value: function onStateChange(consumer) {
      var _this10 = this;
      this.consumers.push(consumer);
      return function () {
        _this10.consumers = _this10.consumers.filter(function (c2) {
          return c2 !== consumer;
        });
      };
    }
  }]);
}();
var SingleWalletModalManager = /*#__PURE__*/function () {
  function SingleWalletModalManager(options) {
    var _this11 = this;
    _classCallCheck(this, SingleWalletModalManager);
    __publicField(this, "connector");
    __publicField(this, "setConnectRequestParametersCallback");
    __publicField(this, "consumers", []);
    __publicField(this, "tracker");
    __publicField(this, "state", singleWalletModalState());
    this.connector = options.connector;
    this.tracker = options.tracker;
    this.setConnectRequestParametersCallback = options.setConnectRequestParametersCallback;
    createEffect(function () {
      var state = singleWalletModalState();
      _this11.state = state;
      _this11.consumers.forEach(function (consumer) {
        return consumer(state);
      });
    });
  }
  return _createClass(SingleWalletModalManager, [{
    key: "open",
    value: function open(wallet) {
      return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {
        var fetchedWalletsList, walletsList, embeddedWallet, isEmbeddedWalletExist, externalWallets, externalWallet, isExternalWalletExist, error;
        return _regeneratorRuntime().wrap(function _callee10$(_context10) {
          while (1) switch (_context10.prev = _context10.next) {
            case 0:
              this.tracker.trackConnectionStarted();
              _context10.next = 3;
              return this.connector.getWallets();
            case 3:
              fetchedWalletsList = _context10.sent;
              walletsList = applyWalletsListConfiguration(fetchedWalletsList, appState.walletsListConfiguration);
              embeddedWallet = walletsList.find(_sdk.isWalletInfoCurrentlyEmbedded);
              isEmbeddedWalletExist = !!embeddedWallet;
              if (!isEmbeddedWalletExist) {
                _context10.next = 9;
                break;
              }
              return _context10.abrupt("return", this.connectEmbeddedWallet(embeddedWallet));
            case 9:
              externalWallets = walletsList.filter(_sdk.isWalletInfoRemote);
              externalWallet = externalWallets.find(function (walletInfo) {
                return eqWalletName(walletInfo, wallet);
              });
              isExternalWalletExist = !!externalWallet;
              if (!isExternalWalletExist) {
                _context10.next = 14;
                break;
              }
              return _context10.abrupt("return", this.openSingleWalletModal(externalWallet));
            case 14:
              error = "Trying to open modal window with unknown wallet \"".concat(wallet, "\".");
              this.tracker.trackConnectionError(error);
              throw new TonConnectUIError(error);
            case 17:
            case "end":
              return _context10.stop();
          }
        }, _callee10, this);
      }));
    }
  }, {
    key: "close",
    value: function close() {
      var reason = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "action-cancelled";
      if (reason === "action-cancelled") {
        this.tracker.trackConnectionError("Connection was cancelled");
      }
      widgetController.closeSingleWalletModal("action-cancelled");
    }
  }, {
    key: "onStateChange",
    value: function onStateChange(onChange) {
      var _this12 = this;
      this.consumers.push(onChange);
      return function () {
        _this12.consumers = _this12.consumers.filter(function (consumer) {
          return consumer !== onChange;
        });
      };
    }
  }, {
    key: "connectEmbeddedWallet",
    value: function connectEmbeddedWallet(embeddedWallet) {
      var _this13 = this;
      var connect = function connect(parameters) {
        setLastSelectedWalletInfo(embeddedWallet);
        _this13.connector.connect({
          jsBridgeKey: embeddedWallet.jsBridgeKey
        }, parameters);
      };
      var additionalRequest = appState.connectRequestParameters;
      if ((additionalRequest == null ? void 0 : additionalRequest.state) === "loading") {
        this.setConnectRequestParametersCallback(connect);
      } else {
        connect(additionalRequest == null ? void 0 : additionalRequest.value);
      }
    }
  }, {
    key: "openSingleWalletModal",
    value: function openSingleWalletModal(wallet) {
      return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {
        var _this14 = this;
        return _regeneratorRuntime().wrap(function _callee11$(_context11) {
          while (1) switch (_context11.prev = _context11.next) {
            case 0:
              if (isInTMA()) {
                sendExpand();
              }
              widgetController.openSingleWalletModal(wallet);
              return _context11.abrupt("return", new Promise(function (resolve) {
                var unsubscribe = _this14.onStateChange(function (state) {
                  var status = state.status;
                  if (status === "opened") {
                    unsubscribe();
                    resolve();
                  }
                });
              }));
            case 3:
            case "end":
              return _context11.stop();
          }
        }, _callee11);
      }));
    }
  }]);
}();
var TonConnectUITracker = /*#__PURE__*/function () {
  function TonConnectUITracker(options) {
    _classCallCheck(this, TonConnectUITracker);
    __publicField(this, "eventPrefix", "ton-connect-ui-");
    __publicField(this, "tonConnectUiVersion");
    __publicField(this, "tonConnectSdkVersion", null);
    __publicField(this, "eventDispatcher");
    var _a2;
    this.eventDispatcher = (_a2 = options == null ? void 0 : options.eventDispatcher) != null ? _a2 : new _sdk.BrowserEventDispatcher();
    this.tonConnectUiVersion = options.tonConnectUiVersion;
    this.init()["catch"]();
  }
  return _createClass(TonConnectUITracker, [{
    key: "version",
    get: function get() {
      return (0, _sdk.createVersionInfo)({
        ton_connect_sdk_lib: this.tonConnectSdkVersion,
        ton_connect_ui_lib: this.tonConnectUiVersion
      });
    }
  }, {
    key: "init",
    value: function init() {
      return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {
        return _regeneratorRuntime().wrap(function _callee12$(_context12) {
          while (1) switch (_context12.prev = _context12.next) {
            case 0:
              _context12.prev = 0;
              _context12.next = 3;
              return this.setRequestVersionHandler();
            case 3:
              _context12.next = 5;
              return this.requestTonConnectSdkVersion();
            case 5:
              this.tonConnectSdkVersion = _context12.sent;
              _context12.next = 10;
              break;
            case 8:
              _context12.prev = 8;
              _context12.t0 = _context12["catch"](0);
            case 10:
            case "end":
              return _context12.stop();
          }
        }, _callee12, this, [[0, 8]]);
      }));
    }
  }, {
    key: "setRequestVersionHandler",
    value: function setRequestVersionHandler() {
      return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {
        var _this15 = this;
        return _regeneratorRuntime().wrap(function _callee14$(_context14) {
          while (1) switch (_context14.prev = _context14.next) {
            case 0:
              _context14.next = 2;
              return this.eventDispatcher.addEventListener("ton-connect-ui-request-version", function () {
                return __async(_this15, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {
                  return _regeneratorRuntime().wrap(function _callee13$(_context13) {
                    while (1) switch (_context13.prev = _context13.next) {
                      case 0:
                        _context13.next = 2;
                        return this.eventDispatcher.dispatchEvent("ton-connect-ui-response-version", (0, _sdk.createResponseVersionEvent)(this.tonConnectUiVersion));
                      case 2:
                      case "end":
                        return _context13.stop();
                    }
                  }, _callee13, this);
                }));
              });
            case 2:
            case "end":
              return _context14.stop();
          }
        }, _callee14, this);
      }));
    }
  }, {
    key: "requestTonConnectSdkVersion",
    value: function requestTonConnectSdkVersion() {
      return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {
        var _this16 = this;
        return _regeneratorRuntime().wrap(function _callee16$(_context16) {
          while (1) switch (_context16.prev = _context16.next) {
            case 0:
              return _context16.abrupt("return", new Promise(function (resolve, reject) {
                return __async(_this16, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {
                  return _regeneratorRuntime().wrap(function _callee15$(_context15) {
                    while (1) switch (_context15.prev = _context15.next) {
                      case 0:
                        _context15.prev = 0;
                        _context15.next = 3;
                        return this.eventDispatcher.addEventListener("ton-connect-response-version", function (event) {
                          resolve(event.detail.version);
                        }, {
                          once: true
                        });
                      case 3:
                        _context15.next = 5;
                        return this.eventDispatcher.dispatchEvent("ton-connect-request-version", (0, _sdk.createRequestVersionEvent)());
                      case 5:
                        _context15.next = 10;
                        break;
                      case 7:
                        _context15.prev = 7;
                        _context15.t0 = _context15["catch"](0);
                        reject(_context15.t0);
                      case 10:
                      case "end":
                        return _context15.stop();
                    }
                  }, _callee15, this, [[0, 7]]);
                }));
              }));
            case 1:
            case "end":
              return _context16.stop();
          }
        }, _callee16);
      }));
    }
  }, {
    key: "dispatchUserActionEvent",
    value: function dispatchUserActionEvent(eventDetails) {
      var _a2;
      try {
        (_a2 = this.eventDispatcher) == null ? void 0 : _a2.dispatchEvent("".concat(this.eventPrefix).concat(eventDetails.type), eventDetails)["catch"]();
      } catch (e2) {}
    }
  }, {
    key: "trackConnectionStarted",
    value: function trackConnectionStarted() {
      try {
        for (var _len13 = arguments.length, args = new Array(_len13), _key14 = 0; _key14 < _len13; _key14++) {
          args[_key14] = arguments[_key14];
        }
        var event = _sdk.createConnectionStartedEvent.apply(void 0, [this.version].concat(args));
        this.dispatchUserActionEvent(event);
      } catch (e2) {}
    }
  }, {
    key: "trackConnectionCompleted",
    value: function trackConnectionCompleted() {
      try {
        for (var _len14 = arguments.length, args = new Array(_len14), _key15 = 0; _key15 < _len14; _key15++) {
          args[_key15] = arguments[_key15];
        }
        var event = _sdk.createConnectionCompletedEvent.apply(void 0, [this.version].concat(args));
        this.dispatchUserActionEvent(event);
      } catch (e2) {}
    }
  }, {
    key: "trackConnectionError",
    value: function trackConnectionError() {
      try {
        for (var _len15 = arguments.length, args = new Array(_len15), _key16 = 0; _key16 < _len15; _key16++) {
          args[_key16] = arguments[_key16];
        }
        var event = _sdk.createConnectionErrorEvent.apply(void 0, [this.version].concat(args));
        this.dispatchUserActionEvent(event);
      } catch (e2) {}
    }
  }, {
    key: "trackConnectionRestoringStarted",
    value: function trackConnectionRestoringStarted() {
      try {
        for (var _len16 = arguments.length, args = new Array(_len16), _key17 = 0; _key17 < _len16; _key17++) {
          args[_key17] = arguments[_key17];
        }
        var event = _sdk.createConnectionRestoringStartedEvent.apply(void 0, [this.version].concat(args));
        this.dispatchUserActionEvent(event);
      } catch (e2) {}
    }
  }, {
    key: "trackConnectionRestoringCompleted",
    value: function trackConnectionRestoringCompleted() {
      try {
        for (var _len17 = arguments.length, args = new Array(_len17), _key18 = 0; _key18 < _len17; _key18++) {
          args[_key18] = arguments[_key18];
        }
        var event = _sdk.createConnectionRestoringCompletedEvent.apply(void 0, [this.version].concat(args));
        this.dispatchUserActionEvent(event);
      } catch (e2) {}
    }
  }, {
    key: "trackConnectionRestoringError",
    value: function trackConnectionRestoringError() {
      try {
        for (var _len18 = arguments.length, args = new Array(_len18), _key19 = 0; _key19 < _len18; _key19++) {
          args[_key19] = arguments[_key19];
        }
        var event = _sdk.createConnectionRestoringErrorEvent.apply(void 0, [this.version].concat(args));
        this.dispatchUserActionEvent(event);
      } catch (e2) {}
    }
  }, {
    key: "trackDisconnection",
    value: function trackDisconnection() {
      try {
        for (var _len19 = arguments.length, args = new Array(_len19), _key20 = 0; _key20 < _len19; _key20++) {
          args[_key20] = arguments[_key20];
        }
        var event = _sdk.createDisconnectionEvent.apply(void 0, [this.version].concat(args));
        this.dispatchUserActionEvent(event);
      } catch (e2) {}
    }
  }, {
    key: "trackTransactionSentForSignature",
    value: function trackTransactionSentForSignature() {
      try {
        for (var _len20 = arguments.length, args = new Array(_len20), _key21 = 0; _key21 < _len20; _key21++) {
          args[_key21] = arguments[_key21];
        }
        var event = _sdk.createTransactionSentForSignatureEvent.apply(void 0, [this.version].concat(args));
        this.dispatchUserActionEvent(event);
      } catch (e2) {}
    }
  }, {
    key: "trackTransactionSigned",
    value: function trackTransactionSigned() {
      try {
        for (var _len21 = arguments.length, args = new Array(_len21), _key22 = 0; _key22 < _len21; _key22++) {
          args[_key22] = arguments[_key22];
        }
        var event = _sdk.createTransactionSignedEvent.apply(void 0, [this.version].concat(args));
        this.dispatchUserActionEvent(event);
      } catch (e2) {}
    }
  }, {
    key: "trackTransactionSigningFailed",
    value: function trackTransactionSigningFailed() {
      try {
        for (var _len22 = arguments.length, args = new Array(_len22), _key23 = 0; _key23 < _len22; _key23++) {
          args[_key23] = arguments[_key23];
        }
        var event = _sdk.createTransactionSigningFailedEvent.apply(void 0, [this.version].concat(args));
        this.dispatchUserActionEvent(event);
      } catch (e2) {}
    }
  }]);
}();
var tonConnectUiVersion = "2.0.9";
var TonConnectUI = exports.TonConnectUI = /*#__PURE__*/function () {
  function TonConnectUI(options) {
    var _this17 = this;
    _classCallCheck(this, TonConnectUI);
    __publicField(this, "walletInfoStorage", new WalletInfoStorage());
    __publicField(this, "preferredWalletStorage", new PreferredWalletStorage());
    __publicField(this, "tracker");
    __publicField(this, "walletInfo", null);
    __publicField(this, "systemThemeChangeUnsubscribe", null);
    __publicField(this, "actionsConfiguration");
    __publicField(this, "walletsList");
    __publicField(this, "connectRequestParametersCallback");
    __publicField(this, "connector");
    __publicField(this, "modal");
    __publicField(this, "singleWalletModal");
    __publicField(this, "transactionModal");
    __publicField(this, "connectionRestored", Promise.resolve(false));
    if (options && "connector" in options && options.connector) {
      this.connector = options.connector;
    } else if (options && "manifestUrl" in options && options.manifestUrl) {
      this.connector = new _sdk.TonConnect({
        manifestUrl: options.manifestUrl,
        eventDispatcher: options == null ? void 0 : options.eventDispatcher
      });
    } else {
      throw new TonConnectUIError("You have to specify a `manifestUrl` or a `connector` in the options.");
    }
    this.tracker = new TonConnectUITracker({
      eventDispatcher: options == null ? void 0 : options.eventDispatcher,
      tonConnectUiVersion: tonConnectUiVersion
    });
    this.modal = new WalletsModalManager({
      connector: this.connector,
      tracker: this.tracker,
      setConnectRequestParametersCallback: function setConnectRequestParametersCallback(callback) {
        _this17.connectRequestParametersCallback = callback;
      }
    });
    this.singleWalletModal = new SingleWalletModalManager({
      connector: this.connector,
      tracker: this.tracker,
      setConnectRequestParametersCallback: function setConnectRequestParametersCallback(callback) {
        _this17.connectRequestParametersCallback = callback;
      }
    });
    this.transactionModal = new TransactionModalManager({
      connector: this.connector
    });
    this.walletsList = this.getWallets();
    this.walletsList.then(function (list) {
      return preloadImages(uniq(list.map(function (item) {
        return item.imageUrl;
      })));
    });
    var rootId = this.normalizeWidgetRoot(options == null ? void 0 : options.widgetRootId);
    this.subscribeToWalletChange();
    if ((options == null ? void 0 : options.restoreConnection) !== false) {
      this.connectionRestored = createMacrotaskAsync(function () {
        return __async(_this17, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {
          return _regeneratorRuntime().wrap(function _callee17$(_context17) {
            while (1) switch (_context17.prev = _context17.next) {
              case 0:
                this.tracker.trackConnectionRestoringStarted();
                _context17.next = 3;
                return this.connector.restoreConnection();
              case 3:
                if (!this.connector.connected) {
                  this.tracker.trackConnectionRestoringError("Connection was not restored");
                  this.walletInfoStorage.removeWalletInfo();
                } else {
                  this.tracker.trackConnectionRestoringCompleted(this.wallet);
                }
                return _context17.abrupt("return", this.connector.connected);
              case 5:
              case "end":
                return _context17.stop();
            }
          }, _callee17, this);
        }));
      });
    }
    this.uiOptions = mergeOptions(options, {
      uiPreferences: {
        theme: "SYSTEM"
      }
    });
    var preferredWalletName = this.preferredWalletStorage.getPreferredWalletAppName();
    setAppState({
      connector: this.connector,
      preferredWalletAppName: preferredWalletName
    });
    widgetController.renderApp(rootId, this);
  }
  return _createClass(TonConnectUI, [{
    key: "connected",
    get: function get() {
      return this.connector.connected;
    }
  }, {
    key: "account",
    get: function get() {
      return this.connector.account;
    }
  }, {
    key: "wallet",
    get: function get() {
      if (!this.connector.wallet) {
        return null;
      }
      return __spreadValues(__spreadValues({}, this.connector.wallet), this.walletInfo);
    }
  }, {
    key: "uiOptions",
    set: function set(options) {
      var _a2, _b2, _c2, _d2, _e2;
      this.checkButtonRootExist(options.buttonRootId);
      this.actionsConfiguration = options.actionsConfiguration;
      if ((_a2 = options.uiPreferences) == null ? void 0 : _a2.theme) {
        if (((_b2 = options.uiPreferences) == null ? void 0 : _b2.theme) !== "SYSTEM") {
          (_c2 = this.systemThemeChangeUnsubscribe) == null ? void 0 : _c2.call(this);
          setTheme(options.uiPreferences.theme, options.uiPreferences.colorsSet);
        } else {
          setTheme(getSystemTheme(), options.uiPreferences.colorsSet);
          if (!this.systemThemeChangeUnsubscribe) {
            this.systemThemeChangeUnsubscribe = subscribeToThemeChange(setTheme);
          }
        }
      } else {
        if ((_d2 = options.uiPreferences) == null ? void 0 : _d2.colorsSet) {
          setColors(options.uiPreferences.colorsSet);
        }
      }
      if ((_e2 = options.uiPreferences) == null ? void 0 : _e2.borderRadius) {
        setBorderRadius(options.uiPreferences.borderRadius);
      }
      setAppState(function (state) {
        var _a3, _b3;
        var merged = mergeOptions(__spreadValues(__spreadValues(__spreadValues(__spreadValues({}, options.language && {
          language: options.language
        }), !!((_a3 = options.actionsConfiguration) == null ? void 0 : _a3.returnStrategy) && {
          returnStrategy: options.actionsConfiguration.returnStrategy
        }), !!((_b3 = options.actionsConfiguration) == null ? void 0 : _b3.twaReturnUrl) && {
          twaReturnUrl: options.actionsConfiguration.twaReturnUrl
        }), !!options.walletsListConfiguration && {
          walletsListConfiguration: options.walletsListConfiguration
        }), unwrap(state));
        if (options.buttonRootId !== void 0) {
          merged.buttonRootId = options.buttonRootId;
        }
        if (options.enableAndroidBackHandler !== void 0) {
          merged.enableAndroidBackHandler = options.enableAndroidBackHandler;
        }
        return merged;
      });
    }
  }, {
    key: "setConnectRequestParameters",
    value: function setConnectRequestParameters(connectRequestParameters) {
      var _a2;
      setAppState({
        connectRequestParameters: connectRequestParameters
      });
      if ((connectRequestParameters == null ? void 0 : connectRequestParameters.state) === "ready" || !connectRequestParameters) {
        (_a2 = this.connectRequestParametersCallback) == null ? void 0 : _a2.call(this, connectRequestParameters == null ? void 0 : connectRequestParameters.value);
      }
    }
  }, {
    key: "getWallets",
    value: function getWallets() {
      return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee18() {
        return _regeneratorRuntime().wrap(function _callee18$(_context18) {
          while (1) switch (_context18.prev = _context18.next) {
            case 0:
              return _context18.abrupt("return", this.connector.getWallets());
            case 1:
            case "end":
              return _context18.stop();
          }
        }, _callee18, this);
      }));
    }
  }, {
    key: "onStatusChange",
    value: function onStatusChange(callback, errorsHandler) {
      var _this18 = this;
      return this.connector.onStatusChange(function (wallet) {
        return __async(_this18, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee19() {
          var lastSelectedWalletInfo2;
          return _regeneratorRuntime().wrap(function _callee19$(_context19) {
            while (1) switch (_context19.prev = _context19.next) {
              case 0:
                if (!wallet) {
                  _context19.next = 7;
                  break;
                }
                _context19.next = 3;
                return this.getSelectedWalletInfo(wallet);
              case 3:
                lastSelectedWalletInfo2 = _context19.sent;
                callback(__spreadValues(__spreadValues({}, wallet), lastSelectedWalletInfo2 || this.walletInfoStorage.getWalletInfo()));
                _context19.next = 8;
                break;
              case 7:
                callback(wallet);
              case 8:
              case "end":
                return _context19.stop();
            }
          }, _callee19, this);
        }));
      }, errorsHandler);
    }
  }, {
    key: "openModal",
    value: function openModal() {
      return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee20() {
        return _regeneratorRuntime().wrap(function _callee20$(_context20) {
          while (1) switch (_context20.prev = _context20.next) {
            case 0:
              return _context20.abrupt("return", this.modal.open());
            case 1:
            case "end":
              return _context20.stop();
          }
        }, _callee20, this);
      }));
    }
  }, {
    key: "closeModal",
    value: function closeModal(reason) {
      this.modal.close(reason);
    }
  }, {
    key: "onModalStateChange",
    value: function onModalStateChange(onChange) {
      return this.modal.onStateChange(onChange);
    }
  }, {
    key: "modalState",
    get: function get() {
      return this.modal.state;
    }
  }, {
    key: "openSingleWalletModal",
    value: function openSingleWalletModal(wallet) {
      return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee21() {
        return _regeneratorRuntime().wrap(function _callee21$(_context21) {
          while (1) switch (_context21.prev = _context21.next) {
            case 0:
              return _context21.abrupt("return", this.singleWalletModal.open(wallet));
            case 1:
            case "end":
              return _context21.stop();
          }
        }, _callee21, this);
      }));
    }
  }, {
    key: "closeSingleWalletModal",
    value: function closeSingleWalletModal(closeReason) {
      this.singleWalletModal.close(closeReason);
    }
  }, {
    key: "onSingleWalletModalStateChange",
    value: function onSingleWalletModalStateChange(onChange) {
      return this.singleWalletModal.onStateChange(onChange);
    }
  }, {
    key: "singleWalletModalState",
    get: function get() {
      return this.singleWalletModal.state;
    }
  }, {
    key: "connectWallet",
    value: function connectWallet() {
      return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee22() {
        var walletsList, embeddedWallet;
        return _regeneratorRuntime().wrap(function _callee22$(_context22) {
          while (1) switch (_context22.prev = _context22.next) {
            case 0:
              _context22.next = 2;
              return this.getWallets();
            case 2:
              walletsList = _context22.sent;
              embeddedWallet = walletsList.find(_sdk.isWalletInfoCurrentlyEmbedded);
              if (!embeddedWallet) {
                _context22.next = 10;
                break;
              }
              _context22.next = 7;
              return this.connectEmbeddedWallet(embeddedWallet);
            case 7:
              return _context22.abrupt("return", _context22.sent);
            case 10:
              _context22.next = 12;
              return this.connectExternalWallet();
            case 12:
              return _context22.abrupt("return", _context22.sent);
            case 13:
            case "end":
              return _context22.stop();
          }
        }, _callee22, this);
      }));
    }
  }, {
    key: "disconnect",
    value: function disconnect() {
      this.tracker.trackDisconnection(this.wallet, "dapp");
      widgetController.clearAction();
      widgetController.removeSelectedWalletInfo();
      this.walletInfoStorage.removeWalletInfo();
      return this.connector.disconnect();
    }
  }, {
    key: "sendTransaction",
    value: function sendTransaction(tx, options) {
      return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee23() {
        var _this19 = this;
        var _this$getModalsAndNot, notifications2, modals, returnStrategy, twaReturnUrl, skipRedirectToWallet, onRequestSent, abortController, unsubscribe, result;
        return _regeneratorRuntime().wrap(function _callee23$(_context23) {
          while (1) switch (_context23.prev = _context23.next) {
            case 0:
              this.tracker.trackTransactionSentForSignature(this.wallet, tx);
              if (this.connected) {
                _context23.next = 4;
                break;
              }
              this.tracker.trackTransactionSigningFailed(this.wallet, tx, "Wallet was not connected");
              throw new TonConnectUIError("Connect wallet to send a transaction.");
            case 4:
              if (isInTMA()) {
                sendExpand();
              }
              _this$getModalsAndNot = this.getModalsAndNotificationsConfiguration(options), notifications2 = _this$getModalsAndNot.notifications, modals = _this$getModalsAndNot.modals, returnStrategy = _this$getModalsAndNot.returnStrategy, twaReturnUrl = _this$getModalsAndNot.twaReturnUrl, skipRedirectToWallet = _this$getModalsAndNot.skipRedirectToWallet;
              widgetController.setAction({
                name: "confirm-transaction",
                showNotification: notifications2.includes("before"),
                openModal: modals.includes("before"),
                sent: false
              });
              onRequestSent = function onRequestSent() {
                if (abortController.signal.aborted) {
                  return;
                }
                widgetController.setAction({
                  name: "confirm-transaction",
                  showNotification: notifications2.includes("before"),
                  openModal: modals.includes("before"),
                  sent: true
                });
                if (_this19.walletInfo && "universalLink" in _this19.walletInfo && (_this19.walletInfo.openMethod === "universal-link" || _this19.walletInfo.openMethod === "custom-deeplink")) {
                  if ((0, _sdk.isTelegramUrl)(_this19.walletInfo.universalLink)) {
                    redirectToTelegram(_this19.walletInfo.universalLink, {
                      returnStrategy: returnStrategy,
                      twaReturnUrl: twaReturnUrl || appState.twaReturnUrl,
                      forceRedirect: false
                    });
                  } else {
                    redirectToWallet(_this19.walletInfo.universalLink, _this19.walletInfo.deepLink, {
                      returnStrategy: returnStrategy,
                      forceRedirect: false
                    }, function () {});
                  }
                }
              };
              abortController = new AbortController();
              unsubscribe = this.onTransactionModalStateChange(function (action2) {
                if (action2 == null ? void 0 : action2.openModal) {
                  return;
                }
                unsubscribe();
                if (!action2) {
                  abortController.abort();
                }
              });
              _context23.prev = 10;
              _context23.next = 13;
              return this.waitForSendTransaction({
                transaction: tx,
                signal: abortController.signal
              }, onRequestSent);
            case 13:
              result = _context23.sent;
              this.tracker.trackTransactionSigned(this.wallet, tx, result);
              widgetController.setAction({
                name: "transaction-sent",
                showNotification: notifications2.includes("success"),
                openModal: modals.includes("success")
              });
              return _context23.abrupt("return", result);
            case 19:
              _context23.prev = 19;
              _context23.t0 = _context23["catch"](10);
              widgetController.setAction({
                name: "transaction-canceled",
                showNotification: notifications2.includes("error"),
                openModal: modals.includes("error")
              });
              if (!(_context23.t0 instanceof _sdk.TonConnectError)) {
                _context23.next = 26;
                break;
              }
              throw _context23.t0;
            case 26:
              console.error(_context23.t0);
              throw new TonConnectUIError("Unhandled error:" + _context23.t0);
            case 28:
              _context23.prev = 28;
              unsubscribe();
              return _context23.finish(28);
            case 31:
            case "end":
              return _context23.stop();
          }
        }, _callee23, this, [[10, 19, 28, 31]]);
      }));
    }
  }, {
    key: "connectEmbeddedWallet",
    value: function connectEmbeddedWallet(embeddedWallet) {
      return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee24() {
        var _this20 = this;
        var connect, additionalRequest;
        return _regeneratorRuntime().wrap(function _callee24$(_context24) {
          while (1) switch (_context24.prev = _context24.next) {
            case 0:
              connect = function connect(parameters) {
                setLastSelectedWalletInfo(embeddedWallet);
                _this20.connector.connect({
                  jsBridgeKey: embeddedWallet.jsBridgeKey
                }, parameters);
              };
              additionalRequest = appState.connectRequestParameters;
              if ((additionalRequest == null ? void 0 : additionalRequest.state) === "loading") {
                this.connectRequestParametersCallback = connect;
              } else {
                connect(additionalRequest == null ? void 0 : additionalRequest.value);
              }
              _context24.next = 5;
              return this.waitForWalletConnection({
                ignoreErrors: false
              });
            case 5:
              return _context24.abrupt("return", _context24.sent);
            case 6:
            case "end":
              return _context24.stop();
          }
        }, _callee24, this);
      }));
    }
  }, {
    key: "connectExternalWallet",
    value: function connectExternalWallet() {
      return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee25() {
        var abortController, unsubscribe;
        return _regeneratorRuntime().wrap(function _callee25$(_context25) {
          while (1) switch (_context25.prev = _context25.next) {
            case 0:
              abortController = new AbortController();
              widgetController.openWalletsModal();
              unsubscribe = this.onModalStateChange(function (state) {
                var status = state.status,
                  closeReason = state.closeReason;
                if (status === "opened") {
                  return;
                }
                unsubscribe();
                if (closeReason === "action-cancelled") {
                  abortController.abort();
                }
              });
              _context25.next = 5;
              return this.waitForWalletConnection({
                ignoreErrors: true,
                signal: abortController.signal
              });
            case 5:
              return _context25.abrupt("return", _context25.sent);
            case 6:
            case "end":
              return _context25.stop();
          }
        }, _callee25, this);
      }));
    }
  }, {
    key: "waitForWalletConnection",
    value: function waitForWalletConnection(options) {
      return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee27() {
        var _this21 = this;
        return _regeneratorRuntime().wrap(function _callee27$(_context27) {
          while (1) switch (_context27.prev = _context27.next) {
            case 0:
              return _context27.abrupt("return", new Promise(function (resolve, reject) {
                _this21.tracker.trackConnectionStarted();
                var _options$ignoreErrors = options.ignoreErrors,
                  ignoreErrors = _options$ignoreErrors === void 0 ? false : _options$ignoreErrors,
                  _options$signal = options.signal,
                  signal = _options$signal === void 0 ? null : _options$signal;
                if (signal && signal.aborted) {
                  _this21.tracker.trackConnectionError("Connection was cancelled");
                  return reject(new TonConnectUIError("Wallet was not connected"));
                }
                var onStatusChangeHandler = function onStatusChangeHandler(wallet) {
                  return __async(_this21, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee26() {
                    return _regeneratorRuntime().wrap(function _callee26$(_context26) {
                      while (1) switch (_context26.prev = _context26.next) {
                        case 0:
                          if (wallet) {
                            _context26.next = 8;
                            break;
                          }
                          this.tracker.trackConnectionError("Connection was cancelled");
                          if (!ignoreErrors) {
                            _context26.next = 4;
                            break;
                          }
                          return _context26.abrupt("return");
                        case 4:
                          unsubscribe();
                          reject(new TonConnectUIError("Wallet was not connected"));
                          _context26.next = 11;
                          break;
                        case 8:
                          this.tracker.trackConnectionCompleted(wallet);
                          unsubscribe();
                          resolve(wallet);
                        case 11:
                        case "end":
                          return _context26.stop();
                      }
                    }, _callee26, this);
                  }));
                };
                var onErrorsHandler = function onErrorsHandler(reason) {
                  _this21.tracker.trackConnectionError(reason.message);
                  if (ignoreErrors) {
                    return;
                  }
                  unsubscribe();
                  reject(reason);
                };
                var unsubscribe = _this21.onStatusChange(function (wallet) {
                  return onStatusChangeHandler(wallet);
                }, function (reason) {
                  return onErrorsHandler(reason);
                });
                if (signal) {
                  signal.addEventListener("abort", function () {
                    unsubscribe();
                    reject(new TonConnectUIError("Wallet was not connected"));
                  }, {
                    once: true
                  });
                }
              }));
            case 1:
            case "end":
              return _context27.stop();
          }
        }, _callee27);
      }));
    }
  }, {
    key: "waitForSendTransaction",
    value: function waitForSendTransaction(options, onRequestSent) {
      return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee29() {
        var _this22 = this;
        return _regeneratorRuntime().wrap(function _callee29$(_context29) {
          while (1) switch (_context29.prev = _context29.next) {
            case 0:
              return _context29.abrupt("return", new Promise(function (resolve, reject) {
                var transaction = options.transaction,
                  signal = options.signal;
                if (signal.aborted) {
                  _this22.tracker.trackTransactionSigningFailed(_this22.wallet, transaction, "Transaction was cancelled");
                  return reject(new TonConnectUIError("Transaction was not sent"));
                }
                var onTransactionHandler = function onTransactionHandler(transaction2) {
                  return __async(_this22, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee28() {
                    return _regeneratorRuntime().wrap(function _callee28$(_context28) {
                      while (1) switch (_context28.prev = _context28.next) {
                        case 0:
                          resolve(transaction2);
                        case 1:
                        case "end":
                          return _context28.stop();
                      }
                    }, _callee28);
                  }));
                };
                var onErrorsHandler = function onErrorsHandler(reason) {
                  reject(reason);
                };
                var onCanceledHandler = function onCanceledHandler() {
                  _this22.tracker.trackTransactionSigningFailed(_this22.wallet, transaction, "Transaction was cancelled");
                  reject(new TonConnectUIError("Transaction was not sent"));
                };
                signal.addEventListener("abort", onCanceledHandler, {
                  once: true
                });
                _this22.connector.sendTransaction(transaction, {
                  onRequestSent: onRequestSent,
                  signal: signal
                }).then(function (result) {
                  signal.removeEventListener("abort", onCanceledHandler);
                  return onTransactionHandler(result);
                })["catch"](function (reason) {
                  signal.removeEventListener("abort", onCanceledHandler);
                  return onErrorsHandler(reason);
                });
              }));
            case 1:
            case "end":
              return _context29.stop();
          }
        }, _callee29);
      }));
    }
  }, {
    key: "onTransactionModalStateChange",
    value: function onTransactionModalStateChange(onChange) {
      return this.transactionModal.onStateChange(onChange);
    }
  }, {
    key: "subscribeToWalletChange",
    value: function subscribeToWalletChange() {
      var _this23 = this;
      this.connector.onStatusChange(function (wallet) {
        return __async(_this23, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee30() {
          var _a2;
          return _regeneratorRuntime().wrap(function _callee30$(_context30) {
            while (1) switch (_context30.prev = _context30.next) {
              case 0:
                if (!wallet) {
                  _context30.next = 6;
                  break;
                }
                _context30.next = 3;
                return this.updateWalletInfo(wallet);
              case 3:
                this.setPreferredWalletAppName(((_a2 = this.walletInfo) == null ? void 0 : _a2.appName) || wallet.device.appName);
                _context30.next = 7;
                break;
              case 6:
                this.walletInfoStorage.removeWalletInfo();
              case 7:
              case "end":
                return _context30.stop();
            }
          }, _callee30, this);
        }));
      });
    }
  }, {
    key: "setPreferredWalletAppName",
    value: function setPreferredWalletAppName(value) {
      this.preferredWalletStorage.setPreferredWalletAppName(value);
      setAppState({
        preferredWalletAppName: value
      });
    }
  }, {
    key: "getSelectedWalletInfo",
    value: function getSelectedWalletInfo(wallet) {
      return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee31() {
        var lastSelectedWalletInfo2, fullLastSelectedWalletInfo, walletsList, walletInfo;
        return _regeneratorRuntime().wrap(function _callee31$(_context31) {
          while (1) switch (_context31.prev = _context31.next) {
            case 0:
              lastSelectedWalletInfo2 = widgetController.getSelectedWalletInfo();
              if (lastSelectedWalletInfo2) {
                _context31.next = 3;
                break;
              }
              return _context31.abrupt("return", null);
            case 3:
              if ("name" in lastSelectedWalletInfo2) {
                _context31.next = 16;
                break;
              }
              _context31.t0 = applyWalletsListConfiguration;
              _context31.next = 7;
              return this.walletsList;
            case 7:
              _context31.t1 = _context31.sent;
              _context31.t2 = appState.walletsListConfiguration;
              walletsList = (0, _context31.t0)(_context31.t1, _context31.t2);
              walletInfo = walletsList.find(function (item) {
                return eqWalletName(item, wallet.device.appName);
              });
              if (walletInfo) {
                _context31.next = 13;
                break;
              }
              throw new TonConnectUIError("Cannot find WalletInfo for the '".concat(wallet.device.appName, "' wallet"));
            case 13:
              fullLastSelectedWalletInfo = __spreadValues(__spreadValues({}, walletInfo), lastSelectedWalletInfo2);
              _context31.next = 17;
              break;
            case 16:
              fullLastSelectedWalletInfo = lastSelectedWalletInfo2;
            case 17:
              return _context31.abrupt("return", fullLastSelectedWalletInfo);
            case 18:
            case "end":
              return _context31.stop();
          }
        }, _callee31, this);
      }));
    }
  }, {
    key: "updateWalletInfo",
    value: function updateWalletInfo(wallet) {
      return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee32() {
        var selectedWalletInfo, storedWalletInfo;
        return _regeneratorRuntime().wrap(function _callee32$(_context32) {
          while (1) switch (_context32.prev = _context32.next) {
            case 0:
              _context32.next = 2;
              return this.getSelectedWalletInfo(wallet);
            case 2:
              selectedWalletInfo = _context32.sent;
              if (!selectedWalletInfo) {
                _context32.next = 7;
                break;
              }
              this.walletInfo = selectedWalletInfo;
              this.walletInfoStorage.setWalletInfo(selectedWalletInfo);
              return _context32.abrupt("return");
            case 7:
              storedWalletInfo = this.walletInfoStorage.getWalletInfo();
              if (!storedWalletInfo) {
                _context32.next = 11;
                break;
              }
              this.walletInfo = storedWalletInfo;
              return _context32.abrupt("return");
            case 11:
              _context32.next = 13;
              return this.walletsList;
            case 13:
              _context32.t0 = _context32.sent.find(function (walletInfo) {
                return eqWalletName(walletInfo, wallet.device.appName);
              });
              if (_context32.t0) {
                _context32.next = 16;
                break;
              }
              _context32.t0 = null;
            case 16:
              this.walletInfo = _context32.t0;
            case 17:
            case "end":
              return _context32.stop();
          }
        }, _callee32, this);
      }));
    }
  }, {
    key: "normalizeWidgetRoot",
    value: function normalizeWidgetRoot(rootId) {
      if (!rootId || !document.getElementById(rootId)) {
        rootId = "tc-widget-root";
        var rootElement = document.createElement("div");
        rootElement.id = rootId;
        document.body.appendChild(rootElement);
      }
      return rootId;
    }
  }, {
    key: "checkButtonRootExist",
    value: function checkButtonRootExist(buttonRootId) {
      if (buttonRootId == null) {
        return;
      }
      if (!document.getElementById(buttonRootId)) {
        throw new TonConnectUIError("".concat(buttonRootId, " element not found in the document."));
      }
    }
  }, {
    key: "getModalsAndNotificationsConfiguration",
    value: function getModalsAndNotificationsConfiguration(options) {
      var _a2, _b2, _c2, _d2, _e2, _f2;
      var allActions = ["before", "success", "error"];
      var notifications2 = allActions;
      if (((_a2 = this.actionsConfiguration) == null ? void 0 : _a2.notifications) && ((_b2 = this.actionsConfiguration) == null ? void 0 : _b2.notifications) !== "all") {
        notifications2 = this.actionsConfiguration.notifications;
      }
      if (options == null ? void 0 : options.notifications) {
        if (options.notifications === "all") {
          notifications2 = allActions;
        } else {
          notifications2 = options.notifications;
        }
      }
      var modals = ["before"];
      if ((_c2 = this.actionsConfiguration) == null ? void 0 : _c2.modals) {
        if (this.actionsConfiguration.modals === "all") {
          modals = allActions;
        } else {
          modals = this.actionsConfiguration.modals;
        }
      }
      if (options == null ? void 0 : options.modals) {
        if (options.modals === "all") {
          modals = allActions;
        } else {
          modals = options.modals;
        }
      }
      var returnStrategy = (options == null ? void 0 : options.returnStrategy) || ((_d2 = this.actionsConfiguration) == null ? void 0 : _d2.returnStrategy) || "back";
      var twaReturnUrl = (options == null ? void 0 : options.twaReturnUrl) || ((_e2 = this.actionsConfiguration) == null ? void 0 : _e2.twaReturnUrl);
      var skipRedirectToWallet = (options == null ? void 0 : options.skipRedirectToWallet) || ((_f2 = this.actionsConfiguration) == null ? void 0 : _f2.skipRedirectToWallet) || "ios";
      if (isInTMA()) {
        skipRedirectToWallet = "never";
      }
      return {
        notifications: notifications2,
        modals: modals,
        returnStrategy: returnStrategy,
        twaReturnUrl: twaReturnUrl,
        skipRedirectToWallet: skipRedirectToWallet
      };
    }
  }], [{
    key: "getWallets",
    value: function getWallets() {
      return _sdk.TonConnect.getWallets();
    }
  }]);
}();

}).call(this)}).call(this,require('_process'))
},{"@tonconnect/sdk":142,"_process":203,"classnames":197,"deepmerge":199,"ua-parser-js":208}],144:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.all = exports.VERSION = exports.HttpStatusCode = exports.CanceledError = exports.CancelToken = exports.Cancel = exports.AxiosHeaders = exports.AxiosError = exports.Axios = void 0;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function get() {
    return _axios["default"];
  }
});
exports.toFormData = exports.spread = exports.mergeConfig = exports.isCancel = exports.isAxiosError = exports.getAdapter = exports.formToJSON = void 0;
var _axios = _interopRequireDefault(require("./lib/axios.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
// This module is intended to unwrap Axios default export as named.
// Keep top-level export same with static properties
// so that it can keep same with es module or cjs
var Axios = exports.Axios = _axios["default"].Axios,
  AxiosError = exports.AxiosError = _axios["default"].AxiosError,
  CanceledError = exports.CanceledError = _axios["default"].CanceledError,
  isCancel = exports.isCancel = _axios["default"].isCancel,
  CancelToken = exports.CancelToken = _axios["default"].CancelToken,
  VERSION = exports.VERSION = _axios["default"].VERSION,
  all = exports.all = _axios["default"].all,
  Cancel = exports.Cancel = _axios["default"].Cancel,
  isAxiosError = exports.isAxiosError = _axios["default"].isAxiosError,
  spread = exports.spread = _axios["default"].spread,
  toFormData = exports.toFormData = _axios["default"].toFormData,
  AxiosHeaders = exports.AxiosHeaders = _axios["default"].AxiosHeaders,
  HttpStatusCode = exports.HttpStatusCode = _axios["default"].HttpStatusCode,
  formToJSON = exports.formToJSON = _axios["default"].formToJSON,
  getAdapter = exports.getAdapter = _axios["default"].getAdapter,
  mergeConfig = exports.mergeConfig = _axios["default"].mergeConfig;

},{"./lib/axios.js":148}],145:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _utils = _interopRequireDefault(require("../utils.js"));
var _http = _interopRequireDefault(require("./http.js"));
var _xhr = _interopRequireDefault(require("./xhr.js"));
var _fetch = _interopRequireDefault(require("./fetch.js"));
var _AxiosError = _interopRequireDefault(require("../core/AxiosError.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
var knownAdapters = {
  http: _http["default"],
  xhr: _xhr["default"],
  fetch: _fetch["default"]
};
_utils["default"].forEach(knownAdapters, function (fn, value) {
  if (fn) {
    try {
      Object.defineProperty(fn, 'name', {
        value: value
      });
    } catch (e) {
      // eslint-disable-next-line no-empty
    }
    Object.defineProperty(fn, 'adapterName', {
      value: value
    });
  }
});
var renderReason = function renderReason(reason) {
  return "- ".concat(reason);
};
var isResolvedHandle = function isResolvedHandle(adapter) {
  return _utils["default"].isFunction(adapter) || adapter === null || adapter === false;
};
var _default = exports["default"] = {
  getAdapter: function getAdapter(adapters) {
    adapters = _utils["default"].isArray(adapters) ? adapters : [adapters];
    var _adapters = adapters,
      length = _adapters.length;
    var nameOrAdapter;
    var adapter;
    var rejectedReasons = {};
    for (var i = 0; i < length; i++) {
      nameOrAdapter = adapters[i];
      var id = void 0;
      adapter = nameOrAdapter;
      if (!isResolvedHandle(nameOrAdapter)) {
        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];
        if (adapter === undefined) {
          throw new _AxiosError["default"]("Unknown adapter '".concat(id, "'"));
        }
      }
      if (adapter) {
        break;
      }
      rejectedReasons[id || '#' + i] = adapter;
    }
    if (!adapter) {
      var reasons = Object.entries(rejectedReasons).map(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2),
          id = _ref2[0],
          state = _ref2[1];
        return "adapter ".concat(id, " ") + (state === false ? 'is not supported by the environment' : 'is not available in the build');
      });
      var s = length ? reasons.length > 1 ? 'since :\n' + reasons.map(renderReason).join('\n') : ' ' + renderReason(reasons[0]) : 'as no adapter specified';
      throw new _AxiosError["default"]("There is no suitable adapter to dispatch the request " + s, 'ERR_NOT_SUPPORT');
    }
    return adapter;
  },
  adapters: knownAdapters
};

},{"../core/AxiosError.js":153,"../utils.js":193,"./fetch.js":146,"./http.js":175,"./xhr.js":147}],146:[function(require,module,exports){
"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _index = _interopRequireDefault(require("../platform/index.js"));
var _utils = _interopRequireDefault(require("../utils.js"));
var _AxiosError = _interopRequireDefault(require("../core/AxiosError.js"));
var _composeSignals = _interopRequireDefault(require("../helpers/composeSignals.js"));
var _trackStream = require("../helpers/trackStream.js");
var _AxiosHeaders = _interopRequireDefault(require("../core/AxiosHeaders.js"));
var _progressEventReducer = require("../helpers/progressEventReducer.js");
var _resolveConfig2 = _interopRequireDefault(require("../helpers/resolveConfig.js"));
var _settle = _interopRequireDefault(require("../core/settle.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
var isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';
var isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';

// used only inside the fetch adapter
var encodeText = isFetchSupported && (typeof TextEncoder === 'function' ? function (encoder) {
  return function (str) {
    return encoder.encode(str);
  };
}(new TextEncoder()) : (/*#__PURE__*/function () {
  var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(str) {
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.t0 = Uint8Array;
          _context.next = 3;
          return new Response(str).arrayBuffer();
        case 3:
          _context.t1 = _context.sent;
          return _context.abrupt("return", new _context.t0(_context.t1));
        case 5:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function (_x) {
    return _ref.apply(this, arguments);
  };
}()));
var test = function test(fn) {
  try {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    return !!fn.apply(void 0, args);
  } catch (e) {
    return false;
  }
};
var supportsRequestStream = isReadableStreamSupported && test(function () {
  var duplexAccessed = false;
  var hasContentType = new Request(_index["default"].origin, {
    body: new ReadableStream(),
    method: 'POST',
    get duplex() {
      duplexAccessed = true;
      return 'half';
    }
  }).headers.has('Content-Type');
  return duplexAccessed && !hasContentType;
});
var DEFAULT_CHUNK_SIZE = 64 * 1024;
var supportsResponseStream = isReadableStreamSupported && test(function () {
  return _utils["default"].isReadableStream(new Response('').body);
});
var resolvers = {
  stream: supportsResponseStream && function (res) {
    return res.body;
  }
};
isFetchSupported && function (res) {
  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(function (type) {
    !resolvers[type] && (resolvers[type] = _utils["default"].isFunction(res[type]) ? function (res) {
      return res[type]();
    } : function (_, config) {
      throw new _AxiosError["default"]("Response type '".concat(type, "' is not supported"), _AxiosError["default"].ERR_NOT_SUPPORT, config);
    });
  });
}(new Response());
var getBodyLength = /*#__PURE__*/function () {
  var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(body) {
    var _request;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          if (!(body == null)) {
            _context2.next = 2;
            break;
          }
          return _context2.abrupt("return", 0);
        case 2:
          if (!_utils["default"].isBlob(body)) {
            _context2.next = 4;
            break;
          }
          return _context2.abrupt("return", body.size);
        case 4:
          if (!_utils["default"].isSpecCompliantForm(body)) {
            _context2.next = 9;
            break;
          }
          _request = new Request(_index["default"].origin, {
            method: 'POST',
            body: body
          });
          _context2.next = 8;
          return _request.arrayBuffer();
        case 8:
          return _context2.abrupt("return", _context2.sent.byteLength);
        case 9:
          if (!(_utils["default"].isArrayBufferView(body) || _utils["default"].isArrayBuffer(body))) {
            _context2.next = 11;
            break;
          }
          return _context2.abrupt("return", body.byteLength);
        case 11:
          if (_utils["default"].isURLSearchParams(body)) {
            body = body + '';
          }
          if (!_utils["default"].isString(body)) {
            _context2.next = 16;
            break;
          }
          _context2.next = 15;
          return encodeText(body);
        case 15:
          return _context2.abrupt("return", _context2.sent.byteLength);
        case 16:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return function getBodyLength(_x2) {
    return _ref2.apply(this, arguments);
  };
}();
var resolveBodyLength = /*#__PURE__*/function () {
  var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(headers, body) {
    var length;
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          length = _utils["default"].toFiniteNumber(headers.getContentLength());
          return _context3.abrupt("return", length == null ? getBodyLength(body) : length);
        case 2:
        case "end":
          return _context3.stop();
      }
    }, _callee3);
  }));
  return function resolveBodyLength(_x3, _x4) {
    return _ref3.apply(this, arguments);
  };
}();
var _default = exports["default"] = isFetchSupported && (/*#__PURE__*/function () {
  var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(config) {
    var _resolveConfig, url, method, data, signal, cancelToken, timeout, onDownloadProgress, onUploadProgress, responseType, headers, _resolveConfig$withCr, withCredentials, fetchOptions, composedSignal, request, unsubscribe, requestContentLength, _request, contentTypeHeader, _progressEventDecorat, _progressEventDecorat2, onProgress, flush, isCredentialsSupported, response, isStreamResponse, options, responseContentLength, _ref5, _ref6, _onProgress, _flush, responseData;
    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1) switch (_context4.prev = _context4.next) {
        case 0:
          _resolveConfig = (0, _resolveConfig2["default"])(config), url = _resolveConfig.url, method = _resolveConfig.method, data = _resolveConfig.data, signal = _resolveConfig.signal, cancelToken = _resolveConfig.cancelToken, timeout = _resolveConfig.timeout, onDownloadProgress = _resolveConfig.onDownloadProgress, onUploadProgress = _resolveConfig.onUploadProgress, responseType = _resolveConfig.responseType, headers = _resolveConfig.headers, _resolveConfig$withCr = _resolveConfig.withCredentials, withCredentials = _resolveConfig$withCr === void 0 ? 'same-origin' : _resolveConfig$withCr, fetchOptions = _resolveConfig.fetchOptions;
          responseType = responseType ? (responseType + '').toLowerCase() : 'text';
          composedSignal = (0, _composeSignals["default"])([signal, cancelToken && cancelToken.toAbortSignal()], timeout);
          unsubscribe = composedSignal && composedSignal.unsubscribe && function () {
            composedSignal.unsubscribe();
          };
          _context4.prev = 4;
          _context4.t0 = onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head';
          if (!_context4.t0) {
            _context4.next = 11;
            break;
          }
          _context4.next = 9;
          return resolveBodyLength(headers, data);
        case 9:
          _context4.t1 = requestContentLength = _context4.sent;
          _context4.t0 = _context4.t1 !== 0;
        case 11:
          if (!_context4.t0) {
            _context4.next = 15;
            break;
          }
          _request = new Request(url, {
            method: 'POST',
            body: data,
            duplex: "half"
          });
          if (_utils["default"].isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {
            headers.setContentType(contentTypeHeader);
          }
          if (_request.body) {
            _progressEventDecorat = (0, _progressEventReducer.progressEventDecorator)(requestContentLength, (0, _progressEventReducer.progressEventReducer)((0, _progressEventReducer.asyncDecorator)(onUploadProgress))), _progressEventDecorat2 = _slicedToArray(_progressEventDecorat, 2), onProgress = _progressEventDecorat2[0], flush = _progressEventDecorat2[1];
            data = (0, _trackStream.trackStream)(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);
          }
        case 15:
          if (!_utils["default"].isString(withCredentials)) {
            withCredentials = withCredentials ? 'include' : 'omit';
          }

          // Cloudflare Workers throws when credentials are defined
          // see https://github.com/cloudflare/workerd/issues/902
          isCredentialsSupported = "credentials" in Request.prototype;
          request = new Request(url, _objectSpread(_objectSpread({}, fetchOptions), {}, {
            signal: composedSignal,
            method: method.toUpperCase(),
            headers: headers.normalize().toJSON(),
            body: data,
            duplex: "half",
            credentials: isCredentialsSupported ? withCredentials : undefined
          }));
          _context4.next = 20;
          return fetch(request);
        case 20:
          response = _context4.sent;
          isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');
          if (supportsResponseStream && (onDownloadProgress || isStreamResponse && unsubscribe)) {
            options = {};
            ['status', 'statusText', 'headers'].forEach(function (prop) {
              options[prop] = response[prop];
            });
            responseContentLength = _utils["default"].toFiniteNumber(response.headers.get('content-length'));
            _ref5 = onDownloadProgress && (0, _progressEventReducer.progressEventDecorator)(responseContentLength, (0, _progressEventReducer.progressEventReducer)((0, _progressEventReducer.asyncDecorator)(onDownloadProgress), true)) || [], _ref6 = _slicedToArray(_ref5, 2), _onProgress = _ref6[0], _flush = _ref6[1];
            response = new Response((0, _trackStream.trackStream)(response.body, DEFAULT_CHUNK_SIZE, _onProgress, function () {
              _flush && _flush();
              unsubscribe && unsubscribe();
            }), options);
          }
          responseType = responseType || 'text';
          _context4.next = 26;
          return resolvers[_utils["default"].findKey(resolvers, responseType) || 'text'](response, config);
        case 26:
          responseData = _context4.sent;
          !isStreamResponse && unsubscribe && unsubscribe();
          _context4.next = 30;
          return new Promise(function (resolve, reject) {
            (0, _settle["default"])(resolve, reject, {
              data: responseData,
              headers: _AxiosHeaders["default"].from(response.headers),
              status: response.status,
              statusText: response.statusText,
              config: config,
              request: request
            });
          });
        case 30:
          return _context4.abrupt("return", _context4.sent);
        case 33:
          _context4.prev = 33;
          _context4.t2 = _context4["catch"](4);
          unsubscribe && unsubscribe();
          if (!(_context4.t2 && _context4.t2.name === 'TypeError' && /fetch/i.test(_context4.t2.message))) {
            _context4.next = 38;
            break;
          }
          throw Object.assign(new _AxiosError["default"]('Network Error', _AxiosError["default"].ERR_NETWORK, config, request), {
            cause: _context4.t2.cause || _context4.t2
          });
        case 38:
          throw _AxiosError["default"].from(_context4.t2, _context4.t2 && _context4.t2.code, config, request);
        case 39:
        case "end":
          return _context4.stop();
      }
    }, _callee4, null, [[4, 33]]);
  }));
  return function (_x5) {
    return _ref4.apply(this, arguments);
  };
}());

},{"../core/AxiosError.js":153,"../core/AxiosHeaders.js":154,"../core/settle.js":159,"../helpers/composeSignals.js":169,"../helpers/progressEventReducer.js":178,"../helpers/resolveConfig.js":179,"../helpers/trackStream.js":185,"../platform/index.js":192,"../utils.js":193}],147:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _utils = _interopRequireDefault(require("./../utils.js"));
var _settle = _interopRequireDefault(require("./../core/settle.js"));
var _transitional = _interopRequireDefault(require("../defaults/transitional.js"));
var _AxiosError = _interopRequireDefault(require("../core/AxiosError.js"));
var _CanceledError = _interopRequireDefault(require("../cancel/CanceledError.js"));
var _parseProtocol = _interopRequireDefault(require("../helpers/parseProtocol.js"));
var _index = _interopRequireDefault(require("../platform/index.js"));
var _AxiosHeaders = _interopRequireDefault(require("../core/AxiosHeaders.js"));
var _progressEventReducer5 = require("../helpers/progressEventReducer.js");
var _resolveConfig = _interopRequireDefault(require("../helpers/resolveConfig.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
var isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';
var _default = exports["default"] = isXHRAdapterSupported && function (config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var _config = (0, _resolveConfig["default"])(config);
    var requestData = _config.data;
    var requestHeaders = _AxiosHeaders["default"].from(_config.headers).normalize();
    var responseType = _config.responseType,
      onUploadProgress = _config.onUploadProgress,
      onDownloadProgress = _config.onDownloadProgress;
    var onCanceled;
    var uploadThrottled, downloadThrottled;
    var flushUpload, flushDownload;
    function done() {
      flushUpload && flushUpload(); // flush events
      flushDownload && flushDownload(); // flush events

      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);
      _config.signal && _config.signal.removeEventListener('abort', onCanceled);
    }
    var request = new XMLHttpRequest();
    request.open(_config.method.toUpperCase(), _config.url, true);

    // Set the request timeout in MS
    request.timeout = _config.timeout;
    function onloadend() {
      if (!request) {
        return;
      }
      // Prepare the response
      var responseHeaders = _AxiosHeaders["default"].from('getAllResponseHeaders' in request && request.getAllResponseHeaders());
      var responseData = !responseType || responseType === 'text' || responseType === 'json' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };
      (0, _settle["default"])(function _resolve(value) {
        resolve(value);
        done();
      }, function _reject(err) {
        reject(err);
        done();
      }, response);

      // Clean up request
      request = null;
    }
    if ('onloadend' in request) {
      // Use onloadend if available
      request.onloadend = onloadend;
    } else {
      // Listen for ready state to emulate onloadend
      request.onreadystatechange = function handleLoad() {
        if (!request || request.readyState !== 4) {
          return;
        }

        // The request errored out and we didn't get a response, this will be
        // handled by onerror instead
        // With one exception: request that using file: protocol, most browsers
        // will return status as 0 even though it's a successful request
        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
          return;
        }
        // readystate handler is calling before onerror or ontimeout handlers,
        // so we should call onloadend on the next 'tick'
        setTimeout(onloadend);
      };
    }

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }
      reject(new _AxiosError["default"]('Request aborted', _AxiosError["default"].ECONNABORTED, config, request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(new _AxiosError["default"]('Network Error', _AxiosError["default"].ERR_NETWORK, config, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';
      var transitional = _config.transitional || _transitional["default"];
      if (_config.timeoutErrorMessage) {
        timeoutErrorMessage = _config.timeoutErrorMessage;
      }
      reject(new _AxiosError["default"](timeoutErrorMessage, transitional.clarifyTimeoutError ? _AxiosError["default"].ETIMEDOUT : _AxiosError["default"].ECONNABORTED, config, request));

      // Clean up request
      request = null;
    };

    // Remove Content-Type if data is undefined
    requestData === undefined && requestHeaders.setContentType(null);

    // Add headers to the request
    if ('setRequestHeader' in request) {
      _utils["default"].forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {
        request.setRequestHeader(key, val);
      });
    }

    // Add withCredentials to request if needed
    if (!_utils["default"].isUndefined(_config.withCredentials)) {
      request.withCredentials = !!_config.withCredentials;
    }

    // Add responseType to request if needed
    if (responseType && responseType !== 'json') {
      request.responseType = _config.responseType;
    }

    // Handle progress if needed
    if (onDownloadProgress) {
      var _progressEventReducer = (0, _progressEventReducer5.progressEventReducer)(onDownloadProgress, true);
      var _progressEventReducer2 = _slicedToArray(_progressEventReducer, 2);
      downloadThrottled = _progressEventReducer2[0];
      flushDownload = _progressEventReducer2[1];
      request.addEventListener('progress', downloadThrottled);
    }

    // Not all browsers support upload events
    if (onUploadProgress && request.upload) {
      var _progressEventReducer3 = (0, _progressEventReducer5.progressEventReducer)(onUploadProgress);
      var _progressEventReducer4 = _slicedToArray(_progressEventReducer3, 2);
      uploadThrottled = _progressEventReducer4[0];
      flushUpload = _progressEventReducer4[1];
      request.upload.addEventListener('progress', uploadThrottled);
      request.upload.addEventListener('loadend', flushUpload);
    }
    if (_config.cancelToken || _config.signal) {
      // Handle cancellation
      // eslint-disable-next-line func-names
      onCanceled = function onCanceled(cancel) {
        if (!request) {
          return;
        }
        reject(!cancel || cancel.type ? new _CanceledError["default"](null, config, request) : cancel);
        request.abort();
        request = null;
      };
      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);
      if (_config.signal) {
        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);
      }
    }
    var protocol = (0, _parseProtocol["default"])(_config.url);
    if (protocol && _index["default"].protocols.indexOf(protocol) === -1) {
      reject(new _AxiosError["default"]('Unsupported protocol ' + protocol + ':', _AxiosError["default"].ERR_BAD_REQUEST, config));
      return;
    }

    // Send the request
    request.send(requestData || null);
  });
};

},{"../cancel/CanceledError.js":150,"../core/AxiosError.js":153,"../core/AxiosHeaders.js":154,"../defaults/transitional.js":162,"../helpers/parseProtocol.js":177,"../helpers/progressEventReducer.js":178,"../helpers/resolveConfig.js":179,"../platform/index.js":192,"./../core/settle.js":159,"./../utils.js":193}],148:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _utils = _interopRequireDefault(require("./utils.js"));
var _bind = _interopRequireDefault(require("./helpers/bind.js"));
var _Axios = _interopRequireDefault(require("./core/Axios.js"));
var _mergeConfig = _interopRequireDefault(require("./core/mergeConfig.js"));
var _index = _interopRequireDefault(require("./defaults/index.js"));
var _formDataToJSON = _interopRequireDefault(require("./helpers/formDataToJSON.js"));
var _CanceledError = _interopRequireDefault(require("./cancel/CanceledError.js"));
var _CancelToken = _interopRequireDefault(require("./cancel/CancelToken.js"));
var _isCancel = _interopRequireDefault(require("./cancel/isCancel.js"));
var _data = require("./env/data.js");
var _toFormData = _interopRequireDefault(require("./helpers/toFormData.js"));
var _AxiosError = _interopRequireDefault(require("./core/AxiosError.js"));
var _spread = _interopRequireDefault(require("./helpers/spread.js"));
var _isAxiosError = _interopRequireDefault(require("./helpers/isAxiosError.js"));
var _AxiosHeaders = _interopRequireDefault(require("./core/AxiosHeaders.js"));
var _adapters = _interopRequireDefault(require("./adapters/adapters.js"));
var _HttpStatusCode = _interopRequireDefault(require("./helpers/HttpStatusCode.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 *
 * @returns {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new _Axios["default"](defaultConfig);
  var instance = (0, _bind["default"])(_Axios["default"].prototype.request, context);

  // Copy axios.prototype to instance
  _utils["default"].extend(instance, _Axios["default"].prototype, context, {
    allOwnKeys: true
  });

  // Copy context to instance
  _utils["default"].extend(instance, context, null, {
    allOwnKeys: true
  });

  // Factory for creating new instances
  instance.create = function create(instanceConfig) {
    return createInstance((0, _mergeConfig["default"])(defaultConfig, instanceConfig));
  };
  return instance;
}

// Create the default instance to be exported
var axios = createInstance(_index["default"]);

// Expose Axios class to allow class inheritance
axios.Axios = _Axios["default"];

// Expose Cancel & CancelToken
axios.CanceledError = _CanceledError["default"];
axios.CancelToken = _CancelToken["default"];
axios.isCancel = _isCancel["default"];
axios.VERSION = _data.VERSION;
axios.toFormData = _toFormData["default"];

// Expose AxiosError class
axios.AxiosError = _AxiosError["default"];

// alias for CanceledError for backward compatibility
axios.Cancel = axios.CanceledError;

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = _spread["default"];

// Expose isAxiosError
axios.isAxiosError = _isAxiosError["default"];

// Expose mergeConfig
axios.mergeConfig = _mergeConfig["default"];
axios.AxiosHeaders = _AxiosHeaders["default"];
axios.formToJSON = function (thing) {
  return (0, _formDataToJSON["default"])(_utils["default"].isHTMLForm(thing) ? new FormData(thing) : thing);
};
axios.getAdapter = _adapters["default"].getAdapter;
axios.HttpStatusCode = _HttpStatusCode["default"];
axios["default"] = axios;

// this module should only have a default export
var _default = exports["default"] = axios;

},{"./adapters/adapters.js":145,"./cancel/CancelToken.js":149,"./cancel/CanceledError.js":150,"./cancel/isCancel.js":151,"./core/Axios.js":152,"./core/AxiosError.js":153,"./core/AxiosHeaders.js":154,"./core/mergeConfig.js":158,"./defaults/index.js":161,"./env/data.js":163,"./helpers/HttpStatusCode.js":165,"./helpers/bind.js":166,"./helpers/formDataToJSON.js":171,"./helpers/isAxiosError.js":173,"./helpers/spread.js":181,"./helpers/toFormData.js":183,"./utils.js":193}],149:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _CanceledError = _interopRequireDefault(require("./CanceledError.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @param {Function} executor The executor function.
 *
 * @returns {CancelToken}
 */
var CancelToken = /*#__PURE__*/function () {
  function CancelToken(executor) {
    _classCallCheck(this, CancelToken);
    if (typeof executor !== 'function') {
      throw new TypeError('executor must be a function.');
    }
    var resolvePromise;
    this.promise = new Promise(function promiseExecutor(resolve) {
      resolvePromise = resolve;
    });
    var token = this;

    // eslint-disable-next-line func-names
    this.promise.then(function (cancel) {
      if (!token._listeners) return;
      var i = token._listeners.length;
      while (i-- > 0) {
        token._listeners[i](cancel);
      }
      token._listeners = null;
    });

    // eslint-disable-next-line func-names
    this.promise.then = function (onfulfilled) {
      var _resolve;
      // eslint-disable-next-line func-names
      var promise = new Promise(function (resolve) {
        token.subscribe(resolve);
        _resolve = resolve;
      }).then(onfulfilled);
      promise.cancel = function reject() {
        token.unsubscribe(_resolve);
      };
      return promise;
    };
    executor(function cancel(message, config, request) {
      if (token.reason) {
        // Cancellation has already been requested
        return;
      }
      token.reason = new _CanceledError["default"](message, config, request);
      resolvePromise(token.reason);
    });
  }

  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  return _createClass(CancelToken, [{
    key: "throwIfRequested",
    value: function throwIfRequested() {
      if (this.reason) {
        throw this.reason;
      }
    }

    /**
     * Subscribe to the cancel signal
     */
  }, {
    key: "subscribe",
    value: function subscribe(listener) {
      if (this.reason) {
        listener(this.reason);
        return;
      }
      if (this._listeners) {
        this._listeners.push(listener);
      } else {
        this._listeners = [listener];
      }
    }

    /**
     * Unsubscribe from the cancel signal
     */
  }, {
    key: "unsubscribe",
    value: function unsubscribe(listener) {
      if (!this._listeners) {
        return;
      }
      var index = this._listeners.indexOf(listener);
      if (index !== -1) {
        this._listeners.splice(index, 1);
      }
    }
  }, {
    key: "toAbortSignal",
    value: function toAbortSignal() {
      var _this = this;
      var controller = new AbortController();
      var abort = function abort(err) {
        controller.abort(err);
      };
      this.subscribe(abort);
      controller.signal.unsubscribe = function () {
        return _this.unsubscribe(abort);
      };
      return controller.signal;
    }

    /**
     * Returns an object that contains a new `CancelToken` and a function that, when called,
     * cancels the `CancelToken`.
     */
  }], [{
    key: "source",
    value: function source() {
      var cancel;
      var token = new CancelToken(function executor(c) {
        cancel = c;
      });
      return {
        token: token,
        cancel: cancel
      };
    }
  }]);
}();
var _default = exports["default"] = CancelToken;

},{"./CanceledError.js":150}],150:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _AxiosError = _interopRequireDefault(require("../core/AxiosError.js"));
var _utils = _interopRequireDefault(require("../utils.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
/**
 * A `CanceledError` is an object that is thrown when an operation is canceled.
 *
 * @param {string=} message The message.
 * @param {Object=} config The config.
 * @param {Object=} request The request.
 *
 * @returns {CanceledError} The created error.
 */
function CanceledError(message, config, request) {
  // eslint-disable-next-line no-eq-null,eqeqeq
  _AxiosError["default"].call(this, message == null ? 'canceled' : message, _AxiosError["default"].ERR_CANCELED, config, request);
  this.name = 'CanceledError';
}
_utils["default"].inherits(CanceledError, _AxiosError["default"], {
  __CANCEL__: true
});
var _default = exports["default"] = CanceledError;

},{"../core/AxiosError.js":153,"../utils.js":193}],151:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = isCancel;
function isCancel(value) {
  return !!(value && value.__CANCEL__);
}

},{}],152:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _utils = _interopRequireDefault(require("./../utils.js"));
var _buildURL = _interopRequireDefault(require("../helpers/buildURL.js"));
var _InterceptorManager = _interopRequireDefault(require("./InterceptorManager.js"));
var _dispatchRequest = _interopRequireDefault(require("./dispatchRequest.js"));
var _mergeConfig = _interopRequireDefault(require("./mergeConfig.js"));
var _buildFullPath = _interopRequireDefault(require("./buildFullPath.js"));
var _validator = _interopRequireDefault(require("../helpers/validator.js"));
var _AxiosHeaders = _interopRequireDefault(require("./AxiosHeaders.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var validators = _validator["default"].validators;

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 *
 * @return {Axios} A new instance of Axios
 */
var Axios = /*#__PURE__*/function () {
  function Axios(instanceConfig) {
    _classCallCheck(this, Axios);
    this.defaults = instanceConfig;
    this.interceptors = {
      request: new _InterceptorManager["default"](),
      response: new _InterceptorManager["default"]()
    };
  }

  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  return _createClass(Axios, [{
    key: "request",
    value: (function () {
      var _request2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(configOrUrl, config) {
        var dummy, stack;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              _context.next = 3;
              return this._request(configOrUrl, config);
            case 3:
              return _context.abrupt("return", _context.sent);
            case 6:
              _context.prev = 6;
              _context.t0 = _context["catch"](0);
              if (_context.t0 instanceof Error) {
                Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : dummy = new Error();

                // slice off the Error: ... line
                stack = dummy.stack ? dummy.stack.replace(/^.+\n/, '') : '';
                try {
                  if (!_context.t0.stack) {
                    _context.t0.stack = stack;
                    // match without the 2 top stack lines
                  } else if (stack && !String(_context.t0.stack).endsWith(stack.replace(/^.+\n.+\n/, ''))) {
                    _context.t0.stack += '\n' + stack;
                  }
                } catch (e) {
                  // ignore the case where "stack" is an un-writable property
                }
              }
              throw _context.t0;
            case 10:
            case "end":
              return _context.stop();
          }
        }, _callee, this, [[0, 6]]);
      }));
      function request(_x, _x2) {
        return _request2.apply(this, arguments);
      }
      return request;
    }())
  }, {
    key: "_request",
    value: function _request(configOrUrl, config) {
      /*eslint no-param-reassign:0*/
      // Allow for axios('example/url'[, config]) a la fetch API
      if (typeof configOrUrl === 'string') {
        config = config || {};
        config.url = configOrUrl;
      } else {
        config = configOrUrl || {};
      }
      config = (0, _mergeConfig["default"])(this.defaults, config);
      var _config = config,
        transitional = _config.transitional,
        paramsSerializer = _config.paramsSerializer,
        headers = _config.headers;
      if (transitional !== undefined) {
        _validator["default"].assertOptions(transitional, {
          silentJSONParsing: validators.transitional(validators["boolean"]),
          forcedJSONParsing: validators.transitional(validators["boolean"]),
          clarifyTimeoutError: validators.transitional(validators["boolean"])
        }, false);
      }
      if (paramsSerializer != null) {
        if (_utils["default"].isFunction(paramsSerializer)) {
          config.paramsSerializer = {
            serialize: paramsSerializer
          };
        } else {
          _validator["default"].assertOptions(paramsSerializer, {
            encode: validators["function"],
            serialize: validators["function"]
          }, true);
        }
      }

      // Set config.method
      config.method = (config.method || this.defaults.method || 'get').toLowerCase();

      // Flatten headers
      var contextHeaders = headers && _utils["default"].merge(headers.common, headers[config.method]);
      headers && _utils["default"].forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function (method) {
        delete headers[method];
      });
      config.headers = _AxiosHeaders["default"].concat(contextHeaders, headers);

      // filter out skipped interceptors
      var requestInterceptorChain = [];
      var synchronousRequestInterceptors = true;
      this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
        if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {
          return;
        }
        synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
        requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
      });
      var responseInterceptorChain = [];
      this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
        responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
      });
      var promise;
      var i = 0;
      var len;
      if (!synchronousRequestInterceptors) {
        var chain = [_dispatchRequest["default"].bind(this), undefined];
        chain.unshift.apply(chain, requestInterceptorChain);
        chain.push.apply(chain, responseInterceptorChain);
        len = chain.length;
        promise = Promise.resolve(config);
        while (i < len) {
          promise = promise.then(chain[i++], chain[i++]);
        }
        return promise;
      }
      len = requestInterceptorChain.length;
      var newConfig = config;
      i = 0;
      while (i < len) {
        var onFulfilled = requestInterceptorChain[i++];
        var onRejected = requestInterceptorChain[i++];
        try {
          newConfig = onFulfilled(newConfig);
        } catch (error) {
          onRejected.call(this, error);
          break;
        }
      }
      try {
        promise = _dispatchRequest["default"].call(this, newConfig);
      } catch (error) {
        return Promise.reject(error);
      }
      i = 0;
      len = responseInterceptorChain.length;
      while (i < len) {
        promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);
      }
      return promise;
    }
  }, {
    key: "getUri",
    value: function getUri(config) {
      config = (0, _mergeConfig["default"])(this.defaults, config);
      var fullPath = (0, _buildFullPath["default"])(config.baseURL, config.url);
      return (0, _buildURL["default"])(fullPath, config.params, config.paramsSerializer);
    }
  }]);
}(); // Provide aliases for supported request methods
_utils["default"].forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function (url, config) {
    return this.request((0, _mergeConfig["default"])(config || {}, {
      method: method,
      url: url,
      data: (config || {}).data
    }));
  };
});
_utils["default"].forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/

  function generateHTTPMethod(isForm) {
    return function httpMethod(url, data, config) {
      return this.request((0, _mergeConfig["default"])(config || {}, {
        method: method,
        headers: isForm ? {
          'Content-Type': 'multipart/form-data'
        } : {},
        url: url,
        data: data
      }));
    };
  }
  Axios.prototype[method] = generateHTTPMethod();
  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);
});
var _default = exports["default"] = Axios;

},{"../helpers/buildURL.js":167,"../helpers/validator.js":186,"./../utils.js":193,"./AxiosHeaders.js":154,"./InterceptorManager.js":155,"./buildFullPath.js":156,"./dispatchRequest.js":157,"./mergeConfig.js":158}],153:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _utils = _interopRequireDefault(require("../utils.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [config] The config.
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 *
 * @returns {Error} The created error.
 */
function AxiosError(message, code, config, request, response) {
  Error.call(this);
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, this.constructor);
  } else {
    this.stack = new Error().stack;
  }
  this.message = message;
  this.name = 'AxiosError';
  code && (this.code = code);
  config && (this.config = config);
  request && (this.request = request);
  if (response) {
    this.response = response;
    this.status = response.status ? response.status : null;
  }
}
_utils["default"].inherits(AxiosError, Error, {
  toJSON: function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: _utils["default"].toJSONObject(this.config),
      code: this.code,
      status: this.status
    };
  }
});
var prototype = AxiosError.prototype;
var descriptors = {};
['ERR_BAD_OPTION_VALUE', 'ERR_BAD_OPTION', 'ECONNABORTED', 'ETIMEDOUT', 'ERR_NETWORK', 'ERR_FR_TOO_MANY_REDIRECTS', 'ERR_DEPRECATED', 'ERR_BAD_RESPONSE', 'ERR_BAD_REQUEST', 'ERR_CANCELED', 'ERR_NOT_SUPPORT', 'ERR_INVALID_URL'
// eslint-disable-next-line func-names
].forEach(function (code) {
  descriptors[code] = {
    value: code
  };
});
Object.defineProperties(AxiosError, descriptors);
Object.defineProperty(prototype, 'isAxiosError', {
  value: true
});

// eslint-disable-next-line func-names
AxiosError.from = function (error, code, config, request, response, customProps) {
  var axiosError = Object.create(prototype);
  _utils["default"].toFlatObject(error, axiosError, function filter(obj) {
    return obj !== Error.prototype;
  }, function (prop) {
    return prop !== 'isAxiosError';
  });
  AxiosError.call(axiosError, error.message, code, config, request, response);
  axiosError.cause = error;
  axiosError.name = error.name;
  customProps && Object.assign(axiosError, customProps);
  return axiosError;
};
var _default = exports["default"] = AxiosError;

},{"../utils.js":193}],154:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _utils = _interopRequireDefault(require("../utils.js"));
var _parseHeaders = _interopRequireDefault(require("../helpers/parseHeaders.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var $internals = Symbol('internals');
function normalizeHeader(header) {
  return header && String(header).trim().toLowerCase();
}
function normalizeValue(value) {
  if (value === false || value == null) {
    return value;
  }
  return _utils["default"].isArray(value) ? value.map(normalizeValue) : String(value);
}
function parseTokens(str) {
  var tokens = Object.create(null);
  var tokensRE = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  var match;
  while (match = tokensRE.exec(str)) {
    tokens[match[1]] = match[2];
  }
  return tokens;
}
var isValidHeaderName = function isValidHeaderName(str) {
  return /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());
};
function matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {
  if (_utils["default"].isFunction(filter)) {
    return filter.call(this, value, header);
  }
  if (isHeaderNameFilter) {
    value = header;
  }
  if (!_utils["default"].isString(value)) return;
  if (_utils["default"].isString(filter)) {
    return value.indexOf(filter) !== -1;
  }
  if (_utils["default"].isRegExp(filter)) {
    return filter.test(value);
  }
}
function formatHeader(header) {
  return header.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, function (w, _char, str) {
    return _char.toUpperCase() + str;
  });
}
function buildAccessors(obj, header) {
  var accessorName = _utils["default"].toCamelCase(' ' + header);
  ['get', 'set', 'has'].forEach(function (methodName) {
    Object.defineProperty(obj, methodName + accessorName, {
      value: function value(arg1, arg2, arg3) {
        return this[methodName].call(this, header, arg1, arg2, arg3);
      },
      configurable: true
    });
  });
}
var AxiosHeaders = /*#__PURE__*/function () {
  function AxiosHeaders(headers) {
    _classCallCheck(this, AxiosHeaders);
    headers && this.set(headers);
  }
  return _createClass(AxiosHeaders, [{
    key: "set",
    value: function set(header, valueOrRewrite, rewrite) {
      var self = this;
      function setHeader(_value, _header, _rewrite) {
        var lHeader = normalizeHeader(_header);
        if (!lHeader) {
          throw new Error('header name must be a non-empty string');
        }
        var key = _utils["default"].findKey(self, lHeader);
        if (!key || self[key] === undefined || _rewrite === true || _rewrite === undefined && self[key] !== false) {
          self[key || _header] = normalizeValue(_value);
        }
      }
      var setHeaders = function setHeaders(headers, _rewrite) {
        return _utils["default"].forEach(headers, function (_value, _header) {
          return setHeader(_value, _header, _rewrite);
        });
      };
      if (_utils["default"].isPlainObject(header) || header instanceof this.constructor) {
        setHeaders(header, valueOrRewrite);
      } else if (_utils["default"].isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {
        setHeaders((0, _parseHeaders["default"])(header), valueOrRewrite);
      } else if (_utils["default"].isHeaders(header)) {
        var _iterator = _createForOfIteratorHelper(header.entries()),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var _step$value = _slicedToArray(_step.value, 2),
              key = _step$value[0],
              value = _step$value[1];
            setHeader(value, key, rewrite);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      } else {
        header != null && setHeader(valueOrRewrite, header, rewrite);
      }
      return this;
    }
  }, {
    key: "get",
    value: function get(header, parser) {
      header = normalizeHeader(header);
      if (header) {
        var key = _utils["default"].findKey(this, header);
        if (key) {
          var value = this[key];
          if (!parser) {
            return value;
          }
          if (parser === true) {
            return parseTokens(value);
          }
          if (_utils["default"].isFunction(parser)) {
            return parser.call(this, value, key);
          }
          if (_utils["default"].isRegExp(parser)) {
            return parser.exec(value);
          }
          throw new TypeError('parser must be boolean|regexp|function');
        }
      }
    }
  }, {
    key: "has",
    value: function has(header, matcher) {
      header = normalizeHeader(header);
      if (header) {
        var key = _utils["default"].findKey(this, header);
        return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));
      }
      return false;
    }
  }, {
    key: "delete",
    value: function _delete(header, matcher) {
      var self = this;
      var deleted = false;
      function deleteHeader(_header) {
        _header = normalizeHeader(_header);
        if (_header) {
          var key = _utils["default"].findKey(self, _header);
          if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {
            delete self[key];
            deleted = true;
          }
        }
      }
      if (_utils["default"].isArray(header)) {
        header.forEach(deleteHeader);
      } else {
        deleteHeader(header);
      }
      return deleted;
    }
  }, {
    key: "clear",
    value: function clear(matcher) {
      var keys = Object.keys(this);
      var i = keys.length;
      var deleted = false;
      while (i--) {
        var key = keys[i];
        if (!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {
          delete this[key];
          deleted = true;
        }
      }
      return deleted;
    }
  }, {
    key: "normalize",
    value: function normalize(format) {
      var self = this;
      var headers = {};
      _utils["default"].forEach(this, function (value, header) {
        var key = _utils["default"].findKey(headers, header);
        if (key) {
          self[key] = normalizeValue(value);
          delete self[header];
          return;
        }
        var normalized = format ? formatHeader(header) : String(header).trim();
        if (normalized !== header) {
          delete self[header];
        }
        self[normalized] = normalizeValue(value);
        headers[normalized] = true;
      });
      return this;
    }
  }, {
    key: "concat",
    value: function concat() {
      var _this$constructor;
      for (var _len = arguments.length, targets = new Array(_len), _key = 0; _key < _len; _key++) {
        targets[_key] = arguments[_key];
      }
      return (_this$constructor = this.constructor).concat.apply(_this$constructor, [this].concat(targets));
    }
  }, {
    key: "toJSON",
    value: function toJSON(asStrings) {
      var obj = Object.create(null);
      _utils["default"].forEach(this, function (value, header) {
        value != null && value !== false && (obj[header] = asStrings && _utils["default"].isArray(value) ? value.join(', ') : value);
      });
      return obj;
    }
  }, {
    key: Symbol.iterator,
    value: function value() {
      return Object.entries(this.toJSON())[Symbol.iterator]();
    }
  }, {
    key: "toString",
    value: function toString() {
      return Object.entries(this.toJSON()).map(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2),
          header = _ref2[0],
          value = _ref2[1];
        return header + ': ' + value;
      }).join('\n');
    }
  }, {
    key: Symbol.toStringTag,
    get: function get() {
      return 'AxiosHeaders';
    }
  }], [{
    key: "from",
    value: function from(thing) {
      return thing instanceof this ? thing : new this(thing);
    }
  }, {
    key: "concat",
    value: function concat(first) {
      var computed = new this(first);
      for (var _len2 = arguments.length, targets = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        targets[_key2 - 1] = arguments[_key2];
      }
      targets.forEach(function (target) {
        return computed.set(target);
      });
      return computed;
    }
  }, {
    key: "accessor",
    value: function accessor(header) {
      var internals = this[$internals] = this[$internals] = {
        accessors: {}
      };
      var accessors = internals.accessors;
      var prototype = this.prototype;
      function defineAccessor(_header) {
        var lHeader = normalizeHeader(_header);
        if (!accessors[lHeader]) {
          buildAccessors(prototype, _header);
          accessors[lHeader] = true;
        }
      }
      _utils["default"].isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);
      return this;
    }
  }]);
}();
AxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);

// reserved names hotfix
_utils["default"].reduceDescriptors(AxiosHeaders.prototype, function (_ref3, key) {
  var value = _ref3.value;
  var mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`
  return {
    get: function get() {
      return value;
    },
    set: function set(headerValue) {
      this[mapped] = headerValue;
    }
  };
});
_utils["default"].freezeMethods(AxiosHeaders);
var _default = exports["default"] = AxiosHeaders;

},{"../helpers/parseHeaders.js":176,"../utils.js":193}],155:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _utils = _interopRequireDefault(require("./../utils.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var InterceptorManager = /*#__PURE__*/function () {
  function InterceptorManager() {
    _classCallCheck(this, InterceptorManager);
    this.handlers = [];
  }

  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  return _createClass(InterceptorManager, [{
    key: "use",
    value: function use(fulfilled, rejected, options) {
      this.handlers.push({
        fulfilled: fulfilled,
        rejected: rejected,
        synchronous: options ? options.synchronous : false,
        runWhen: options ? options.runWhen : null
      });
      return this.handlers.length - 1;
    }

    /**
     * Remove an interceptor from the stack
     *
     * @param {Number} id The ID that was returned by `use`
     *
     * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
     */
  }, {
    key: "eject",
    value: function eject(id) {
      if (this.handlers[id]) {
        this.handlers[id] = null;
      }
    }

    /**
     * Clear all interceptors from the stack
     *
     * @returns {void}
     */
  }, {
    key: "clear",
    value: function clear() {
      if (this.handlers) {
        this.handlers = [];
      }
    }

    /**
     * Iterate over all the registered interceptors
     *
     * This method is particularly useful for skipping over any
     * interceptors that may have become `null` calling `eject`.
     *
     * @param {Function} fn The function to call for each interceptor
     *
     * @returns {void}
     */
  }, {
    key: "forEach",
    value: function forEach(fn) {
      _utils["default"].forEach(this.handlers, function forEachHandler(h) {
        if (h !== null) {
          fn(h);
        }
      });
    }
  }]);
}();
var _default = exports["default"] = InterceptorManager;

},{"./../utils.js":193}],156:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = buildFullPath;
var _isAbsoluteURL = _interopRequireDefault(require("../helpers/isAbsoluteURL.js"));
var _combineURLs = _interopRequireDefault(require("../helpers/combineURLs.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 *
 * @returns {string} The combined full path
 */
function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !(0, _isAbsoluteURL["default"])(requestedURL)) {
    return (0, _combineURLs["default"])(baseURL, requestedURL);
  }
  return requestedURL;
}

},{"../helpers/combineURLs.js":168,"../helpers/isAbsoluteURL.js":172}],157:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = dispatchRequest;
var _transformData = _interopRequireDefault(require("./transformData.js"));
var _isCancel = _interopRequireDefault(require("../cancel/isCancel.js"));
var _index = _interopRequireDefault(require("../defaults/index.js"));
var _CanceledError = _interopRequireDefault(require("../cancel/CanceledError.js"));
var _AxiosHeaders = _interopRequireDefault(require("../core/AxiosHeaders.js"));
var _adapters = _interopRequireDefault(require("../adapters/adapters.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
/**
 * Throws a `CanceledError` if cancellation has been requested.
 *
 * @param {Object} config The config that is to be used for the request
 *
 * @returns {void}
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
  if (config.signal && config.signal.aborted) {
    throw new _CanceledError["default"](null, config);
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 *
 * @returns {Promise} The Promise to be fulfilled
 */
function dispatchRequest(config) {
  throwIfCancellationRequested(config);
  config.headers = _AxiosHeaders["default"].from(config.headers);

  // Transform request data
  config.data = _transformData["default"].call(config, config.transformRequest);
  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {
    config.headers.setContentType('application/x-www-form-urlencoded', false);
  }
  var adapter = _adapters["default"].getAdapter(config.adapter || _index["default"].adapter);
  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = _transformData["default"].call(config, config.transformResponse, response);
    response.headers = _AxiosHeaders["default"].from(response.headers);
    return response;
  }, function onAdapterRejection(reason) {
    if (!(0, _isCancel["default"])(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = _transformData["default"].call(config, config.transformResponse, reason.response);
        reason.response.headers = _AxiosHeaders["default"].from(reason.response.headers);
      }
    }
    return Promise.reject(reason);
  });
}

},{"../adapters/adapters.js":145,"../cancel/CanceledError.js":150,"../cancel/isCancel.js":151,"../core/AxiosHeaders.js":154,"../defaults/index.js":161,"./transformData.js":160}],158:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = mergeConfig;
var _utils = _interopRequireDefault(require("../utils.js"));
var _AxiosHeaders = _interopRequireDefault(require("./AxiosHeaders.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var headersToObject = function headersToObject(thing) {
  return thing instanceof _AxiosHeaders["default"] ? _objectSpread({}, thing) : thing;
};

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 *
 * @returns {Object} New object resulting from merging config2 to config1
 */
function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};
  function getMergedValue(target, source, caseless) {
    if (_utils["default"].isPlainObject(target) && _utils["default"].isPlainObject(source)) {
      return _utils["default"].merge.call({
        caseless: caseless
      }, target, source);
    } else if (_utils["default"].isPlainObject(source)) {
      return _utils["default"].merge({}, source);
    } else if (_utils["default"].isArray(source)) {
      return source.slice();
    }
    return source;
  }

  // eslint-disable-next-line consistent-return
  function mergeDeepProperties(a, b, caseless) {
    if (!_utils["default"].isUndefined(b)) {
      return getMergedValue(a, b, caseless);
    } else if (!_utils["default"].isUndefined(a)) {
      return getMergedValue(undefined, a, caseless);
    }
  }

  // eslint-disable-next-line consistent-return
  function valueFromConfig2(a, b) {
    if (!_utils["default"].isUndefined(b)) {
      return getMergedValue(undefined, b);
    }
  }

  // eslint-disable-next-line consistent-return
  function defaultToConfig2(a, b) {
    if (!_utils["default"].isUndefined(b)) {
      return getMergedValue(undefined, b);
    } else if (!_utils["default"].isUndefined(a)) {
      return getMergedValue(undefined, a);
    }
  }

  // eslint-disable-next-line consistent-return
  function mergeDirectKeys(a, b, prop) {
    if (prop in config2) {
      return getMergedValue(a, b);
    } else if (prop in config1) {
      return getMergedValue(undefined, a);
    }
  }
  var mergeMap = {
    url: valueFromConfig2,
    method: valueFromConfig2,
    data: valueFromConfig2,
    baseURL: defaultToConfig2,
    transformRequest: defaultToConfig2,
    transformResponse: defaultToConfig2,
    paramsSerializer: defaultToConfig2,
    timeout: defaultToConfig2,
    timeoutMessage: defaultToConfig2,
    withCredentials: defaultToConfig2,
    withXSRFToken: defaultToConfig2,
    adapter: defaultToConfig2,
    responseType: defaultToConfig2,
    xsrfCookieName: defaultToConfig2,
    xsrfHeaderName: defaultToConfig2,
    onUploadProgress: defaultToConfig2,
    onDownloadProgress: defaultToConfig2,
    decompress: defaultToConfig2,
    maxContentLength: defaultToConfig2,
    maxBodyLength: defaultToConfig2,
    beforeRedirect: defaultToConfig2,
    transport: defaultToConfig2,
    httpAgent: defaultToConfig2,
    httpsAgent: defaultToConfig2,
    cancelToken: defaultToConfig2,
    socketPath: defaultToConfig2,
    responseEncoding: defaultToConfig2,
    validateStatus: mergeDirectKeys,
    headers: function headers(a, b) {
      return mergeDeepProperties(headersToObject(a), headersToObject(b), true);
    }
  };
  _utils["default"].forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {
    var merge = mergeMap[prop] || mergeDeepProperties;
    var configValue = merge(config1[prop], config2[prop], prop);
    _utils["default"].isUndefined(configValue) && merge !== mergeDirectKeys || (config[prop] = configValue);
  });
  return config;
}

},{"../utils.js":193,"./AxiosHeaders.js":154}],159:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = settle;
var _AxiosError = _interopRequireDefault(require("./AxiosError.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 *
 * @returns {object} The response.
 */
function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(new _AxiosError["default"]('Request failed with status code ' + response.status, [_AxiosError["default"].ERR_BAD_REQUEST, _AxiosError["default"].ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4], response.config, response.request, response));
  }
}

},{"./AxiosError.js":153}],160:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = transformData;
var _utils = _interopRequireDefault(require("./../utils.js"));
var _index = _interopRequireDefault(require("../defaults/index.js"));
var _AxiosHeaders = _interopRequireDefault(require("../core/AxiosHeaders.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
/**
 * Transform the data for a request or a response
 *
 * @param {Array|Function} fns A single function or Array of functions
 * @param {?Object} response The response object
 *
 * @returns {*} The resulting transformed data
 */
function transformData(fns, response) {
  var config = this || _index["default"];
  var context = response || config;
  var headers = _AxiosHeaders["default"].from(context.headers);
  var data = context.data;
  _utils["default"].forEach(fns, function transform(fn) {
    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);
  });
  headers.normalize();
  return data;
}

},{"../core/AxiosHeaders.js":154,"../defaults/index.js":161,"./../utils.js":193}],161:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _utils = _interopRequireDefault(require("../utils.js"));
var _AxiosError = _interopRequireDefault(require("../core/AxiosError.js"));
var _transitional = _interopRequireDefault(require("./transitional.js"));
var _toFormData = _interopRequireDefault(require("../helpers/toFormData.js"));
var _toURLEncodedForm = _interopRequireDefault(require("../helpers/toURLEncodedForm.js"));
var _index = _interopRequireDefault(require("../platform/index.js"));
var _formDataToJSON = _interopRequireDefault(require("../helpers/formDataToJSON.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
/**
 * It takes a string, tries to parse it, and if it fails, it returns the stringified version
 * of the input
 *
 * @param {any} rawValue - The value to be stringified.
 * @param {Function} parser - A function that parses a string into a JavaScript object.
 * @param {Function} encoder - A function that takes a value and returns a string.
 *
 * @returns {string} A stringified version of the rawValue.
 */
function stringifySafely(rawValue, parser, encoder) {
  if (_utils["default"].isString(rawValue)) {
    try {
      (parser || JSON.parse)(rawValue);
      return _utils["default"].trim(rawValue);
    } catch (e) {
      if (e.name !== 'SyntaxError') {
        throw e;
      }
    }
  }
  return (encoder || JSON.stringify)(rawValue);
}
var defaults = {
  transitional: _transitional["default"],
  adapter: ['xhr', 'http', 'fetch'],
  transformRequest: [function transformRequest(data, headers) {
    var contentType = headers.getContentType() || '';
    var hasJSONContentType = contentType.indexOf('application/json') > -1;
    var isObjectPayload = _utils["default"].isObject(data);
    if (isObjectPayload && _utils["default"].isHTMLForm(data)) {
      data = new FormData(data);
    }
    var isFormData = _utils["default"].isFormData(data);
    if (isFormData) {
      return hasJSONContentType ? JSON.stringify((0, _formDataToJSON["default"])(data)) : data;
    }
    if (_utils["default"].isArrayBuffer(data) || _utils["default"].isBuffer(data) || _utils["default"].isStream(data) || _utils["default"].isFile(data) || _utils["default"].isBlob(data) || _utils["default"].isReadableStream(data)) {
      return data;
    }
    if (_utils["default"].isArrayBufferView(data)) {
      return data.buffer;
    }
    if (_utils["default"].isURLSearchParams(data)) {
      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);
      return data.toString();
    }
    var isFileList;
    if (isObjectPayload) {
      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {
        return (0, _toURLEncodedForm["default"])(data, this.formSerializer).toString();
      }
      if ((isFileList = _utils["default"].isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {
        var _FormData = this.env && this.env.FormData;
        return (0, _toFormData["default"])(isFileList ? {
          'files[]': data
        } : data, _FormData && new _FormData(), this.formSerializer);
      }
    }
    if (isObjectPayload || hasJSONContentType) {
      headers.setContentType('application/json', false);
      return stringifySafely(data);
    }
    return data;
  }],
  transformResponse: [function transformResponse(data) {
    var transitional = this.transitional || defaults.transitional;
    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
    var JSONRequested = this.responseType === 'json';
    if (_utils["default"].isResponse(data) || _utils["default"].isReadableStream(data)) {
      return data;
    }
    if (data && _utils["default"].isString(data) && (forcedJSONParsing && !this.responseType || JSONRequested)) {
      var silentJSONParsing = transitional && transitional.silentJSONParsing;
      var strictJSONParsing = !silentJSONParsing && JSONRequested;
      try {
        return JSON.parse(data);
      } catch (e) {
        if (strictJSONParsing) {
          if (e.name === 'SyntaxError') {
            throw _AxiosError["default"].from(e, _AxiosError["default"].ERR_BAD_RESPONSE, this, null, this.response);
          }
          throw e;
        }
      }
    }
    return data;
  }],
  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: _index["default"].classes.FormData,
    Blob: _index["default"].classes.Blob
  },
  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  },
  headers: {
    common: {
      'Accept': 'application/json, text/plain, */*',
      'Content-Type': undefined
    }
  }
};
_utils["default"].forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], function (method) {
  defaults.headers[method] = {};
});
var _default = exports["default"] = defaults;

},{"../core/AxiosError.js":153,"../helpers/formDataToJSON.js":171,"../helpers/toFormData.js":183,"../helpers/toURLEncodedForm.js":184,"../platform/index.js":192,"../utils.js":193,"./transitional.js":162}],162:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _default = exports["default"] = {
  silentJSONParsing: true,
  forcedJSONParsing: true,
  clarifyTimeoutError: false
};

},{}],163:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VERSION = void 0;
var VERSION = exports.VERSION = "1.7.7";

},{}],164:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _toFormData = _interopRequireDefault(require("./toFormData.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
/**
 * It encodes a string by replacing all characters that are not in the unreserved set with
 * their percent-encoded equivalents
 *
 * @param {string} str - The string to encode.
 *
 * @returns {string} The encoded string.
 */
function encode(str) {
  var charMap = {
    '!': '%21',
    "'": '%27',
    '(': '%28',
    ')': '%29',
    '~': '%7E',
    '%20': '+',
    '%00': '\x00'
  };
  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {
    return charMap[match];
  });
}

/**
 * It takes a params object and converts it to a FormData object
 *
 * @param {Object<string, any>} params - The parameters to be converted to a FormData object.
 * @param {Object<string, any>} options - The options object passed to the Axios constructor.
 *
 * @returns {void}
 */
function AxiosURLSearchParams(params, options) {
  this._pairs = [];
  params && (0, _toFormData["default"])(params, this, options);
}
var prototype = AxiosURLSearchParams.prototype;
prototype.append = function append(name, value) {
  this._pairs.push([name, value]);
};
prototype.toString = function toString(encoder) {
  var _encode = encoder ? function (value) {
    return encoder.call(this, value, encode);
  } : encode;
  return this._pairs.map(function each(pair) {
    return _encode(pair[0]) + '=' + _encode(pair[1]);
  }, '').join('&');
};
var _default = exports["default"] = AxiosURLSearchParams;

},{"./toFormData.js":183}],165:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
var HttpStatusCode = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511
};
Object.entries(HttpStatusCode).forEach(function (_ref) {
  var _ref2 = _slicedToArray(_ref, 2),
    key = _ref2[0],
    value = _ref2[1];
  HttpStatusCode[value] = key;
});
var _default = exports["default"] = HttpStatusCode;

},{}],166:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = bind;
function bind(fn, thisArg) {
  return function wrap() {
    return fn.apply(thisArg, arguments);
  };
}

},{}],167:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = buildURL;
var _utils = _interopRequireDefault(require("../utils.js"));
var _AxiosURLSearchParams = _interopRequireDefault(require("../helpers/AxiosURLSearchParams.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
/**
 * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their
 * URI encoded counterparts
 *
 * @param {string} val The value to be encoded.
 *
 * @returns {string} The encoded value.
 */
function encode(val) {
  return encodeURIComponent(val).replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @param {?object} options
 *
 * @returns {string} The formatted url
 */
function buildURL(url, params, options) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }
  var _encode = options && options.encode || encode;
  var serializeFn = options && options.serialize;
  var serializedParams;
  if (serializeFn) {
    serializedParams = serializeFn(params, options);
  } else {
    serializedParams = _utils["default"].isURLSearchParams(params) ? params.toString() : new _AxiosURLSearchParams["default"](params, options).toString(_encode);
  }
  if (serializedParams) {
    var hashmarkIndex = url.indexOf("#");
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }
  return url;
}

},{"../helpers/AxiosURLSearchParams.js":164,"../utils.js":193}],168:[function(require,module,exports){
'use strict';

/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 *
 * @returns {string} The combined URL
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = combineURLs;
function combineURLs(baseURL, relativeURL) {
  return relativeURL ? baseURL.replace(/\/?\/$/, '') + '/' + relativeURL.replace(/^\/+/, '') : baseURL;
}

},{}],169:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _CanceledError = _interopRequireDefault(require("../cancel/CanceledError.js"));
var _AxiosError = _interopRequireDefault(require("../core/AxiosError.js"));
var _utils = _interopRequireDefault(require("../utils.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
var composeSignals = function composeSignals(signals, timeout) {
  var _signals = signals = signals ? signals.filter(Boolean) : [],
    length = _signals.length;
  if (timeout || length) {
    var controller = new AbortController();
    var aborted;
    var onabort = function onabort(reason) {
      if (!aborted) {
        aborted = true;
        unsubscribe();
        var err = reason instanceof Error ? reason : this.reason;
        controller.abort(err instanceof _AxiosError["default"] ? err : new _CanceledError["default"](err instanceof Error ? err.message : err));
      }
    };
    var timer = timeout && setTimeout(function () {
      timer = null;
      onabort(new _AxiosError["default"]("timeout ".concat(timeout, " of ms exceeded"), _AxiosError["default"].ETIMEDOUT));
    }, timeout);
    var unsubscribe = function unsubscribe() {
      if (signals) {
        timer && clearTimeout(timer);
        timer = null;
        signals.forEach(function (signal) {
          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);
        });
        signals = null;
      }
    };
    signals.forEach(function (signal) {
      return signal.addEventListener('abort', onabort);
    });
    var signal = controller.signal;
    signal.unsubscribe = function () {
      return _utils["default"].asap(unsubscribe);
    };
    return signal;
  }
};
var _default = exports["default"] = composeSignals;

},{"../cancel/CanceledError.js":150,"../core/AxiosError.js":153,"../utils.js":193}],170:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _utils = _interopRequireDefault(require("./../utils.js"));
var _index = _interopRequireDefault(require("../platform/index.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
var _default = exports["default"] = _index["default"].hasStandardBrowserEnv ?
// Standard browser envs support document.cookie
{
  write: function write(name, value, expires, path, domain, secure) {
    var cookie = [name + '=' + encodeURIComponent(value)];
    _utils["default"].isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());
    _utils["default"].isString(path) && cookie.push('path=' + path);
    _utils["default"].isString(domain) && cookie.push('domain=' + domain);
    secure === true && cookie.push('secure');
    document.cookie = cookie.join('; ');
  },
  read: function read(name) {
    var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
    return match ? decodeURIComponent(match[3]) : null;
  },
  remove: function remove(name) {
    this.write(name, '', Date.now() - 86400000);
  }
} :
// Non-standard browser env (web workers, react-native) lack needed support.
{
  write: function write() {},
  read: function read() {
    return null;
  },
  remove: function remove() {}
};

},{"../platform/index.js":192,"./../utils.js":193}],171:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _utils = _interopRequireDefault(require("../utils.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
/**
 * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']
 *
 * @param {string} name - The name of the property to get.
 *
 * @returns An array of strings.
 */
function parsePropPath(name) {
  // foo[x][y][z]
  // foo.x.y.z
  // foo-x-y-z
  // foo x y z
  return _utils["default"].matchAll(/\w+|\[(\w*)]/g, name).map(function (match) {
    return match[0] === '[]' ? '' : match[1] || match[0];
  });
}

/**
 * Convert an array to an object.
 *
 * @param {Array<any>} arr - The array to convert to an object.
 *
 * @returns An object with the same keys and values as the array.
 */
function arrayToObject(arr) {
  var obj = {};
  var keys = Object.keys(arr);
  var i;
  var len = keys.length;
  var key;
  for (i = 0; i < len; i++) {
    key = keys[i];
    obj[key] = arr[key];
  }
  return obj;
}

/**
 * It takes a FormData object and returns a JavaScript object
 *
 * @param {string} formData The FormData object to convert to JSON.
 *
 * @returns {Object<string, any> | null} The converted object.
 */
function formDataToJSON(formData) {
  function buildPath(path, value, target, index) {
    var name = path[index++];
    if (name === '__proto__') return true;
    var isNumericKey = Number.isFinite(+name);
    var isLast = index >= path.length;
    name = !name && _utils["default"].isArray(target) ? target.length : name;
    if (isLast) {
      if (_utils["default"].hasOwnProp(target, name)) {
        target[name] = [target[name], value];
      } else {
        target[name] = value;
      }
      return !isNumericKey;
    }
    if (!target[name] || !_utils["default"].isObject(target[name])) {
      target[name] = [];
    }
    var result = buildPath(path, value, target[name], index);
    if (result && _utils["default"].isArray(target[name])) {
      target[name] = arrayToObject(target[name]);
    }
    return !isNumericKey;
  }
  if (_utils["default"].isFormData(formData) && _utils["default"].isFunction(formData.entries)) {
    var obj = {};
    _utils["default"].forEachEntry(formData, function (name, value) {
      buildPath(parsePropPath(name), value, obj, 0);
    });
    return obj;
  }
  return null;
}
var _default = exports["default"] = formDataToJSON;

},{"../utils.js":193}],172:[function(require,module,exports){
'use strict';

/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 *
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = isAbsoluteURL;
function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);
}

},{}],173:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = isAxiosError;
var _utils = _interopRequireDefault(require("./../utils.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 *
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */
function isAxiosError(payload) {
  return _utils["default"].isObject(payload) && payload.isAxiosError === true;
}

},{"./../utils.js":193}],174:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _utils = _interopRequireDefault(require("./../utils.js"));
var _index = _interopRequireDefault(require("../platform/index.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
var _default = exports["default"] = _index["default"].hasStandardBrowserEnv ?
// Standard browser envs have full support of the APIs needed to test
// whether the request URL is of the same origin as current location.
function standardBrowserEnv() {
  var msie = _index["default"].navigator && /(msie|trident)/i.test(_index["default"].navigator.userAgent);
  var urlParsingNode = document.createElement('a');
  var originURL;

  /**
  * Parse a URL to discover its components
  *
  * @param {String} url The URL to be parsed
  * @returns {Object}
  */
  function resolveURL(url) {
    var href = url;
    if (msie) {
      // IE needs attribute set twice to normalize properties
      urlParsingNode.setAttribute('href', href);
      href = urlParsingNode.href;
    }
    urlParsingNode.setAttribute('href', href);

    // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
    return {
      href: urlParsingNode.href,
      protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
      host: urlParsingNode.host,
      search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
      hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
      hostname: urlParsingNode.hostname,
      port: urlParsingNode.port,
      pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname
    };
  }
  originURL = resolveURL(window.location.href);

  /**
  * Determine if a URL shares the same origin as the current location
  *
  * @param {String} requestURL The URL to test
  * @returns {boolean} True if URL shares the same origin, otherwise false
  */
  return function isURLSameOrigin(requestURL) {
    var parsed = _utils["default"].isString(requestURL) ? resolveURL(requestURL) : requestURL;
    return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
  };
}() :
// Non standard browser envs (web workers, react-native) lack needed support.
function nonStandardBrowserEnv() {
  return function isURLSameOrigin() {
    return true;
  };
}();

},{"../platform/index.js":192,"./../utils.js":193}],175:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
// eslint-disable-next-line strict
var _default = exports["default"] = null;

},{}],176:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _utils = _interopRequireDefault(require("./../utils.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
// RawAxiosHeaders whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = _utils["default"].toObjectSet(['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent']);

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} rawHeaders Headers needing to be parsed
 *
 * @returns {Object} Headers parsed into an object
 */
var _default = exports["default"] = function _default(rawHeaders) {
  var parsed = {};
  var key;
  var val;
  var i;
  rawHeaders && rawHeaders.split('\n').forEach(function parser(line) {
    i = line.indexOf(':');
    key = line.substring(0, i).trim().toLowerCase();
    val = line.substring(i + 1).trim();
    if (!key || parsed[key] && ignoreDuplicateOf[key]) {
      return;
    }
    if (key === 'set-cookie') {
      if (parsed[key]) {
        parsed[key].push(val);
      } else {
        parsed[key] = [val];
      }
    } else {
      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
    }
  });
  return parsed;
};

},{"./../utils.js":193}],177:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = parseProtocol;
function parseProtocol(url) {
  var match = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url);
  return match && match[1] || '';
}

},{}],178:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.progressEventReducer = exports.progressEventDecorator = exports.asyncDecorator = void 0;
var _speedometer2 = _interopRequireDefault(require("./speedometer.js"));
var _throttle = _interopRequireDefault(require("./throttle.js"));
var _utils = _interopRequireDefault(require("../utils.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var progressEventReducer = exports.progressEventReducer = function progressEventReducer(listener, isDownloadStream) {
  var freq = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;
  var bytesNotified = 0;
  var _speedometer = (0, _speedometer2["default"])(50, 250);
  return (0, _throttle["default"])(function (e) {
    var loaded = e.loaded;
    var total = e.lengthComputable ? e.total : undefined;
    var progressBytes = loaded - bytesNotified;
    var rate = _speedometer(progressBytes);
    var inRange = loaded <= total;
    bytesNotified = loaded;
    var data = _defineProperty({
      loaded: loaded,
      total: total,
      progress: total ? loaded / total : undefined,
      bytes: progressBytes,
      rate: rate ? rate : undefined,
      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,
      event: e,
      lengthComputable: total != null
    }, isDownloadStream ? 'download' : 'upload', true);
    listener(data);
  }, freq);
};
var progressEventDecorator = exports.progressEventDecorator = function progressEventDecorator(total, throttled) {
  var lengthComputable = total != null;
  return [function (loaded) {
    return throttled[0]({
      lengthComputable: lengthComputable,
      total: total,
      loaded: loaded
    });
  }, throttled[1]];
};
var asyncDecorator = exports.asyncDecorator = function asyncDecorator(fn) {
  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return _utils["default"].asap(function () {
      return fn.apply(void 0, args);
    });
  };
};

},{"../utils.js":193,"./speedometer.js":180,"./throttle.js":182}],179:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _index = _interopRequireDefault(require("../platform/index.js"));
var _utils = _interopRequireDefault(require("../utils.js"));
var _isURLSameOrigin = _interopRequireDefault(require("./isURLSameOrigin.js"));
var _cookies = _interopRequireDefault(require("./cookies.js"));
var _buildFullPath = _interopRequireDefault(require("../core/buildFullPath.js"));
var _mergeConfig = _interopRequireDefault(require("../core/mergeConfig.js"));
var _AxiosHeaders = _interopRequireDefault(require("../core/AxiosHeaders.js"));
var _buildURL = _interopRequireDefault(require("./buildURL.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _toArray(r) { return _arrayWithHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
var _default = exports["default"] = function _default(config) {
  var newConfig = (0, _mergeConfig["default"])({}, config);
  var data = newConfig.data,
    withXSRFToken = newConfig.withXSRFToken,
    xsrfHeaderName = newConfig.xsrfHeaderName,
    xsrfCookieName = newConfig.xsrfCookieName,
    headers = newConfig.headers,
    auth = newConfig.auth;
  newConfig.headers = headers = _AxiosHeaders["default"].from(headers);
  newConfig.url = (0, _buildURL["default"])((0, _buildFullPath["default"])(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);

  // HTTP basic authentication
  if (auth) {
    headers.set('Authorization', 'Basic ' + btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : '')));
  }
  var contentType;
  if (_utils["default"].isFormData(data)) {
    if (_index["default"].hasStandardBrowserEnv || _index["default"].hasStandardBrowserWebWorkerEnv) {
      headers.setContentType(undefined); // Let the browser set it
    } else if ((contentType = headers.getContentType()) !== false) {
      // fix semicolon duplication issue for ReactNative FormData implementation
      var _ref = contentType ? contentType.split(';').map(function (token) {
          return token.trim();
        }).filter(Boolean) : [],
        _ref2 = _toArray(_ref),
        type = _ref2[0],
        tokens = _ref2.slice(1);
      headers.setContentType([type || 'multipart/form-data'].concat(_toConsumableArray(tokens)).join('; '));
    }
  }

  // Add xsrf header
  // This is only done if running in a standard browser environment.
  // Specifically not if we're in a web worker, or react-native.

  if (_index["default"].hasStandardBrowserEnv) {
    withXSRFToken && _utils["default"].isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));
    if (withXSRFToken || withXSRFToken !== false && (0, _isURLSameOrigin["default"])(newConfig.url)) {
      // Add xsrf header
      var xsrfValue = xsrfHeaderName && xsrfCookieName && _cookies["default"].read(xsrfCookieName);
      if (xsrfValue) {
        headers.set(xsrfHeaderName, xsrfValue);
      }
    }
  }
  return newConfig;
};

},{"../core/AxiosHeaders.js":154,"../core/buildFullPath.js":156,"../core/mergeConfig.js":158,"../platform/index.js":192,"../utils.js":193,"./buildURL.js":167,"./cookies.js":170,"./isURLSameOrigin.js":174}],180:[function(require,module,exports){
'use strict';

/**
 * Calculate data maxRate
 * @param {Number} [samplesCount= 10]
 * @param {Number} [min= 1000]
 * @returns {Function}
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
function speedometer(samplesCount, min) {
  samplesCount = samplesCount || 10;
  var bytes = new Array(samplesCount);
  var timestamps = new Array(samplesCount);
  var head = 0;
  var tail = 0;
  var firstSampleTS;
  min = min !== undefined ? min : 1000;
  return function push(chunkLength) {
    var now = Date.now();
    var startedAt = timestamps[tail];
    if (!firstSampleTS) {
      firstSampleTS = now;
    }
    bytes[head] = chunkLength;
    timestamps[head] = now;
    var i = tail;
    var bytesCount = 0;
    while (i !== head) {
      bytesCount += bytes[i++];
      i = i % samplesCount;
    }
    head = (head + 1) % samplesCount;
    if (head === tail) {
      tail = (tail + 1) % samplesCount;
    }
    if (now - firstSampleTS < min) {
      return;
    }
    var passed = startedAt && now - startedAt;
    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;
  };
}
var _default = exports["default"] = speedometer;

},{}],181:[function(require,module,exports){
'use strict';

/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 *
 * @returns {Function}
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = spread;
function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
}

},{}],182:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
/**
 * Throttle decorator
 * @param {Function} fn
 * @param {Number} freq
 * @return {Function}
 */
function throttle(fn, freq) {
  var timestamp = 0;
  var threshold = 1000 / freq;
  var lastArgs;
  var timer;
  var invoke = function invoke(args) {
    var now = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Date.now();
    timestamp = now;
    lastArgs = null;
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
    fn.apply(null, args);
  };
  var throttled = function throttled() {
    var now = Date.now();
    var passed = now - timestamp;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    if (passed >= threshold) {
      invoke(args, now);
    } else {
      lastArgs = args;
      if (!timer) {
        timer = setTimeout(function () {
          timer = null;
          invoke(lastArgs);
        }, threshold - passed);
      }
    }
  };
  var flush = function flush() {
    return lastArgs && invoke(lastArgs);
  };
  return [throttled, flush];
}
var _default = exports["default"] = throttle;

},{}],183:[function(require,module,exports){
(function (Buffer){(function (){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _utils = _interopRequireDefault(require("../utils.js"));
var _AxiosError = _interopRequireDefault(require("../core/AxiosError.js"));
var _FormData = _interopRequireDefault(require("../platform/node/classes/FormData.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); } // temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored
/**
 * Determines if the given thing is a array or js object.
 *
 * @param {string} thing - The object or array to be visited.
 *
 * @returns {boolean}
 */
function isVisitable(thing) {
  return _utils["default"].isPlainObject(thing) || _utils["default"].isArray(thing);
}

/**
 * It removes the brackets from the end of a string
 *
 * @param {string} key - The key of the parameter.
 *
 * @returns {string} the key without the brackets.
 */
function removeBrackets(key) {
  return _utils["default"].endsWith(key, '[]') ? key.slice(0, -2) : key;
}

/**
 * It takes a path, a key, and a boolean, and returns a string
 *
 * @param {string} path - The path to the current key.
 * @param {string} key - The key of the current object being iterated over.
 * @param {string} dots - If true, the key will be rendered with dots instead of brackets.
 *
 * @returns {string} The path to the current key.
 */
function renderKey(path, key, dots) {
  if (!path) return key;
  return path.concat(key).map(function each(token, i) {
    // eslint-disable-next-line no-param-reassign
    token = removeBrackets(token);
    return !dots && i ? '[' + token + ']' : token;
  }).join(dots ? '.' : '');
}

/**
 * If the array is an array and none of its elements are visitable, then it's a flat array.
 *
 * @param {Array<any>} arr - The array to check
 *
 * @returns {boolean}
 */
function isFlatArray(arr) {
  return _utils["default"].isArray(arr) && !arr.some(isVisitable);
}
var predicates = _utils["default"].toFlatObject(_utils["default"], {}, null, function filter(prop) {
  return /^is[A-Z]/.test(prop);
});

/**
 * Convert a data object to FormData
 *
 * @param {Object} obj
 * @param {?Object} [formData]
 * @param {?Object} [options]
 * @param {Function} [options.visitor]
 * @param {Boolean} [options.metaTokens = true]
 * @param {Boolean} [options.dots = false]
 * @param {?Boolean} [options.indexes = false]
 *
 * @returns {Object}
 **/

/**
 * It converts an object into a FormData object
 *
 * @param {Object<any, any>} obj - The object to convert to form data.
 * @param {string} formData - The FormData object to append to.
 * @param {Object<string, any>} options
 *
 * @returns
 */
function toFormData(obj, formData, options) {
  if (!_utils["default"].isObject(obj)) {
    throw new TypeError('target must be an object');
  }

  // eslint-disable-next-line no-param-reassign
  formData = formData || new (_FormData["default"] || FormData)();

  // eslint-disable-next-line no-param-reassign
  options = _utils["default"].toFlatObject(options, {
    metaTokens: true,
    dots: false,
    indexes: false
  }, false, function defined(option, source) {
    // eslint-disable-next-line no-eq-null,eqeqeq
    return !_utils["default"].isUndefined(source[option]);
  });
  var metaTokens = options.metaTokens;
  // eslint-disable-next-line no-use-before-define
  var visitor = options.visitor || defaultVisitor;
  var dots = options.dots;
  var indexes = options.indexes;
  var _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;
  var useBlob = _Blob && _utils["default"].isSpecCompliantForm(formData);
  if (!_utils["default"].isFunction(visitor)) {
    throw new TypeError('visitor must be a function');
  }
  function convertValue(value) {
    if (value === null) return '';
    if (_utils["default"].isDate(value)) {
      return value.toISOString();
    }
    if (!useBlob && _utils["default"].isBlob(value)) {
      throw new _AxiosError["default"]('Blob is not supported. Use a Buffer instead.');
    }
    if (_utils["default"].isArrayBuffer(value) || _utils["default"].isTypedArray(value)) {
      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);
    }
    return value;
  }

  /**
   * Default visitor.
   *
   * @param {*} value
   * @param {String|Number} key
   * @param {Array<String|Number>} path
   * @this {FormData}
   *
   * @returns {boolean} return true to visit the each prop of the value recursively
   */
  function defaultVisitor(value, key, path) {
    var arr = value;
    if (value && !path && _typeof(value) === 'object') {
      if (_utils["default"].endsWith(key, '{}')) {
        // eslint-disable-next-line no-param-reassign
        key = metaTokens ? key : key.slice(0, -2);
        // eslint-disable-next-line no-param-reassign
        value = JSON.stringify(value);
      } else if (_utils["default"].isArray(value) && isFlatArray(value) || (_utils["default"].isFileList(value) || _utils["default"].endsWith(key, '[]')) && (arr = _utils["default"].toArray(value))) {
        // eslint-disable-next-line no-param-reassign
        key = removeBrackets(key);
        arr.forEach(function each(el, index) {
          !(_utils["default"].isUndefined(el) || el === null) && formData.append(
          // eslint-disable-next-line no-nested-ternary
          indexes === true ? renderKey([key], index, dots) : indexes === null ? key : key + '[]', convertValue(el));
        });
        return false;
      }
    }
    if (isVisitable(value)) {
      return true;
    }
    formData.append(renderKey(path, key, dots), convertValue(value));
    return false;
  }
  var stack = [];
  var exposedHelpers = Object.assign(predicates, {
    defaultVisitor: defaultVisitor,
    convertValue: convertValue,
    isVisitable: isVisitable
  });
  function build(value, path) {
    if (_utils["default"].isUndefined(value)) return;
    if (stack.indexOf(value) !== -1) {
      throw Error('Circular reference detected in ' + path.join('.'));
    }
    stack.push(value);
    _utils["default"].forEach(value, function each(el, key) {
      var result = !(_utils["default"].isUndefined(el) || el === null) && visitor.call(formData, el, _utils["default"].isString(key) ? key.trim() : key, path, exposedHelpers);
      if (result === true) {
        build(el, path ? path.concat(key) : [key]);
      }
    });
    stack.pop();
  }
  if (!_utils["default"].isObject(obj)) {
    throw new TypeError('data must be an object');
  }
  build(obj);
  return formData;
}
var _default = exports["default"] = toFormData;

}).call(this)}).call(this,require("buffer").Buffer)
},{"../core/AxiosError.js":153,"../platform/node/classes/FormData.js":175,"../utils.js":193,"buffer":196}],184:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = toURLEncodedForm;
var _utils = _interopRequireDefault(require("../utils.js"));
var _toFormData = _interopRequireDefault(require("./toFormData.js"));
var _index = _interopRequireDefault(require("../platform/index.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function toURLEncodedForm(data, options) {
  return (0, _toFormData["default"])(data, new _index["default"].classes.URLSearchParams(), Object.assign({
    visitor: function visitor(value, key, path, helpers) {
      if (_index["default"].isNode && _utils["default"].isBuffer(value)) {
        this.append(key, value.toString('base64'));
        return false;
      }
      return helpers.defaultVisitor.apply(this, arguments);
    }
  }, options));
}

},{"../platform/index.js":192,"../utils.js":193,"./toFormData.js":183}],185:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.trackStream = exports.streamChunk = exports.readBytes = void 0;
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function _wrapAsyncGenerator(e) { return function () { return new AsyncGenerator(e.apply(this, arguments)); }; }
function AsyncGenerator(e) { var r, t; function resume(r, t) { try { var n = e[r](t), o = n.value, u = o instanceof _OverloadYield; Promise.resolve(u ? o.v : o).then(function (t) { if (u) { var i = "return" === r ? "return" : "next"; if (!o.k || t.done) return resume(i, t); t = e[i](t).value; } settle(n.done ? "return" : "normal", t); }, function (e) { resume("throw", e); }); } catch (e) { settle("throw", e); } } function settle(e, n) { switch (e) { case "return": r.resolve({ value: n, done: !0 }); break; case "throw": r.reject(n); break; default: r.resolve({ value: n, done: !1 }); } (r = r.next) ? resume(r.key, r.arg) : t = null; } this._invoke = function (e, n) { return new Promise(function (o, u) { var i = { key: e, arg: n, resolve: o, reject: u, next: null }; t ? t = t.next = i : (r = t = i, resume(e, n)); }); }, "function" != typeof e["return"] && (this["return"] = void 0); }
AsyncGenerator.prototype["function" == typeof Symbol && Symbol.asyncIterator || "@@asyncIterator"] = function () { return this; }, AsyncGenerator.prototype.next = function (e) { return this._invoke("next", e); }, AsyncGenerator.prototype["throw"] = function (e) { return this._invoke("throw", e); }, AsyncGenerator.prototype["return"] = function (e) { return this._invoke("return", e); };
function _awaitAsyncGenerator(e) { return new _OverloadYield(e, 0); }
function _asyncGeneratorDelegate(t) { var e = {}, n = !1; function pump(e, r) { return n = !0, r = new Promise(function (n) { n(t[e](r)); }), { done: !1, value: new _OverloadYield(r, 1) }; } return e["undefined" != typeof Symbol && Symbol.iterator || "@@iterator"] = function () { return this; }, e.next = function (t) { return n ? (n = !1, t) : pump("next", t); }, "function" == typeof t["throw"] && (e["throw"] = function (t) { if (n) throw n = !1, t; return pump("throw", t); }), "function" == typeof t["return"] && (e["return"] = function (t) { return n ? (n = !1, t) : pump("return", t); }), e; }
function _OverloadYield(e, d) { this.v = e, this.k = d; }
function _asyncIterator(r) { var n, t, o, e = 2; for ("undefined" != typeof Symbol && (t = Symbol.asyncIterator, o = Symbol.iterator); e--;) { if (t && null != (n = r[t])) return n.call(r); if (o && null != (n = r[o])) return new AsyncFromSyncIterator(n.call(r)); t = "@@asyncIterator", o = "@@iterator"; } throw new TypeError("Object is not async iterable"); }
function AsyncFromSyncIterator(r) { function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) return Promise.reject(new TypeError(r + " is not an object.")); var n = r.done; return Promise.resolve(r.value).then(function (r) { return { value: r, done: n }; }); } return AsyncFromSyncIterator = function AsyncFromSyncIterator(r) { this.s = r, this.n = r.next; }, AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, "return": function _return(r) { var n = this.s["return"]; return void 0 === n ? Promise.resolve({ value: r, done: !0 }) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments)); }, "throw": function _throw(r) { var n = this.s["return"]; return void 0 === n ? Promise.reject(r) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments)); } }, new AsyncFromSyncIterator(r); }
var streamChunk = exports.streamChunk = /*#__PURE__*/_regeneratorRuntime().mark(function streamChunk(chunk, chunkSize) {
  var len, pos, end;
  return _regeneratorRuntime().wrap(function streamChunk$(_context) {
    while (1) switch (_context.prev = _context.next) {
      case 0:
        len = chunk.byteLength;
        if (!(!chunkSize || len < chunkSize)) {
          _context.next = 5;
          break;
        }
        _context.next = 4;
        return chunk;
      case 4:
        return _context.abrupt("return");
      case 5:
        pos = 0;
      case 6:
        if (!(pos < len)) {
          _context.next = 13;
          break;
        }
        end = pos + chunkSize;
        _context.next = 10;
        return chunk.slice(pos, end);
      case 10:
        pos = end;
        _context.next = 6;
        break;
      case 13:
      case "end":
        return _context.stop();
    }
  }, streamChunk);
});
var readBytes = exports.readBytes = /*#__PURE__*/function () {
  var _ref = _wrapAsyncGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(iterable, chunkSize) {
    var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk;
    return _regeneratorRuntime().wrap(function _callee$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          _iteratorAbruptCompletion = false;
          _didIteratorError = false;
          _context2.prev = 2;
          _iterator = _asyncIterator(readStream(iterable));
        case 4:
          _context2.next = 6;
          return _awaitAsyncGenerator(_iterator.next());
        case 6:
          if (!(_iteratorAbruptCompletion = !(_step = _context2.sent).done)) {
            _context2.next = 12;
            break;
          }
          chunk = _step.value;
          return _context2.delegateYield(_asyncGeneratorDelegate(_asyncIterator(streamChunk(chunk, chunkSize)), _awaitAsyncGenerator), "t0", 9);
        case 9:
          _iteratorAbruptCompletion = false;
          _context2.next = 4;
          break;
        case 12:
          _context2.next = 18;
          break;
        case 14:
          _context2.prev = 14;
          _context2.t1 = _context2["catch"](2);
          _didIteratorError = true;
          _iteratorError = _context2.t1;
        case 18:
          _context2.prev = 18;
          _context2.prev = 19;
          if (!(_iteratorAbruptCompletion && _iterator["return"] != null)) {
            _context2.next = 23;
            break;
          }
          _context2.next = 23;
          return _awaitAsyncGenerator(_iterator["return"]());
        case 23:
          _context2.prev = 23;
          if (!_didIteratorError) {
            _context2.next = 26;
            break;
          }
          throw _iteratorError;
        case 26:
          return _context2.finish(23);
        case 27:
          return _context2.finish(18);
        case 28:
        case "end":
          return _context2.stop();
      }
    }, _callee, null, [[2, 14, 18, 28], [19,, 23, 27]]);
  }));
  return function readBytes(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();
var readStream = /*#__PURE__*/function () {
  var _ref2 = _wrapAsyncGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(stream) {
    var reader, _yield$_awaitAsyncGen, done, value;
    return _regeneratorRuntime().wrap(function _callee2$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          if (!stream[Symbol.asyncIterator]) {
            _context3.next = 3;
            break;
          }
          return _context3.delegateYield(_asyncGeneratorDelegate(_asyncIterator(stream), _awaitAsyncGenerator), "t0", 2);
        case 2:
          return _context3.abrupt("return");
        case 3:
          reader = stream.getReader();
          _context3.prev = 4;
        case 5:
          _context3.next = 7;
          return _awaitAsyncGenerator(reader.read());
        case 7:
          _yield$_awaitAsyncGen = _context3.sent;
          done = _yield$_awaitAsyncGen.done;
          value = _yield$_awaitAsyncGen.value;
          if (!done) {
            _context3.next = 12;
            break;
          }
          return _context3.abrupt("break", 16);
        case 12:
          _context3.next = 14;
          return value;
        case 14:
          _context3.next = 5;
          break;
        case 16:
          _context3.prev = 16;
          _context3.next = 19;
          return _awaitAsyncGenerator(reader.cancel());
        case 19:
          return _context3.finish(16);
        case 20:
        case "end":
          return _context3.stop();
      }
    }, _callee2, null, [[4,, 16, 20]]);
  }));
  return function readStream(_x3) {
    return _ref2.apply(this, arguments);
  };
}();
var trackStream = exports.trackStream = function trackStream(stream, chunkSize, onProgress, onFinish) {
  var iterator = readBytes(stream, chunkSize);
  var bytes = 0;
  var done;
  var _onFinish = function _onFinish(e) {
    if (!done) {
      done = true;
      onFinish && onFinish(e);
    }
  };
  return new ReadableStream({
    pull: function pull(controller) {
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
        var _yield$iterator$next, _done, value, len, loadedBytes;
        return _regeneratorRuntime().wrap(function _callee3$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _context4.prev = 0;
              _context4.next = 3;
              return iterator.next();
            case 3:
              _yield$iterator$next = _context4.sent;
              _done = _yield$iterator$next.done;
              value = _yield$iterator$next.value;
              if (!_done) {
                _context4.next = 10;
                break;
              }
              _onFinish();
              controller.close();
              return _context4.abrupt("return");
            case 10:
              len = value.byteLength;
              if (onProgress) {
                loadedBytes = bytes += len;
                onProgress(loadedBytes);
              }
              controller.enqueue(new Uint8Array(value));
              _context4.next = 19;
              break;
            case 15:
              _context4.prev = 15;
              _context4.t0 = _context4["catch"](0);
              _onFinish(_context4.t0);
              throw _context4.t0;
            case 19:
            case "end":
              return _context4.stop();
          }
        }, _callee3, null, [[0, 15]]);
      }))();
    },
    cancel: function cancel(reason) {
      _onFinish(reason);
      return iterator["return"]();
    }
  }, {
    highWaterMark: 2
  });
};

},{}],186:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _data = require("../env/data.js");
var _AxiosError = _interopRequireDefault(require("../core/AxiosError.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var validators = {};

// eslint-disable-next-line func-names
['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function (type, i) {
  validators[type] = function validator(thing) {
    return _typeof(thing) === type || 'a' + (i < 1 ? 'n ' : ' ') + type;
  };
});
var deprecatedWarnings = {};

/**
 * Transitional option validator
 *
 * @param {function|boolean?} validator - set to false if the transitional option has been removed
 * @param {string?} version - deprecated version / removed since version
 * @param {string?} message - some message with additional info
 *
 * @returns {function}
 */
validators.transitional = function transitional(validator, version, message) {
  function formatMessage(opt, desc) {
    return '[Axios v' + _data.VERSION + '] Transitional option \'' + opt + '\'' + desc + (message ? '. ' + message : '');
  }

  // eslint-disable-next-line func-names
  return function (value, opt, opts) {
    if (validator === false) {
      throw new _AxiosError["default"](formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')), _AxiosError["default"].ERR_DEPRECATED);
    }
    if (version && !deprecatedWarnings[opt]) {
      deprecatedWarnings[opt] = true;
      // eslint-disable-next-line no-console
      console.warn(formatMessage(opt, ' has been deprecated since v' + version + ' and will be removed in the near future'));
    }
    return validator ? validator(value, opt, opts) : true;
  };
};

/**
 * Assert object's properties type
 *
 * @param {object} options
 * @param {object} schema
 * @param {boolean?} allowUnknown
 *
 * @returns {object}
 */

function assertOptions(options, schema, allowUnknown) {
  if (_typeof(options) !== 'object') {
    throw new _AxiosError["default"]('options must be an object', _AxiosError["default"].ERR_BAD_OPTION_VALUE);
  }
  var keys = Object.keys(options);
  var i = keys.length;
  while (i-- > 0) {
    var opt = keys[i];
    var validator = schema[opt];
    if (validator) {
      var value = options[opt];
      var result = value === undefined || validator(value, opt, options);
      if (result !== true) {
        throw new _AxiosError["default"]('option ' + opt + ' must be ' + result, _AxiosError["default"].ERR_BAD_OPTION_VALUE);
      }
      continue;
    }
    if (allowUnknown !== true) {
      throw new _AxiosError["default"]('Unknown option ' + opt, _AxiosError["default"].ERR_BAD_OPTION);
    }
  }
}
var _default = exports["default"] = {
  assertOptions: assertOptions,
  validators: validators
};

},{"../core/AxiosError.js":153,"../env/data.js":163}],187:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _default = exports["default"] = typeof Blob !== 'undefined' ? Blob : null;

},{}],188:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _default = exports["default"] = typeof FormData !== 'undefined' ? FormData : null;

},{}],189:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _AxiosURLSearchParams = _interopRequireDefault(require("../../../helpers/AxiosURLSearchParams.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
var _default = exports["default"] = typeof URLSearchParams !== 'undefined' ? URLSearchParams : _AxiosURLSearchParams["default"];

},{"../../../helpers/AxiosURLSearchParams.js":164}],190:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _URLSearchParams = _interopRequireDefault(require("./classes/URLSearchParams.js"));
var _FormData = _interopRequireDefault(require("./classes/FormData.js"));
var _Blob = _interopRequireDefault(require("./classes/Blob.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
var _default = exports["default"] = {
  isBrowser: true,
  classes: {
    URLSearchParams: _URLSearchParams["default"],
    FormData: _FormData["default"],
    Blob: _Blob["default"]
  },
  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']
};

},{"./classes/Blob.js":187,"./classes/FormData.js":188,"./classes/URLSearchParams.js":189}],191:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.origin = exports.navigator = exports.hasStandardBrowserWebWorkerEnv = exports.hasStandardBrowserEnv = exports.hasBrowserEnv = void 0;
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var hasBrowserEnv = exports.hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';
var _navigator = exports.navigator = (typeof navigator === "undefined" ? "undefined" : _typeof(navigator)) === 'object' && navigator || undefined;

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 *
 * @returns {boolean}
 */
var hasStandardBrowserEnv = exports.hasStandardBrowserEnv = hasBrowserEnv && (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);

/**
 * Determine if we're running in a standard browser webWorker environment
 *
 * Although the `isStandardBrowserEnv` method indicates that
 * `allows axios to run in a web worker`, the WebWorker will still be
 * filtered out due to its judgment standard
 * `typeof window !== 'undefined' && typeof document !== 'undefined'`.
 * This leads to a problem when axios post `FormData` in webWorker
 */
var hasStandardBrowserWebWorkerEnv = exports.hasStandardBrowserWebWorkerEnv = function () {
  return typeof WorkerGlobalScope !== 'undefined' &&
  // eslint-disable-next-line no-undef
  self instanceof WorkerGlobalScope && typeof self.importScripts === 'function';
}();
var origin = exports.origin = hasBrowserEnv && window.location.href || 'http://localhost';

},{}],192:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _index = _interopRequireDefault(require("./node/index.js"));
var utils = _interopRequireWildcard(require("./common/utils.js"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var _default = exports["default"] = _objectSpread(_objectSpread({}, utils), _index["default"]);

},{"./common/utils.js":191,"./node/index.js":190}],193:[function(require,module,exports){
(function (process,global,setImmediate){(function (){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _bind = _interopRequireDefault(require("./helpers/bind.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;
var getPrototypeOf = Object.getPrototypeOf;
var kindOf = function (cache) {
  return function (thing) {
    var str = toString.call(thing);
    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
  };
}(Object.create(null));
var kindOfTest = function kindOfTest(type) {
  type = type.toLowerCase();
  return function (thing) {
    return kindOf(thing) === type;
  };
};
var typeOfTest = function typeOfTest(type) {
  return function (thing) {
    return _typeof(thing) === type;
  };
};

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 *
 * @returns {boolean} True if value is an Array, otherwise false
 */
var isArray = Array.isArray;

/**
 * Determine if a value is undefined
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if the value is undefined, otherwise false
 */
var isUndefined = typeOfTest('undefined');

/**
 * Determine if a value is a Buffer
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
var isArrayBuffer = kindOfTest('ArrayBuffer');

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
    result = ArrayBuffer.isView(val);
  } else {
    result = val && val.buffer && isArrayBuffer(val.buffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a String, otherwise false
 */
var isString = typeOfTest('string');

/**
 * Determine if a value is a Function
 *
 * @param {*} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
var isFunction = typeOfTest('function');

/**
 * Determine if a value is a Number
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Number, otherwise false
 */
var isNumber = typeOfTest('number');

/**
 * Determine if a value is an Object
 *
 * @param {*} thing The value to test
 *
 * @returns {boolean} True if value is an Object, otherwise false
 */
var isObject = function isObject(thing) {
  return thing !== null && _typeof(thing) === 'object';
};

/**
 * Determine if a value is a Boolean
 *
 * @param {*} thing The value to test
 * @returns {boolean} True if value is a Boolean, otherwise false
 */
var isBoolean = function isBoolean(thing) {
  return thing === true || thing === false;
};

/**
 * Determine if a value is a plain Object
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a plain Object, otherwise false
 */
var isPlainObject = function isPlainObject(val) {
  if (kindOf(val) !== 'object') {
    return false;
  }
  var prototype = getPrototypeOf(val);
  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);
};

/**
 * Determine if a value is a Date
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Date, otherwise false
 */
var isDate = kindOfTest('Date');

/**
 * Determine if a value is a File
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a File, otherwise false
 */
var isFile = kindOfTest('File');

/**
 * Determine if a value is a Blob
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Blob, otherwise false
 */
var isBlob = kindOfTest('Blob');

/**
 * Determine if a value is a FileList
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a File, otherwise false
 */
var isFileList = kindOfTest('FileList');

/**
 * Determine if a value is a Stream
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Stream, otherwise false
 */
var isStream = function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
};

/**
 * Determine if a value is a FormData
 *
 * @param {*} thing The value to test
 *
 * @returns {boolean} True if value is an FormData, otherwise false
 */
var isFormData = function isFormData(thing) {
  var kind;
  return thing && (typeof FormData === 'function' && thing instanceof FormData || isFunction(thing.append) && ((kind = kindOf(thing)) === 'formdata' ||
  // detect form-data instance
  kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]'));
};

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
var isURLSearchParams = kindOfTest('URLSearchParams');
var _map = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest),
  _map2 = _slicedToArray(_map, 4),
  isReadableStream = _map2[0],
  isRequest = _map2[1],
  isResponse = _map2[2],
  isHeaders = _map2[3];

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 *
 * @returns {String} The String freed of excess whitespace
 */
var trim = function trim(str) {
  return str.trim ? str.trim() : str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
};

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 *
 * @param {Boolean} [allOwnKeys = false]
 * @returns {any}
 */
function forEach(obj, fn) {
  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
    _ref$allOwnKeys = _ref.allOwnKeys,
    allOwnKeys = _ref$allOwnKeys === void 0 ? false : _ref$allOwnKeys;
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }
  var i;
  var l;

  // Force an array if not already something iterable
  if (_typeof(obj) !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }
  if (isArray(obj)) {
    // Iterate over array values
    for (i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    var keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);
    var len = keys.length;
    var key;
    for (i = 0; i < len; i++) {
      key = keys[i];
      fn.call(null, obj[key], key, obj);
    }
  }
}
function findKey(obj, key) {
  key = key.toLowerCase();
  var keys = Object.keys(obj);
  var i = keys.length;
  var _key;
  while (i-- > 0) {
    _key = keys[i];
    if (key === _key.toLowerCase()) {
      return _key;
    }
  }
  return null;
}
var _global = function () {
  /*eslint no-undef:0*/
  if (typeof globalThis !== "undefined") return globalThis;
  return typeof self !== "undefined" ? self : typeof window !== 'undefined' ? window : global;
}();
var isContextDefined = function isContextDefined(context) {
  return !isUndefined(context) && context !== _global;
};

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 *
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */
) {
  var _ref2 = isContextDefined(this) && this || {},
    caseless = _ref2.caseless;
  var result = {};
  var assignValue = function assignValue(val, key) {
    var targetKey = caseless && findKey(result, key) || key;
    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {
      result[targetKey] = merge(result[targetKey], val);
    } else if (isPlainObject(val)) {
      result[targetKey] = merge({}, val);
    } else if (isArray(val)) {
      result[targetKey] = val.slice();
    } else {
      result[targetKey] = val;
    }
  };
  for (var i = 0, l = arguments.length; i < l; i++) {
    arguments[i] && forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 *
 * @param {Boolean} [allOwnKeys]
 * @returns {Object} The resulting value of object a
 */
var extend = function extend(a, b, thisArg) {
  var _ref3 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
    allOwnKeys = _ref3.allOwnKeys;
  forEach(b, function (val, key) {
    if (thisArg && isFunction(val)) {
      a[key] = (0, _bind["default"])(val, thisArg);
    } else {
      a[key] = val;
    }
  }, {
    allOwnKeys: allOwnKeys
  });
  return a;
};

/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 *
 * @returns {string} content value without BOM
 */
var stripBOM = function stripBOM(content) {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }
  return content;
};

/**
 * Inherit the prototype methods from one constructor into another
 * @param {function} constructor
 * @param {function} superConstructor
 * @param {object} [props]
 * @param {object} [descriptors]
 *
 * @returns {void}
 */
var inherits = function inherits(constructor, superConstructor, props, descriptors) {
  constructor.prototype = Object.create(superConstructor.prototype, descriptors);
  constructor.prototype.constructor = constructor;
  Object.defineProperty(constructor, 'super', {
    value: superConstructor.prototype
  });
  props && Object.assign(constructor.prototype, props);
};

/**
 * Resolve object with deep prototype chain to a flat object
 * @param {Object} sourceObj source object
 * @param {Object} [destObj]
 * @param {Function|Boolean} [filter]
 * @param {Function} [propFilter]
 *
 * @returns {Object}
 */
var toFlatObject = function toFlatObject(sourceObj, destObj, filter, propFilter) {
  var props;
  var i;
  var prop;
  var merged = {};
  destObj = destObj || {};
  // eslint-disable-next-line no-eq-null,eqeqeq
  if (sourceObj == null) return destObj;
  do {
    props = Object.getOwnPropertyNames(sourceObj);
    i = props.length;
    while (i-- > 0) {
      prop = props[i];
      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {
        destObj[prop] = sourceObj[prop];
        merged[prop] = true;
      }
    }
    sourceObj = filter !== false && getPrototypeOf(sourceObj);
  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);
  return destObj;
};

/**
 * Determines whether a string ends with the characters of a specified string
 *
 * @param {String} str
 * @param {String} searchString
 * @param {Number} [position= 0]
 *
 * @returns {boolean}
 */
var endsWith = function endsWith(str, searchString, position) {
  str = String(str);
  if (position === undefined || position > str.length) {
    position = str.length;
  }
  position -= searchString.length;
  var lastIndex = str.indexOf(searchString, position);
  return lastIndex !== -1 && lastIndex === position;
};

/**
 * Returns new array from array like object or null if failed
 *
 * @param {*} [thing]
 *
 * @returns {?Array}
 */
var toArray = function toArray(thing) {
  if (!thing) return null;
  if (isArray(thing)) return thing;
  var i = thing.length;
  if (!isNumber(i)) return null;
  var arr = new Array(i);
  while (i-- > 0) {
    arr[i] = thing[i];
  }
  return arr;
};

/**
 * Checking if the Uint8Array exists and if it does, it returns a function that checks if the
 * thing passed in is an instance of Uint8Array
 *
 * @param {TypedArray}
 *
 * @returns {Array}
 */
// eslint-disable-next-line func-names
var isTypedArray = function (TypedArray) {
  // eslint-disable-next-line func-names
  return function (thing) {
    return TypedArray && thing instanceof TypedArray;
  };
}(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));

/**
 * For each entry in the object, call the function with the key and value.
 *
 * @param {Object<any, any>} obj - The object to iterate over.
 * @param {Function} fn - The function to call for each entry.
 *
 * @returns {void}
 */
var forEachEntry = function forEachEntry(obj, fn) {
  var generator = obj && obj[Symbol.iterator];
  var iterator = generator.call(obj);
  var result;
  while ((result = iterator.next()) && !result.done) {
    var pair = result.value;
    fn.call(obj, pair[0], pair[1]);
  }
};

/**
 * It takes a regular expression and a string, and returns an array of all the matches
 *
 * @param {string} regExp - The regular expression to match against.
 * @param {string} str - The string to search.
 *
 * @returns {Array<boolean>}
 */
var matchAll = function matchAll(regExp, str) {
  var matches;
  var arr = [];
  while ((matches = regExp.exec(str)) !== null) {
    arr.push(matches);
  }
  return arr;
};

/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */
var isHTMLForm = kindOfTest('HTMLFormElement');
var toCamelCase = function toCamelCase(str) {
  return str.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function replacer(m, p1, p2) {
    return p1.toUpperCase() + p2;
  });
};

/* Creating a function that will check if an object has a property. */
var hasOwnProperty = function (_ref4) {
  var hasOwnProperty = _ref4.hasOwnProperty;
  return function (obj, prop) {
    return hasOwnProperty.call(obj, prop);
  };
}(Object.prototype);

/**
 * Determine if a value is a RegExp object
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a RegExp object, otherwise false
 */
var isRegExp = kindOfTest('RegExp');
var reduceDescriptors = function reduceDescriptors(obj, reducer) {
  var descriptors = Object.getOwnPropertyDescriptors(obj);
  var reducedDescriptors = {};
  forEach(descriptors, function (descriptor, name) {
    var ret;
    if ((ret = reducer(descriptor, name, obj)) !== false) {
      reducedDescriptors[name] = ret || descriptor;
    }
  });
  Object.defineProperties(obj, reducedDescriptors);
};

/**
 * Makes all methods read-only
 * @param {Object} obj
 */

var freezeMethods = function freezeMethods(obj) {
  reduceDescriptors(obj, function (descriptor, name) {
    // skip restricted props in strict mode
    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {
      return false;
    }
    var value = obj[name];
    if (!isFunction(value)) return;
    descriptor.enumerable = false;
    if ('writable' in descriptor) {
      descriptor.writable = false;
      return;
    }
    if (!descriptor.set) {
      descriptor.set = function () {
        throw Error('Can not rewrite read-only method \'' + name + '\'');
      };
    }
  });
};
var toObjectSet = function toObjectSet(arrayOrString, delimiter) {
  var obj = {};
  var define = function define(arr) {
    arr.forEach(function (value) {
      obj[value] = true;
    });
  };
  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));
  return obj;
};
var noop = function noop() {};
var toFiniteNumber = function toFiniteNumber(value, defaultValue) {
  return value != null && Number.isFinite(value = +value) ? value : defaultValue;
};
var ALPHA = 'abcdefghijklmnopqrstuvwxyz';
var DIGIT = '0123456789';
var ALPHABET = {
  DIGIT: DIGIT,
  ALPHA: ALPHA,
  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT
};
var generateString = function generateString() {
  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 16;
  var alphabet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ALPHABET.ALPHA_DIGIT;
  var str = '';
  var length = alphabet.length;
  while (size--) {
    str += alphabet[Math.random() * length | 0];
  }
  return str;
};

/**
 * If the thing is a FormData object, return true, otherwise return false.
 *
 * @param {unknown} thing - The thing to check.
 *
 * @returns {boolean}
 */
function isSpecCompliantForm(thing) {
  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);
}
var toJSONObject = function toJSONObject(obj) {
  var stack = new Array(10);
  var _visit = function visit(source, i) {
    if (isObject(source)) {
      if (stack.indexOf(source) >= 0) {
        return;
      }
      if (!('toJSON' in source)) {
        stack[i] = source;
        var target = isArray(source) ? [] : {};
        forEach(source, function (value, key) {
          var reducedValue = _visit(value, i + 1);
          !isUndefined(reducedValue) && (target[key] = reducedValue);
        });
        stack[i] = undefined;
        return target;
      }
    }
    return source;
  };
  return _visit(obj, 0);
};
var isAsyncFn = kindOfTest('AsyncFunction');
var isThenable = function isThenable(thing) {
  return thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing["catch"]);
};

// original code
// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34

var _setImmediate = function (setImmediateSupported, postMessageSupported) {
  if (setImmediateSupported) {
    return setImmediate;
  }
  return postMessageSupported ? function (token, callbacks) {
    _global.addEventListener("message", function (_ref5) {
      var source = _ref5.source,
        data = _ref5.data;
      if (source === _global && data === token) {
        callbacks.length && callbacks.shift()();
      }
    }, false);
    return function (cb) {
      callbacks.push(cb);
      _global.postMessage(token, "*");
    };
  }("axios@".concat(Math.random()), []) : function (cb) {
    return setTimeout(cb);
  };
}(typeof setImmediate === 'function', isFunction(_global.postMessage));
var asap = typeof queueMicrotask !== 'undefined' ? queueMicrotask.bind(_global) : typeof process !== 'undefined' && process.nextTick || _setImmediate;

// *********************
var _default = exports["default"] = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isBoolean: isBoolean,
  isObject: isObject,
  isPlainObject: isPlainObject,
  isReadableStream: isReadableStream,
  isRequest: isRequest,
  isResponse: isResponse,
  isHeaders: isHeaders,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isRegExp: isRegExp,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isTypedArray: isTypedArray,
  isFileList: isFileList,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim,
  stripBOM: stripBOM,
  inherits: inherits,
  toFlatObject: toFlatObject,
  kindOf: kindOf,
  kindOfTest: kindOfTest,
  endsWith: endsWith,
  toArray: toArray,
  forEachEntry: forEachEntry,
  matchAll: matchAll,
  isHTMLForm: isHTMLForm,
  hasOwnProperty: hasOwnProperty,
  hasOwnProp: hasOwnProperty,
  // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors: reduceDescriptors,
  freezeMethods: freezeMethods,
  toObjectSet: toObjectSet,
  toCamelCase: toCamelCase,
  noop: noop,
  toFiniteNumber: toFiniteNumber,
  findKey: findKey,
  global: _global,
  isContextDefined: isContextDefined,
  ALPHABET: ALPHABET,
  generateString: generateString,
  isSpecCompliantForm: isSpecCompliantForm,
  toJSONObject: toJSONObject,
  isAsyncFn: isAsyncFn,
  isThenable: isThenable,
  setImmediate: _setImmediate,
  asap: asap
};

}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("timers").setImmediate)
},{"./helpers/bind.js":166,"_process":203,"timers":205}],194:[function(require,module,exports){
'use strict';

exports.byteLength = byteLength;
exports.toByteArray = toByteArray;
exports.fromByteArray = fromByteArray;
var lookup = [];
var revLookup = [];
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;
var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i];
  revLookup[code.charCodeAt(i)] = i;
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62;
revLookup['_'.charCodeAt(0)] = 63;
function getLens(b64) {
  var len = b64.length;
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4');
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=');
  if (validLen === -1) validLen = len;
  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;
  return [validLen, placeHoldersLen];
}

// base64 is 4/3 + up to two characters of the original data
function byteLength(b64) {
  var lens = getLens(b64);
  var validLen = lens[0];
  var placeHoldersLen = lens[1];
  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}
function _byteLength(b64, validLen, placeHoldersLen) {
  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}
function toByteArray(b64) {
  var tmp;
  var lens = getLens(b64);
  var validLen = lens[0];
  var placeHoldersLen = lens[1];
  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
  var curByte = 0;

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;
  var i;
  for (i = 0; i < len; i += 4) {
    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
    arr[curByte++] = tmp >> 16 & 0xFF;
    arr[curByte++] = tmp >> 8 & 0xFF;
    arr[curByte++] = tmp & 0xFF;
  }
  if (placeHoldersLen === 2) {
    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
    arr[curByte++] = tmp & 0xFF;
  }
  if (placeHoldersLen === 1) {
    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
    arr[curByte++] = tmp >> 8 & 0xFF;
    arr[curByte++] = tmp & 0xFF;
  }
  return arr;
}
function tripletToBase64(num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
}
function encodeChunk(uint8, start, end) {
  var tmp;
  var output = [];
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);
    output.push(tripletToBase64(tmp));
  }
  return output.join('');
}
function fromByteArray(uint8) {
  var tmp;
  var len = uint8.length;
  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes
  var parts = [];
  var maxChunkLength = 16383; // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1];
    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1];
    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');
  }
  return parts.join('');
}

},{}],195:[function(require,module,exports){
"use strict";

},{}],196:[function(require,module,exports){
(function (Buffer){(function (){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict';

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var base64 = require('base64-js');
var ieee754 = require('ieee754');
exports.Buffer = Buffer;
exports.SlowBuffer = SlowBuffer;
exports.INSPECT_MAX_BYTES = 50;
var K_MAX_LENGTH = 0x7fffffff;
exports.kMaxLength = K_MAX_LENGTH;

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();
if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {
  console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');
}
function typedArraySupport() {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1);
    arr.__proto__ = {
      __proto__: Uint8Array.prototype,
      foo: function foo() {
        return 42;
      }
    };
    return arr.foo() === 42;
  } catch (e) {
    return false;
  }
}
Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function get() {
    if (!Buffer.isBuffer(this)) return undefined;
    return this.buffer;
  }
});
Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function get() {
    if (!Buffer.isBuffer(this)) return undefined;
    return this.byteOffset;
  }
});
function createBuffer(length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"');
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length);
  buf.__proto__ = Buffer.prototype;
  return buf;
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer(arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError('The "string" argument must be of type string. Received type number');
    }
    return allocUnsafe(arg);
  }
  return from(arg, encodingOrOffset, length);
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species != null && Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  });
}
Buffer.poolSize = 8192; // not used by this implementation

function from(value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset);
  }
  if (ArrayBuffer.isView(value)) {
    return fromArrayLike(value);
  }
  if (value == null) {
    throw TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + _typeof(value));
  }
  if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {
    return fromArrayBuffer(value, encodingOrOffset, length);
  }
  if (typeof value === 'number') {
    throw new TypeError('The "value" argument must not be of type number. Received type number');
  }
  var valueOf = value.valueOf && value.valueOf();
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length);
  }
  var b = fromObject(value);
  if (b) return b;
  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);
  }
  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + _typeof(value));
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length);
};

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype;
Buffer.__proto__ = Uint8Array;
function assertSize(size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number');
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"');
  }
}
function alloc(size, fill, encoding) {
  assertSize(size);
  if (size <= 0) {
    return createBuffer(size);
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
  }
  return createBuffer(size);
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding);
};
function allocUnsafe(size) {
  assertSize(size);
  return createBuffer(size < 0 ? 0 : checked(size) | 0);
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size);
};
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size);
};
function fromString(string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8';
  }
  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding);
  }
  var length = byteLength(string, encoding) | 0;
  var buf = createBuffer(length);
  var actual = buf.write(string, encoding);
  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual);
  }
  return buf;
}
function fromArrayLike(array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0;
  var buf = createBuffer(length);
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255;
  }
  return buf;
}
function fromArrayBuffer(array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds');
  }
  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds');
  }
  var buf;
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array);
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset);
  } else {
    buf = new Uint8Array(array, byteOffset, length);
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype;
  return buf;
}
function fromObject(obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0;
    var buf = createBuffer(len);
    if (buf.length === 0) {
      return buf;
    }
    obj.copy(buf, 0, 0, len);
    return buf;
  }
  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0);
    }
    return fromArrayLike(obj);
  }
  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data);
  }
}
function checked(length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');
  }
  return length | 0;
}
function SlowBuffer(length) {
  if (+length != length) {
    // eslint-disable-line eqeqeq
    length = 0;
  }
  return Buffer.alloc(+length);
}
Buffer.isBuffer = function isBuffer(b) {
  return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false
};
Buffer.compare = function compare(a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
  }
  if (a === b) return 0;
  var x = a.length;
  var y = b.length;
  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i];
      y = b[i];
      break;
    }
  }
  if (x < y) return -1;
  if (y < x) return 1;
  return 0;
};
Buffer.isEncoding = function isEncoding(encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true;
    default:
      return false;
  }
};
Buffer.concat = function concat(list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers');
  }
  if (list.length === 0) {
    return Buffer.alloc(0);
  }
  var i;
  if (length === undefined) {
    length = 0;
    for (i = 0; i < list.length; ++i) {
      length += list[i].length;
    }
  }
  var buffer = Buffer.allocUnsafe(length);
  var pos = 0;
  for (i = 0; i < list.length; ++i) {
    var buf = list[i];
    if (isInstance(buf, Uint8Array)) {
      buf = Buffer.from(buf);
    }
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers');
    }
    buf.copy(buffer, pos);
    pos += buf.length;
  }
  return buffer;
};
function byteLength(string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length;
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength;
  }
  if (typeof string !== 'string') {
    throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + _typeof(string));
  }
  var len = string.length;
  var mustMatch = arguments.length > 2 && arguments[2] === true;
  if (!mustMatch && len === 0) return 0;

  // Use a for loop to avoid recursion
  var loweredCase = false;
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len;
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length;
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2;
      case 'hex':
        return len >>> 1;
      case 'base64':
        return base64ToBytes(string).length;
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8
        }
        encoding = ('' + encoding).toLowerCase();
        loweredCase = true;
    }
  }
}
Buffer.byteLength = byteLength;
function slowToString(encoding, start, end) {
  var loweredCase = false;

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0;
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return '';
  }
  if (end === undefined || end > this.length) {
    end = this.length;
  }
  if (end <= 0) {
    return '';
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0;
  start >>>= 0;
  if (end <= start) {
    return '';
  }
  if (!encoding) encoding = 'utf8';
  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end);
      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end);
      case 'ascii':
        return asciiSlice(this, start, end);
      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end);
      case 'base64':
        return base64Slice(this, start, end);
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end);
      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
        encoding = (encoding + '').toLowerCase();
        loweredCase = true;
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true;
function swap(b, n, m) {
  var i = b[n];
  b[n] = b[m];
  b[m] = i;
}
Buffer.prototype.swap16 = function swap16() {
  var len = this.length;
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits');
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1);
  }
  return this;
};
Buffer.prototype.swap32 = function swap32() {
  var len = this.length;
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits');
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3);
    swap(this, i + 1, i + 2);
  }
  return this;
};
Buffer.prototype.swap64 = function swap64() {
  var len = this.length;
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits');
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7);
    swap(this, i + 1, i + 6);
    swap(this, i + 2, i + 5);
    swap(this, i + 3, i + 4);
  }
  return this;
};
Buffer.prototype.toString = function toString() {
  var length = this.length;
  if (length === 0) return '';
  if (arguments.length === 0) return utf8Slice(this, 0, length);
  return slowToString.apply(this, arguments);
};
Buffer.prototype.toLocaleString = Buffer.prototype.toString;
Buffer.prototype.equals = function equals(b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
  if (this === b) return true;
  return Buffer.compare(this, b) === 0;
};
Buffer.prototype.inspect = function inspect() {
  var str = '';
  var max = exports.INSPECT_MAX_BYTES;
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();
  if (this.length > max) str += ' ... ';
  return '<Buffer ' + str + '>';
};
Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength);
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + _typeof(target));
  }
  if (start === undefined) {
    start = 0;
  }
  if (end === undefined) {
    end = target ? target.length : 0;
  }
  if (thisStart === undefined) {
    thisStart = 0;
  }
  if (thisEnd === undefined) {
    thisEnd = this.length;
  }
  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index');
  }
  if (thisStart >= thisEnd && start >= end) {
    return 0;
  }
  if (thisStart >= thisEnd) {
    return -1;
  }
  if (start >= end) {
    return 1;
  }
  start >>>= 0;
  end >>>= 0;
  thisStart >>>= 0;
  thisEnd >>>= 0;
  if (this === target) return 0;
  var x = thisEnd - thisStart;
  var y = end - start;
  var len = Math.min(x, y);
  var thisCopy = this.slice(thisStart, thisEnd);
  var targetCopy = target.slice(start, end);
  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i];
      y = targetCopy[i];
      break;
    }
  }
  if (x < y) return -1;
  if (y < x) return 1;
  return 0;
};

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1;

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset;
    byteOffset = 0;
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff;
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000;
  }
  byteOffset = +byteOffset; // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : buffer.length - 1;
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
  if (byteOffset >= buffer.length) {
    if (dir) return -1;else byteOffset = buffer.length - 1;
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0;else return -1;
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding);
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1;
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
  } else if (typeof val === 'number') {
    val = val & 0xFF; // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
      }
    }
    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
  }
  throw new TypeError('val must be string, number or Buffer');
}
function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
  var indexSize = 1;
  var arrLength = arr.length;
  var valLength = val.length;
  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase();
    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1;
      }
      indexSize = 2;
      arrLength /= 2;
      valLength /= 2;
      byteOffset /= 2;
    }
  }
  function read(buf, i) {
    if (indexSize === 1) {
      return buf[i];
    } else {
      return buf.readUInt16BE(i * indexSize);
    }
  }
  var i;
  if (dir) {
    var foundIndex = -1;
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i;
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
      } else {
        if (foundIndex !== -1) i -= i - foundIndex;
        foundIndex = -1;
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
    for (i = byteOffset; i >= 0; i--) {
      var found = true;
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false;
          break;
        }
      }
      if (found) return i;
    }
  }
  return -1;
}
Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1;
};
Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
};
Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
};
function hexWrite(buf, string, offset, length) {
  offset = Number(offset) || 0;
  var remaining = buf.length - offset;
  if (!length) {
    length = remaining;
  } else {
    length = Number(length);
    if (length > remaining) {
      length = remaining;
    }
  }
  var strLen = string.length;
  if (length > strLen / 2) {
    length = strLen / 2;
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16);
    if (numberIsNaN(parsed)) return i;
    buf[offset + i] = parsed;
  }
  return i;
}
function utf8Write(buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
}
function asciiWrite(buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length);
}
function latin1Write(buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length);
}
function base64Write(buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length);
}
function ucs2Write(buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
}
Buffer.prototype.write = function write(string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8';
    length = this.length;
    offset = 0;
    // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset;
    length = this.length;
    offset = 0;
    // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0;
    if (isFinite(length)) {
      length = length >>> 0;
      if (encoding === undefined) encoding = 'utf8';
    } else {
      encoding = length;
      length = undefined;
    }
  } else {
    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
  }
  var remaining = this.length - offset;
  if (length === undefined || length > remaining) length = remaining;
  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds');
  }
  if (!encoding) encoding = 'utf8';
  var loweredCase = false;
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length);
      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length);
      case 'ascii':
        return asciiWrite(this, string, offset, length);
      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length);
      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length);
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length);
      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
        encoding = ('' + encoding).toLowerCase();
        loweredCase = true;
    }
  }
};
Buffer.prototype.toJSON = function toJSON() {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  };
};
function base64Slice(buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf);
  } else {
    return base64.fromByteArray(buf.slice(start, end));
  }
}
function utf8Slice(buf, start, end) {
  end = Math.min(buf.length, end);
  var res = [];
  var i = start;
  while (i < end) {
    var firstByte = buf[i];
    var codePoint = null;
    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;
    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint;
      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte;
          }
          break;
        case 2:
          secondByte = buf[i + 1];
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint;
            }
          }
          break;
        case 3:
          secondByte = buf[i + 1];
          thirdByte = buf[i + 2];
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint;
            }
          }
          break;
        case 4:
          secondByte = buf[i + 1];
          thirdByte = buf[i + 2];
          fourthByte = buf[i + 3];
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint;
            }
          }
      }
    }
    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD;
      bytesPerSequence = 1;
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000;
      res.push(codePoint >>> 10 & 0x3FF | 0xD800);
      codePoint = 0xDC00 | codePoint & 0x3FF;
    }
    res.push(codePoint);
    i += bytesPerSequence;
  }
  return decodeCodePointsArray(res);
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000;
function decodeCodePointsArray(codePoints) {
  var len = codePoints.length;
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = '';
  var i = 0;
  while (i < len) {
    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
  }
  return res;
}
function asciiSlice(buf, start, end) {
  var ret = '';
  end = Math.min(buf.length, end);
  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F);
  }
  return ret;
}
function latin1Slice(buf, start, end) {
  var ret = '';
  end = Math.min(buf.length, end);
  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i]);
  }
  return ret;
}
function hexSlice(buf, start, end) {
  var len = buf.length;
  if (!start || start < 0) start = 0;
  if (!end || end < 0 || end > len) end = len;
  var out = '';
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i]);
  }
  return out;
}
function utf16leSlice(buf, start, end) {
  var bytes = buf.slice(start, end);
  var res = '';
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
  }
  return res;
}
Buffer.prototype.slice = function slice(start, end) {
  var len = this.length;
  start = ~~start;
  end = end === undefined ? len : ~~end;
  if (start < 0) {
    start += len;
    if (start < 0) start = 0;
  } else if (start > len) {
    start = len;
  }
  if (end < 0) {
    end += len;
    if (end < 0) end = 0;
  } else if (end > len) {
    end = len;
  }
  if (end < start) end = start;
  var newBuf = this.subarray(start, end);
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype;
  return newBuf;
};

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset(offset, ext, length) {
  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
}
Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
  offset = offset >>> 0;
  byteLength = byteLength >>> 0;
  if (!noAssert) checkOffset(offset, byteLength, this.length);
  var val = this[offset];
  var mul = 1;
  var i = 0;
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul;
  }
  return val;
};
Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
  offset = offset >>> 0;
  byteLength = byteLength >>> 0;
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length);
  }
  var val = this[offset + --byteLength];
  var mul = 1;
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul;
  }
  return val;
};
Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 1, this.length);
  return this[offset];
};
Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 2, this.length);
  return this[offset] | this[offset + 1] << 8;
};
Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 2, this.length);
  return this[offset] << 8 | this[offset + 1];
};
Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 4, this.length);
  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
};
Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 4, this.length);
  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
};
Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
  offset = offset >>> 0;
  byteLength = byteLength >>> 0;
  if (!noAssert) checkOffset(offset, byteLength, this.length);
  var val = this[offset];
  var mul = 1;
  var i = 0;
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul;
  }
  mul *= 0x80;
  if (val >= mul) val -= Math.pow(2, 8 * byteLength);
  return val;
};
Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
  offset = offset >>> 0;
  byteLength = byteLength >>> 0;
  if (!noAssert) checkOffset(offset, byteLength, this.length);
  var i = byteLength;
  var mul = 1;
  var val = this[offset + --i];
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul;
  }
  mul *= 0x80;
  if (val >= mul) val -= Math.pow(2, 8 * byteLength);
  return val;
};
Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 1, this.length);
  if (!(this[offset] & 0x80)) return this[offset];
  return (0xff - this[offset] + 1) * -1;
};
Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 2, this.length);
  var val = this[offset] | this[offset + 1] << 8;
  return val & 0x8000 ? val | 0xFFFF0000 : val;
};
Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 2, this.length);
  var val = this[offset + 1] | this[offset] << 8;
  return val & 0x8000 ? val | 0xFFFF0000 : val;
};
Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 4, this.length);
  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
};
Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 4, this.length);
  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
};
Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 4, this.length);
  return ieee754.read(this, offset, true, 23, 4);
};
Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 4, this.length);
  return ieee754.read(this, offset, false, 23, 4);
};
Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 8, this.length);
  return ieee754.read(this, offset, true, 52, 8);
};
Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 8, this.length);
  return ieee754.read(this, offset, false, 52, 8);
};
function checkInt(buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
  if (offset + ext > buf.length) throw new RangeError('Index out of range');
}
Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset >>> 0;
  byteLength = byteLength >>> 0;
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1;
    checkInt(this, value, offset, byteLength, maxBytes, 0);
  }
  var mul = 1;
  var i = 0;
  this[offset] = value & 0xFF;
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = value / mul & 0xFF;
  }
  return offset + byteLength;
};
Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset >>> 0;
  byteLength = byteLength >>> 0;
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1;
    checkInt(this, value, offset, byteLength, maxBytes, 0);
  }
  var i = byteLength - 1;
  var mul = 1;
  this[offset + i] = value & 0xFF;
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = value / mul & 0xFF;
  }
  return offset + byteLength;
};
Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
  this[offset] = value & 0xff;
  return offset + 1;
};
Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
  this[offset] = value & 0xff;
  this[offset + 1] = value >>> 8;
  return offset + 2;
};
Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
  this[offset] = value >>> 8;
  this[offset + 1] = value & 0xff;
  return offset + 2;
};
Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
  this[offset + 3] = value >>> 24;
  this[offset + 2] = value >>> 16;
  this[offset + 1] = value >>> 8;
  this[offset] = value & 0xff;
  return offset + 4;
};
Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
  this[offset] = value >>> 24;
  this[offset + 1] = value >>> 16;
  this[offset + 2] = value >>> 8;
  this[offset + 3] = value & 0xff;
  return offset + 4;
};
Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1);
    checkInt(this, value, offset, byteLength, limit - 1, -limit);
  }
  var i = 0;
  var mul = 1;
  var sub = 0;
  this[offset] = value & 0xFF;
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1;
    }
    this[offset + i] = (value / mul >> 0) - sub & 0xFF;
  }
  return offset + byteLength;
};
Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1);
    checkInt(this, value, offset, byteLength, limit - 1, -limit);
  }
  var i = byteLength - 1;
  var mul = 1;
  var sub = 0;
  this[offset + i] = value & 0xFF;
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1;
    }
    this[offset + i] = (value / mul >> 0) - sub & 0xFF;
  }
  return offset + byteLength;
};
Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);
  if (value < 0) value = 0xff + value + 1;
  this[offset] = value & 0xff;
  return offset + 1;
};
Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
  this[offset] = value & 0xff;
  this[offset + 1] = value >>> 8;
  return offset + 2;
};
Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
  this[offset] = value >>> 8;
  this[offset + 1] = value & 0xff;
  return offset + 2;
};
Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
  this[offset] = value & 0xff;
  this[offset + 1] = value >>> 8;
  this[offset + 2] = value >>> 16;
  this[offset + 3] = value >>> 24;
  return offset + 4;
};
Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
  if (value < 0) value = 0xffffffff + value + 1;
  this[offset] = value >>> 24;
  this[offset + 1] = value >>> 16;
  this[offset + 2] = value >>> 8;
  this[offset + 3] = value & 0xff;
  return offset + 4;
};
function checkIEEE754(buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range');
  if (offset < 0) throw new RangeError('Index out of range');
}
function writeFloat(buf, value, offset, littleEndian, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4);
  return offset + 4;
}
Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert);
};
Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert);
};
function writeDouble(buf, value, offset, littleEndian, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8);
  return offset + 8;
}
Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert);
};
Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert);
};

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy(target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');
  if (!start) start = 0;
  if (!end && end !== 0) end = this.length;
  if (targetStart >= target.length) targetStart = target.length;
  if (!targetStart) targetStart = 0;
  if (end > 0 && end < start) end = start;

  // Copy 0 bytes; we're done
  if (end === start) return 0;
  if (target.length === 0 || this.length === 0) return 0;

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds');
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range');
  if (end < 0) throw new RangeError('sourceEnd out of bounds');

  // Are we oob?
  if (end > this.length) end = this.length;
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start;
  }
  var len = end - start;
  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end);
  } else if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (var i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start];
    }
  } else {
    Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);
  }
  return len;
};

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill(val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start;
      start = 0;
      end = this.length;
    } else if (typeof end === 'string') {
      encoding = end;
      end = this.length;
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string');
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding);
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0);
      if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code;
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255;
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index');
  }
  if (end <= start) {
    return this;
  }
  start = start >>> 0;
  end = end === undefined ? this.length : end >>> 0;
  if (!val) val = 0;
  var i;
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val;
    }
  } else {
    var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);
    var len = bytes.length;
    if (len === 0) {
      throw new TypeError('The value "' + val + '" is invalid for argument "value"');
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len];
    }
  }
  return this;
};

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
function base64clean(str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0];
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '');
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return '';
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '=';
  }
  return str;
}
function toHex(n) {
  if (n < 16) return '0' + n.toString(16);
  return n.toString(16);
}
function utf8ToBytes(string, units) {
  units = units || Infinity;
  var codePoint;
  var length = string.length;
  var leadSurrogate = null;
  var bytes = [];
  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i);

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          continue;
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          continue;
        }

        // valid lead
        leadSurrogate = codePoint;
        continue;
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
        leadSurrogate = codePoint;
        continue;
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
    }
    leadSurrogate = null;

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break;
      bytes.push(codePoint);
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break;
      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break;
      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break;
      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
    } else {
      throw new Error('Invalid code point');
    }
  }
  return bytes;
}
function asciiToBytes(str) {
  var byteArray = [];
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF);
  }
  return byteArray;
}
function utf16leToBytes(str, units) {
  var c, hi, lo;
  var byteArray = [];
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break;
    c = str.charCodeAt(i);
    hi = c >> 8;
    lo = c % 256;
    byteArray.push(lo);
    byteArray.push(hi);
  }
  return byteArray;
}
function base64ToBytes(str) {
  return base64.toByteArray(base64clean(str));
}
function blitBuffer(src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if (i + offset >= dst.length || i >= src.length) break;
    dst[i + offset] = src[i];
  }
  return i;
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance(obj, type) {
  return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
}
function numberIsNaN(obj) {
  // For IE11 support
  return obj !== obj; // eslint-disable-line no-self-compare
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"base64-js":194,"buffer":196,"ieee754":200}],197:[function(require,module,exports){
"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
  'use strict';

  var hasOwn = {}.hasOwnProperty;
  function classNames() {
    var classes = '';
    for (var i = 0; i < arguments.length; i++) {
      var arg = arguments[i];
      if (arg) {
        classes = appendClass(classes, parseValue(arg));
      }
    }
    return classes;
  }
  function parseValue(arg) {
    if (typeof arg === 'string' || typeof arg === 'number') {
      return arg;
    }
    if (_typeof(arg) !== 'object') {
      return '';
    }
    if (Array.isArray(arg)) {
      return classNames.apply(null, arg);
    }
    if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {
      return arg.toString();
    }
    var classes = '';
    for (var key in arg) {
      if (hasOwn.call(arg, key) && arg[key]) {
        classes = appendClass(classes, key);
      }
    }
    return classes;
  }
  function appendClass(value, newClass) {
    if (!newClass) {
      return value;
    }
    if (value) {
      return value + ' ' + newClass;
    }
    return value + newClass;
  }
  if (typeof module !== 'undefined' && module.exports) {
    classNames["default"] = classNames;
    module.exports = classNames;
  } else if (typeof define === 'function' && _typeof(define.amd) === 'object' && define.amd) {
    // register as 'classnames', consistent with npm package name
    define('classnames', [], function () {
      return classNames;
    });
  } else {
    window.classNames = classNames;
  }
})();

},{}],198:[function(require,module,exports){
(function (process,setImmediate){(function (){
"use strict";

/**
 * Copyright (c) 2019-present, GraphQL Foundation
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
// A Function, which when given an Array of keys, returns a Promise of an Array
// of values or Errors.
// Optionally turn off batching or caching or provide a cache key function or a
// custom cache instance.
// If a custom cache is provided, it must be of this type (a subset of ES6 Map).

/**
 * A `DataLoader` creates a public API for loading data from a particular
 * data back-end with unique keys such as the `id` column of a SQL table or
 * document name in a MongoDB database, given a batch loading function.
 *
 * Each `DataLoader` instance contains a unique memoized cache. Use caution when
 * used in long-lived applications or those which serve many users with
 * different access permissions and consider creating a new instance per
 * web request.
 */
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var DataLoader = /*#__PURE__*/
function () {
  function DataLoader(batchLoadFn, options) {
    if (typeof batchLoadFn !== 'function') {
      throw new TypeError('DataLoader must be constructed with a function which accepts ' + ("Array<key> and returns Promise<Array<value>>, but got: " + batchLoadFn + "."));
    }
    this._batchLoadFn = batchLoadFn;
    this._maxBatchSize = getValidMaxBatchSize(options);
    this._batchScheduleFn = getValidBatchScheduleFn(options);
    this._cacheKeyFn = getValidCacheKeyFn(options);
    this._cacheMap = getValidCacheMap(options);
    this._batch = null;
    this.name = getValidName(options);
  } // Private

  var _proto = DataLoader.prototype;

  /**
   * Loads a key, returning a `Promise` for the value represented by that key.
   */
  _proto.load = function load(key) {
    if (key === null || key === undefined) {
      throw new TypeError('The loader.load() function must be called with a value, ' + ("but got: " + String(key) + "."));
    }
    var batch = getCurrentBatch(this);
    var cacheMap = this._cacheMap;
    var cacheKey = this._cacheKeyFn(key); // If caching and there is a cache-hit, return cached Promise.

    if (cacheMap) {
      var cachedPromise = cacheMap.get(cacheKey);
      if (cachedPromise) {
        var cacheHits = batch.cacheHits || (batch.cacheHits = []);
        return new Promise(function (resolve) {
          cacheHits.push(function () {
            resolve(cachedPromise);
          });
        });
      }
    } // Otherwise, produce a new Promise for this key, and enqueue it to be
    // dispatched along with the current batch.

    batch.keys.push(key);
    var promise = new Promise(function (resolve, reject) {
      batch.callbacks.push({
        resolve: resolve,
        reject: reject
      });
    }); // If caching, cache this promise.

    if (cacheMap) {
      cacheMap.set(cacheKey, promise);
    }
    return promise;
  }
  /**
   * Loads multiple keys, promising an array of values:
   *
   *     var [ a, b ] = await myLoader.loadMany([ 'a', 'b' ]);
   *
   * This is similar to the more verbose:
   *
   *     var [ a, b ] = await Promise.all([
   *       myLoader.load('a'),
   *       myLoader.load('b')
   *     ]);
   *
   * However it is different in the case where any load fails. Where
   * Promise.all() would reject, loadMany() always resolves, however each result
   * is either a value or an Error instance.
   *
   *     var [ a, b, c ] = await myLoader.loadMany([ 'a', 'b', 'badkey' ]);
   *     // c instanceof Error
   *
   */;
  _proto.loadMany = function loadMany(keys) {
    if (!isArrayLike(keys)) {
      throw new TypeError('The loader.loadMany() function must be called with Array<key> ' + ("but got: " + keys + "."));
    } // Support ArrayLike by using only minimal property access

    var loadPromises = [];
    for (var i = 0; i < keys.length; i++) {
      loadPromises.push(this.load(keys[i])["catch"](function (error) {
        return error;
      }));
    }
    return Promise.all(loadPromises);
  }
  /**
   * Clears the value at `key` from the cache, if it exists. Returns itself for
   * method chaining.
   */;
  _proto.clear = function clear(key) {
    var cacheMap = this._cacheMap;
    if (cacheMap) {
      var cacheKey = this._cacheKeyFn(key);
      cacheMap["delete"](cacheKey);
    }
    return this;
  }
  /**
   * Clears the entire cache. To be used when some event results in unknown
   * invalidations across this particular `DataLoader`. Returns itself for
   * method chaining.
   */;
  _proto.clearAll = function clearAll() {
    var cacheMap = this._cacheMap;
    if (cacheMap) {
      cacheMap.clear();
    }
    return this;
  }
  /**
   * Adds the provided key and value to the cache. If the key already
   * exists, no change is made. Returns itself for method chaining.
   *
   * To prime the cache with an error at a key, provide an Error instance.
   */;
  _proto.prime = function prime(key, value) {
    var cacheMap = this._cacheMap;
    if (cacheMap) {
      var cacheKey = this._cacheKeyFn(key); // Only add the key if it does not already exist.

      if (cacheMap.get(cacheKey) === undefined) {
        // Cache a rejected promise if the value is an Error, in order to match
        // the behavior of load(key).
        var promise;
        if (value instanceof Error) {
          promise = Promise.reject(value); // Since this is a case where an Error is intentionally being primed
          // for a given key, we want to disable unhandled promise rejection.

          promise["catch"](function () {});
        } else {
          promise = Promise.resolve(value);
        }
        cacheMap.set(cacheKey, promise);
      }
    }
    return this;
  }
  /**
   * The name given to this `DataLoader` instance. Useful for APM tools.
   *
   * Is `null` if not set in the constructor.
   */;
  return DataLoader;
}(); // Private: Enqueue a Job to be executed after all "PromiseJobs" Jobs.
//
// ES6 JavaScript uses the concepts Job and JobQueue to schedule work to occur
// after the current execution context has completed:
// http://www.ecma-international.org/ecma-262/6.0/#sec-jobs-and-job-queues
//
// Node.js uses the `process.nextTick` mechanism to implement the concept of a
// Job, maintaining a global FIFO JobQueue for all Jobs, which is flushed after
// the current call stack ends.
//
// When calling `then` on a Promise, it enqueues a Job on a specific
// "PromiseJobs" JobQueue which is flushed in Node as a single Job on the
// global JobQueue.
//
// DataLoader batches all loads which occur in a single frame of execution, but
// should include in the batch all loads which occur during the flushing of the
// "PromiseJobs" JobQueue after that same execution frame.
//
// In order to avoid the DataLoader dispatch Job occuring before "PromiseJobs",
// A Promise Job is created with the sole purpose of enqueuing a global Job,
// ensuring that it always occurs after "PromiseJobs" ends.
//
// Node.js's job queue is unique. Browsers do not have an equivalent mechanism
// for enqueuing a job to be performed after promise microtasks and before the
// next macrotask. For browser environments, a macrotask is used (via
// setImmediate or setTimeout) at a potential performance penalty.

var enqueuePostPromiseJob = (typeof process === "undefined" ? "undefined" : _typeof(process)) === 'object' && typeof process.nextTick === 'function' ? function (fn) {
  if (!resolvedPromise) {
    resolvedPromise = Promise.resolve();
  }
  resolvedPromise.then(function () {
    process.nextTick(fn);
  });
} : typeof setImmediate === 'function' ? function (fn) {
  setImmediate(fn);
} : function (fn) {
  setTimeout(fn);
}; // Private: cached resolved Promise instance

var resolvedPromise; // Private: Describes a batch of requests

// Private: Either returns the current batch, or creates and schedules a
// dispatch of a new batch for the given loader.
function getCurrentBatch(loader) {
  // If there is an existing batch which has not yet dispatched and is within
  // the limit of the batch size, then return it.
  var existingBatch = loader._batch;
  if (existingBatch !== null && !existingBatch.hasDispatched && existingBatch.keys.length < loader._maxBatchSize) {
    return existingBatch;
  } // Otherwise, create a new batch for this loader.

  var newBatch = {
    hasDispatched: false,
    keys: [],
    callbacks: []
  }; // Store it on the loader so it may be reused.

  loader._batch = newBatch; // Then schedule a task to dispatch this batch of requests.

  loader._batchScheduleFn(function () {
    dispatchBatch(loader, newBatch);
  });
  return newBatch;
}
function dispatchBatch(loader, batch) {
  // Mark this batch as having been dispatched.
  batch.hasDispatched = true; // If there's nothing to load, resolve any cache hits and return early.

  if (batch.keys.length === 0) {
    resolveCacheHits(batch);
    return;
  } // Call the provided batchLoadFn for this loader with the batch's keys and
  // with the loader as the `this` context.

  var batchPromise;
  try {
    batchPromise = loader._batchLoadFn(batch.keys);
  } catch (e) {
    return failedDispatch(loader, batch, new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function ' + ("errored synchronously: " + String(e) + ".")));
  } // Assert the expected response from batchLoadFn

  if (!batchPromise || typeof batchPromise.then !== 'function') {
    return failedDispatch(loader, batch, new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function did ' + ("not return a Promise: " + String(batchPromise) + ".")));
  } // Await the resolution of the call to batchLoadFn.

  batchPromise.then(function (values) {
    // Assert the expected resolution from batchLoadFn.
    if (!isArrayLike(values)) {
      throw new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function did ' + ("not return a Promise of an Array: " + String(values) + "."));
    }
    if (values.length !== batch.keys.length) {
      throw new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function did ' + 'not return a Promise of an Array of the same length as the Array ' + 'of keys.' + ("\n\nKeys:\n" + String(batch.keys)) + ("\n\nValues:\n" + String(values)));
    } // Resolve all cache hits in the same micro-task as freshly loaded values.

    resolveCacheHits(batch); // Step through values, resolving or rejecting each Promise in the batch.

    for (var i = 0; i < batch.callbacks.length; i++) {
      var value = values[i];
      if (value instanceof Error) {
        batch.callbacks[i].reject(value);
      } else {
        batch.callbacks[i].resolve(value);
      }
    }
  })["catch"](function (error) {
    failedDispatch(loader, batch, error);
  });
} // Private: do not cache individual loads if the entire batch dispatch fails,
// but still reject each request so they do not hang.

function failedDispatch(loader, batch, error) {
  // Cache hits are resolved, even though the batch failed.
  resolveCacheHits(batch);
  for (var i = 0; i < batch.keys.length; i++) {
    loader.clear(batch.keys[i]);
    batch.callbacks[i].reject(error);
  }
} // Private: Resolves the Promises for any cache hits in this batch.

function resolveCacheHits(batch) {
  if (batch.cacheHits) {
    for (var i = 0; i < batch.cacheHits.length; i++) {
      batch.cacheHits[i]();
    }
  }
} // Private: given the DataLoader's options, produce a valid max batch size.

function getValidMaxBatchSize(options) {
  var shouldBatch = !options || options.batch !== false;
  if (!shouldBatch) {
    return 1;
  }
  var maxBatchSize = options && options.maxBatchSize;
  if (maxBatchSize === undefined) {
    return Infinity;
  }
  if (typeof maxBatchSize !== 'number' || maxBatchSize < 1) {
    throw new TypeError("maxBatchSize must be a positive number: " + maxBatchSize);
  }
  return maxBatchSize;
} // Private

function getValidBatchScheduleFn(options) {
  var batchScheduleFn = options && options.batchScheduleFn;
  if (batchScheduleFn === undefined) {
    return enqueuePostPromiseJob;
  }
  if (typeof batchScheduleFn !== 'function') {
    throw new TypeError("batchScheduleFn must be a function: " + batchScheduleFn);
  }
  return batchScheduleFn;
} // Private: given the DataLoader's options, produce a cache key function.

function getValidCacheKeyFn(options) {
  var cacheKeyFn = options && options.cacheKeyFn;
  if (cacheKeyFn === undefined) {
    return function (key) {
      return key;
    };
  }
  if (typeof cacheKeyFn !== 'function') {
    throw new TypeError("cacheKeyFn must be a function: " + cacheKeyFn);
  }
  return cacheKeyFn;
} // Private: given the DataLoader's options, produce a CacheMap to be used.

function getValidCacheMap(options) {
  var shouldCache = !options || options.cache !== false;
  if (!shouldCache) {
    return null;
  }
  var cacheMap = options && options.cacheMap;
  if (cacheMap === undefined) {
    return new Map();
  }
  if (cacheMap !== null) {
    var cacheFunctions = ['get', 'set', 'delete', 'clear'];
    var missingFunctions = cacheFunctions.filter(function (fnName) {
      return cacheMap && typeof cacheMap[fnName] !== 'function';
    });
    if (missingFunctions.length !== 0) {
      throw new TypeError('Custom cacheMap missing methods: ' + missingFunctions.join(', '));
    }
  }
  return cacheMap;
}
function getValidName(options) {
  if (options && options.name) {
    return options.name;
  }
  return null;
} // Private

function isArrayLike(x) {
  return _typeof(x) === 'object' && x !== null && typeof x.length === 'number' && (x.length === 0 || x.length > 0 && Object.prototype.hasOwnProperty.call(x, x.length - 1));
}
module.exports = DataLoader;

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"_process":203,"timers":205}],199:[function(require,module,exports){
'use strict';

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var isMergeableObject = function isMergeableObject(value) {
  return isNonNullObject(value) && !isSpecial(value);
};
function isNonNullObject(value) {
  return !!value && _typeof(value) === 'object';
}
function isSpecial(value) {
  var stringValue = Object.prototype.toString.call(value);
  return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);
}

// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25
var canUseSymbol = typeof Symbol === 'function' && Symbol["for"];
var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol["for"]('react.element') : 0xeac7;
function isReactElement(value) {
  return value.$$typeof === REACT_ELEMENT_TYPE;
}
function emptyTarget(val) {
  return Array.isArray(val) ? [] : {};
}
function cloneUnlessOtherwiseSpecified(value, options) {
  return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;
}
function defaultArrayMerge(target, source, options) {
  return target.concat(source).map(function (element) {
    return cloneUnlessOtherwiseSpecified(element, options);
  });
}
function getMergeFunction(key, options) {
  if (!options.customMerge) {
    return deepmerge;
  }
  var customMerge = options.customMerge(key);
  return typeof customMerge === 'function' ? customMerge : deepmerge;
}
function getEnumerableOwnPropertySymbols(target) {
  return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function (symbol) {
    return Object.propertyIsEnumerable.call(target, symbol);
  }) : [];
}
function getKeys(target) {
  return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));
}
function propertyIsOnObject(object, property) {
  try {
    return property in object;
  } catch (_) {
    return false;
  }
}

// Protects from prototype poisoning and unexpected merging up the prototype chain.
function propertyIsUnsafe(target, key) {
  return propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,
  && !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,
  && Object.propertyIsEnumerable.call(target, key)); // and also unsafe if they're nonenumerable.
}
function mergeObject(target, source, options) {
  var destination = {};
  if (options.isMergeableObject(target)) {
    getKeys(target).forEach(function (key) {
      destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
    });
  }
  getKeys(source).forEach(function (key) {
    if (propertyIsUnsafe(target, key)) {
      return;
    }
    if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {
      destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
    } else {
      destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
    }
  });
  return destination;
}
function deepmerge(target, source, options) {
  options = options || {};
  options.arrayMerge = options.arrayMerge || defaultArrayMerge;
  options.isMergeableObject = options.isMergeableObject || isMergeableObject;
  // cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()
  // implementations can use it. The caller may not replace it.
  options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;
  var sourceIsArray = Array.isArray(source);
  var targetIsArray = Array.isArray(target);
  var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;
  if (!sourceAndTargetTypesMatch) {
    return cloneUnlessOtherwiseSpecified(source, options);
  } else if (sourceIsArray) {
    return options.arrayMerge(target, source, options);
  } else {
    return mergeObject(target, source, options);
  }
}
deepmerge.all = function deepmergeAll(array, options) {
  if (!Array.isArray(array)) {
    throw new Error('first argument should be an array');
  }
  return array.reduce(function (prev, next) {
    return deepmerge(prev, next, options);
  }, {});
};
var deepmerge_1 = deepmerge;
module.exports = deepmerge_1;

},{}],200:[function(require,module,exports){
"use strict";

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m;
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var nBits = -7;
  var i = isLE ? nBytes - 1 : 0;
  var d = isLE ? -1 : 1;
  var s = buffer[offset + i];
  i += d;
  e = s & (1 << -nBits) - 1;
  s >>= -nBits;
  nBits += eLen;
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}
  m = e & (1 << -nBits) - 1;
  e >>= -nBits;
  nBits += mLen;
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}
  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : (s ? -1 : 1) * Infinity;
  } else {
    m = m + Math.pow(2, mLen);
    e = e - eBias;
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
};
exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c;
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
  var i = isLE ? 0 : nBytes - 1;
  var d = isLE ? 1 : -1;
  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
  value = Math.abs(value);
  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0;
    e = eMax;
  } else {
    e = Math.floor(Math.log(value) / Math.LN2);
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * Math.pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }
    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
      e = 0;
    }
  }
  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}
  e = e << mLen | m;
  eLen += mLen;
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}
  buffer[offset + i - d] |= s * 128;
};

},{}],201:[function(require,module,exports){
"use strict";

/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer);
};
function isBuffer(obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer(obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0));
}

},{}],202:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * A JavaScript implementation of the SHA family of hashes - defined in FIPS PUB 180-4, FIPS PUB 202,
 * and SP 800-185 - as well as the corresponding HMAC implementation as defined in FIPS PUB 198-1.
 *
 * Copyright 2008-2020 Brian Turek, 1998-2009 Paul Johnston & Contributors
 * Distributed under the BSD License
 * See http://caligatio.github.com/jsSHA/ for more information
 */
var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
function n(t, n, e, r) {
  var i, s, o;
  var h = n || [0],
    u = (e = e || 0) >>> 3,
    w = -1 === r ? 3 : 0;
  for (i = 0; i < t.length; i += 1) o = i + u, s = o >>> 2, h.length <= s && h.push(0), h[s] |= t[i] << 8 * (w + r * (o % 4));
  return {
    value: h,
    binLen: 8 * t.length + e
  };
}
function e(e, r, i) {
  switch (r) {
    case "UTF8":
    case "UTF16BE":
    case "UTF16LE":
      break;
    default:
      throw new Error("encoding must be UTF8, UTF16BE, or UTF16LE");
  }
  switch (e) {
    case "HEX":
      return function (t, n, e) {
        return function (t, n, e, r) {
          var i, s, o, h;
          if (0 != t.length % 2) throw new Error("String of HEX type must be in byte increments");
          var u = n || [0],
            w = (e = e || 0) >>> 3,
            c = -1 === r ? 3 : 0;
          for (i = 0; i < t.length; i += 2) {
            if (s = parseInt(t.substr(i, 2), 16), isNaN(s)) throw new Error("String of HEX type contains invalid characters");
            for (h = (i >>> 1) + w, o = h >>> 2; u.length <= o;) u.push(0);
            u[o] |= s << 8 * (c + r * (h % 4));
          }
          return {
            value: u,
            binLen: 4 * t.length + e
          };
        }(t, n, e, i);
      };
    case "TEXT":
      return function (t, n, e) {
        return function (t, n, e, r, i) {
          var s,
            o,
            h,
            u,
            w,
            c,
            f,
            a,
            l = 0;
          var A = e || [0],
            E = (r = r || 0) >>> 3;
          if ("UTF8" === n) for (f = -1 === i ? 3 : 0, h = 0; h < t.length; h += 1) for (s = t.charCodeAt(h), o = [], 128 > s ? o.push(s) : 2048 > s ? (o.push(192 | s >>> 6), o.push(128 | 63 & s)) : 55296 > s || 57344 <= s ? o.push(224 | s >>> 12, 128 | s >>> 6 & 63, 128 | 63 & s) : (h += 1, s = 65536 + ((1023 & s) << 10 | 1023 & t.charCodeAt(h)), o.push(240 | s >>> 18, 128 | s >>> 12 & 63, 128 | s >>> 6 & 63, 128 | 63 & s)), u = 0; u < o.length; u += 1) {
            for (c = l + E, w = c >>> 2; A.length <= w;) A.push(0);
            A[w] |= o[u] << 8 * (f + i * (c % 4)), l += 1;
          } else for (f = -1 === i ? 2 : 0, a = "UTF16LE" === n && 1 !== i || "UTF16LE" !== n && 1 === i, h = 0; h < t.length; h += 1) {
            for (s = t.charCodeAt(h), !0 === a && (u = 255 & s, s = u << 8 | s >>> 8), c = l + E, w = c >>> 2; A.length <= w;) A.push(0);
            A[w] |= s << 8 * (f + i * (c % 4)), l += 2;
          }
          return {
            value: A,
            binLen: 8 * l + r
          };
        }(t, r, n, e, i);
      };
    case "B64":
      return function (n, e, r) {
        return function (n, e, r, i) {
          var s,
            o,
            h,
            u,
            w,
            c,
            f,
            a = 0;
          var l = e || [0],
            A = (r = r || 0) >>> 3,
            E = -1 === i ? 3 : 0,
            H = n.indexOf("=");
          if (-1 === n.search(/^[a-zA-Z0-9=+/]+$/)) throw new Error("Invalid character in base-64 string");
          if (n = n.replace(/=/g, ""), -1 !== H && H < n.length) throw new Error("Invalid '=' found in base-64 string");
          for (o = 0; o < n.length; o += 4) {
            for (w = n.substr(o, 4), u = 0, h = 0; h < w.length; h += 1) s = t.indexOf(w.charAt(h)), u |= s << 18 - 6 * h;
            for (h = 0; h < w.length - 1; h += 1) {
              for (f = a + A, c = f >>> 2; l.length <= c;) l.push(0);
              l[c] |= (u >>> 16 - 8 * h & 255) << 8 * (E + i * (f % 4)), a += 1;
            }
          }
          return {
            value: l,
            binLen: 8 * a + r
          };
        }(n, e, r, i);
      };
    case "BYTES":
      return function (t, n, e) {
        return function (t, n, e, r) {
          var i, s, o, h;
          var u = n || [0],
            w = (e = e || 0) >>> 3,
            c = -1 === r ? 3 : 0;
          for (s = 0; s < t.length; s += 1) i = t.charCodeAt(s), h = s + w, o = h >>> 2, u.length <= o && u.push(0), u[o] |= i << 8 * (c + r * (h % 4));
          return {
            value: u,
            binLen: 8 * t.length + e
          };
        }(t, n, e, i);
      };
    case "ARRAYBUFFER":
      try {
        new ArrayBuffer(0);
      } catch (t) {
        throw new Error("ARRAYBUFFER not supported by this environment");
      }
      return function (t, e, r) {
        return function (t, e, r, i) {
          return n(new Uint8Array(t), e, r, i);
        }(t, e, r, i);
      };
    case "UINT8ARRAY":
      try {
        new Uint8Array(0);
      } catch (t) {
        throw new Error("UINT8ARRAY not supported by this environment");
      }
      return function (t, e, r) {
        return n(t, e, r, i);
      };
    default:
      throw new Error("format must be HEX, TEXT, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY");
  }
}
function r(n, e, r, i) {
  switch (n) {
    case "HEX":
      return function (t) {
        return function (t, n, e, r) {
          var i,
            s,
            o = "";
          var h = n / 8,
            u = -1 === e ? 3 : 0;
          for (i = 0; i < h; i += 1) s = t[i >>> 2] >>> 8 * (u + e * (i % 4)), o += "0123456789abcdef".charAt(s >>> 4 & 15) + "0123456789abcdef".charAt(15 & s);
          return r.outputUpper ? o.toUpperCase() : o;
        }(t, e, r, i);
      };
    case "B64":
      return function (n) {
        return function (n, e, r, i) {
          var s,
            o,
            h,
            u,
            w,
            c = "";
          var f = e / 8,
            a = -1 === r ? 3 : 0;
          for (s = 0; s < f; s += 3) for (u = s + 1 < f ? n[s + 1 >>> 2] : 0, w = s + 2 < f ? n[s + 2 >>> 2] : 0, h = (n[s >>> 2] >>> 8 * (a + r * (s % 4)) & 255) << 16 | (u >>> 8 * (a + r * ((s + 1) % 4)) & 255) << 8 | w >>> 8 * (a + r * ((s + 2) % 4)) & 255, o = 0; o < 4; o += 1) c += 8 * s + 6 * o <= e ? t.charAt(h >>> 6 * (3 - o) & 63) : i.b64Pad;
          return c;
        }(n, e, r, i);
      };
    case "BYTES":
      return function (t) {
        return function (t, n, e) {
          var r,
            i,
            s = "";
          var o = n / 8,
            h = -1 === e ? 3 : 0;
          for (r = 0; r < o; r += 1) i = t[r >>> 2] >>> 8 * (h + e * (r % 4)) & 255, s += String.fromCharCode(i);
          return s;
        }(t, e, r);
      };
    case "ARRAYBUFFER":
      try {
        new ArrayBuffer(0);
      } catch (t) {
        throw new Error("ARRAYBUFFER not supported by this environment");
      }
      return function (t) {
        return function (t, n, e) {
          var r;
          var i = n / 8,
            s = new ArrayBuffer(i),
            o = new Uint8Array(s),
            h = -1 === e ? 3 : 0;
          for (r = 0; r < i; r += 1) o[r] = t[r >>> 2] >>> 8 * (h + e * (r % 4)) & 255;
          return s;
        }(t, e, r);
      };
    case "UINT8ARRAY":
      try {
        new Uint8Array(0);
      } catch (t) {
        throw new Error("UINT8ARRAY not supported by this environment");
      }
      return function (t) {
        return function (t, n, e) {
          var r;
          var i = n / 8,
            s = -1 === e ? 3 : 0,
            o = new Uint8Array(i);
          for (r = 0; r < i; r += 1) o[r] = t[r >>> 2] >>> 8 * (s + e * (r % 4)) & 255;
          return o;
        }(t, e, r);
      };
    default:
      throw new Error("format must be HEX, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY");
  }
}
var i = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298],
  s = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428],
  o = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225],
  h = "Chosen SHA variant is not supported";
function u(t, n) {
  var e, r;
  var i = t.binLen >>> 3,
    s = n.binLen >>> 3,
    o = i << 3,
    h = 4 - i << 3;
  if (i % 4 != 0) {
    for (e = 0; e < s; e += 4) r = i + e >>> 2, t.value[r] |= n.value[e >>> 2] << o, t.value.push(0), t.value[r + 1] |= n.value[e >>> 2] >>> h;
    return (t.value.length << 2) - 4 >= s + i && t.value.pop(), {
      value: t.value,
      binLen: t.binLen + n.binLen
    };
  }
  return {
    value: t.value.concat(n.value),
    binLen: t.binLen + n.binLen
  };
}
function w(t) {
  var n = {
      outputUpper: !1,
      b64Pad: "=",
      outputLen: -1
    },
    e = t || {},
    r = "Output length must be a multiple of 8";
  if (n.outputUpper = e.outputUpper || !1, e.b64Pad && (n.b64Pad = e.b64Pad), e.outputLen) {
    if (e.outputLen % 8 != 0) throw new Error(r);
    n.outputLen = e.outputLen;
  } else if (e.shakeLen) {
    if (e.shakeLen % 8 != 0) throw new Error(r);
    n.outputLen = e.shakeLen;
  }
  if ("boolean" != typeof n.outputUpper) throw new Error("Invalid outputUpper formatting option");
  if ("string" != typeof n.b64Pad) throw new Error("Invalid b64Pad formatting option");
  return n;
}
function c(t, n, r, i) {
  var s = t + " must include a value and format";
  if (!n) {
    if (!i) throw new Error(s);
    return i;
  }
  if (void 0 === n.value || !n.format) throw new Error(s);
  return e(n.format, n.encoding || "UTF8", r)(n.value);
}
var f = /*#__PURE__*/function () {
  function f(t, n, e) {
    _classCallCheck(this, f);
    var r = e || {};
    if (this.t = n, this.i = r.encoding || "UTF8", this.numRounds = r.numRounds || 1, isNaN(this.numRounds) || this.numRounds !== parseInt(this.numRounds, 10) || 1 > this.numRounds) throw new Error("numRounds must a integer >= 1");
    this.s = t, this.o = [], this.h = 0, this.u = !1, this.l = 0, this.A = !1, this.H = [], this.S = [];
  }
  return _createClass(f, [{
    key: "update",
    value: function update(t) {
      var n,
        e = 0;
      var r = this.p >>> 5,
        i = this.m(t, this.o, this.h),
        s = i.binLen,
        o = i.value,
        h = s >>> 5;
      for (n = 0; n < h; n += r) e + this.p <= s && (this.C = this.R(o.slice(n, n + r), this.C), e += this.p);
      this.l += e, this.o = o.slice(e >>> 5), this.h = s % this.p, this.u = !0;
    }
  }, {
    key: "getHash",
    value: function getHash(t, n) {
      var e,
        i,
        s = this.U;
      var o = w(n);
      if (this.v) {
        if (-1 === o.outputLen) throw new Error("Output length must be specified in options");
        s = o.outputLen;
      }
      var h = r(t, s, this.K, o);
      if (this.A && this.T) return h(this.T(o));
      for (i = this.F(this.o.slice(), this.h, this.l, this.g(this.C), s), e = 1; e < this.numRounds; e += 1) this.v && s % 32 != 0 && (i[i.length - 1] &= 16777215 >>> 24 - s % 32), i = this.F(i, s, 0, this.B(this.s), s);
      return h(i);
    }
  }, {
    key: "setHMACKey",
    value: function setHMACKey(t, n, r) {
      if (!this.L) throw new Error("Variant does not support HMAC");
      if (this.u) throw new Error("Cannot set MAC key after calling update");
      var i = e(n, (r || {}).encoding || "UTF8", this.K);
      this.M(i(t));
    }
  }, {
    key: "M",
    value: function M(t) {
      var n = this.p >>> 3,
        e = n / 4 - 1;
      var r;
      if (1 !== this.numRounds) throw new Error("Cannot set numRounds with MAC");
      if (this.A) throw new Error("MAC key already set");
      for (n < t.binLen / 8 && (t.value = this.F(t.value, t.binLen, 0, this.B(this.s), this.U)); t.value.length <= e;) t.value.push(0);
      for (r = 0; r <= e; r += 1) this.H[r] = 909522486 ^ t.value[r], this.S[r] = 1549556828 ^ t.value[r];
      this.C = this.R(this.H, this.C), this.l = this.p, this.A = !0;
    }
  }, {
    key: "getHMAC",
    value: function getHMAC(t, n) {
      var e = w(n);
      return r(t, this.U, this.K, e)(this.k());
    }
  }, {
    key: "k",
    value: function k() {
      var t;
      if (!this.A) throw new Error("Cannot call getHMAC without first setting MAC key");
      var n = this.F(this.o.slice(), this.h, this.l, this.g(this.C), this.U);
      return t = this.R(this.S, this.B(this.s)), t = this.F(n, this.U, this.p, t, this.U), t;
    }
  }]);
}();
function a(t, n) {
  return t << n | t >>> 32 - n;
}
function l(t, n) {
  return t >>> n | t << 32 - n;
}
function A(t, n) {
  return t >>> n;
}
function E(t, n, e) {
  return t ^ n ^ e;
}
function H(t, n, e) {
  return t & n ^ ~t & e;
}
function S(t, n, e) {
  return t & n ^ t & e ^ n & e;
}
function b(t) {
  return l(t, 2) ^ l(t, 13) ^ l(t, 22);
}
function p(t, n) {
  var e = (65535 & t) + (65535 & n);
  return (65535 & (t >>> 16) + (n >>> 16) + (e >>> 16)) << 16 | 65535 & e;
}
function d(t, n, e, r) {
  var i = (65535 & t) + (65535 & n) + (65535 & e) + (65535 & r);
  return (65535 & (t >>> 16) + (n >>> 16) + (e >>> 16) + (r >>> 16) + (i >>> 16)) << 16 | 65535 & i;
}
function m(t, n, e, r, i) {
  var s = (65535 & t) + (65535 & n) + (65535 & e) + (65535 & r) + (65535 & i);
  return (65535 & (t >>> 16) + (n >>> 16) + (e >>> 16) + (r >>> 16) + (i >>> 16) + (s >>> 16)) << 16 | 65535 & s;
}
function C(t) {
  return l(t, 7) ^ l(t, 18) ^ A(t, 3);
}
function y(t) {
  return l(t, 6) ^ l(t, 11) ^ l(t, 25);
}
function R(t) {
  return [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
}
function U(t, n) {
  var e, r, i, s, o, h, u;
  var w = [];
  for (e = n[0], r = n[1], i = n[2], s = n[3], o = n[4], u = 0; u < 80; u += 1) w[u] = u < 16 ? t[u] : a(w[u - 3] ^ w[u - 8] ^ w[u - 14] ^ w[u - 16], 1), h = u < 20 ? m(a(e, 5), H(r, i, s), o, 1518500249, w[u]) : u < 40 ? m(a(e, 5), E(r, i, s), o, 1859775393, w[u]) : u < 60 ? m(a(e, 5), S(r, i, s), o, 2400959708, w[u]) : m(a(e, 5), E(r, i, s), o, 3395469782, w[u]), o = s, s = i, i = a(r, 30), r = e, e = h;
  return n[0] = p(e, n[0]), n[1] = p(r, n[1]), n[2] = p(i, n[2]), n[3] = p(s, n[3]), n[4] = p(o, n[4]), n;
}
function v(t, n, e, r) {
  var i;
  var s = 15 + (n + 65 >>> 9 << 4),
    o = n + e;
  for (; t.length <= s;) t.push(0);
  for (t[n >>> 5] |= 128 << 24 - n % 32, t[s] = 4294967295 & o, t[s - 1] = o / 4294967296 | 0, i = 0; i < t.length; i += 16) r = U(t.slice(i, i + 16), r);
  return r;
}
var K = /*#__PURE__*/function (_f) {
  function K(t, n, r) {
    var _this;
    _classCallCheck(this, K);
    if ("SHA-1" !== t) throw new Error(h);
    _this = _callSuper(this, K, [t, n, r]);
    var i = r || {};
    _this.L = !0, _this.T = _this.k, _this.K = -1, _this.m = e(_this.t, _this.i, _this.K), _this.R = U, _this.g = function (t) {
      return t.slice();
    }, _this.B = R, _this.F = v, _this.C = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], _this.p = 512, _this.U = 160, _this.v = !1, i.hmacKey && _this.M(c("hmacKey", i.hmacKey, _this.K));
    return _this;
  }
  _inherits(K, _f);
  return _createClass(K);
}(f);
function T(t) {
  var n;
  return n = "SHA-224" == t ? s.slice() : o.slice(), n;
}
function F(t, n) {
  var e, r, s, o, h, u, w, c, f, a, E;
  var R = [];
  for (e = n[0], r = n[1], s = n[2], o = n[3], h = n[4], u = n[5], w = n[6], c = n[7], E = 0; E < 64; E += 1) R[E] = E < 16 ? t[E] : d(l(U = R[E - 2], 17) ^ l(U, 19) ^ A(U, 10), R[E - 7], C(R[E - 15]), R[E - 16]), f = m(c, y(h), H(h, u, w), i[E], R[E]), a = p(b(e), S(e, r, s)), c = w, w = u, u = h, h = p(o, f), o = s, s = r, r = e, e = p(f, a);
  var U;
  return n[0] = p(e, n[0]), n[1] = p(r, n[1]), n[2] = p(s, n[2]), n[3] = p(o, n[3]), n[4] = p(h, n[4]), n[5] = p(u, n[5]), n[6] = p(w, n[6]), n[7] = p(c, n[7]), n;
}
var g = /*#__PURE__*/function (_f2) {
  function g(t, n, r) {
    var _this2;
    _classCallCheck(this, g);
    if ("SHA-224" !== t && "SHA-256" !== t) throw new Error(h);
    _this2 = _callSuper(this, g, [t, n, r]);
    var i = r || {};
    _this2.T = _this2.k, _this2.L = !0, _this2.K = -1, _this2.m = e(_this2.t, _this2.i, _this2.K), _this2.R = F, _this2.g = function (t) {
      return t.slice();
    }, _this2.B = T, _this2.F = function (n, e, r, i) {
      return function (t, n, e, r, i) {
        var s, o;
        var h = 15 + (n + 65 >>> 9 << 4),
          u = n + e;
        for (; t.length <= h;) t.push(0);
        for (t[n >>> 5] |= 128 << 24 - n % 32, t[h] = 4294967295 & u, t[h - 1] = u / 4294967296 | 0, s = 0; s < t.length; s += 16) r = F(t.slice(s, s + 16), r);
        return o = "SHA-224" === i ? [r[0], r[1], r[2], r[3], r[4], r[5], r[6]] : r, o;
      }(n, e, r, i, t);
    }, _this2.C = T(t), _this2.p = 512, _this2.U = "SHA-224" === t ? 224 : 256, _this2.v = !1, i.hmacKey && _this2.M(c("hmacKey", i.hmacKey, _this2.K));
    return _this2;
  }
  _inherits(g, _f2);
  return _createClass(g);
}(f);
var B = /*#__PURE__*/_createClass(function B(t, n) {
  _classCallCheck(this, B);
  this.Y = t, this.N = n;
});
function L(t, n) {
  var e;
  return n > 32 ? (e = 64 - n, new B(t.N << n | t.Y >>> e, t.Y << n | t.N >>> e)) : 0 !== n ? (e = 32 - n, new B(t.Y << n | t.N >>> e, t.N << n | t.Y >>> e)) : t;
}
function M(t, n) {
  var e;
  return n < 32 ? (e = 32 - n, new B(t.Y >>> n | t.N << e, t.N >>> n | t.Y << e)) : (e = 64 - n, new B(t.N >>> n | t.Y << e, t.Y >>> n | t.N << e));
}
function k(t, n) {
  return new B(t.Y >>> n, t.N >>> n | t.Y << 32 - n);
}
function Y(t, n, e) {
  return new B(t.Y & n.Y ^ t.Y & e.Y ^ n.Y & e.Y, t.N & n.N ^ t.N & e.N ^ n.N & e.N);
}
function N(t) {
  var n = M(t, 28),
    e = M(t, 34),
    r = M(t, 39);
  return new B(n.Y ^ e.Y ^ r.Y, n.N ^ e.N ^ r.N);
}
function I(t, n) {
  var e, r;
  e = (65535 & t.N) + (65535 & n.N), r = (t.N >>> 16) + (n.N >>> 16) + (e >>> 16);
  var i = (65535 & r) << 16 | 65535 & e;
  e = (65535 & t.Y) + (65535 & n.Y) + (r >>> 16), r = (t.Y >>> 16) + (n.Y >>> 16) + (e >>> 16);
  return new B((65535 & r) << 16 | 65535 & e, i);
}
function X(t, n, e, r) {
  var i, s;
  i = (65535 & t.N) + (65535 & n.N) + (65535 & e.N) + (65535 & r.N), s = (t.N >>> 16) + (n.N >>> 16) + (e.N >>> 16) + (r.N >>> 16) + (i >>> 16);
  var o = (65535 & s) << 16 | 65535 & i;
  i = (65535 & t.Y) + (65535 & n.Y) + (65535 & e.Y) + (65535 & r.Y) + (s >>> 16), s = (t.Y >>> 16) + (n.Y >>> 16) + (e.Y >>> 16) + (r.Y >>> 16) + (i >>> 16);
  return new B((65535 & s) << 16 | 65535 & i, o);
}
function z(t, n, e, r, i) {
  var s, o;
  s = (65535 & t.N) + (65535 & n.N) + (65535 & e.N) + (65535 & r.N) + (65535 & i.N), o = (t.N >>> 16) + (n.N >>> 16) + (e.N >>> 16) + (r.N >>> 16) + (i.N >>> 16) + (s >>> 16);
  var h = (65535 & o) << 16 | 65535 & s;
  s = (65535 & t.Y) + (65535 & n.Y) + (65535 & e.Y) + (65535 & r.Y) + (65535 & i.Y) + (o >>> 16), o = (t.Y >>> 16) + (n.Y >>> 16) + (e.Y >>> 16) + (r.Y >>> 16) + (i.Y >>> 16) + (s >>> 16);
  return new B((65535 & o) << 16 | 65535 & s, h);
}
function x(t, n) {
  return new B(t.Y ^ n.Y, t.N ^ n.N);
}
function _(t) {
  var n = M(t, 19),
    e = M(t, 61),
    r = k(t, 6);
  return new B(n.Y ^ e.Y ^ r.Y, n.N ^ e.N ^ r.N);
}
function O(t) {
  var n = M(t, 1),
    e = M(t, 8),
    r = k(t, 7);
  return new B(n.Y ^ e.Y ^ r.Y, n.N ^ e.N ^ r.N);
}
function P(t) {
  var n = M(t, 14),
    e = M(t, 18),
    r = M(t, 41);
  return new B(n.Y ^ e.Y ^ r.Y, n.N ^ e.N ^ r.N);
}
var V = [new B(i[0], 3609767458), new B(i[1], 602891725), new B(i[2], 3964484399), new B(i[3], 2173295548), new B(i[4], 4081628472), new B(i[5], 3053834265), new B(i[6], 2937671579), new B(i[7], 3664609560), new B(i[8], 2734883394), new B(i[9], 1164996542), new B(i[10], 1323610764), new B(i[11], 3590304994), new B(i[12], 4068182383), new B(i[13], 991336113), new B(i[14], 633803317), new B(i[15], 3479774868), new B(i[16], 2666613458), new B(i[17], 944711139), new B(i[18], 2341262773), new B(i[19], 2007800933), new B(i[20], 1495990901), new B(i[21], 1856431235), new B(i[22], 3175218132), new B(i[23], 2198950837), new B(i[24], 3999719339), new B(i[25], 766784016), new B(i[26], 2566594879), new B(i[27], 3203337956), new B(i[28], 1034457026), new B(i[29], 2466948901), new B(i[30], 3758326383), new B(i[31], 168717936), new B(i[32], 1188179964), new B(i[33], 1546045734), new B(i[34], 1522805485), new B(i[35], 2643833823), new B(i[36], 2343527390), new B(i[37], 1014477480), new B(i[38], 1206759142), new B(i[39], 344077627), new B(i[40], 1290863460), new B(i[41], 3158454273), new B(i[42], 3505952657), new B(i[43], 106217008), new B(i[44], 3606008344), new B(i[45], 1432725776), new B(i[46], 1467031594), new B(i[47], 851169720), new B(i[48], 3100823752), new B(i[49], 1363258195), new B(i[50], 3750685593), new B(i[51], 3785050280), new B(i[52], 3318307427), new B(i[53], 3812723403), new B(i[54], 2003034995), new B(i[55], 3602036899), new B(i[56], 1575990012), new B(i[57], 1125592928), new B(i[58], 2716904306), new B(i[59], 442776044), new B(i[60], 593698344), new B(i[61], 3733110249), new B(i[62], 2999351573), new B(i[63], 3815920427), new B(3391569614, 3928383900), new B(3515267271, 566280711), new B(3940187606, 3454069534), new B(4118630271, 4000239992), new B(116418474, 1914138554), new B(174292421, 2731055270), new B(289380356, 3203993006), new B(460393269, 320620315), new B(685471733, 587496836), new B(852142971, 1086792851), new B(1017036298, 365543100), new B(1126000580, 2618297676), new B(1288033470, 3409855158), new B(1501505948, 4234509866), new B(1607167915, 987167468), new B(1816402316, 1246189591)];
function Z(t) {
  return "SHA-384" === t ? [new B(3418070365, s[0]), new B(1654270250, s[1]), new B(2438529370, s[2]), new B(355462360, s[3]), new B(1731405415, s[4]), new B(41048885895, s[5]), new B(3675008525, s[6]), new B(1203062813, s[7])] : [new B(o[0], 4089235720), new B(o[1], 2227873595), new B(o[2], 4271175723), new B(o[3], 1595750129), new B(o[4], 2917565137), new B(o[5], 725511199), new B(o[6], 4215389547), new B(o[7], 327033209)];
}
function j(t, n) {
  var e, r, i, s, o, h, u, w, c, f, a, l;
  var A = [];
  for (e = n[0], r = n[1], i = n[2], s = n[3], o = n[4], h = n[5], u = n[6], w = n[7], a = 0; a < 80; a += 1) a < 16 ? (l = 2 * a, A[a] = new B(t[l], t[l + 1])) : A[a] = X(_(A[a - 2]), A[a - 7], O(A[a - 15]), A[a - 16]), c = z(w, P(o), (H = h, S = u, new B((E = o).Y & H.Y ^ ~E.Y & S.Y, E.N & H.N ^ ~E.N & S.N)), V[a], A[a]), f = I(N(e), Y(e, r, i)), w = u, u = h, h = o, o = I(s, c), s = i, i = r, r = e, e = I(c, f);
  var E, H, S;
  return n[0] = I(e, n[0]), n[1] = I(r, n[1]), n[2] = I(i, n[2]), n[3] = I(s, n[3]), n[4] = I(o, n[4]), n[5] = I(h, n[5]), n[6] = I(u, n[6]), n[7] = I(w, n[7]), n;
}
var q = /*#__PURE__*/function (_f3) {
  function q(t, n, r) {
    var _this3;
    _classCallCheck(this, q);
    if ("SHA-384" !== t && "SHA-512" !== t) throw new Error(h);
    _this3 = _callSuper(this, q, [t, n, r]);
    var i = r || {};
    _this3.T = _this3.k, _this3.L = !0, _this3.K = -1, _this3.m = e(_this3.t, _this3.i, _this3.K), _this3.R = j, _this3.g = function (t) {
      return t.slice();
    }, _this3.B = Z, _this3.F = function (n, e, r, i) {
      return function (t, n, e, r, i) {
        var s, o;
        var h = 31 + (n + 129 >>> 10 << 5),
          u = n + e;
        for (; t.length <= h;) t.push(0);
        for (t[n >>> 5] |= 128 << 24 - n % 32, t[h] = 4294967295 & u, t[h - 1] = u / 4294967296 | 0, s = 0; s < t.length; s += 32) r = j(t.slice(s, s + 32), r);
        return o = "SHA-384" === i ? [(r = r)[0].Y, r[0].N, r[1].Y, r[1].N, r[2].Y, r[2].N, r[3].Y, r[3].N, r[4].Y, r[4].N, r[5].Y, r[5].N] : [r[0].Y, r[0].N, r[1].Y, r[1].N, r[2].Y, r[2].N, r[3].Y, r[3].N, r[4].Y, r[4].N, r[5].Y, r[5].N, r[6].Y, r[6].N, r[7].Y, r[7].N], o;
      }(n, e, r, i, t);
    }, _this3.C = Z(t), _this3.p = 1024, _this3.U = "SHA-384" === t ? 384 : 512, _this3.v = !1, i.hmacKey && _this3.M(c("hmacKey", i.hmacKey, _this3.K));
    return _this3;
  }
  _inherits(q, _f3);
  return _createClass(q);
}(f);
var D = [new B(0, 1), new B(0, 32898), new B(2147483648, 32906), new B(2147483648, 2147516416), new B(0, 32907), new B(0, 2147483649), new B(2147483648, 2147516545), new B(2147483648, 32777), new B(0, 138), new B(0, 136), new B(0, 2147516425), new B(0, 2147483658), new B(0, 2147516555), new B(2147483648, 139), new B(2147483648, 32905), new B(2147483648, 32771), new B(2147483648, 32770), new B(2147483648, 128), new B(0, 32778), new B(2147483648, 2147483658), new B(2147483648, 2147516545), new B(2147483648, 32896), new B(0, 2147483649), new B(2147483648, 2147516424)],
  G = [[0, 36, 3, 41, 18], [1, 44, 10, 45, 2], [62, 6, 43, 15, 61], [28, 55, 25, 21, 56], [27, 20, 39, 8, 14]];
function J(t) {
  var n;
  var e = [];
  for (n = 0; n < 5; n += 1) e[n] = [new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0)];
  return e;
}
function Q(t) {
  var n;
  var e = [];
  for (n = 0; n < 5; n += 1) e[n] = t[n].slice();
  return e;
}
function W(t, n) {
  var e, r, i, s;
  var o = [],
    h = [];
  if (null !== t) for (r = 0; r < t.length; r += 2) n[(r >>> 1) % 5][(r >>> 1) / 5 | 0] = x(n[(r >>> 1) % 5][(r >>> 1) / 5 | 0], new B(t[r + 1], t[r]));
  for (e = 0; e < 24; e += 1) {
    for (s = J(), r = 0; r < 5; r += 1) o[r] = (u = n[r][0], w = n[r][1], c = n[r][2], f = n[r][3], a = n[r][4], new B(u.Y ^ w.Y ^ c.Y ^ f.Y ^ a.Y, u.N ^ w.N ^ c.N ^ f.N ^ a.N));
    for (r = 0; r < 5; r += 1) h[r] = x(o[(r + 4) % 5], L(o[(r + 1) % 5], 1));
    for (r = 0; r < 5; r += 1) for (i = 0; i < 5; i += 1) n[r][i] = x(n[r][i], h[r]);
    for (r = 0; r < 5; r += 1) for (i = 0; i < 5; i += 1) s[i][(2 * r + 3 * i) % 5] = L(n[r][i], G[r][i]);
    for (r = 0; r < 5; r += 1) for (i = 0; i < 5; i += 1) n[r][i] = x(s[r][i], new B(~s[(r + 1) % 5][i].Y & s[(r + 2) % 5][i].Y, ~s[(r + 1) % 5][i].N & s[(r + 2) % 5][i].N));
    n[0][0] = x(n[0][0], D[e]);
  }
  var u, w, c, f, a;
  return n;
}
function $(t) {
  var n,
    e,
    r = 0;
  var i = [0, 0],
    s = [4294967295 & t, t / 4294967296 & 2097151];
  for (n = 6; n >= 0; n--) e = s[n >> 2] >>> 8 * n & 255, 0 === e && 0 === r || (i[r + 1 >> 2] |= e << 8 * (r + 1), r += 1);
  return r = 0 !== r ? r : 1, i[0] |= r, {
    value: r + 1 > 4 ? i : [i[0]],
    binLen: 8 + 8 * r
  };
}
function tt(t) {
  return u($(t.binLen), t);
}
function nt(t, n) {
  var e,
    r = $(n);
  r = u(r, t);
  var i = n >>> 2,
    s = (i - r.value.length % i) % i;
  for (e = 0; e < s; e++) r.value.push(0);
  return r.value;
}
var et = /*#__PURE__*/function (_f4) {
  function et(t, n, r) {
    var _this4;
    _classCallCheck(this, et);
    var i = 6,
      s = 0;
    _this4 = _callSuper(this, et, [t, n, r]);
    var o = r || {};
    if (1 !== _this4.numRounds) {
      if (o.kmacKey || o.hmacKey) throw new Error("Cannot set numRounds with MAC");
      if ("CSHAKE128" === _this4.s || "CSHAKE256" === _this4.s) throw new Error("Cannot set numRounds for CSHAKE variants");
    }
    switch (_this4.K = 1, _this4.m = e(_this4.t, _this4.i, _this4.K), _this4.R = W, _this4.g = Q, _this4.B = J, _this4.C = J(), _this4.v = !1, t) {
      case "SHA3-224":
        _this4.p = s = 1152, _this4.U = 224, _this4.L = !0, _this4.T = _this4.k;
        break;
      case "SHA3-256":
        _this4.p = s = 1088, _this4.U = 256, _this4.L = !0, _this4.T = _this4.k;
        break;
      case "SHA3-384":
        _this4.p = s = 832, _this4.U = 384, _this4.L = !0, _this4.T = _this4.k;
        break;
      case "SHA3-512":
        _this4.p = s = 576, _this4.U = 512, _this4.L = !0, _this4.T = _this4.k;
        break;
      case "SHAKE128":
        i = 31, _this4.p = s = 1344, _this4.U = -1, _this4.v = !0, _this4.L = !1, _this4.T = null;
        break;
      case "SHAKE256":
        i = 31, _this4.p = s = 1088, _this4.U = -1, _this4.v = !0, _this4.L = !1, _this4.T = null;
        break;
      case "KMAC128":
        i = 4, _this4.p = s = 1344, _this4.I(r), _this4.U = -1, _this4.v = !0, _this4.L = !1, _this4.T = _this4.X;
        break;
      case "KMAC256":
        i = 4, _this4.p = s = 1088, _this4.I(r), _this4.U = -1, _this4.v = !0, _this4.L = !1, _this4.T = _this4.X;
        break;
      case "CSHAKE128":
        _this4.p = s = 1344, i = _this4._(r), _this4.U = -1, _this4.v = !0, _this4.L = !1, _this4.T = null;
        break;
      case "CSHAKE256":
        _this4.p = s = 1088, i = _this4._(r), _this4.U = -1, _this4.v = !0, _this4.L = !1, _this4.T = null;
        break;
      default:
        throw new Error(h);
    }
    _this4.F = function (t, n, e, r, o) {
      return function (t, n, e, r, i, s, o) {
        var h,
          u,
          w = 0;
        var c = [],
          f = i >>> 5,
          a = n >>> 5;
        for (h = 0; h < a && n >= i; h += f) r = W(t.slice(h, h + f), r), n -= i;
        for (t = t.slice(h), n %= i; t.length < f;) t.push(0);
        for (h = n >>> 3, t[h >> 2] ^= s << h % 4 * 8, t[f - 1] ^= 2147483648, r = W(t, r); 32 * c.length < o && (u = r[w % 5][w / 5 | 0], c.push(u.N), !(32 * c.length >= o));) c.push(u.Y), w += 1, 0 == 64 * w % i && (W(null, r), w = 0);
        return c;
      }(t, n, 0, r, s, i, o);
    }, o.hmacKey && _this4.M(c("hmacKey", o.hmacKey, _this4.K));
    return _this4;
  }
  _inherits(et, _f4);
  return _createClass(et, [{
    key: "_",
    value: function _(t, n) {
      var e = function (t) {
        var n = t || {};
        return {
          funcName: c("funcName", n.funcName, 1, {
            value: [],
            binLen: 0
          }),
          customization: c("Customization", n.customization, 1, {
            value: [],
            binLen: 0
          })
        };
      }(t || {});
      n && (e.funcName = n);
      var r = u(tt(e.funcName), tt(e.customization));
      if (0 !== e.customization.binLen || 0 !== e.funcName.binLen) {
        var _t = nt(r, this.p >>> 3);
        for (var _n = 0; _n < _t.length; _n += this.p >>> 5) this.C = this.R(_t.slice(_n, _n + (this.p >>> 5)), this.C), this.l += this.p;
        return 4;
      }
      return 31;
    }
  }, {
    key: "I",
    value: function I(t) {
      var n = function (t) {
        var n = t || {};
        return {
          kmacKey: c("kmacKey", n.kmacKey, 1),
          funcName: {
            value: [1128353099],
            binLen: 32
          },
          customization: c("Customization", n.customization, 1, {
            value: [],
            binLen: 0
          })
        };
      }(t || {});
      this._(t, n.funcName);
      var e = nt(tt(n.kmacKey), this.p >>> 3);
      for (var _t2 = 0; _t2 < e.length; _t2 += this.p >>> 5) this.C = this.R(e.slice(_t2, _t2 + (this.p >>> 5)), this.C), this.l += this.p;
      this.A = !0;
    }
  }, {
    key: "X",
    value: function X(t) {
      var n = u({
        value: this.o.slice(),
        binLen: this.h
      }, function (t) {
        var n,
          e,
          r = 0;
        var i = [0, 0],
          s = [4294967295 & t, t / 4294967296 & 2097151];
        for (n = 6; n >= 0; n--) e = s[n >> 2] >>> 8 * n & 255, 0 === e && 0 === r || (i[r >> 2] |= e << 8 * r, r += 1);
        return r = 0 !== r ? r : 1, i[r >> 2] |= r << 8 * r, {
          value: r + 1 > 4 ? i : [i[0]],
          binLen: 8 + 8 * r
        };
      }(t.outputLen));
      return this.F(n.value, n.binLen, this.l, this.g(this.C), t.outputLen);
    }
  }]);
}(f);
var _default = exports["default"] = /*#__PURE__*/function () {
  function _default(t, n, e) {
    _classCallCheck(this, _default);
    if ("SHA-1" == t) this.O = new K(t, n, e);else if ("SHA-224" == t || "SHA-256" == t) this.O = new g(t, n, e);else if ("SHA-384" == t || "SHA-512" == t) this.O = new q(t, n, e);else {
      if ("SHA3-224" != t && "SHA3-256" != t && "SHA3-384" != t && "SHA3-512" != t && "SHAKE128" != t && "SHAKE256" != t && "CSHAKE128" != t && "CSHAKE256" != t && "KMAC128" != t && "KMAC256" != t) throw new Error(h);
      this.O = new et(t, n, e);
    }
  }
  return _createClass(_default, [{
    key: "update",
    value: function update(t) {
      this.O.update(t);
    }
  }, {
    key: "getHash",
    value: function getHash(t, n) {
      return this.O.getHash(t, n);
    }
  }, {
    key: "setHMACKey",
    value: function setHMACKey(t, n, e) {
      this.O.setHMACKey(t, n, e);
    }
  }, {
    key: "getHMAC",
    value: function getHMAC(t, n) {
      return this.O.getHMAC(t, n);
    }
  }]);
}();

},{}],203:[function(require,module,exports){
"use strict";

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;
function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}
(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }
  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();
function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  }
  // if setTimeout wasn't available but was latter defined
  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }
  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}
function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  }
  // if clearTimeout wasn't available but was latter defined
  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }
  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;
function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }
  draining = false;
  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }
  if (queue.length) {
    drainQueue();
  }
}
function drainQueue() {
  if (draining) {
    return;
  }
  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;
  while (len) {
    currentQueue = queue;
    queue = [];
    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }
    queueIndex = -1;
    len = queue.length;
  }
  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}
process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);
  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }
  queue.push(new Item(fun, args));
  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
};

// v8 likes predictible objects
function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}
Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};
function noop() {}
process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;
process.listeners = function (name) {
  return [];
};
process.binding = function (name) {
  throw new Error('process.binding is not supported');
};
process.cwd = function () {
  return '/';
};
process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};
process.umask = function () {
  return 0;
};

},{}],204:[function(require,module,exports){
"use strict";

/**
 * <symbol> that can be used to declare custom inspect functions.
 *
 * same as Symbol.for('nodejs.util.inspect.custom')
 * same as util.inspect.custom
 */
var SymbolInspect = Symbol["for"]('nodejs.util.inspect.custom');
module.exports = SymbolInspect;

},{}],205:[function(require,module,exports){
(function (setImmediate,clearImmediate){(function (){
"use strict";

var nextTick = require('process/browser.js').nextTick;
var apply = Function.prototype.apply;
var slice = Array.prototype.slice;
var immediateIds = {};
var nextImmediateId = 0;

// DOM APIs, for completeness

exports.setTimeout = function () {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function () {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout = exports.clearInterval = function (timeout) {
  timeout.close();
};
function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function () {};
Timeout.prototype.close = function () {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function (item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};
exports.unenroll = function (item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};
exports._unrefActive = exports.active = function (item) {
  clearTimeout(item._idleTimeoutId);
  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout) item._onTimeout();
    }, msecs);
  }
};

// That's not how node.js implements it but the exposed api is the same.
exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function (fn) {
  var id = nextImmediateId++;
  var args = arguments.length < 2 ? false : slice.call(arguments, 1);
  immediateIds[id] = true;
  nextTick(function onNextTick() {
    if (immediateIds[id]) {
      // fn.call() is faster so we optimize for the common use-case
      // @see http://jsperf.com/call-apply-segu
      if (args) {
        fn.apply(null, args);
      } else {
        fn.call(null);
      }
      // Prevent ids from leaking
      exports.clearImmediate(id);
    }
  });
  return id;
};
exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function (id) {
  delete immediateIds[id];
};

}).call(this)}).call(this,require("timers").setImmediate,require("timers").clearImmediate)
},{"process/browser.js":203,"timers":205}],206:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";

// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.
// Public domain.
(function (root, f) {
  'use strict';

  if (typeof module !== 'undefined' && module.exports) module.exports = f();else if (root.nacl) root.nacl.util = f();else {
    root.nacl = {};
    root.nacl.util = f();
  }
})(void 0, function () {
  'use strict';

  var util = {};
  function validateBase64(s) {
    if (!/^(?:[A-Za-z0-9+\/]{2}[A-Za-z0-9+\/]{2})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.test(s)) {
      throw new TypeError('invalid encoding');
    }
  }
  util.decodeUTF8 = function (s) {
    if (typeof s !== 'string') throw new TypeError('expected string');
    var i,
      d = unescape(encodeURIComponent(s)),
      b = new Uint8Array(d.length);
    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);
    return b;
  };
  util.encodeUTF8 = function (arr) {
    var i,
      s = [];
    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));
    return decodeURIComponent(escape(s.join('')));
  };
  if (typeof atob === 'undefined') {
    // Node.js

    if (typeof Buffer.from !== 'undefined') {
      // Node v6 and later
      util.encodeBase64 = function (arr) {
        // v6 and later
        return Buffer.from(arr).toString('base64');
      };
      util.decodeBase64 = function (s) {
        validateBase64(s);
        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));
      };
    } else {
      // Node earlier than v6
      util.encodeBase64 = function (arr) {
        // v6 and later
        return new Buffer(arr).toString('base64');
      };
      util.decodeBase64 = function (s) {
        validateBase64(s);
        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));
      };
    }
  } else {
    // Browsers

    util.encodeBase64 = function (arr) {
      var i,
        s = [],
        len = arr.length;
      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));
      return btoa(s.join(''));
    };
    util.decodeBase64 = function (s) {
      validateBase64(s);
      var i,
        d = atob(s),
        b = new Uint8Array(d.length);
      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);
      return b;
    };
  }
  return util;
});

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":195}],207:[function(require,module,exports){
"use strict";

(function (nacl) {
  'use strict';

  // Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.
  // Public domain.
  //
  // Implementation derived from TweetNaCl version 20140427.
  // See for details: http://tweetnacl.cr.yp.to/
  var gf = function gf(init) {
    var i,
      r = new Float64Array(16);
    if (init) for (i = 0; i < init.length; i++) r[i] = init[i];
    return r;
  };

  //  Pluggable, initialized in high-level API below.
  var randombytes = function randombytes(/* x, n */) {
    throw new Error('no PRNG');
  };
  var _0 = new Uint8Array(16);
  var _9 = new Uint8Array(32);
  _9[0] = 9;
  var gf0 = gf(),
    gf1 = gf([1]),
    _121665 = gf([0xdb41, 1]),
    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),
    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),
    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),
    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),
    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);
  function ts64(x, i, h, l) {
    x[i] = h >> 24 & 0xff;
    x[i + 1] = h >> 16 & 0xff;
    x[i + 2] = h >> 8 & 0xff;
    x[i + 3] = h & 0xff;
    x[i + 4] = l >> 24 & 0xff;
    x[i + 5] = l >> 16 & 0xff;
    x[i + 6] = l >> 8 & 0xff;
    x[i + 7] = l & 0xff;
  }
  function vn(x, xi, y, yi, n) {
    var i,
      d = 0;
    for (i = 0; i < n; i++) d |= x[xi + i] ^ y[yi + i];
    return (1 & d - 1 >>> 8) - 1;
  }
  function crypto_verify_16(x, xi, y, yi) {
    return vn(x, xi, y, yi, 16);
  }
  function crypto_verify_32(x, xi, y, yi) {
    return vn(x, xi, y, yi, 32);
  }
  function core_salsa20(o, p, k, c) {
    var j0 = c[0] & 0xff | (c[1] & 0xff) << 8 | (c[2] & 0xff) << 16 | (c[3] & 0xff) << 24,
      j1 = k[0] & 0xff | (k[1] & 0xff) << 8 | (k[2] & 0xff) << 16 | (k[3] & 0xff) << 24,
      j2 = k[4] & 0xff | (k[5] & 0xff) << 8 | (k[6] & 0xff) << 16 | (k[7] & 0xff) << 24,
      j3 = k[8] & 0xff | (k[9] & 0xff) << 8 | (k[10] & 0xff) << 16 | (k[11] & 0xff) << 24,
      j4 = k[12] & 0xff | (k[13] & 0xff) << 8 | (k[14] & 0xff) << 16 | (k[15] & 0xff) << 24,
      j5 = c[4] & 0xff | (c[5] & 0xff) << 8 | (c[6] & 0xff) << 16 | (c[7] & 0xff) << 24,
      j6 = p[0] & 0xff | (p[1] & 0xff) << 8 | (p[2] & 0xff) << 16 | (p[3] & 0xff) << 24,
      j7 = p[4] & 0xff | (p[5] & 0xff) << 8 | (p[6] & 0xff) << 16 | (p[7] & 0xff) << 24,
      j8 = p[8] & 0xff | (p[9] & 0xff) << 8 | (p[10] & 0xff) << 16 | (p[11] & 0xff) << 24,
      j9 = p[12] & 0xff | (p[13] & 0xff) << 8 | (p[14] & 0xff) << 16 | (p[15] & 0xff) << 24,
      j10 = c[8] & 0xff | (c[9] & 0xff) << 8 | (c[10] & 0xff) << 16 | (c[11] & 0xff) << 24,
      j11 = k[16] & 0xff | (k[17] & 0xff) << 8 | (k[18] & 0xff) << 16 | (k[19] & 0xff) << 24,
      j12 = k[20] & 0xff | (k[21] & 0xff) << 8 | (k[22] & 0xff) << 16 | (k[23] & 0xff) << 24,
      j13 = k[24] & 0xff | (k[25] & 0xff) << 8 | (k[26] & 0xff) << 16 | (k[27] & 0xff) << 24,
      j14 = k[28] & 0xff | (k[29] & 0xff) << 8 | (k[30] & 0xff) << 16 | (k[31] & 0xff) << 24,
      j15 = c[12] & 0xff | (c[13] & 0xff) << 8 | (c[14] & 0xff) << 16 | (c[15] & 0xff) << 24;
    var x0 = j0,
      x1 = j1,
      x2 = j2,
      x3 = j3,
      x4 = j4,
      x5 = j5,
      x6 = j6,
      x7 = j7,
      x8 = j8,
      x9 = j9,
      x10 = j10,
      x11 = j11,
      x12 = j12,
      x13 = j13,
      x14 = j14,
      x15 = j15,
      u;
    for (var i = 0; i < 20; i += 2) {
      u = x0 + x12 | 0;
      x4 ^= u << 7 | u >>> 32 - 7;
      u = x4 + x0 | 0;
      x8 ^= u << 9 | u >>> 32 - 9;
      u = x8 + x4 | 0;
      x12 ^= u << 13 | u >>> 32 - 13;
      u = x12 + x8 | 0;
      x0 ^= u << 18 | u >>> 32 - 18;
      u = x5 + x1 | 0;
      x9 ^= u << 7 | u >>> 32 - 7;
      u = x9 + x5 | 0;
      x13 ^= u << 9 | u >>> 32 - 9;
      u = x13 + x9 | 0;
      x1 ^= u << 13 | u >>> 32 - 13;
      u = x1 + x13 | 0;
      x5 ^= u << 18 | u >>> 32 - 18;
      u = x10 + x6 | 0;
      x14 ^= u << 7 | u >>> 32 - 7;
      u = x14 + x10 | 0;
      x2 ^= u << 9 | u >>> 32 - 9;
      u = x2 + x14 | 0;
      x6 ^= u << 13 | u >>> 32 - 13;
      u = x6 + x2 | 0;
      x10 ^= u << 18 | u >>> 32 - 18;
      u = x15 + x11 | 0;
      x3 ^= u << 7 | u >>> 32 - 7;
      u = x3 + x15 | 0;
      x7 ^= u << 9 | u >>> 32 - 9;
      u = x7 + x3 | 0;
      x11 ^= u << 13 | u >>> 32 - 13;
      u = x11 + x7 | 0;
      x15 ^= u << 18 | u >>> 32 - 18;
      u = x0 + x3 | 0;
      x1 ^= u << 7 | u >>> 32 - 7;
      u = x1 + x0 | 0;
      x2 ^= u << 9 | u >>> 32 - 9;
      u = x2 + x1 | 0;
      x3 ^= u << 13 | u >>> 32 - 13;
      u = x3 + x2 | 0;
      x0 ^= u << 18 | u >>> 32 - 18;
      u = x5 + x4 | 0;
      x6 ^= u << 7 | u >>> 32 - 7;
      u = x6 + x5 | 0;
      x7 ^= u << 9 | u >>> 32 - 9;
      u = x7 + x6 | 0;
      x4 ^= u << 13 | u >>> 32 - 13;
      u = x4 + x7 | 0;
      x5 ^= u << 18 | u >>> 32 - 18;
      u = x10 + x9 | 0;
      x11 ^= u << 7 | u >>> 32 - 7;
      u = x11 + x10 | 0;
      x8 ^= u << 9 | u >>> 32 - 9;
      u = x8 + x11 | 0;
      x9 ^= u << 13 | u >>> 32 - 13;
      u = x9 + x8 | 0;
      x10 ^= u << 18 | u >>> 32 - 18;
      u = x15 + x14 | 0;
      x12 ^= u << 7 | u >>> 32 - 7;
      u = x12 + x15 | 0;
      x13 ^= u << 9 | u >>> 32 - 9;
      u = x13 + x12 | 0;
      x14 ^= u << 13 | u >>> 32 - 13;
      u = x14 + x13 | 0;
      x15 ^= u << 18 | u >>> 32 - 18;
    }
    x0 = x0 + j0 | 0;
    x1 = x1 + j1 | 0;
    x2 = x2 + j2 | 0;
    x3 = x3 + j3 | 0;
    x4 = x4 + j4 | 0;
    x5 = x5 + j5 | 0;
    x6 = x6 + j6 | 0;
    x7 = x7 + j7 | 0;
    x8 = x8 + j8 | 0;
    x9 = x9 + j9 | 0;
    x10 = x10 + j10 | 0;
    x11 = x11 + j11 | 0;
    x12 = x12 + j12 | 0;
    x13 = x13 + j13 | 0;
    x14 = x14 + j14 | 0;
    x15 = x15 + j15 | 0;
    o[0] = x0 >>> 0 & 0xff;
    o[1] = x0 >>> 8 & 0xff;
    o[2] = x0 >>> 16 & 0xff;
    o[3] = x0 >>> 24 & 0xff;
    o[4] = x1 >>> 0 & 0xff;
    o[5] = x1 >>> 8 & 0xff;
    o[6] = x1 >>> 16 & 0xff;
    o[7] = x1 >>> 24 & 0xff;
    o[8] = x2 >>> 0 & 0xff;
    o[9] = x2 >>> 8 & 0xff;
    o[10] = x2 >>> 16 & 0xff;
    o[11] = x2 >>> 24 & 0xff;
    o[12] = x3 >>> 0 & 0xff;
    o[13] = x3 >>> 8 & 0xff;
    o[14] = x3 >>> 16 & 0xff;
    o[15] = x3 >>> 24 & 0xff;
    o[16] = x4 >>> 0 & 0xff;
    o[17] = x4 >>> 8 & 0xff;
    o[18] = x4 >>> 16 & 0xff;
    o[19] = x4 >>> 24 & 0xff;
    o[20] = x5 >>> 0 & 0xff;
    o[21] = x5 >>> 8 & 0xff;
    o[22] = x5 >>> 16 & 0xff;
    o[23] = x5 >>> 24 & 0xff;
    o[24] = x6 >>> 0 & 0xff;
    o[25] = x6 >>> 8 & 0xff;
    o[26] = x6 >>> 16 & 0xff;
    o[27] = x6 >>> 24 & 0xff;
    o[28] = x7 >>> 0 & 0xff;
    o[29] = x7 >>> 8 & 0xff;
    o[30] = x7 >>> 16 & 0xff;
    o[31] = x7 >>> 24 & 0xff;
    o[32] = x8 >>> 0 & 0xff;
    o[33] = x8 >>> 8 & 0xff;
    o[34] = x8 >>> 16 & 0xff;
    o[35] = x8 >>> 24 & 0xff;
    o[36] = x9 >>> 0 & 0xff;
    o[37] = x9 >>> 8 & 0xff;
    o[38] = x9 >>> 16 & 0xff;
    o[39] = x9 >>> 24 & 0xff;
    o[40] = x10 >>> 0 & 0xff;
    o[41] = x10 >>> 8 & 0xff;
    o[42] = x10 >>> 16 & 0xff;
    o[43] = x10 >>> 24 & 0xff;
    o[44] = x11 >>> 0 & 0xff;
    o[45] = x11 >>> 8 & 0xff;
    o[46] = x11 >>> 16 & 0xff;
    o[47] = x11 >>> 24 & 0xff;
    o[48] = x12 >>> 0 & 0xff;
    o[49] = x12 >>> 8 & 0xff;
    o[50] = x12 >>> 16 & 0xff;
    o[51] = x12 >>> 24 & 0xff;
    o[52] = x13 >>> 0 & 0xff;
    o[53] = x13 >>> 8 & 0xff;
    o[54] = x13 >>> 16 & 0xff;
    o[55] = x13 >>> 24 & 0xff;
    o[56] = x14 >>> 0 & 0xff;
    o[57] = x14 >>> 8 & 0xff;
    o[58] = x14 >>> 16 & 0xff;
    o[59] = x14 >>> 24 & 0xff;
    o[60] = x15 >>> 0 & 0xff;
    o[61] = x15 >>> 8 & 0xff;
    o[62] = x15 >>> 16 & 0xff;
    o[63] = x15 >>> 24 & 0xff;
  }
  function core_hsalsa20(o, p, k, c) {
    var j0 = c[0] & 0xff | (c[1] & 0xff) << 8 | (c[2] & 0xff) << 16 | (c[3] & 0xff) << 24,
      j1 = k[0] & 0xff | (k[1] & 0xff) << 8 | (k[2] & 0xff) << 16 | (k[3] & 0xff) << 24,
      j2 = k[4] & 0xff | (k[5] & 0xff) << 8 | (k[6] & 0xff) << 16 | (k[7] & 0xff) << 24,
      j3 = k[8] & 0xff | (k[9] & 0xff) << 8 | (k[10] & 0xff) << 16 | (k[11] & 0xff) << 24,
      j4 = k[12] & 0xff | (k[13] & 0xff) << 8 | (k[14] & 0xff) << 16 | (k[15] & 0xff) << 24,
      j5 = c[4] & 0xff | (c[5] & 0xff) << 8 | (c[6] & 0xff) << 16 | (c[7] & 0xff) << 24,
      j6 = p[0] & 0xff | (p[1] & 0xff) << 8 | (p[2] & 0xff) << 16 | (p[3] & 0xff) << 24,
      j7 = p[4] & 0xff | (p[5] & 0xff) << 8 | (p[6] & 0xff) << 16 | (p[7] & 0xff) << 24,
      j8 = p[8] & 0xff | (p[9] & 0xff) << 8 | (p[10] & 0xff) << 16 | (p[11] & 0xff) << 24,
      j9 = p[12] & 0xff | (p[13] & 0xff) << 8 | (p[14] & 0xff) << 16 | (p[15] & 0xff) << 24,
      j10 = c[8] & 0xff | (c[9] & 0xff) << 8 | (c[10] & 0xff) << 16 | (c[11] & 0xff) << 24,
      j11 = k[16] & 0xff | (k[17] & 0xff) << 8 | (k[18] & 0xff) << 16 | (k[19] & 0xff) << 24,
      j12 = k[20] & 0xff | (k[21] & 0xff) << 8 | (k[22] & 0xff) << 16 | (k[23] & 0xff) << 24,
      j13 = k[24] & 0xff | (k[25] & 0xff) << 8 | (k[26] & 0xff) << 16 | (k[27] & 0xff) << 24,
      j14 = k[28] & 0xff | (k[29] & 0xff) << 8 | (k[30] & 0xff) << 16 | (k[31] & 0xff) << 24,
      j15 = c[12] & 0xff | (c[13] & 0xff) << 8 | (c[14] & 0xff) << 16 | (c[15] & 0xff) << 24;
    var x0 = j0,
      x1 = j1,
      x2 = j2,
      x3 = j3,
      x4 = j4,
      x5 = j5,
      x6 = j6,
      x7 = j7,
      x8 = j8,
      x9 = j9,
      x10 = j10,
      x11 = j11,
      x12 = j12,
      x13 = j13,
      x14 = j14,
      x15 = j15,
      u;
    for (var i = 0; i < 20; i += 2) {
      u = x0 + x12 | 0;
      x4 ^= u << 7 | u >>> 32 - 7;
      u = x4 + x0 | 0;
      x8 ^= u << 9 | u >>> 32 - 9;
      u = x8 + x4 | 0;
      x12 ^= u << 13 | u >>> 32 - 13;
      u = x12 + x8 | 0;
      x0 ^= u << 18 | u >>> 32 - 18;
      u = x5 + x1 | 0;
      x9 ^= u << 7 | u >>> 32 - 7;
      u = x9 + x5 | 0;
      x13 ^= u << 9 | u >>> 32 - 9;
      u = x13 + x9 | 0;
      x1 ^= u << 13 | u >>> 32 - 13;
      u = x1 + x13 | 0;
      x5 ^= u << 18 | u >>> 32 - 18;
      u = x10 + x6 | 0;
      x14 ^= u << 7 | u >>> 32 - 7;
      u = x14 + x10 | 0;
      x2 ^= u << 9 | u >>> 32 - 9;
      u = x2 + x14 | 0;
      x6 ^= u << 13 | u >>> 32 - 13;
      u = x6 + x2 | 0;
      x10 ^= u << 18 | u >>> 32 - 18;
      u = x15 + x11 | 0;
      x3 ^= u << 7 | u >>> 32 - 7;
      u = x3 + x15 | 0;
      x7 ^= u << 9 | u >>> 32 - 9;
      u = x7 + x3 | 0;
      x11 ^= u << 13 | u >>> 32 - 13;
      u = x11 + x7 | 0;
      x15 ^= u << 18 | u >>> 32 - 18;
      u = x0 + x3 | 0;
      x1 ^= u << 7 | u >>> 32 - 7;
      u = x1 + x0 | 0;
      x2 ^= u << 9 | u >>> 32 - 9;
      u = x2 + x1 | 0;
      x3 ^= u << 13 | u >>> 32 - 13;
      u = x3 + x2 | 0;
      x0 ^= u << 18 | u >>> 32 - 18;
      u = x5 + x4 | 0;
      x6 ^= u << 7 | u >>> 32 - 7;
      u = x6 + x5 | 0;
      x7 ^= u << 9 | u >>> 32 - 9;
      u = x7 + x6 | 0;
      x4 ^= u << 13 | u >>> 32 - 13;
      u = x4 + x7 | 0;
      x5 ^= u << 18 | u >>> 32 - 18;
      u = x10 + x9 | 0;
      x11 ^= u << 7 | u >>> 32 - 7;
      u = x11 + x10 | 0;
      x8 ^= u << 9 | u >>> 32 - 9;
      u = x8 + x11 | 0;
      x9 ^= u << 13 | u >>> 32 - 13;
      u = x9 + x8 | 0;
      x10 ^= u << 18 | u >>> 32 - 18;
      u = x15 + x14 | 0;
      x12 ^= u << 7 | u >>> 32 - 7;
      u = x12 + x15 | 0;
      x13 ^= u << 9 | u >>> 32 - 9;
      u = x13 + x12 | 0;
      x14 ^= u << 13 | u >>> 32 - 13;
      u = x14 + x13 | 0;
      x15 ^= u << 18 | u >>> 32 - 18;
    }
    o[0] = x0 >>> 0 & 0xff;
    o[1] = x0 >>> 8 & 0xff;
    o[2] = x0 >>> 16 & 0xff;
    o[3] = x0 >>> 24 & 0xff;
    o[4] = x5 >>> 0 & 0xff;
    o[5] = x5 >>> 8 & 0xff;
    o[6] = x5 >>> 16 & 0xff;
    o[7] = x5 >>> 24 & 0xff;
    o[8] = x10 >>> 0 & 0xff;
    o[9] = x10 >>> 8 & 0xff;
    o[10] = x10 >>> 16 & 0xff;
    o[11] = x10 >>> 24 & 0xff;
    o[12] = x15 >>> 0 & 0xff;
    o[13] = x15 >>> 8 & 0xff;
    o[14] = x15 >>> 16 & 0xff;
    o[15] = x15 >>> 24 & 0xff;
    o[16] = x6 >>> 0 & 0xff;
    o[17] = x6 >>> 8 & 0xff;
    o[18] = x6 >>> 16 & 0xff;
    o[19] = x6 >>> 24 & 0xff;
    o[20] = x7 >>> 0 & 0xff;
    o[21] = x7 >>> 8 & 0xff;
    o[22] = x7 >>> 16 & 0xff;
    o[23] = x7 >>> 24 & 0xff;
    o[24] = x8 >>> 0 & 0xff;
    o[25] = x8 >>> 8 & 0xff;
    o[26] = x8 >>> 16 & 0xff;
    o[27] = x8 >>> 24 & 0xff;
    o[28] = x9 >>> 0 & 0xff;
    o[29] = x9 >>> 8 & 0xff;
    o[30] = x9 >>> 16 & 0xff;
    o[31] = x9 >>> 24 & 0xff;
  }
  function crypto_core_salsa20(out, inp, k, c) {
    core_salsa20(out, inp, k, c);
  }
  function crypto_core_hsalsa20(out, inp, k, c) {
    core_hsalsa20(out, inp, k, c);
  }
  var sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);
  // "expand 32-byte k"

  function crypto_stream_salsa20_xor(c, cpos, m, mpos, b, n, k) {
    var z = new Uint8Array(16),
      x = new Uint8Array(64);
    var u, i;
    for (i = 0; i < 16; i++) z[i] = 0;
    for (i = 0; i < 8; i++) z[i] = n[i];
    while (b >= 64) {
      crypto_core_salsa20(x, z, k, sigma);
      for (i = 0; i < 64; i++) c[cpos + i] = m[mpos + i] ^ x[i];
      u = 1;
      for (i = 8; i < 16; i++) {
        u = u + (z[i] & 0xff) | 0;
        z[i] = u & 0xff;
        u >>>= 8;
      }
      b -= 64;
      cpos += 64;
      mpos += 64;
    }
    if (b > 0) {
      crypto_core_salsa20(x, z, k, sigma);
      for (i = 0; i < b; i++) c[cpos + i] = m[mpos + i] ^ x[i];
    }
    return 0;
  }
  function crypto_stream_salsa20(c, cpos, b, n, k) {
    var z = new Uint8Array(16),
      x = new Uint8Array(64);
    var u, i;
    for (i = 0; i < 16; i++) z[i] = 0;
    for (i = 0; i < 8; i++) z[i] = n[i];
    while (b >= 64) {
      crypto_core_salsa20(x, z, k, sigma);
      for (i = 0; i < 64; i++) c[cpos + i] = x[i];
      u = 1;
      for (i = 8; i < 16; i++) {
        u = u + (z[i] & 0xff) | 0;
        z[i] = u & 0xff;
        u >>>= 8;
      }
      b -= 64;
      cpos += 64;
    }
    if (b > 0) {
      crypto_core_salsa20(x, z, k, sigma);
      for (i = 0; i < b; i++) c[cpos + i] = x[i];
    }
    return 0;
  }
  function crypto_stream(c, cpos, d, n, k) {
    var s = new Uint8Array(32);
    crypto_core_hsalsa20(s, n, k, sigma);
    var sn = new Uint8Array(8);
    for (var i = 0; i < 8; i++) sn[i] = n[i + 16];
    return crypto_stream_salsa20(c, cpos, d, sn, s);
  }
  function crypto_stream_xor(c, cpos, m, mpos, d, n, k) {
    var s = new Uint8Array(32);
    crypto_core_hsalsa20(s, n, k, sigma);
    var sn = new Uint8Array(8);
    for (var i = 0; i < 8; i++) sn[i] = n[i + 16];
    return crypto_stream_salsa20_xor(c, cpos, m, mpos, d, sn, s);
  }

  /*
  * Port of Andrew Moon's Poly1305-donna-16. Public domain.
  * https://github.com/floodyberry/poly1305-donna
  */

  var poly1305 = function poly1305(key) {
    this.buffer = new Uint8Array(16);
    this.r = new Uint16Array(10);
    this.h = new Uint16Array(10);
    this.pad = new Uint16Array(8);
    this.leftover = 0;
    this.fin = 0;
    var t0, t1, t2, t3, t4, t5, t6, t7;
    t0 = key[0] & 0xff | (key[1] & 0xff) << 8;
    this.r[0] = t0 & 0x1fff;
    t1 = key[2] & 0xff | (key[3] & 0xff) << 8;
    this.r[1] = (t0 >>> 13 | t1 << 3) & 0x1fff;
    t2 = key[4] & 0xff | (key[5] & 0xff) << 8;
    this.r[2] = (t1 >>> 10 | t2 << 6) & 0x1f03;
    t3 = key[6] & 0xff | (key[7] & 0xff) << 8;
    this.r[3] = (t2 >>> 7 | t3 << 9) & 0x1fff;
    t4 = key[8] & 0xff | (key[9] & 0xff) << 8;
    this.r[4] = (t3 >>> 4 | t4 << 12) & 0x00ff;
    this.r[5] = t4 >>> 1 & 0x1ffe;
    t5 = key[10] & 0xff | (key[11] & 0xff) << 8;
    this.r[6] = (t4 >>> 14 | t5 << 2) & 0x1fff;
    t6 = key[12] & 0xff | (key[13] & 0xff) << 8;
    this.r[7] = (t5 >>> 11 | t6 << 5) & 0x1f81;
    t7 = key[14] & 0xff | (key[15] & 0xff) << 8;
    this.r[8] = (t6 >>> 8 | t7 << 8) & 0x1fff;
    this.r[9] = t7 >>> 5 & 0x007f;
    this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;
    this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;
    this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;
    this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;
    this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;
    this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;
    this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;
    this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;
  };
  poly1305.prototype.blocks = function (m, mpos, bytes) {
    var hibit = this.fin ? 0 : 1 << 11;
    var t0, t1, t2, t3, t4, t5, t6, t7, c;
    var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;
    var h0 = this.h[0],
      h1 = this.h[1],
      h2 = this.h[2],
      h3 = this.h[3],
      h4 = this.h[4],
      h5 = this.h[5],
      h6 = this.h[6],
      h7 = this.h[7],
      h8 = this.h[8],
      h9 = this.h[9];
    var r0 = this.r[0],
      r1 = this.r[1],
      r2 = this.r[2],
      r3 = this.r[3],
      r4 = this.r[4],
      r5 = this.r[5],
      r6 = this.r[6],
      r7 = this.r[7],
      r8 = this.r[8],
      r9 = this.r[9];
    while (bytes >= 16) {
      t0 = m[mpos + 0] & 0xff | (m[mpos + 1] & 0xff) << 8;
      h0 += t0 & 0x1fff;
      t1 = m[mpos + 2] & 0xff | (m[mpos + 3] & 0xff) << 8;
      h1 += (t0 >>> 13 | t1 << 3) & 0x1fff;
      t2 = m[mpos + 4] & 0xff | (m[mpos + 5] & 0xff) << 8;
      h2 += (t1 >>> 10 | t2 << 6) & 0x1fff;
      t3 = m[mpos + 6] & 0xff | (m[mpos + 7] & 0xff) << 8;
      h3 += (t2 >>> 7 | t3 << 9) & 0x1fff;
      t4 = m[mpos + 8] & 0xff | (m[mpos + 9] & 0xff) << 8;
      h4 += (t3 >>> 4 | t4 << 12) & 0x1fff;
      h5 += t4 >>> 1 & 0x1fff;
      t5 = m[mpos + 10] & 0xff | (m[mpos + 11] & 0xff) << 8;
      h6 += (t4 >>> 14 | t5 << 2) & 0x1fff;
      t6 = m[mpos + 12] & 0xff | (m[mpos + 13] & 0xff) << 8;
      h7 += (t5 >>> 11 | t6 << 5) & 0x1fff;
      t7 = m[mpos + 14] & 0xff | (m[mpos + 15] & 0xff) << 8;
      h8 += (t6 >>> 8 | t7 << 8) & 0x1fff;
      h9 += t7 >>> 5 | hibit;
      c = 0;
      d0 = c;
      d0 += h0 * r0;
      d0 += h1 * (5 * r9);
      d0 += h2 * (5 * r8);
      d0 += h3 * (5 * r7);
      d0 += h4 * (5 * r6);
      c = d0 >>> 13;
      d0 &= 0x1fff;
      d0 += h5 * (5 * r5);
      d0 += h6 * (5 * r4);
      d0 += h7 * (5 * r3);
      d0 += h8 * (5 * r2);
      d0 += h9 * (5 * r1);
      c += d0 >>> 13;
      d0 &= 0x1fff;
      d1 = c;
      d1 += h0 * r1;
      d1 += h1 * r0;
      d1 += h2 * (5 * r9);
      d1 += h3 * (5 * r8);
      d1 += h4 * (5 * r7);
      c = d1 >>> 13;
      d1 &= 0x1fff;
      d1 += h5 * (5 * r6);
      d1 += h6 * (5 * r5);
      d1 += h7 * (5 * r4);
      d1 += h8 * (5 * r3);
      d1 += h9 * (5 * r2);
      c += d1 >>> 13;
      d1 &= 0x1fff;
      d2 = c;
      d2 += h0 * r2;
      d2 += h1 * r1;
      d2 += h2 * r0;
      d2 += h3 * (5 * r9);
      d2 += h4 * (5 * r8);
      c = d2 >>> 13;
      d2 &= 0x1fff;
      d2 += h5 * (5 * r7);
      d2 += h6 * (5 * r6);
      d2 += h7 * (5 * r5);
      d2 += h8 * (5 * r4);
      d2 += h9 * (5 * r3);
      c += d2 >>> 13;
      d2 &= 0x1fff;
      d3 = c;
      d3 += h0 * r3;
      d3 += h1 * r2;
      d3 += h2 * r1;
      d3 += h3 * r0;
      d3 += h4 * (5 * r9);
      c = d3 >>> 13;
      d3 &= 0x1fff;
      d3 += h5 * (5 * r8);
      d3 += h6 * (5 * r7);
      d3 += h7 * (5 * r6);
      d3 += h8 * (5 * r5);
      d3 += h9 * (5 * r4);
      c += d3 >>> 13;
      d3 &= 0x1fff;
      d4 = c;
      d4 += h0 * r4;
      d4 += h1 * r3;
      d4 += h2 * r2;
      d4 += h3 * r1;
      d4 += h4 * r0;
      c = d4 >>> 13;
      d4 &= 0x1fff;
      d4 += h5 * (5 * r9);
      d4 += h6 * (5 * r8);
      d4 += h7 * (5 * r7);
      d4 += h8 * (5 * r6);
      d4 += h9 * (5 * r5);
      c += d4 >>> 13;
      d4 &= 0x1fff;
      d5 = c;
      d5 += h0 * r5;
      d5 += h1 * r4;
      d5 += h2 * r3;
      d5 += h3 * r2;
      d5 += h4 * r1;
      c = d5 >>> 13;
      d5 &= 0x1fff;
      d5 += h5 * r0;
      d5 += h6 * (5 * r9);
      d5 += h7 * (5 * r8);
      d5 += h8 * (5 * r7);
      d5 += h9 * (5 * r6);
      c += d5 >>> 13;
      d5 &= 0x1fff;
      d6 = c;
      d6 += h0 * r6;
      d6 += h1 * r5;
      d6 += h2 * r4;
      d6 += h3 * r3;
      d6 += h4 * r2;
      c = d6 >>> 13;
      d6 &= 0x1fff;
      d6 += h5 * r1;
      d6 += h6 * r0;
      d6 += h7 * (5 * r9);
      d6 += h8 * (5 * r8);
      d6 += h9 * (5 * r7);
      c += d6 >>> 13;
      d6 &= 0x1fff;
      d7 = c;
      d7 += h0 * r7;
      d7 += h1 * r6;
      d7 += h2 * r5;
      d7 += h3 * r4;
      d7 += h4 * r3;
      c = d7 >>> 13;
      d7 &= 0x1fff;
      d7 += h5 * r2;
      d7 += h6 * r1;
      d7 += h7 * r0;
      d7 += h8 * (5 * r9);
      d7 += h9 * (5 * r8);
      c += d7 >>> 13;
      d7 &= 0x1fff;
      d8 = c;
      d8 += h0 * r8;
      d8 += h1 * r7;
      d8 += h2 * r6;
      d8 += h3 * r5;
      d8 += h4 * r4;
      c = d8 >>> 13;
      d8 &= 0x1fff;
      d8 += h5 * r3;
      d8 += h6 * r2;
      d8 += h7 * r1;
      d8 += h8 * r0;
      d8 += h9 * (5 * r9);
      c += d8 >>> 13;
      d8 &= 0x1fff;
      d9 = c;
      d9 += h0 * r9;
      d9 += h1 * r8;
      d9 += h2 * r7;
      d9 += h3 * r6;
      d9 += h4 * r5;
      c = d9 >>> 13;
      d9 &= 0x1fff;
      d9 += h5 * r4;
      d9 += h6 * r3;
      d9 += h7 * r2;
      d9 += h8 * r1;
      d9 += h9 * r0;
      c += d9 >>> 13;
      d9 &= 0x1fff;
      c = (c << 2) + c | 0;
      c = c + d0 | 0;
      d0 = c & 0x1fff;
      c = c >>> 13;
      d1 += c;
      h0 = d0;
      h1 = d1;
      h2 = d2;
      h3 = d3;
      h4 = d4;
      h5 = d5;
      h6 = d6;
      h7 = d7;
      h8 = d8;
      h9 = d9;
      mpos += 16;
      bytes -= 16;
    }
    this.h[0] = h0;
    this.h[1] = h1;
    this.h[2] = h2;
    this.h[3] = h3;
    this.h[4] = h4;
    this.h[5] = h5;
    this.h[6] = h6;
    this.h[7] = h7;
    this.h[8] = h8;
    this.h[9] = h9;
  };
  poly1305.prototype.finish = function (mac, macpos) {
    var g = new Uint16Array(10);
    var c, mask, f, i;
    if (this.leftover) {
      i = this.leftover;
      this.buffer[i++] = 1;
      for (; i < 16; i++) this.buffer[i] = 0;
      this.fin = 1;
      this.blocks(this.buffer, 0, 16);
    }
    c = this.h[1] >>> 13;
    this.h[1] &= 0x1fff;
    for (i = 2; i < 10; i++) {
      this.h[i] += c;
      c = this.h[i] >>> 13;
      this.h[i] &= 0x1fff;
    }
    this.h[0] += c * 5;
    c = this.h[0] >>> 13;
    this.h[0] &= 0x1fff;
    this.h[1] += c;
    c = this.h[1] >>> 13;
    this.h[1] &= 0x1fff;
    this.h[2] += c;
    g[0] = this.h[0] + 5;
    c = g[0] >>> 13;
    g[0] &= 0x1fff;
    for (i = 1; i < 10; i++) {
      g[i] = this.h[i] + c;
      c = g[i] >>> 13;
      g[i] &= 0x1fff;
    }
    g[9] -= 1 << 13;
    mask = (c ^ 1) - 1;
    for (i = 0; i < 10; i++) g[i] &= mask;
    mask = ~mask;
    for (i = 0; i < 10; i++) this.h[i] = this.h[i] & mask | g[i];
    this.h[0] = (this.h[0] | this.h[1] << 13) & 0xffff;
    this.h[1] = (this.h[1] >>> 3 | this.h[2] << 10) & 0xffff;
    this.h[2] = (this.h[2] >>> 6 | this.h[3] << 7) & 0xffff;
    this.h[3] = (this.h[3] >>> 9 | this.h[4] << 4) & 0xffff;
    this.h[4] = (this.h[4] >>> 12 | this.h[5] << 1 | this.h[6] << 14) & 0xffff;
    this.h[5] = (this.h[6] >>> 2 | this.h[7] << 11) & 0xffff;
    this.h[6] = (this.h[7] >>> 5 | this.h[8] << 8) & 0xffff;
    this.h[7] = (this.h[8] >>> 8 | this.h[9] << 5) & 0xffff;
    f = this.h[0] + this.pad[0];
    this.h[0] = f & 0xffff;
    for (i = 1; i < 8; i++) {
      f = (this.h[i] + this.pad[i] | 0) + (f >>> 16) | 0;
      this.h[i] = f & 0xffff;
    }
    mac[macpos + 0] = this.h[0] >>> 0 & 0xff;
    mac[macpos + 1] = this.h[0] >>> 8 & 0xff;
    mac[macpos + 2] = this.h[1] >>> 0 & 0xff;
    mac[macpos + 3] = this.h[1] >>> 8 & 0xff;
    mac[macpos + 4] = this.h[2] >>> 0 & 0xff;
    mac[macpos + 5] = this.h[2] >>> 8 & 0xff;
    mac[macpos + 6] = this.h[3] >>> 0 & 0xff;
    mac[macpos + 7] = this.h[3] >>> 8 & 0xff;
    mac[macpos + 8] = this.h[4] >>> 0 & 0xff;
    mac[macpos + 9] = this.h[4] >>> 8 & 0xff;
    mac[macpos + 10] = this.h[5] >>> 0 & 0xff;
    mac[macpos + 11] = this.h[5] >>> 8 & 0xff;
    mac[macpos + 12] = this.h[6] >>> 0 & 0xff;
    mac[macpos + 13] = this.h[6] >>> 8 & 0xff;
    mac[macpos + 14] = this.h[7] >>> 0 & 0xff;
    mac[macpos + 15] = this.h[7] >>> 8 & 0xff;
  };
  poly1305.prototype.update = function (m, mpos, bytes) {
    var i, want;
    if (this.leftover) {
      want = 16 - this.leftover;
      if (want > bytes) want = bytes;
      for (i = 0; i < want; i++) this.buffer[this.leftover + i] = m[mpos + i];
      bytes -= want;
      mpos += want;
      this.leftover += want;
      if (this.leftover < 16) return;
      this.blocks(this.buffer, 0, 16);
      this.leftover = 0;
    }
    if (bytes >= 16) {
      want = bytes - bytes % 16;
      this.blocks(m, mpos, want);
      mpos += want;
      bytes -= want;
    }
    if (bytes) {
      for (i = 0; i < bytes; i++) this.buffer[this.leftover + i] = m[mpos + i];
      this.leftover += bytes;
    }
  };
  function crypto_onetimeauth(out, outpos, m, mpos, n, k) {
    var s = new poly1305(k);
    s.update(m, mpos, n);
    s.finish(out, outpos);
    return 0;
  }
  function crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {
    var x = new Uint8Array(16);
    crypto_onetimeauth(x, 0, m, mpos, n, k);
    return crypto_verify_16(h, hpos, x, 0);
  }
  function crypto_secretbox(c, m, d, n, k) {
    var i;
    if (d < 32) return -1;
    crypto_stream_xor(c, 0, m, 0, d, n, k);
    crypto_onetimeauth(c, 16, c, 32, d - 32, c);
    for (i = 0; i < 16; i++) c[i] = 0;
    return 0;
  }
  function crypto_secretbox_open(m, c, d, n, k) {
    var i;
    var x = new Uint8Array(32);
    if (d < 32) return -1;
    crypto_stream(x, 0, 32, n, k);
    if (crypto_onetimeauth_verify(c, 16, c, 32, d - 32, x) !== 0) return -1;
    crypto_stream_xor(m, 0, c, 0, d, n, k);
    for (i = 0; i < 32; i++) m[i] = 0;
    return 0;
  }
  function set25519(r, a) {
    var i;
    for (i = 0; i < 16; i++) r[i] = a[i] | 0;
  }
  function car25519(o) {
    var i,
      v,
      c = 1;
    for (i = 0; i < 16; i++) {
      v = o[i] + c + 65535;
      c = Math.floor(v / 65536);
      o[i] = v - c * 65536;
    }
    o[0] += c - 1 + 37 * (c - 1);
  }
  function sel25519(p, q, b) {
    var t,
      c = ~(b - 1);
    for (var i = 0; i < 16; i++) {
      t = c & (p[i] ^ q[i]);
      p[i] ^= t;
      q[i] ^= t;
    }
  }
  function pack25519(o, n) {
    var i, j, b;
    var m = gf(),
      t = gf();
    for (i = 0; i < 16; i++) t[i] = n[i];
    car25519(t);
    car25519(t);
    car25519(t);
    for (j = 0; j < 2; j++) {
      m[0] = t[0] - 0xffed;
      for (i = 1; i < 15; i++) {
        m[i] = t[i] - 0xffff - (m[i - 1] >> 16 & 1);
        m[i - 1] &= 0xffff;
      }
      m[15] = t[15] - 0x7fff - (m[14] >> 16 & 1);
      b = m[15] >> 16 & 1;
      m[14] &= 0xffff;
      sel25519(t, m, 1 - b);
    }
    for (i = 0; i < 16; i++) {
      o[2 * i] = t[i] & 0xff;
      o[2 * i + 1] = t[i] >> 8;
    }
  }
  function neq25519(a, b) {
    var c = new Uint8Array(32),
      d = new Uint8Array(32);
    pack25519(c, a);
    pack25519(d, b);
    return crypto_verify_32(c, 0, d, 0);
  }
  function par25519(a) {
    var d = new Uint8Array(32);
    pack25519(d, a);
    return d[0] & 1;
  }
  function unpack25519(o, n) {
    var i;
    for (i = 0; i < 16; i++) o[i] = n[2 * i] + (n[2 * i + 1] << 8);
    o[15] &= 0x7fff;
  }
  function A(o, a, b) {
    for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];
  }
  function Z(o, a, b) {
    for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];
  }
  function M(o, a, b) {
    var v,
      c,
      t0 = 0,
      t1 = 0,
      t2 = 0,
      t3 = 0,
      t4 = 0,
      t5 = 0,
      t6 = 0,
      t7 = 0,
      t8 = 0,
      t9 = 0,
      t10 = 0,
      t11 = 0,
      t12 = 0,
      t13 = 0,
      t14 = 0,
      t15 = 0,
      t16 = 0,
      t17 = 0,
      t18 = 0,
      t19 = 0,
      t20 = 0,
      t21 = 0,
      t22 = 0,
      t23 = 0,
      t24 = 0,
      t25 = 0,
      t26 = 0,
      t27 = 0,
      t28 = 0,
      t29 = 0,
      t30 = 0,
      b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3],
      b4 = b[4],
      b5 = b[5],
      b6 = b[6],
      b7 = b[7],
      b8 = b[8],
      b9 = b[9],
      b10 = b[10],
      b11 = b[11],
      b12 = b[12],
      b13 = b[13],
      b14 = b[14],
      b15 = b[15];
    v = a[0];
    t0 += v * b0;
    t1 += v * b1;
    t2 += v * b2;
    t3 += v * b3;
    t4 += v * b4;
    t5 += v * b5;
    t6 += v * b6;
    t7 += v * b7;
    t8 += v * b8;
    t9 += v * b9;
    t10 += v * b10;
    t11 += v * b11;
    t12 += v * b12;
    t13 += v * b13;
    t14 += v * b14;
    t15 += v * b15;
    v = a[1];
    t1 += v * b0;
    t2 += v * b1;
    t3 += v * b2;
    t4 += v * b3;
    t5 += v * b4;
    t6 += v * b5;
    t7 += v * b6;
    t8 += v * b7;
    t9 += v * b8;
    t10 += v * b9;
    t11 += v * b10;
    t12 += v * b11;
    t13 += v * b12;
    t14 += v * b13;
    t15 += v * b14;
    t16 += v * b15;
    v = a[2];
    t2 += v * b0;
    t3 += v * b1;
    t4 += v * b2;
    t5 += v * b3;
    t6 += v * b4;
    t7 += v * b5;
    t8 += v * b6;
    t9 += v * b7;
    t10 += v * b8;
    t11 += v * b9;
    t12 += v * b10;
    t13 += v * b11;
    t14 += v * b12;
    t15 += v * b13;
    t16 += v * b14;
    t17 += v * b15;
    v = a[3];
    t3 += v * b0;
    t4 += v * b1;
    t5 += v * b2;
    t6 += v * b3;
    t7 += v * b4;
    t8 += v * b5;
    t9 += v * b6;
    t10 += v * b7;
    t11 += v * b8;
    t12 += v * b9;
    t13 += v * b10;
    t14 += v * b11;
    t15 += v * b12;
    t16 += v * b13;
    t17 += v * b14;
    t18 += v * b15;
    v = a[4];
    t4 += v * b0;
    t5 += v * b1;
    t6 += v * b2;
    t7 += v * b3;
    t8 += v * b4;
    t9 += v * b5;
    t10 += v * b6;
    t11 += v * b7;
    t12 += v * b8;
    t13 += v * b9;
    t14 += v * b10;
    t15 += v * b11;
    t16 += v * b12;
    t17 += v * b13;
    t18 += v * b14;
    t19 += v * b15;
    v = a[5];
    t5 += v * b0;
    t6 += v * b1;
    t7 += v * b2;
    t8 += v * b3;
    t9 += v * b4;
    t10 += v * b5;
    t11 += v * b6;
    t12 += v * b7;
    t13 += v * b8;
    t14 += v * b9;
    t15 += v * b10;
    t16 += v * b11;
    t17 += v * b12;
    t18 += v * b13;
    t19 += v * b14;
    t20 += v * b15;
    v = a[6];
    t6 += v * b0;
    t7 += v * b1;
    t8 += v * b2;
    t9 += v * b3;
    t10 += v * b4;
    t11 += v * b5;
    t12 += v * b6;
    t13 += v * b7;
    t14 += v * b8;
    t15 += v * b9;
    t16 += v * b10;
    t17 += v * b11;
    t18 += v * b12;
    t19 += v * b13;
    t20 += v * b14;
    t21 += v * b15;
    v = a[7];
    t7 += v * b0;
    t8 += v * b1;
    t9 += v * b2;
    t10 += v * b3;
    t11 += v * b4;
    t12 += v * b5;
    t13 += v * b6;
    t14 += v * b7;
    t15 += v * b8;
    t16 += v * b9;
    t17 += v * b10;
    t18 += v * b11;
    t19 += v * b12;
    t20 += v * b13;
    t21 += v * b14;
    t22 += v * b15;
    v = a[8];
    t8 += v * b0;
    t9 += v * b1;
    t10 += v * b2;
    t11 += v * b3;
    t12 += v * b4;
    t13 += v * b5;
    t14 += v * b6;
    t15 += v * b7;
    t16 += v * b8;
    t17 += v * b9;
    t18 += v * b10;
    t19 += v * b11;
    t20 += v * b12;
    t21 += v * b13;
    t22 += v * b14;
    t23 += v * b15;
    v = a[9];
    t9 += v * b0;
    t10 += v * b1;
    t11 += v * b2;
    t12 += v * b3;
    t13 += v * b4;
    t14 += v * b5;
    t15 += v * b6;
    t16 += v * b7;
    t17 += v * b8;
    t18 += v * b9;
    t19 += v * b10;
    t20 += v * b11;
    t21 += v * b12;
    t22 += v * b13;
    t23 += v * b14;
    t24 += v * b15;
    v = a[10];
    t10 += v * b0;
    t11 += v * b1;
    t12 += v * b2;
    t13 += v * b3;
    t14 += v * b4;
    t15 += v * b5;
    t16 += v * b6;
    t17 += v * b7;
    t18 += v * b8;
    t19 += v * b9;
    t20 += v * b10;
    t21 += v * b11;
    t22 += v * b12;
    t23 += v * b13;
    t24 += v * b14;
    t25 += v * b15;
    v = a[11];
    t11 += v * b0;
    t12 += v * b1;
    t13 += v * b2;
    t14 += v * b3;
    t15 += v * b4;
    t16 += v * b5;
    t17 += v * b6;
    t18 += v * b7;
    t19 += v * b8;
    t20 += v * b9;
    t21 += v * b10;
    t22 += v * b11;
    t23 += v * b12;
    t24 += v * b13;
    t25 += v * b14;
    t26 += v * b15;
    v = a[12];
    t12 += v * b0;
    t13 += v * b1;
    t14 += v * b2;
    t15 += v * b3;
    t16 += v * b4;
    t17 += v * b5;
    t18 += v * b6;
    t19 += v * b7;
    t20 += v * b8;
    t21 += v * b9;
    t22 += v * b10;
    t23 += v * b11;
    t24 += v * b12;
    t25 += v * b13;
    t26 += v * b14;
    t27 += v * b15;
    v = a[13];
    t13 += v * b0;
    t14 += v * b1;
    t15 += v * b2;
    t16 += v * b3;
    t17 += v * b4;
    t18 += v * b5;
    t19 += v * b6;
    t20 += v * b7;
    t21 += v * b8;
    t22 += v * b9;
    t23 += v * b10;
    t24 += v * b11;
    t25 += v * b12;
    t26 += v * b13;
    t27 += v * b14;
    t28 += v * b15;
    v = a[14];
    t14 += v * b0;
    t15 += v * b1;
    t16 += v * b2;
    t17 += v * b3;
    t18 += v * b4;
    t19 += v * b5;
    t20 += v * b6;
    t21 += v * b7;
    t22 += v * b8;
    t23 += v * b9;
    t24 += v * b10;
    t25 += v * b11;
    t26 += v * b12;
    t27 += v * b13;
    t28 += v * b14;
    t29 += v * b15;
    v = a[15];
    t15 += v * b0;
    t16 += v * b1;
    t17 += v * b2;
    t18 += v * b3;
    t19 += v * b4;
    t20 += v * b5;
    t21 += v * b6;
    t22 += v * b7;
    t23 += v * b8;
    t24 += v * b9;
    t25 += v * b10;
    t26 += v * b11;
    t27 += v * b12;
    t28 += v * b13;
    t29 += v * b14;
    t30 += v * b15;
    t0 += 38 * t16;
    t1 += 38 * t17;
    t2 += 38 * t18;
    t3 += 38 * t19;
    t4 += 38 * t20;
    t5 += 38 * t21;
    t6 += 38 * t22;
    t7 += 38 * t23;
    t8 += 38 * t24;
    t9 += 38 * t25;
    t10 += 38 * t26;
    t11 += 38 * t27;
    t12 += 38 * t28;
    t13 += 38 * t29;
    t14 += 38 * t30;
    // t15 left as is

    // first car
    c = 1;
    v = t0 + c + 65535;
    c = Math.floor(v / 65536);
    t0 = v - c * 65536;
    v = t1 + c + 65535;
    c = Math.floor(v / 65536);
    t1 = v - c * 65536;
    v = t2 + c + 65535;
    c = Math.floor(v / 65536);
    t2 = v - c * 65536;
    v = t3 + c + 65535;
    c = Math.floor(v / 65536);
    t3 = v - c * 65536;
    v = t4 + c + 65535;
    c = Math.floor(v / 65536);
    t4 = v - c * 65536;
    v = t5 + c + 65535;
    c = Math.floor(v / 65536);
    t5 = v - c * 65536;
    v = t6 + c + 65535;
    c = Math.floor(v / 65536);
    t6 = v - c * 65536;
    v = t7 + c + 65535;
    c = Math.floor(v / 65536);
    t7 = v - c * 65536;
    v = t8 + c + 65535;
    c = Math.floor(v / 65536);
    t8 = v - c * 65536;
    v = t9 + c + 65535;
    c = Math.floor(v / 65536);
    t9 = v - c * 65536;
    v = t10 + c + 65535;
    c = Math.floor(v / 65536);
    t10 = v - c * 65536;
    v = t11 + c + 65535;
    c = Math.floor(v / 65536);
    t11 = v - c * 65536;
    v = t12 + c + 65535;
    c = Math.floor(v / 65536);
    t12 = v - c * 65536;
    v = t13 + c + 65535;
    c = Math.floor(v / 65536);
    t13 = v - c * 65536;
    v = t14 + c + 65535;
    c = Math.floor(v / 65536);
    t14 = v - c * 65536;
    v = t15 + c + 65535;
    c = Math.floor(v / 65536);
    t15 = v - c * 65536;
    t0 += c - 1 + 37 * (c - 1);

    // second car
    c = 1;
    v = t0 + c + 65535;
    c = Math.floor(v / 65536);
    t0 = v - c * 65536;
    v = t1 + c + 65535;
    c = Math.floor(v / 65536);
    t1 = v - c * 65536;
    v = t2 + c + 65535;
    c = Math.floor(v / 65536);
    t2 = v - c * 65536;
    v = t3 + c + 65535;
    c = Math.floor(v / 65536);
    t3 = v - c * 65536;
    v = t4 + c + 65535;
    c = Math.floor(v / 65536);
    t4 = v - c * 65536;
    v = t5 + c + 65535;
    c = Math.floor(v / 65536);
    t5 = v - c * 65536;
    v = t6 + c + 65535;
    c = Math.floor(v / 65536);
    t6 = v - c * 65536;
    v = t7 + c + 65535;
    c = Math.floor(v / 65536);
    t7 = v - c * 65536;
    v = t8 + c + 65535;
    c = Math.floor(v / 65536);
    t8 = v - c * 65536;
    v = t9 + c + 65535;
    c = Math.floor(v / 65536);
    t9 = v - c * 65536;
    v = t10 + c + 65535;
    c = Math.floor(v / 65536);
    t10 = v - c * 65536;
    v = t11 + c + 65535;
    c = Math.floor(v / 65536);
    t11 = v - c * 65536;
    v = t12 + c + 65535;
    c = Math.floor(v / 65536);
    t12 = v - c * 65536;
    v = t13 + c + 65535;
    c = Math.floor(v / 65536);
    t13 = v - c * 65536;
    v = t14 + c + 65535;
    c = Math.floor(v / 65536);
    t14 = v - c * 65536;
    v = t15 + c + 65535;
    c = Math.floor(v / 65536);
    t15 = v - c * 65536;
    t0 += c - 1 + 37 * (c - 1);
    o[0] = t0;
    o[1] = t1;
    o[2] = t2;
    o[3] = t3;
    o[4] = t4;
    o[5] = t5;
    o[6] = t6;
    o[7] = t7;
    o[8] = t8;
    o[9] = t9;
    o[10] = t10;
    o[11] = t11;
    o[12] = t12;
    o[13] = t13;
    o[14] = t14;
    o[15] = t15;
  }
  function S(o, a) {
    M(o, a, a);
  }
  function inv25519(o, i) {
    var c = gf();
    var a;
    for (a = 0; a < 16; a++) c[a] = i[a];
    for (a = 253; a >= 0; a--) {
      S(c, c);
      if (a !== 2 && a !== 4) M(c, c, i);
    }
    for (a = 0; a < 16; a++) o[a] = c[a];
  }
  function pow2523(o, i) {
    var c = gf();
    var a;
    for (a = 0; a < 16; a++) c[a] = i[a];
    for (a = 250; a >= 0; a--) {
      S(c, c);
      if (a !== 1) M(c, c, i);
    }
    for (a = 0; a < 16; a++) o[a] = c[a];
  }
  function crypto_scalarmult(q, n, p) {
    var z = new Uint8Array(32);
    var x = new Float64Array(80),
      r,
      i;
    var a = gf(),
      b = gf(),
      c = gf(),
      d = gf(),
      e = gf(),
      f = gf();
    for (i = 0; i < 31; i++) z[i] = n[i];
    z[31] = n[31] & 127 | 64;
    z[0] &= 248;
    unpack25519(x, p);
    for (i = 0; i < 16; i++) {
      b[i] = x[i];
      d[i] = a[i] = c[i] = 0;
    }
    a[0] = d[0] = 1;
    for (i = 254; i >= 0; --i) {
      r = z[i >>> 3] >>> (i & 7) & 1;
      sel25519(a, b, r);
      sel25519(c, d, r);
      A(e, a, c);
      Z(a, a, c);
      A(c, b, d);
      Z(b, b, d);
      S(d, e);
      S(f, a);
      M(a, c, a);
      M(c, b, e);
      A(e, a, c);
      Z(a, a, c);
      S(b, a);
      Z(c, d, f);
      M(a, c, _121665);
      A(a, a, d);
      M(c, c, a);
      M(a, d, f);
      M(d, b, x);
      S(b, e);
      sel25519(a, b, r);
      sel25519(c, d, r);
    }
    for (i = 0; i < 16; i++) {
      x[i + 16] = a[i];
      x[i + 32] = c[i];
      x[i + 48] = b[i];
      x[i + 64] = d[i];
    }
    var x32 = x.subarray(32);
    var x16 = x.subarray(16);
    inv25519(x32, x32);
    M(x16, x16, x32);
    pack25519(q, x16);
    return 0;
  }
  function crypto_scalarmult_base(q, n) {
    return crypto_scalarmult(q, n, _9);
  }
  function crypto_box_keypair(y, x) {
    randombytes(x, 32);
    return crypto_scalarmult_base(y, x);
  }
  function crypto_box_beforenm(k, y, x) {
    var s = new Uint8Array(32);
    crypto_scalarmult(s, x, y);
    return crypto_core_hsalsa20(k, _0, s, sigma);
  }
  var crypto_box_afternm = crypto_secretbox;
  var crypto_box_open_afternm = crypto_secretbox_open;
  function crypto_box(c, m, d, n, y, x) {
    var k = new Uint8Array(32);
    crypto_box_beforenm(k, y, x);
    return crypto_box_afternm(c, m, d, n, k);
  }
  function crypto_box_open(m, c, d, n, y, x) {
    var k = new Uint8Array(32);
    crypto_box_beforenm(k, y, x);
    return crypto_box_open_afternm(m, c, d, n, k);
  }
  var K = [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817];
  function crypto_hashblocks_hl(hh, hl, m, n) {
    var wh = new Int32Array(16),
      wl = new Int32Array(16),
      bh0,
      bh1,
      bh2,
      bh3,
      bh4,
      bh5,
      bh6,
      bh7,
      bl0,
      bl1,
      bl2,
      bl3,
      bl4,
      bl5,
      bl6,
      bl7,
      th,
      tl,
      i,
      j,
      h,
      l,
      a,
      b,
      c,
      d;
    var ah0 = hh[0],
      ah1 = hh[1],
      ah2 = hh[2],
      ah3 = hh[3],
      ah4 = hh[4],
      ah5 = hh[5],
      ah6 = hh[6],
      ah7 = hh[7],
      al0 = hl[0],
      al1 = hl[1],
      al2 = hl[2],
      al3 = hl[3],
      al4 = hl[4],
      al5 = hl[5],
      al6 = hl[6],
      al7 = hl[7];
    var pos = 0;
    while (n >= 128) {
      for (i = 0; i < 16; i++) {
        j = 8 * i + pos;
        wh[i] = m[j + 0] << 24 | m[j + 1] << 16 | m[j + 2] << 8 | m[j + 3];
        wl[i] = m[j + 4] << 24 | m[j + 5] << 16 | m[j + 6] << 8 | m[j + 7];
      }
      for (i = 0; i < 80; i++) {
        bh0 = ah0;
        bh1 = ah1;
        bh2 = ah2;
        bh3 = ah3;
        bh4 = ah4;
        bh5 = ah5;
        bh6 = ah6;
        bh7 = ah7;
        bl0 = al0;
        bl1 = al1;
        bl2 = al2;
        bl3 = al3;
        bl4 = al4;
        bl5 = al5;
        bl6 = al6;
        bl7 = al7;

        // add
        h = ah7;
        l = al7;
        a = l & 0xffff;
        b = l >>> 16;
        c = h & 0xffff;
        d = h >>> 16;

        // Sigma1
        h = (ah4 >>> 14 | al4 << 32 - 14) ^ (ah4 >>> 18 | al4 << 32 - 18) ^ (al4 >>> 41 - 32 | ah4 << 32 - (41 - 32));
        l = (al4 >>> 14 | ah4 << 32 - 14) ^ (al4 >>> 18 | ah4 << 32 - 18) ^ (ah4 >>> 41 - 32 | al4 << 32 - (41 - 32));
        a += l & 0xffff;
        b += l >>> 16;
        c += h & 0xffff;
        d += h >>> 16;

        // Ch
        h = ah4 & ah5 ^ ~ah4 & ah6;
        l = al4 & al5 ^ ~al4 & al6;
        a += l & 0xffff;
        b += l >>> 16;
        c += h & 0xffff;
        d += h >>> 16;

        // K
        h = K[i * 2];
        l = K[i * 2 + 1];
        a += l & 0xffff;
        b += l >>> 16;
        c += h & 0xffff;
        d += h >>> 16;

        // w
        h = wh[i % 16];
        l = wl[i % 16];
        a += l & 0xffff;
        b += l >>> 16;
        c += h & 0xffff;
        d += h >>> 16;
        b += a >>> 16;
        c += b >>> 16;
        d += c >>> 16;
        th = c & 0xffff | d << 16;
        tl = a & 0xffff | b << 16;

        // add
        h = th;
        l = tl;
        a = l & 0xffff;
        b = l >>> 16;
        c = h & 0xffff;
        d = h >>> 16;

        // Sigma0
        h = (ah0 >>> 28 | al0 << 32 - 28) ^ (al0 >>> 34 - 32 | ah0 << 32 - (34 - 32)) ^ (al0 >>> 39 - 32 | ah0 << 32 - (39 - 32));
        l = (al0 >>> 28 | ah0 << 32 - 28) ^ (ah0 >>> 34 - 32 | al0 << 32 - (34 - 32)) ^ (ah0 >>> 39 - 32 | al0 << 32 - (39 - 32));
        a += l & 0xffff;
        b += l >>> 16;
        c += h & 0xffff;
        d += h >>> 16;

        // Maj
        h = ah0 & ah1 ^ ah0 & ah2 ^ ah1 & ah2;
        l = al0 & al1 ^ al0 & al2 ^ al1 & al2;
        a += l & 0xffff;
        b += l >>> 16;
        c += h & 0xffff;
        d += h >>> 16;
        b += a >>> 16;
        c += b >>> 16;
        d += c >>> 16;
        bh7 = c & 0xffff | d << 16;
        bl7 = a & 0xffff | b << 16;

        // add
        h = bh3;
        l = bl3;
        a = l & 0xffff;
        b = l >>> 16;
        c = h & 0xffff;
        d = h >>> 16;
        h = th;
        l = tl;
        a += l & 0xffff;
        b += l >>> 16;
        c += h & 0xffff;
        d += h >>> 16;
        b += a >>> 16;
        c += b >>> 16;
        d += c >>> 16;
        bh3 = c & 0xffff | d << 16;
        bl3 = a & 0xffff | b << 16;
        ah1 = bh0;
        ah2 = bh1;
        ah3 = bh2;
        ah4 = bh3;
        ah5 = bh4;
        ah6 = bh5;
        ah7 = bh6;
        ah0 = bh7;
        al1 = bl0;
        al2 = bl1;
        al3 = bl2;
        al4 = bl3;
        al5 = bl4;
        al6 = bl5;
        al7 = bl6;
        al0 = bl7;
        if (i % 16 === 15) {
          for (j = 0; j < 16; j++) {
            // add
            h = wh[j];
            l = wl[j];
            a = l & 0xffff;
            b = l >>> 16;
            c = h & 0xffff;
            d = h >>> 16;
            h = wh[(j + 9) % 16];
            l = wl[(j + 9) % 16];
            a += l & 0xffff;
            b += l >>> 16;
            c += h & 0xffff;
            d += h >>> 16;

            // sigma0
            th = wh[(j + 1) % 16];
            tl = wl[(j + 1) % 16];
            h = (th >>> 1 | tl << 32 - 1) ^ (th >>> 8 | tl << 32 - 8) ^ th >>> 7;
            l = (tl >>> 1 | th << 32 - 1) ^ (tl >>> 8 | th << 32 - 8) ^ (tl >>> 7 | th << 32 - 7);
            a += l & 0xffff;
            b += l >>> 16;
            c += h & 0xffff;
            d += h >>> 16;

            // sigma1
            th = wh[(j + 14) % 16];
            tl = wl[(j + 14) % 16];
            h = (th >>> 19 | tl << 32 - 19) ^ (tl >>> 61 - 32 | th << 32 - (61 - 32)) ^ th >>> 6;
            l = (tl >>> 19 | th << 32 - 19) ^ (th >>> 61 - 32 | tl << 32 - (61 - 32)) ^ (tl >>> 6 | th << 32 - 6);
            a += l & 0xffff;
            b += l >>> 16;
            c += h & 0xffff;
            d += h >>> 16;
            b += a >>> 16;
            c += b >>> 16;
            d += c >>> 16;
            wh[j] = c & 0xffff | d << 16;
            wl[j] = a & 0xffff | b << 16;
          }
        }
      }

      // add
      h = ah0;
      l = al0;
      a = l & 0xffff;
      b = l >>> 16;
      c = h & 0xffff;
      d = h >>> 16;
      h = hh[0];
      l = hl[0];
      a += l & 0xffff;
      b += l >>> 16;
      c += h & 0xffff;
      d += h >>> 16;
      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;
      hh[0] = ah0 = c & 0xffff | d << 16;
      hl[0] = al0 = a & 0xffff | b << 16;
      h = ah1;
      l = al1;
      a = l & 0xffff;
      b = l >>> 16;
      c = h & 0xffff;
      d = h >>> 16;
      h = hh[1];
      l = hl[1];
      a += l & 0xffff;
      b += l >>> 16;
      c += h & 0xffff;
      d += h >>> 16;
      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;
      hh[1] = ah1 = c & 0xffff | d << 16;
      hl[1] = al1 = a & 0xffff | b << 16;
      h = ah2;
      l = al2;
      a = l & 0xffff;
      b = l >>> 16;
      c = h & 0xffff;
      d = h >>> 16;
      h = hh[2];
      l = hl[2];
      a += l & 0xffff;
      b += l >>> 16;
      c += h & 0xffff;
      d += h >>> 16;
      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;
      hh[2] = ah2 = c & 0xffff | d << 16;
      hl[2] = al2 = a & 0xffff | b << 16;
      h = ah3;
      l = al3;
      a = l & 0xffff;
      b = l >>> 16;
      c = h & 0xffff;
      d = h >>> 16;
      h = hh[3];
      l = hl[3];
      a += l & 0xffff;
      b += l >>> 16;
      c += h & 0xffff;
      d += h >>> 16;
      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;
      hh[3] = ah3 = c & 0xffff | d << 16;
      hl[3] = al3 = a & 0xffff | b << 16;
      h = ah4;
      l = al4;
      a = l & 0xffff;
      b = l >>> 16;
      c = h & 0xffff;
      d = h >>> 16;
      h = hh[4];
      l = hl[4];
      a += l & 0xffff;
      b += l >>> 16;
      c += h & 0xffff;
      d += h >>> 16;
      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;
      hh[4] = ah4 = c & 0xffff | d << 16;
      hl[4] = al4 = a & 0xffff | b << 16;
      h = ah5;
      l = al5;
      a = l & 0xffff;
      b = l >>> 16;
      c = h & 0xffff;
      d = h >>> 16;
      h = hh[5];
      l = hl[5];
      a += l & 0xffff;
      b += l >>> 16;
      c += h & 0xffff;
      d += h >>> 16;
      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;
      hh[5] = ah5 = c & 0xffff | d << 16;
      hl[5] = al5 = a & 0xffff | b << 16;
      h = ah6;
      l = al6;
      a = l & 0xffff;
      b = l >>> 16;
      c = h & 0xffff;
      d = h >>> 16;
      h = hh[6];
      l = hl[6];
      a += l & 0xffff;
      b += l >>> 16;
      c += h & 0xffff;
      d += h >>> 16;
      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;
      hh[6] = ah6 = c & 0xffff | d << 16;
      hl[6] = al6 = a & 0xffff | b << 16;
      h = ah7;
      l = al7;
      a = l & 0xffff;
      b = l >>> 16;
      c = h & 0xffff;
      d = h >>> 16;
      h = hh[7];
      l = hl[7];
      a += l & 0xffff;
      b += l >>> 16;
      c += h & 0xffff;
      d += h >>> 16;
      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;
      hh[7] = ah7 = c & 0xffff | d << 16;
      hl[7] = al7 = a & 0xffff | b << 16;
      pos += 128;
      n -= 128;
    }
    return n;
  }
  function crypto_hash(out, m, n) {
    var hh = new Int32Array(8),
      hl = new Int32Array(8),
      x = new Uint8Array(256),
      i,
      b = n;
    hh[0] = 0x6a09e667;
    hh[1] = 0xbb67ae85;
    hh[2] = 0x3c6ef372;
    hh[3] = 0xa54ff53a;
    hh[4] = 0x510e527f;
    hh[5] = 0x9b05688c;
    hh[6] = 0x1f83d9ab;
    hh[7] = 0x5be0cd19;
    hl[0] = 0xf3bcc908;
    hl[1] = 0x84caa73b;
    hl[2] = 0xfe94f82b;
    hl[3] = 0x5f1d36f1;
    hl[4] = 0xade682d1;
    hl[5] = 0x2b3e6c1f;
    hl[6] = 0xfb41bd6b;
    hl[7] = 0x137e2179;
    crypto_hashblocks_hl(hh, hl, m, n);
    n %= 128;
    for (i = 0; i < n; i++) x[i] = m[b - n + i];
    x[n] = 128;
    n = 256 - 128 * (n < 112 ? 1 : 0);
    x[n - 9] = 0;
    ts64(x, n - 8, b / 0x20000000 | 0, b << 3);
    crypto_hashblocks_hl(hh, hl, x, n);
    for (i = 0; i < 8; i++) ts64(out, 8 * i, hh[i], hl[i]);
    return 0;
  }
  function add(p, q) {
    var a = gf(),
      b = gf(),
      c = gf(),
      d = gf(),
      e = gf(),
      f = gf(),
      g = gf(),
      h = gf(),
      t = gf();
    Z(a, p[1], p[0]);
    Z(t, q[1], q[0]);
    M(a, a, t);
    A(b, p[0], p[1]);
    A(t, q[0], q[1]);
    M(b, b, t);
    M(c, p[3], q[3]);
    M(c, c, D2);
    M(d, p[2], q[2]);
    A(d, d, d);
    Z(e, b, a);
    Z(f, d, c);
    A(g, d, c);
    A(h, b, a);
    M(p[0], e, f);
    M(p[1], h, g);
    M(p[2], g, f);
    M(p[3], e, h);
  }
  function cswap(p, q, b) {
    var i;
    for (i = 0; i < 4; i++) {
      sel25519(p[i], q[i], b);
    }
  }
  function pack(r, p) {
    var tx = gf(),
      ty = gf(),
      zi = gf();
    inv25519(zi, p[2]);
    M(tx, p[0], zi);
    M(ty, p[1], zi);
    pack25519(r, ty);
    r[31] ^= par25519(tx) << 7;
  }
  function scalarmult(p, q, s) {
    var b, i;
    set25519(p[0], gf0);
    set25519(p[1], gf1);
    set25519(p[2], gf1);
    set25519(p[3], gf0);
    for (i = 255; i >= 0; --i) {
      b = s[i / 8 | 0] >> (i & 7) & 1;
      cswap(p, q, b);
      add(q, p);
      add(p, p);
      cswap(p, q, b);
    }
  }
  function scalarbase(p, s) {
    var q = [gf(), gf(), gf(), gf()];
    set25519(q[0], X);
    set25519(q[1], Y);
    set25519(q[2], gf1);
    M(q[3], X, Y);
    scalarmult(p, q, s);
  }
  function crypto_sign_keypair(pk, sk, seeded) {
    var d = new Uint8Array(64);
    var p = [gf(), gf(), gf(), gf()];
    var i;
    if (!seeded) randombytes(sk, 32);
    crypto_hash(d, sk, 32);
    d[0] &= 248;
    d[31] &= 127;
    d[31] |= 64;
    scalarbase(p, d);
    pack(pk, p);
    for (i = 0; i < 32; i++) sk[i + 32] = pk[i];
    return 0;
  }
  var L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);
  function modL(r, x) {
    var carry, i, j, k;
    for (i = 63; i >= 32; --i) {
      carry = 0;
      for (j = i - 32, k = i - 12; j < k; ++j) {
        x[j] += carry - 16 * x[i] * L[j - (i - 32)];
        carry = Math.floor((x[j] + 128) / 256);
        x[j] -= carry * 256;
      }
      x[j] += carry;
      x[i] = 0;
    }
    carry = 0;
    for (j = 0; j < 32; j++) {
      x[j] += carry - (x[31] >> 4) * L[j];
      carry = x[j] >> 8;
      x[j] &= 255;
    }
    for (j = 0; j < 32; j++) x[j] -= carry * L[j];
    for (i = 0; i < 32; i++) {
      x[i + 1] += x[i] >> 8;
      r[i] = x[i] & 255;
    }
  }
  function reduce(r) {
    var x = new Float64Array(64),
      i;
    for (i = 0; i < 64; i++) x[i] = r[i];
    for (i = 0; i < 64; i++) r[i] = 0;
    modL(r, x);
  }

  // Note: difference from C - smlen returned, not passed as argument.
  function crypto_sign(sm, m, n, sk) {
    var d = new Uint8Array(64),
      h = new Uint8Array(64),
      r = new Uint8Array(64);
    var i,
      j,
      x = new Float64Array(64);
    var p = [gf(), gf(), gf(), gf()];
    crypto_hash(d, sk, 32);
    d[0] &= 248;
    d[31] &= 127;
    d[31] |= 64;
    var smlen = n + 64;
    for (i = 0; i < n; i++) sm[64 + i] = m[i];
    for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];
    crypto_hash(r, sm.subarray(32), n + 32);
    reduce(r);
    scalarbase(p, r);
    pack(sm, p);
    for (i = 32; i < 64; i++) sm[i] = sk[i];
    crypto_hash(h, sm, n + 64);
    reduce(h);
    for (i = 0; i < 64; i++) x[i] = 0;
    for (i = 0; i < 32; i++) x[i] = r[i];
    for (i = 0; i < 32; i++) {
      for (j = 0; j < 32; j++) {
        x[i + j] += h[i] * d[j];
      }
    }
    modL(sm.subarray(32), x);
    return smlen;
  }
  function unpackneg(r, p) {
    var t = gf(),
      chk = gf(),
      num = gf(),
      den = gf(),
      den2 = gf(),
      den4 = gf(),
      den6 = gf();
    set25519(r[2], gf1);
    unpack25519(r[1], p);
    S(num, r[1]);
    M(den, num, D);
    Z(num, num, r[2]);
    A(den, r[2], den);
    S(den2, den);
    S(den4, den2);
    M(den6, den4, den2);
    M(t, den6, num);
    M(t, t, den);
    pow2523(t, t);
    M(t, t, num);
    M(t, t, den);
    M(t, t, den);
    M(r[0], t, den);
    S(chk, r[0]);
    M(chk, chk, den);
    if (neq25519(chk, num)) M(r[0], r[0], I);
    S(chk, r[0]);
    M(chk, chk, den);
    if (neq25519(chk, num)) return -1;
    if (par25519(r[0]) === p[31] >> 7) Z(r[0], gf0, r[0]);
    M(r[3], r[0], r[1]);
    return 0;
  }
  function crypto_sign_open(m, sm, n, pk) {
    var i;
    var t = new Uint8Array(32),
      h = new Uint8Array(64);
    var p = [gf(), gf(), gf(), gf()],
      q = [gf(), gf(), gf(), gf()];
    if (n < 64) return -1;
    if (unpackneg(q, pk)) return -1;
    for (i = 0; i < n; i++) m[i] = sm[i];
    for (i = 0; i < 32; i++) m[i + 32] = pk[i];
    crypto_hash(h, m, n);
    reduce(h);
    scalarmult(p, q, h);
    scalarbase(q, sm.subarray(32));
    add(p, q);
    pack(t, p);
    n -= 64;
    if (crypto_verify_32(sm, 0, t, 0)) {
      for (i = 0; i < n; i++) m[i] = 0;
      return -1;
    }
    for (i = 0; i < n; i++) m[i] = sm[i + 64];
    return n;
  }
  var crypto_secretbox_KEYBYTES = 32,
    crypto_secretbox_NONCEBYTES = 24,
    crypto_secretbox_ZEROBYTES = 32,
    crypto_secretbox_BOXZEROBYTES = 16,
    crypto_scalarmult_BYTES = 32,
    crypto_scalarmult_SCALARBYTES = 32,
    crypto_box_PUBLICKEYBYTES = 32,
    crypto_box_SECRETKEYBYTES = 32,
    crypto_box_BEFORENMBYTES = 32,
    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,
    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,
    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,
    crypto_sign_BYTES = 64,
    crypto_sign_PUBLICKEYBYTES = 32,
    crypto_sign_SECRETKEYBYTES = 64,
    crypto_sign_SEEDBYTES = 32,
    crypto_hash_BYTES = 64;
  nacl.lowlevel = {
    crypto_core_hsalsa20: crypto_core_hsalsa20,
    crypto_stream_xor: crypto_stream_xor,
    crypto_stream: crypto_stream,
    crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,
    crypto_stream_salsa20: crypto_stream_salsa20,
    crypto_onetimeauth: crypto_onetimeauth,
    crypto_onetimeauth_verify: crypto_onetimeauth_verify,
    crypto_verify_16: crypto_verify_16,
    crypto_verify_32: crypto_verify_32,
    crypto_secretbox: crypto_secretbox,
    crypto_secretbox_open: crypto_secretbox_open,
    crypto_scalarmult: crypto_scalarmult,
    crypto_scalarmult_base: crypto_scalarmult_base,
    crypto_box_beforenm: crypto_box_beforenm,
    crypto_box_afternm: crypto_box_afternm,
    crypto_box: crypto_box,
    crypto_box_open: crypto_box_open,
    crypto_box_keypair: crypto_box_keypair,
    crypto_hash: crypto_hash,
    crypto_sign: crypto_sign,
    crypto_sign_keypair: crypto_sign_keypair,
    crypto_sign_open: crypto_sign_open,
    crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,
    crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,
    crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,
    crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,
    crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,
    crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,
    crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,
    crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,
    crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,
    crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,
    crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,
    crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,
    crypto_sign_BYTES: crypto_sign_BYTES,
    crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,
    crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,
    crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,
    crypto_hash_BYTES: crypto_hash_BYTES,
    gf: gf,
    D: D,
    L: L,
    pack25519: pack25519,
    unpack25519: unpack25519,
    M: M,
    A: A,
    S: S,
    Z: Z,
    pow2523: pow2523,
    add: add,
    set25519: set25519,
    modL: modL,
    scalarmult: scalarmult,
    scalarbase: scalarbase
  };

  /* High-level API */

  function checkLengths(k, n) {
    if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');
    if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');
  }
  function checkBoxLengths(pk, sk) {
    if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');
    if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');
  }
  function checkArrayTypes() {
    for (var i = 0; i < arguments.length; i++) {
      if (!(arguments[i] instanceof Uint8Array)) throw new TypeError('unexpected type, use Uint8Array');
    }
  }
  function cleanup(arr) {
    for (var i = 0; i < arr.length; i++) arr[i] = 0;
  }
  nacl.randomBytes = function (n) {
    var b = new Uint8Array(n);
    randombytes(b, n);
    return b;
  };
  nacl.secretbox = function (msg, nonce, key) {
    checkArrayTypes(msg, nonce, key);
    checkLengths(key, nonce);
    var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);
    var c = new Uint8Array(m.length);
    for (var i = 0; i < msg.length; i++) m[i + crypto_secretbox_ZEROBYTES] = msg[i];
    crypto_secretbox(c, m, m.length, nonce, key);
    return c.subarray(crypto_secretbox_BOXZEROBYTES);
  };
  nacl.secretbox.open = function (box, nonce, key) {
    checkArrayTypes(box, nonce, key);
    checkLengths(key, nonce);
    var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);
    var m = new Uint8Array(c.length);
    for (var i = 0; i < box.length; i++) c[i + crypto_secretbox_BOXZEROBYTES] = box[i];
    if (c.length < 32) return null;
    if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;
    return m.subarray(crypto_secretbox_ZEROBYTES);
  };
  nacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;
  nacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;
  nacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;
  nacl.scalarMult = function (n, p) {
    checkArrayTypes(n, p);
    if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');
    if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');
    var q = new Uint8Array(crypto_scalarmult_BYTES);
    crypto_scalarmult(q, n, p);
    return q;
  };
  nacl.scalarMult.base = function (n) {
    checkArrayTypes(n);
    if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');
    var q = new Uint8Array(crypto_scalarmult_BYTES);
    crypto_scalarmult_base(q, n);
    return q;
  };
  nacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;
  nacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;
  nacl.box = function (msg, nonce, publicKey, secretKey) {
    var k = nacl.box.before(publicKey, secretKey);
    return nacl.secretbox(msg, nonce, k);
  };
  nacl.box.before = function (publicKey, secretKey) {
    checkArrayTypes(publicKey, secretKey);
    checkBoxLengths(publicKey, secretKey);
    var k = new Uint8Array(crypto_box_BEFORENMBYTES);
    crypto_box_beforenm(k, publicKey, secretKey);
    return k;
  };
  nacl.box.after = nacl.secretbox;
  nacl.box.open = function (msg, nonce, publicKey, secretKey) {
    var k = nacl.box.before(publicKey, secretKey);
    return nacl.secretbox.open(msg, nonce, k);
  };
  nacl.box.open.after = nacl.secretbox.open;
  nacl.box.keyPair = function () {
    var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
    var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);
    crypto_box_keypair(pk, sk);
    return {
      publicKey: pk,
      secretKey: sk
    };
  };
  nacl.box.keyPair.fromSecretKey = function (secretKey) {
    checkArrayTypes(secretKey);
    if (secretKey.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');
    var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
    crypto_scalarmult_base(pk, secretKey);
    return {
      publicKey: pk,
      secretKey: new Uint8Array(secretKey)
    };
  };
  nacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;
  nacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;
  nacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;
  nacl.box.nonceLength = crypto_box_NONCEBYTES;
  nacl.box.overheadLength = nacl.secretbox.overheadLength;
  nacl.sign = function (msg, secretKey) {
    checkArrayTypes(msg, secretKey);
    if (secretKey.length !== crypto_sign_SECRETKEYBYTES) throw new Error('bad secret key size');
    var signedMsg = new Uint8Array(crypto_sign_BYTES + msg.length);
    crypto_sign(signedMsg, msg, msg.length, secretKey);
    return signedMsg;
  };
  nacl.sign.open = function (signedMsg, publicKey) {
    checkArrayTypes(signedMsg, publicKey);
    if (publicKey.length !== crypto_sign_PUBLICKEYBYTES) throw new Error('bad public key size');
    var tmp = new Uint8Array(signedMsg.length);
    var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);
    if (mlen < 0) return null;
    var m = new Uint8Array(mlen);
    for (var i = 0; i < m.length; i++) m[i] = tmp[i];
    return m;
  };
  nacl.sign.detached = function (msg, secretKey) {
    var signedMsg = nacl.sign(msg, secretKey);
    var sig = new Uint8Array(crypto_sign_BYTES);
    for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];
    return sig;
  };
  nacl.sign.detached.verify = function (msg, sig, publicKey) {
    checkArrayTypes(msg, sig, publicKey);
    if (sig.length !== crypto_sign_BYTES) throw new Error('bad signature size');
    if (publicKey.length !== crypto_sign_PUBLICKEYBYTES) throw new Error('bad public key size');
    var sm = new Uint8Array(crypto_sign_BYTES + msg.length);
    var m = new Uint8Array(crypto_sign_BYTES + msg.length);
    var i;
    for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];
    for (i = 0; i < msg.length; i++) sm[i + crypto_sign_BYTES] = msg[i];
    return crypto_sign_open(m, sm, sm.length, publicKey) >= 0;
  };
  nacl.sign.keyPair = function () {
    var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
    var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
    crypto_sign_keypair(pk, sk);
    return {
      publicKey: pk,
      secretKey: sk
    };
  };
  nacl.sign.keyPair.fromSecretKey = function (secretKey) {
    checkArrayTypes(secretKey);
    if (secretKey.length !== crypto_sign_SECRETKEYBYTES) throw new Error('bad secret key size');
    var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
    for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32 + i];
    return {
      publicKey: pk,
      secretKey: new Uint8Array(secretKey)
    };
  };
  nacl.sign.keyPair.fromSeed = function (seed) {
    checkArrayTypes(seed);
    if (seed.length !== crypto_sign_SEEDBYTES) throw new Error('bad seed size');
    var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
    var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
    for (var i = 0; i < 32; i++) sk[i] = seed[i];
    crypto_sign_keypair(pk, sk, true);
    return {
      publicKey: pk,
      secretKey: sk
    };
  };
  nacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;
  nacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;
  nacl.sign.seedLength = crypto_sign_SEEDBYTES;
  nacl.sign.signatureLength = crypto_sign_BYTES;
  nacl.hash = function (msg) {
    checkArrayTypes(msg);
    var h = new Uint8Array(crypto_hash_BYTES);
    crypto_hash(h, msg, msg.length);
    return h;
  };
  nacl.hash.hashLength = crypto_hash_BYTES;
  nacl.verify = function (x, y) {
    checkArrayTypes(x, y);
    // Zero length arguments are considered not equal.
    if (x.length === 0 || y.length === 0) return false;
    if (x.length !== y.length) return false;
    return vn(x, 0, y, 0, x.length) === 0 ? true : false;
  };
  nacl.setPRNG = function (fn) {
    randombytes = fn;
  };
  (function () {
    // Initialize PRNG if environment provides CSPRNG.
    // If not, methods calling randombytes will throw.
    var crypto = typeof self !== 'undefined' ? self.crypto || self.msCrypto : null;
    if (crypto && crypto.getRandomValues) {
      // Browsers.
      var QUOTA = 65536;
      nacl.setPRNG(function (x, n) {
        var i,
          v = new Uint8Array(n);
        for (i = 0; i < n; i += QUOTA) {
          crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));
        }
        for (i = 0; i < n; i++) x[i] = v[i];
        cleanup(v);
      });
    } else if (typeof require !== 'undefined') {
      // Node.js.
      crypto = require('crypto');
      if (crypto && crypto.randomBytes) {
        nacl.setPRNG(function (x, n) {
          var i,
            v = crypto.randomBytes(n);
          for (i = 0; i < n; i++) x[i] = v[i];
          cleanup(v);
        });
      }
    }
  })();
})(typeof module !== 'undefined' && module.exports ? module.exports : self.nacl = self.nacl || {});

},{"crypto":195}],208:[function(require,module,exports){
"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
/////////////////////////////////////////////////////////////////////////////////
/* UAParser.js v1.0.39
   Copyright © 2012-2021 Faisal Salman <f@faisalman.com>
   MIT License */ /*
                  Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.
                  Supports browser & node.js environment. 
                  Demo   : https://faisalman.github.io/ua-parser-js
                  Source : https://github.com/faisalman/ua-parser-js */
/////////////////////////////////////////////////////////////////////////////////

(function (window, undefined) {
  'use strict';

  //////////////
  // Constants
  /////////////
  var LIBVERSION = '1.0.39',
    EMPTY = '',
    UNKNOWN = '?',
    FUNC_TYPE = 'function',
    UNDEF_TYPE = 'undefined',
    OBJ_TYPE = 'object',
    STR_TYPE = 'string',
    MAJOR = 'major',
    MODEL = 'model',
    NAME = 'name',
    TYPE = 'type',
    VENDOR = 'vendor',
    VERSION = 'version',
    ARCHITECTURE = 'architecture',
    CONSOLE = 'console',
    MOBILE = 'mobile',
    TABLET = 'tablet',
    SMARTTV = 'smarttv',
    WEARABLE = 'wearable',
    EMBEDDED = 'embedded',
    UA_MAX_LENGTH = 500;
  var AMAZON = 'Amazon',
    APPLE = 'Apple',
    ASUS = 'ASUS',
    BLACKBERRY = 'BlackBerry',
    BROWSER = 'Browser',
    CHROME = 'Chrome',
    EDGE = 'Edge',
    FIREFOX = 'Firefox',
    GOOGLE = 'Google',
    HUAWEI = 'Huawei',
    LG = 'LG',
    MICROSOFT = 'Microsoft',
    MOTOROLA = 'Motorola',
    OPERA = 'Opera',
    SAMSUNG = 'Samsung',
    SHARP = 'Sharp',
    SONY = 'Sony',
    XIAOMI = 'Xiaomi',
    ZEBRA = 'Zebra',
    FACEBOOK = 'Facebook',
    CHROMIUM_OS = 'Chromium OS',
    MAC_OS = 'Mac OS',
    SUFFIX_BROWSER = ' Browser';

  ///////////
  // Helper
  //////////

  var extend = function extend(regexes, extensions) {
      var mergedRegexes = {};
      for (var i in regexes) {
        if (extensions[i] && extensions[i].length % 2 === 0) {
          mergedRegexes[i] = extensions[i].concat(regexes[i]);
        } else {
          mergedRegexes[i] = regexes[i];
        }
      }
      return mergedRegexes;
    },
    enumerize = function enumerize(arr) {
      var enums = {};
      for (var i = 0; i < arr.length; i++) {
        enums[arr[i].toUpperCase()] = arr[i];
      }
      return enums;
    },
    has = function has(str1, str2) {
      return _typeof(str1) === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;
    },
    lowerize = function lowerize(str) {
      return str.toLowerCase();
    },
    majorize = function majorize(version) {
      return _typeof(version) === STR_TYPE ? version.replace(/[^\d\.]/g, EMPTY).split('.')[0] : undefined;
    },
    trim = function trim(str, len) {
      if (_typeof(str) === STR_TYPE) {
        str = str.replace(/^\s\s*/, EMPTY);
        return _typeof(len) === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);
      }
    };

  ///////////////
  // Map helper
  //////////////

  var rgxMapper = function rgxMapper(ua, arrays) {
      var i = 0,
        j,
        k,
        p,
        q,
        matches,
        match;

      // loop through all regexes maps
      while (i < arrays.length && !matches) {
        var regex = arrays[i],
          // even sequence (0,2,4,..)
          props = arrays[i + 1]; // odd sequence (1,3,5,..)
        j = k = 0;

        // try matching uastring with regexes
        while (j < regex.length && !matches) {
          if (!regex[j]) {
            break;
          }
          matches = regex[j++].exec(ua);
          if (!!matches) {
            for (p = 0; p < props.length; p++) {
              match = matches[++k];
              q = props[p];
              // check if given property is actually array
              if (_typeof(q) === OBJ_TYPE && q.length > 0) {
                if (q.length === 2) {
                  if (_typeof(q[1]) == FUNC_TYPE) {
                    // assign modified match
                    this[q[0]] = q[1].call(this, match);
                  } else {
                    // assign given value, ignore regex match
                    this[q[0]] = q[1];
                  }
                } else if (q.length === 3) {
                  // check whether function or regex
                  if (_typeof(q[1]) === FUNC_TYPE && !(q[1].exec && q[1].test)) {
                    // call function (usually string mapper)
                    this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;
                  } else {
                    // sanitize match using given regex
                    this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;
                  }
                } else if (q.length === 4) {
                  this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;
                }
              } else {
                this[q] = match ? match : undefined;
              }
            }
          }
        }
        i += 2;
      }
    },
    strMapper = function strMapper(str, map) {
      for (var i in map) {
        // check if current value is array
        if (_typeof(map[i]) === OBJ_TYPE && map[i].length > 0) {
          for (var j = 0; j < map[i].length; j++) {
            if (has(map[i][j], str)) {
              return i === UNKNOWN ? undefined : i;
            }
          }
        } else if (has(map[i], str)) {
          return i === UNKNOWN ? undefined : i;
        }
      }
      return map.hasOwnProperty('*') ? map['*'] : str;
    };

  ///////////////
  // String map
  //////////////

  // Safari < 3.0
  var oldSafariMap = {
      '1.0': '/8',
      '1.2': '/1',
      '1.3': '/3',
      '2.0': '/412',
      '2.0.2': '/416',
      '2.0.3': '/417',
      '2.0.4': '/419',
      '?': '/'
    },
    windowsVersionMap = {
      'ME': '4.90',
      'NT 3.11': 'NT3.51',
      'NT 4.0': 'NT4.0',
      '2000': 'NT 5.0',
      'XP': ['NT 5.1', 'NT 5.2'],
      'Vista': 'NT 6.0',
      '7': 'NT 6.1',
      '8': 'NT 6.2',
      '8.1': 'NT 6.3',
      '10': ['NT 6.4', 'NT 10.0'],
      'RT': 'ARM'
    };

  //////////////
  // Regex map
  /////////////

  var regexes = {
    browser: [[/\b(?:crmo|crios)\/([\w\.]+)/i // Chrome for Android/iOS
    ], [VERSION, [NAME, 'Chrome']], [/edg(?:e|ios|a)?\/([\w\.]+)/i // Microsoft Edge
    ], [VERSION, [NAME, 'Edge']], [
    // Presto based
    /(opera mini)\/([-\w\.]+)/i,
    // Opera Mini
    /(opera [mobiletab]{3,6})\b.+version\/([-\w\.]+)/i,
    // Opera Mobi/Tablet
    /(opera)(?:.+version\/|[\/ ]+)([\w\.]+)/i // Opera
    ], [NAME, VERSION], [/opios[\/ ]+([\w\.]+)/i // Opera mini on iphone >= 8.0
    ], [VERSION, [NAME, OPERA + ' Mini']], [/\bop(?:rg)?x\/([\w\.]+)/i // Opera GX
    ], [VERSION, [NAME, OPERA + ' GX']], [/\bopr\/([\w\.]+)/i // Opera Webkit
    ], [VERSION, [NAME, OPERA]], [
    // Mixed
    /\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\/ ]?([\w\.]+)/i // Baidu
    ], [VERSION, [NAME, 'Baidu']], [/(kindle)\/([\w\.]+)/i,
    // Kindle
    /(lunascape|maxthon|netfront|jasmine|blazer|sleipnir)[\/ ]?([\w\.]*)/i,
    // Lunascape/Maxthon/Netfront/Jasmine/Blazer/Sleipnir
    // Trident based
    /(avant|iemobile|slim)\s?(?:browser)?[\/ ]?([\w\.]*)/i,
    // Avant/IEMobile/SlimBrowser
    /(?:ms|\()(ie) ([\w\.]+)/i,
    // Internet Explorer

    // Webkit/KHTML based                                               // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon
    /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|duckduckgo|klar|helio)\/([-\w\.]+)/i,
    // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ//Vivaldi/DuckDuckGo/Klar/Helio
    /(heytap|ovi)browser\/([\d\.]+)/i,
    // HeyTap/Ovi
    /(weibo)__([\d\.]+)/i // Weibo
    ], [NAME, VERSION], [/quark(?:pc)?\/([-\w\.]+)/i // Quark
    ], [VERSION, [NAME, 'Quark']], [/\bddg\/([\w\.]+)/i // DuckDuckGo
    ], [VERSION, [NAME, 'DuckDuckGo']], [/(?:\buc? ?browser|(?:juc.+)ucweb)[\/ ]?([\w\.]+)/i // UCBrowser
    ], [VERSION, [NAME, 'UC' + BROWSER]], [/microm.+\bqbcore\/([\w\.]+)/i,
    // WeChat Desktop for Windows Built-in Browser
    /\bqbcore\/([\w\.]+).+microm/i, /micromessenger\/([\w\.]+)/i // WeChat
    ], [VERSION, [NAME, 'WeChat']], [/konqueror\/([\w\.]+)/i // Konqueror
    ], [VERSION, [NAME, 'Konqueror']], [/trident.+rv[: ]([\w\.]{1,9})\b.+like gecko/i // IE11
    ], [VERSION, [NAME, 'IE']], [/ya(?:search)?browser\/([\w\.]+)/i // Yandex
    ], [VERSION, [NAME, 'Yandex']], [/slbrowser\/([\w\.]+)/i // Smart Lenovo Browser
    ], [VERSION, [NAME, 'Smart Lenovo ' + BROWSER]], [/(avast|avg)\/([\w\.]+)/i // Avast/AVG Secure Browser
    ], [[NAME, /(.+)/, '$1 Secure ' + BROWSER], VERSION], [/\bfocus\/([\w\.]+)/i // Firefox Focus
    ], [VERSION, [NAME, FIREFOX + ' Focus']], [/\bopt\/([\w\.]+)/i // Opera Touch
    ], [VERSION, [NAME, OPERA + ' Touch']], [/coc_coc\w+\/([\w\.]+)/i // Coc Coc Browser
    ], [VERSION, [NAME, 'Coc Coc']], [/dolfin\/([\w\.]+)/i // Dolphin
    ], [VERSION, [NAME, 'Dolphin']], [/coast\/([\w\.]+)/i // Opera Coast
    ], [VERSION, [NAME, OPERA + ' Coast']], [/miuibrowser\/([\w\.]+)/i // MIUI Browser
    ], [VERSION, [NAME, 'MIUI ' + BROWSER]], [/fxios\/([-\w\.]+)/i // Firefox for iOS
    ], [VERSION, [NAME, FIREFOX]], [/\bqihu|(qi?ho?o?|360)browser/i // 360
    ], [[NAME, '360' + SUFFIX_BROWSER]], [/\b(qq)\/([\w\.]+)/i // QQ
    ], [[NAME, /(.+)/, '$1Browser'], VERSION], [/(oculus|sailfish|huawei|vivo|pico)browser\/([\w\.]+)/i], [[NAME, /(.+)/, '$1' + SUFFIX_BROWSER], VERSION], [
    // Oculus/Sailfish/HuaweiBrowser/VivoBrowser/PicoBrowser
    /samsungbrowser\/([\w\.]+)/i // Samsung Internet
    ], [VERSION, [NAME, SAMSUNG + ' Internet']], [/(comodo_dragon)\/([\w\.]+)/i // Comodo Dragon
    ], [[NAME, /_/g, ' '], VERSION], [/metasr[\/ ]?([\d\.]+)/i // Sogou Explorer
    ], [VERSION, [NAME, 'Sogou Explorer']], [/(sogou)mo\w+\/([\d\.]+)/i // Sogou Mobile
    ], [[NAME, 'Sogou Mobile'], VERSION], [/(electron)\/([\w\.]+) safari/i,
    // Electron-based App
    /(tesla)(?: qtcarbrowser|\/(20\d\d\.[-\w\.]+))/i,
    // Tesla
    /m?(qqbrowser|2345Explorer)[\/ ]?([\w\.]+)/i // QQBrowser/2345 Browser
    ], [NAME, VERSION], [/(lbbrowser|rekonq)/i,
    // LieBao Browser/Rekonq
    /\[(linkedin)app\]/i // LinkedIn App for iOS & Android
    ], [NAME], [
    // WebView
    /((?:fban\/fbios|fb_iab\/fb4a)(?!.+fbav)|;fbav\/([\w\.]+);)/i // Facebook App for iOS & Android
    ], [[NAME, FACEBOOK], VERSION], [/(Klarna)\/([\w\.]+)/i,
    // Klarna Shopping Browser for iOS & Android
    /(kakao(?:talk|story))[\/ ]([\w\.]+)/i,
    // Kakao App
    /(naver)\(.*?(\d+\.[\w\.]+).*\)/i,
    // Naver InApp
    /safari (line)\/([\w\.]+)/i,
    // Line App for iOS
    /\b(line)\/([\w\.]+)\/iab/i,
    // Line App for Android
    /(alipay)client\/([\w\.]+)/i,
    // Alipay
    /(twitter)(?:and| f.+e\/([\w\.]+))/i,
    // Twitter
    /(chromium|instagram|snapchat)[\/ ]([-\w\.]+)/i // Chromium/Instagram/Snapchat
    ], [NAME, VERSION], [/\bgsa\/([\w\.]+) .*safari\//i // Google Search Appliance on iOS
    ], [VERSION, [NAME, 'GSA']], [/musical_ly(?:.+app_?version\/|_)([\w\.]+)/i // TikTok
    ], [VERSION, [NAME, 'TikTok']], [/headlesschrome(?:\/([\w\.]+)| )/i // Chrome Headless
    ], [VERSION, [NAME, CHROME + ' Headless']], [/ wv\).+(chrome)\/([\w\.]+)/i // Chrome WebView
    ], [[NAME, CHROME + ' WebView'], VERSION], [/droid.+ version\/([\w\.]+)\b.+(?:mobile safari|safari)/i // Android Browser
    ], [VERSION, [NAME, 'Android ' + BROWSER]], [/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\/v?([\w\.]+)/i // Chrome/OmniWeb/Arora/Tizen/Nokia
    ], [NAME, VERSION], [/version\/([\w\.\,]+) .*mobile\/\w+ (safari)/i // Mobile Safari
    ], [VERSION, [NAME, 'Mobile Safari']], [/version\/([\w(\.|\,)]+) .*(mobile ?safari|safari)/i // Safari & Safari Mobile
    ], [VERSION, NAME], [/webkit.+?(mobile ?safari|safari)(\/[\w\.]+)/i // Safari < 3.0
    ], [NAME, [VERSION, strMapper, oldSafariMap]], [/(webkit|khtml)\/([\w\.]+)/i], [NAME, VERSION], [
    // Gecko based
    /(navigator|netscape\d?)\/([-\w\.]+)/i // Netscape
    ], [[NAME, 'Netscape'], VERSION], [/(wolvic)\/([\w\.]+)/i // Wolvic
    ], [NAME, VERSION], [/mobile vr; rv:([\w\.]+)\).+firefox/i // Firefox Reality
    ], [VERSION, [NAME, FIREFOX + ' Reality']], [/ekiohf.+(flow)\/([\w\.]+)/i,
    // Flow
    /(swiftfox)/i,
    // Swiftfox
    /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror)[\/ ]?([\w\.\+]+)/i,
    // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror
    /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([-\w\.]+)$/i,
    // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix
    /(firefox)\/([\w\.]+)/i,
    // Other Firefox-based
    /(mozilla)\/([\w\.]+) .+rv\:.+gecko\/\d+/i,
    // Mozilla

    // Other
    /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|obigo|mosaic|(?:go|ice|up)[\. ]?browser)[-\/ ]?v?([\w\.]+)/i,
    // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Obigo/Mosaic/Go/ICE/UP.Browser
    /(links) \(([\w\.]+)/i // Links
    ], [NAME, [VERSION, /_/g, '.']], [/(cobalt)\/([\w\.]+)/i // Cobalt
    ], [NAME, [VERSION, /master.|lts./, ""]]],
    cpu: [[/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\)]/i // AMD64 (x64)
    ], [[ARCHITECTURE, 'amd64']], [/(ia32(?=;))/i // IA32 (quicktime)
    ], [[ARCHITECTURE, lowerize]], [/((?:i[346]|x)86)[;\)]/i // IA32 (x86)
    ], [[ARCHITECTURE, 'ia32']], [/\b(aarch64|arm(v?8e?l?|_?64))\b/i // ARM64
    ], [[ARCHITECTURE, 'arm64']], [/\b(arm(?:v[67])?ht?n?[fl]p?)\b/i // ARMHF
    ], [[ARCHITECTURE, 'armhf']], [
    // PocketPC mistakenly identified as PowerPC
    /windows (ce|mobile); ppc;/i], [[ARCHITECTURE, 'arm']], [/((?:ppc|powerpc)(?:64)?)(?: mac|;|\))/i // PowerPC
    ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [/(sun4\w)[;\)]/i // SPARC
    ], [[ARCHITECTURE, 'sparc']], [/((?:avr32|ia64(?=;))|68k(?=\))|\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\b|pa-risc)/i
    // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC
    ], [[ARCHITECTURE, lowerize]]],
    device: [[
    //////////////////////////
    // MOBILES & TABLETS
    /////////////////////////

    // Samsung
    /\b(sch-i[89]0\d|shw-m380s|sm-[ptx]\w{2,4}|gt-[pn]\d{2,4}|sgh-t8[56]9|nexus 10)/i], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [/\b((?:s[cgp]h|gt|sm)-(?![lr])\w+|sc[g-]?[\d]+a?|galaxy nexus)/i, /samsung[- ]((?!sm-[lr])[-\w]+)/i, /sec-(sgh\w+)/i], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [
    // Apple
    /(?:\/|\()(ip(?:hone|od)[\w, ]*)(?:\/|;)/i // iPod/iPhone
    ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [/\((ipad);[-\w\),; ]+apple/i,
    // iPad
    /applecoremedia\/[\w\.]+ \((ipad)/i, /\b(ipad)\d\d?,\d\d?[;\]].+ios/i], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [/(macintosh);/i], [MODEL, [VENDOR, APPLE]], [
    // Sharp
    /\b(sh-?[altvz]?\d\d[a-ekm]?)/i], [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]], [
    // Huawei
    /\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\d{2})\b(?!.+d\/s)/i], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [/(?:huawei|honor)([-\w ]+)[;\)]/i, /\b(nexus 6p|\w{2,4}e?-[atu]?[ln][\dx][012359c][adn]?)\b(?!.+d\/s)/i], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [
    // Xiaomi
    /\b(poco[\w ]+|m2\d{3}j\d\d[a-z]{2})(?: bui|\))/i,
    // Xiaomi POCO
    /\b; (\w+) build\/hm\1/i,
    // Xiaomi Hongmi 'numeric' models
    /\b(hm[-_ ]?note?[_ ]?(?:\d\w)?) bui/i,
    // Xiaomi Hongmi
    /\b(redmi[\-_ ]?(?:note|k)?[\w_ ]+)(?: bui|\))/i,
    // Xiaomi Redmi
    /oid[^\)]+; (m?[12][0-389][01]\w{3,6}[c-y])( bui|; wv|\))/i,
    // Xiaomi Redmi 'numeric' models
    /\b(mi[-_ ]?(?:a\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\d?\w?)[_ ]?(?:plus|se|lite|pro)?)(?: bui|\))/i // Xiaomi Mi
    ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [/oid[^\)]+; (2\d{4}(283|rpbf)[cgl])( bui|\))/i,
    // Redmi Pad
    /\b(mi[-_ ]?(?:pad)(?:[\w_ ]+))(?: bui|\))/i // Mi Pad tablets
    ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [
    // OPPO
    /; (\w+) bui.+ oppo/i, /\b(cph[12]\d{3}|p(?:af|c[al]|d\w|e[ar])[mt]\d0|x9007|a101op)\b/i], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [/\b(opd2\d{3}a?) bui/i], [MODEL, [VENDOR, 'OPPO'], [TYPE, TABLET]], [
    // Vivo
    /vivo (\w+)(?: bui|\))/i, /\b(v[12]\d{3}\w?[at])(?: bui|;)/i], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [
    // Realme
    /\b(rmx[1-3]\d{3})(?: bui|;|\))/i], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [
    // Motorola
    /\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\b[\w ]+build\//i, /\bmot(?:orola)?[- ](\w*)/i, /((?:moto[\w\(\) ]+|xt\d{3,4}|nexus 6)(?= bui|\)))/i], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [/\b(mz60\d|xoom[2 ]{0,2}) build\//i], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [
    // LG
    /((?=lg)?[vl]k\-?\d{3}) bui| 3\.[-\w; ]{10}lg?-([06cv9]{3,4})/i], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [/(lm(?:-?f100[nv]?|-[\w\.]+)(?= bui|\))|nexus [45])/i, /\blg[-e;\/ ]+((?!browser|netcast|android tv)\w+)/i, /\blg-?([\d\w]+) bui/i], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [
    // Lenovo
    /(ideatab[-\w ]+)/i, /lenovo ?(s[56]000[-\w]+|tab(?:[\w ]+)|yt[-\d\w]{6}|tb[-\d\w]{6})/i], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [
    // Nokia
    /(?:maemo|nokia).*(n900|lumia \d+)/i, /nokia[-_ ]?([-\w\.]*)/i], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [
    // Google
    /(pixel c)\b/i // Google Pixel C
    ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [/droid.+; (pixel[\daxl ]{0,6})(?: bui|\))/i // Google Pixel
    ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [
    // Sony
    /droid.+ (a?\d[0-2]{2}so|[c-g]\d{4}|so[-gl]\w+|xq-a\w[4-7][12])(?= bui|\).+chrome\/(?![1-6]{0,1}\d\.))/i], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [/sony tablet [ps]/i, /\b(?:sony)?sgp\w+(?: bui|\))/i], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [
    // OnePlus
    / (kb2005|in20[12]5|be20[12][59])\b/i, /(?:one)?(?:plus)? (a\d0\d\d)(?: b|\))/i], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [
    // Amazon
    /(alexa)webm/i, /(kf[a-z]{2}wi|aeo(?!bc)\w\w)( bui|\))/i,
    // Kindle Fire without Silk / Echo Show
    /(kf[a-z]+)( bui|\)).+silk\//i // Kindle Fire HD
    ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [/((?:sd|kf)[0349hijorstuw]+)( bui|\)).+silk\//i // Fire Phone
    ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [
    // BlackBerry
    /(playbook);[-\w\),; ]+(rim)/i // BlackBerry PlayBook
    ], [MODEL, VENDOR, [TYPE, TABLET]], [/\b((?:bb[a-f]|st[hv])100-\d)/i, /\(bb10; (\w+)/i // BlackBerry 10
    ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [
    // Asus
    /(?:\b|asus_)(transfo[prime ]{4,10} \w+|eeepc|slider \w+|nexus 7|padfone|p00[cj])/i], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [/ (z[bes]6[027][012][km][ls]|zenfone \d\w?)\b/i], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [
    // HTC
    /(nexus 9)/i // HTC Nexus 9
    ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [/(htc)[-;_ ]{1,2}([\w ]+(?=\)| bui)|\w+)/i,
    // HTC

    // ZTE
    /(zte)[- ]([\w ]+?)(?: bui|\/|\))/i, /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\.))|sony(?!-bra))[-_ ]?([-\w]*)/i // Alcatel/GeeksPhone/Nexian/Panasonic/Sony
    ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [
    // TCL
    /droid [\w\.]+; ((?:8[14]9[16]|9(?:0(?:48|60|8[01])|1(?:3[27]|66)|2(?:6[69]|9[56])|466))[gqswx])\w*(\)| bui)/i], [MODEL, [VENDOR, 'TCL'], [TYPE, TABLET]], [
    // itel
    /(itel) ((\w+))/i], [[VENDOR, lowerize], MODEL, [TYPE, strMapper, {
      'tablet': ['p10001l', 'w7001'],
      '*': 'mobile'
    }]], [
    // Acer
    /droid.+; ([ab][1-7]-?[0178a]\d\d?)/i], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [
    // Meizu
    /droid.+; (m[1-5] note) bui/i, /\bmz-([-\w]{2,})/i], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [
    // Ulefone
    /; ((?:power )?armor(?:[\w ]{0,8}))(?: bui|\))/i], [MODEL, [VENDOR, 'Ulefone'], [TYPE, MOBILE]], [
    // Nothing
    /droid.+; (a(?:015|06[35]|142p?))/i], [MODEL, [VENDOR, 'Nothing'], [TYPE, MOBILE]], [
    // MIXED
    /(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno)[-_ ]?([-\w]*)/i,
    // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron
    /(hp) ([\w ]+\w)/i,
    // HP iPAQ
    /(asus)-?(\w+)/i,
    // Asus
    /(microsoft); (lumia[\w ]+)/i,
    // Microsoft Lumia
    /(lenovo)[-_ ]?([-\w]+)/i,
    // Lenovo
    /(jolla)/i,
    // Jolla
    /(oppo) ?([\w ]+) bui/i // OPPO
    ], [VENDOR, MODEL, [TYPE, MOBILE]], [/(kobo)\s(ereader|touch)/i,
    // Kobo
    /(archos) (gamepad2?)/i,
    // Archos
    /(hp).+(touchpad(?!.+tablet)|tablet)/i,
    // HP TouchPad
    /(kindle)\/([\w\.]+)/i,
    // Kindle
    /(nook)[\w ]+build\/(\w+)/i,
    // Nook
    /(dell) (strea[kpr\d ]*[\dko])/i,
    // Dell Streak
    /(le[- ]+pan)[- ]+(\w{1,9}) bui/i,
    // Le Pan Tablets
    /(trinity)[- ]*(t\d{3}) bui/i,
    // Trinity Tablets
    /(gigaset)[- ]+(q\w{1,9}) bui/i,
    // Gigaset Tablets
    /(vodafone) ([\w ]+)(?:\)| bui)/i // Vodafone
    ], [VENDOR, MODEL, [TYPE, TABLET]], [/(surface duo)/i // Surface Duo
    ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [/droid [\d\.]+; (fp\du?)(?: b|\))/i // Fairphone
    ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [/(u304aa)/i // AT&T
    ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [/\bsie-(\w*)/i // Siemens
    ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [/\b(rct\w+) b/i // RCA Tablets
    ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [/\b(venue[\d ]{2,7}) b/i // Dell Venue Tablets
    ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [/\b(q(?:mv|ta)\w+) b/i // Verizon Tablet
    ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [/\b(?:barnes[& ]+noble |bn[rt])([\w\+ ]*) b/i // Barnes & Noble Tablet
    ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [/\b(tm\d{3}\w+) b/i], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [/\b(k88) b/i // ZTE K Series Tablet
    ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [/\b(nx\d{3}j) b/i // ZTE Nubia
    ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [/\b(gen\d{3}) b.+49h/i // Swiss GEN Mobile
    ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [/\b(zur\d{3}) b/i // Swiss ZUR Tablet
    ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [/\b((zeki)?tb.*\b) b/i // Zeki Tablets
    ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [/\b([yr]\d{2}) b/i, /\b(dragon[- ]+touch |dt)(\w{5}) b/i // Dragon Touch Tablet
    ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [/\b(ns-?\w{0,9}) b/i // Insignia Tablets
    ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [/\b((nxa|next)-?\w{0,9}) b/i // NextBook Tablets
    ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [/\b(xtreme\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i // Voice Xtreme Phones
    ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [/\b(lvtel\-)?(v1[12]) b/i // LvTel Phones
    ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [/\b(ph-1) /i // Essential PH-1
    ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [/\b(v(100md|700na|7011|917g).*\b) b/i // Envizen Tablets
    ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [/\b(trio[-\w\. ]+) b/i // MachSpeed Tablets
    ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [/\btu_(1491) b/i // Rotor Tablets
    ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [/(shield[\w ]+) b/i // Nvidia Shield Tablets
    ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [/(sprint) (\w+)/i // Sprint Phones
    ], [VENDOR, MODEL, [TYPE, MOBILE]], [/(kin\.[onetw]{3})/i // Microsoft Kin
    ], [[MODEL, /\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\)/i // Zebra
    ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [/droid.+; (ec30|ps20|tc[2-8]\d[kx])\)/i], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [
    ///////////////////
    // SMARTTVS
    ///////////////////

    /smart-tv.+(samsung)/i // Samsung
    ], [VENDOR, [TYPE, SMARTTV]], [/hbbtv.+maple;(\d+)/i], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [/(nux; netcast.+smarttv|lg (netcast\.tv-201\d|android tv))/i // LG SmartTV
    ], [[VENDOR, LG], [TYPE, SMARTTV]], [/(apple) ?tv/i // Apple TV
    ], [VENDOR, [MODEL, APPLE + ' TV'], [TYPE, SMARTTV]], [/crkey/i // Google Chromecast
    ], [[MODEL, CHROME + 'cast'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [/droid.+aft(\w+)( bui|\))/i // Fire TV
    ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [/\(dtv[\);].+(aquos)/i, /(aquos-tv[\w ]+)\)/i // Sharp
    ], [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]], [/(bravia[\w ]+)( bui|\))/i // Sony
    ], [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]], [/(mitv-\w{5}) bui/i // Xiaomi
    ], [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]], [/Hbbtv.*(technisat) (.*);/i // TechniSAT
    ], [VENDOR, MODEL, [TYPE, SMARTTV]], [/\b(roku)[\dx]*[\)\/]((?:dvp-)?[\d\.]*)/i,
    // Roku
    /hbbtv\/\d+\.\d+\.\d+ +\([\w\+ ]*; *([\w\d][^;]*);([^;]*)/i // HbbTV devices
    ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [/\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\b/i // SmartTV from Unidentified Vendors
    ], [[TYPE, SMARTTV]], [
    ///////////////////
    // CONSOLES
    ///////////////////

    /(ouya)/i,
    // Ouya
    /(nintendo) ([wids3utch]+)/i // Nintendo
    ], [VENDOR, MODEL, [TYPE, CONSOLE]], [/droid.+; (shield) bui/i // Nvidia
    ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [/(playstation [345portablevi]+)/i // Playstation
    ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [/\b(xbox(?: one)?(?!; xbox))[\); ]/i // Microsoft Xbox
    ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [
    ///////////////////
    // WEARABLES
    ///////////////////

    /\b(sm-[lr]\d\d[05][fnuw]?s?)\b/i // Samsung Galaxy Watch
    ], [MODEL, [VENDOR, SAMSUNG], [TYPE, WEARABLE]], [/((pebble))app/i // Pebble
    ], [VENDOR, MODEL, [TYPE, WEARABLE]], [/(watch)(?: ?os[,\/]|\d,\d\/)[\d\.]+/i // Apple Watch
    ], [MODEL, [VENDOR, APPLE], [TYPE, WEARABLE]], [/droid.+; (glass) \d/i // Google Glass
    ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [/droid.+; (wt63?0{2,3})\)/i], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [/(quest( \d| pro)?)/i // Oculus Quest
    ], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [
    ///////////////////
    // EMBEDDED
    ///////////////////

    /(tesla)(?: qtcarbrowser|\/[-\w\.]+)/i // Tesla
    ], [VENDOR, [TYPE, EMBEDDED]], [/(aeobc)\b/i // Echo Dot
    ], [MODEL, [VENDOR, AMAZON], [TYPE, EMBEDDED]], [
    ////////////////////
    // MIXED (GENERIC)
    ///////////////////

    /droid .+?; ([^;]+?)(?: bui|; wv\)|\) applew).+? mobile safari/i // Android Phones from Unidentified Vendors
    ], [MODEL, [TYPE, MOBILE]], [/droid .+?; ([^;]+?)(?: bui|\) applew).+?(?! mobile) safari/i // Android Tablets from Unidentified Vendors
    ], [MODEL, [TYPE, TABLET]], [/\b((tablet|tab)[;\/]|focus\/\d(?!.+mobile))/i // Unidentifiable Tablet
    ], [[TYPE, TABLET]], [/(phone|mobile(?:[;\/]| [ \w\/\.]*safari)|pda(?=.+windows ce))/i // Unidentifiable Mobile
    ], [[TYPE, MOBILE]], [/(android[-\w\. ]{0,9});.+buil/i // Generic Android Device
    ], [MODEL, [VENDOR, 'Generic']]],
    engine: [[/windows.+ edge\/([\w\.]+)/i // EdgeHTML
    ], [VERSION, [NAME, EDGE + 'HTML']], [/webkit\/537\.36.+chrome\/(?!27)([\w\.]+)/i // Blink
    ], [VERSION, [NAME, 'Blink']], [/(presto)\/([\w\.]+)/i,
    // Presto
    /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\/([\w\.]+)/i,
    // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna
    /ekioh(flow)\/([\w\.]+)/i,
    // Flow
    /(khtml|tasman|links)[\/ ]\(?([\w\.]+)/i,
    // KHTML/Tasman/Links
    /(icab)[\/ ]([23]\.[\d\.]+)/i,
    // iCab
    /\b(libweb)/i], [NAME, VERSION], [/rv\:([\w\.]{1,9})\b.+(gecko)/i // Gecko
    ], [VERSION, NAME]],
    os: [[
    // Windows
    /microsoft (windows) (vista|xp)/i // Windows (iTunes)
    ], [NAME, VERSION], [/(windows (?:phone(?: os)?|mobile))[\/ ]?([\d\.\w ]*)/i // Windows Phone
    ], [NAME, [VERSION, strMapper, windowsVersionMap]], [/windows nt 6\.2; (arm)/i,
    // Windows RT
    /windows[\/ ]?([ntce\d\. ]+\w)(?!.+xbox)/i, /(?:win(?=3|9|n)|win 9x )([nt\d\.]+)/i], [[VERSION, strMapper, windowsVersionMap], [NAME, 'Windows']], [
    // iOS/macOS
    /ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i,
    // iOS
    /(?:ios;fbsv\/|iphone.+ios[\/ ])([\d\.]+)/i, /cfnetwork\/.+darwin/i], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [/(mac os x) ?([\w\. ]*)/i, /(macintosh|mac_powerpc\b)(?!.+haiku)/i // Mac OS
    ], [[NAME, MAC_OS], [VERSION, /_/g, '.']], [
    // Mobile OSes
    /droid ([\w\.]+)\b.+(android[- ]x86|harmonyos)/i // Android-x86/HarmonyOS
    ], [VERSION, NAME], [
    // Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS
    /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\/ ]?([\w\.]*)/i, /(blackberry)\w*\/([\w\.]*)/i,
    // Blackberry
    /(tizen|kaios)[\/ ]([\w\.]+)/i,
    // Tizen/KaiOS
    /\((series40);/i // Series 40
    ], [NAME, VERSION], [/\(bb(10);/i // BlackBerry 10
    ], [VERSION, [NAME, BLACKBERRY]], [/(?:symbian ?os|symbos|s60(?=;)|series60)[-\/ ]?([\w\.]*)/i // Symbian
    ], [VERSION, [NAME, 'Symbian']], [/mozilla\/[\d\.]+ \((?:mobile|tablet|tv|mobile; [\w ]+); rv:.+ gecko\/([\w\.]+)/i // Firefox OS
    ], [VERSION, [NAME, FIREFOX + ' OS']], [/web0s;.+rt(tv)/i, /\b(?:hp)?wos(?:browser)?\/([\w\.]+)/i // WebOS
    ], [VERSION, [NAME, 'webOS']], [/watch(?: ?os[,\/]|\d,\d\/)([\d\.]+)/i // watchOS
    ], [VERSION, [NAME, 'watchOS']], [
    // Google Chromecast
    /crkey\/([\d\.]+)/i // Google Chromecast
    ], [VERSION, [NAME, CHROME + 'cast']], [/(cros) [\w]+(?:\)| ([\w\.]+)\b)/i // Chromium OS
    ], [[NAME, CHROMIUM_OS], VERSION], [
    // Smart TVs
    /panasonic;(viera)/i,
    // Panasonic Viera
    /(netrange)mmh/i,
    // Netrange
    /(nettv)\/(\d+\.[\w\.]+)/i,
    // NetTV

    // Console
    /(nintendo|playstation) ([wids345portablevuch]+)/i,
    // Nintendo/Playstation
    /(xbox); +xbox ([^\);]+)/i,
    // Microsoft Xbox (360, One, X, S, Series X, Series S)

    // Other
    /\b(joli|palm)\b ?(?:os)?\/?([\w\.]*)/i,
    // Joli/Palm
    /(mint)[\/\(\) ]?(\w*)/i,
    // Mint
    /(mageia|vectorlinux)[; ]/i,
    // Mageia/VectorLinux
    /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\/ ]?(?!chrom|package)([-\w\.]*)/i,
    // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire
    /(hurd|linux) ?([\w\.]*)/i,
    // Hurd/Linux
    /(gnu) ?([\w\.]*)/i,
    // GNU
    /\b([-frentopcghs]{0,5}bsd|dragonfly)[\/ ]?(?!amd|[ix346]{1,2}86)([\w\.]*)/i,
    // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly
    /(haiku) (\w+)/i // Haiku
    ], [NAME, VERSION], [/(sunos) ?([\w\.\d]*)/i // Solaris
    ], [[NAME, 'Solaris'], VERSION], [/((?:open)?solaris)[-\/ ]?([\w\.]*)/i,
    // Solaris
    /(aix) ((\d)(?=\.|\)| )[\w\.])*/i,
    // AIX
    /\b(beos|os\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,
    // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX/SerenityOS
    /(unix) ?([\w\.]*)/i // UNIX
    ], [NAME, VERSION]]
  };

  /////////////////
  // Constructor
  ////////////////

  var _UAParser = function UAParser(ua, extensions) {
    if (_typeof(ua) === OBJ_TYPE) {
      extensions = ua;
      ua = undefined;
    }
    if (!(this instanceof _UAParser)) {
      return new _UAParser(ua, extensions).getResult();
    }
    var _navigator = _typeof(window) !== UNDEF_TYPE && window.navigator ? window.navigator : undefined;
    var _ua = ua || (_navigator && _navigator.userAgent ? _navigator.userAgent : EMPTY);
    var _uach = _navigator && _navigator.userAgentData ? _navigator.userAgentData : undefined;
    var _rgxmap = extensions ? extend(regexes, extensions) : regexes;
    var _isSelfNav = _navigator && _navigator.userAgent == _ua;
    this.getBrowser = function () {
      var _browser = {};
      _browser[NAME] = undefined;
      _browser[VERSION] = undefined;
      rgxMapper.call(_browser, _ua, _rgxmap.browser);
      _browser[MAJOR] = majorize(_browser[VERSION]);
      // Brave-specific detection
      if (_isSelfNav && _navigator && _navigator.brave && _typeof(_navigator.brave.isBrave) == FUNC_TYPE) {
        _browser[NAME] = 'Brave';
      }
      return _browser;
    };
    this.getCPU = function () {
      var _cpu = {};
      _cpu[ARCHITECTURE] = undefined;
      rgxMapper.call(_cpu, _ua, _rgxmap.cpu);
      return _cpu;
    };
    this.getDevice = function () {
      var _device = {};
      _device[VENDOR] = undefined;
      _device[MODEL] = undefined;
      _device[TYPE] = undefined;
      rgxMapper.call(_device, _ua, _rgxmap.device);
      if (_isSelfNav && !_device[TYPE] && _uach && _uach.mobile) {
        _device[TYPE] = MOBILE;
      }
      // iPadOS-specific detection: identified as Mac, but has some iOS-only properties
      if (_isSelfNav && _device[MODEL] == 'Macintosh' && _navigator && _typeof(_navigator.standalone) !== UNDEF_TYPE && _navigator.maxTouchPoints && _navigator.maxTouchPoints > 2) {
        _device[MODEL] = 'iPad';
        _device[TYPE] = TABLET;
      }
      return _device;
    };
    this.getEngine = function () {
      var _engine = {};
      _engine[NAME] = undefined;
      _engine[VERSION] = undefined;
      rgxMapper.call(_engine, _ua, _rgxmap.engine);
      return _engine;
    };
    this.getOS = function () {
      var _os = {};
      _os[NAME] = undefined;
      _os[VERSION] = undefined;
      rgxMapper.call(_os, _ua, _rgxmap.os);
      if (_isSelfNav && !_os[NAME] && _uach && _uach.platform && _uach.platform != 'Unknown') {
        _os[NAME] = _uach.platform.replace(/chrome os/i, CHROMIUM_OS).replace(/macos/i, MAC_OS); // backward compatibility
      }
      return _os;
    };
    this.getResult = function () {
      return {
        ua: this.getUA(),
        browser: this.getBrowser(),
        engine: this.getEngine(),
        os: this.getOS(),
        device: this.getDevice(),
        cpu: this.getCPU()
      };
    };
    this.getUA = function () {
      return _ua;
    };
    this.setUA = function (ua) {
      _ua = _typeof(ua) === STR_TYPE && ua.length > UA_MAX_LENGTH ? trim(ua, UA_MAX_LENGTH) : ua;
      return this;
    };
    this.setUA(_ua);
    return this;
  };
  _UAParser.VERSION = LIBVERSION;
  _UAParser.BROWSER = enumerize([NAME, VERSION, MAJOR]);
  _UAParser.CPU = enumerize([ARCHITECTURE]);
  _UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);
  _UAParser.ENGINE = _UAParser.OS = enumerize([NAME, VERSION]);

  ///////////
  // Export
  //////////

  // check js environment
  if ((typeof exports === "undefined" ? "undefined" : _typeof(exports)) !== UNDEF_TYPE) {
    // nodejs env
    if ((typeof module === "undefined" ? "undefined" : _typeof(module)) !== UNDEF_TYPE && module.exports) {
      exports = module.exports = _UAParser;
    }
    exports.UAParser = _UAParser;
  } else {
    // requirejs env (optional)
    if ((typeof define === "undefined" ? "undefined" : _typeof(define)) === FUNC_TYPE && define.amd) {
      define(function () {
        return _UAParser;
      });
    } else if (_typeof(window) !== UNDEF_TYPE) {
      // browser env
      window.UAParser = _UAParser;
    }
  }

  // jQuery/Zepto specific (optional)
  // Note:
  //   In AMD env the global scope should be kept clean, but jQuery is an exception.
  //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,
  //   and we should catch that.
  var $ = _typeof(window) !== UNDEF_TYPE && (window.jQuery || window.Zepto);
  if ($ && !$.ua) {
    var parser = new _UAParser();
    $.ua = parser.getResult();
    $.ua.get = function () {
      return parser.getUA();
    };
    $.ua.set = function (ua) {
      parser.setUA(ua);
      var result = parser.getResult();
      for (var prop in result) {
        $.ua[prop] = result[prop];
      }
    };
  }
})((typeof window === "undefined" ? "undefined" : _typeof(window)) === 'object' ? window : void 0);

},{}],209:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ZodVoid = exports.ZodUnknown = exports.ZodUnion = exports.ZodUndefined = exports.ZodType = exports.ZodTuple = exports.ZodTransformer = exports.ZodSymbol = exports.ZodString = exports.ZodSet = exports.ZodSchema = exports.ZodRecord = exports.ZodReadonly = exports.ZodPromise = exports.ZodPipeline = exports.ZodParsedType = exports.ZodOptional = exports.ZodObject = exports.ZodNumber = exports.ZodNullable = exports.ZodNull = exports.ZodNever = exports.ZodNativeEnum = exports.ZodNaN = exports.ZodMap = exports.ZodLiteral = exports.ZodLazy = exports.ZodIssueCode = exports.ZodIntersection = exports.ZodFunction = exports.ZodFirstPartyTypeKind = exports.ZodError = exports.ZodEnum = exports.ZodEffects = exports.ZodDiscriminatedUnion = exports.ZodDefault = exports.ZodDate = exports.ZodCatch = exports.ZodBranded = exports.ZodBoolean = exports.ZodBigInt = exports.ZodArray = exports.ZodAny = exports.Schema = exports.ParseStatus = exports.OK = exports.NEVER = exports.INVALID = exports.EMPTY_PATH = exports.DIRTY = exports.BRAND = void 0;
exports.addIssueToContext = addIssueToContext;
exports.coerce = exports["boolean"] = exports.bigint = exports.array = exports.any = void 0;
exports.custom = custom;
exports.date = void 0;
exports.datetimeRegex = datetimeRegex;
exports["function"] = exports["enum"] = exports.effect = exports.discriminatedUnion = exports.defaultErrorMap = exports["default"] = void 0;
exports.getErrorMap = getErrorMap;
exports.set = exports.record = exports.quotelessJson = exports.promise = exports.preprocess = exports.pipeline = exports.ostring = exports.optional = exports.onumber = exports.oboolean = exports.objectUtil = exports.object = exports.number = exports.nullable = exports["null"] = exports.never = exports.nativeEnum = exports.nan = exports.map = exports.makeIssue = exports.literal = exports.lazy = exports.late = exports.isValid = exports.isDirty = exports.isAsync = exports.isAborted = exports.intersection = exports["instanceof"] = exports.getParsedType = void 0;
exports.setErrorMap = setErrorMap;
exports.string = exports.strictObject = void 0;
exports.z = exports["void"] = exports.util = exports.unknown = exports.union = exports.undefined = exports.tuple = exports.transformer = exports.symbol = void 0;
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return _wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return _construct(t, arguments, _getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf(Wrapper, t); }, _wrapNativeSuper(t); }
function _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
var util;
(function (util) {
  util.assertEqual = function (val) {
    return val;
  };
  function assertIs(_arg) {}
  util.assertIs = assertIs;
  function assertNever(_x) {
    throw new Error();
  }
  util.assertNever = assertNever;
  util.arrayToEnum = function (items) {
    var obj = {};
    var _iterator = _createForOfIteratorHelper(items),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var item = _step.value;
        obj[item] = item;
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return obj;
  };
  util.getValidEnumValues = function (obj) {
    var validKeys = util.objectKeys(obj).filter(function (k) {
      return typeof obj[obj[k]] !== "number";
    });
    var filtered = {};
    var _iterator2 = _createForOfIteratorHelper(validKeys),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var k = _step2.value;
        filtered[k] = obj[k];
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    return util.objectValues(filtered);
  };
  util.objectValues = function (obj) {
    return util.objectKeys(obj).map(function (e) {
      return obj[e];
    });
  };
  util.objectKeys = typeof Object.keys === "function" // eslint-disable-line ban/ban
  ? function (obj) {
    return Object.keys(obj);
  } // eslint-disable-line ban/ban
  : function (object) {
    var keys = [];
    for (var key in object) {
      if (Object.prototype.hasOwnProperty.call(object, key)) {
        keys.push(key);
      }
    }
    return keys;
  };
  util.find = function (arr, checker) {
    var _iterator3 = _createForOfIteratorHelper(arr),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var item = _step3.value;
        if (checker(item)) return item;
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    return undefined;
  };
  util.isInteger = typeof Number.isInteger === "function" ? function (val) {
    return Number.isInteger(val);
  } // eslint-disable-line ban/ban
  : function (val) {
    return typeof val === "number" && isFinite(val) && Math.floor(val) === val;
  };
  function joinValues(array) {
    var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : " | ";
    return array.map(function (val) {
      return typeof val === "string" ? "'".concat(val, "'") : val;
    }).join(separator);
  }
  util.joinValues = joinValues;
  util.jsonStringifyReplacer = function (_, value) {
    if (typeof value === "bigint") {
      return value.toString();
    }
    return value;
  };
})(util || (exports.util = util = {}));
var objectUtil;
(function (objectUtil) {
  objectUtil.mergeShapes = function (first, second) {
    return _objectSpread(_objectSpread({}, first), second);
  };
})(objectUtil || (exports.objectUtil = objectUtil = {}));
var ZodParsedType = exports.ZodParsedType = util.arrayToEnum(["string", "nan", "number", "integer", "float", "boolean", "date", "bigint", "symbol", "function", "undefined", "null", "array", "object", "unknown", "promise", "void", "never", "map", "set"]);
var getParsedType = exports.getParsedType = function getParsedType(data) {
  var t = _typeof(data);
  switch (t) {
    case "undefined":
      return ZodParsedType.undefined;
    case "string":
      return ZodParsedType.string;
    case "number":
      return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;
    case "boolean":
      return ZodParsedType["boolean"];
    case "function":
      return ZodParsedType["function"];
    case "bigint":
      return ZodParsedType.bigint;
    case "symbol":
      return ZodParsedType.symbol;
    case "object":
      if (Array.isArray(data)) {
        return ZodParsedType.array;
      }
      if (data === null) {
        return ZodParsedType["null"];
      }
      if (data.then && typeof data.then === "function" && data["catch"] && typeof data["catch"] === "function") {
        return ZodParsedType.promise;
      }
      if (typeof Map !== "undefined" && data instanceof Map) {
        return ZodParsedType.map;
      }
      if (typeof Set !== "undefined" && data instanceof Set) {
        return ZodParsedType.set;
      }
      if (typeof Date !== "undefined" && data instanceof Date) {
        return ZodParsedType.date;
      }
      return ZodParsedType.object;
    default:
      return ZodParsedType.unknown;
  }
};
var ZodIssueCode = exports.ZodIssueCode = util.arrayToEnum(["invalid_type", "invalid_literal", "custom", "invalid_union", "invalid_union_discriminator", "invalid_enum_value", "unrecognized_keys", "invalid_arguments", "invalid_return_type", "invalid_date", "invalid_string", "too_small", "too_big", "invalid_intersection_types", "not_multiple_of", "not_finite"]);
var quotelessJson = exports.quotelessJson = function quotelessJson(obj) {
  var json = JSON.stringify(obj, null, 2);
  return json.replace(/"([^"]+)":/g, "$1:");
};
var ZodError = exports.ZodError = /*#__PURE__*/function (_Error) {
  function ZodError(issues) {
    var _this;
    _classCallCheck(this, ZodError);
    _this = _callSuper(this, ZodError);
    _this.issues = [];
    _this.addIssue = function (sub) {
      _this.issues = [].concat(_toConsumableArray(_this.issues), [sub]);
    };
    _this.addIssues = function () {
      var subs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      _this.issues = [].concat(_toConsumableArray(_this.issues), _toConsumableArray(subs));
    };
    var actualProto = (this instanceof ZodError ? this.constructor : void 0).prototype;
    if (Object.setPrototypeOf) {
      // eslint-disable-next-line ban/ban
      Object.setPrototypeOf(_this, actualProto);
    } else {
      _this.__proto__ = actualProto;
    }
    _this.name = "ZodError";
    _this.issues = issues;
    return _this;
  }
  _inherits(ZodError, _Error);
  return _createClass(ZodError, [{
    key: "errors",
    get: function get() {
      return this.issues;
    }
  }, {
    key: "format",
    value: function format(_mapper) {
      var mapper = _mapper || function (issue) {
        return issue.message;
      };
      var fieldErrors = {
        _errors: []
      };
      var _processError = function processError(error) {
        var _iterator4 = _createForOfIteratorHelper(error.issues),
          _step4;
        try {
          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
            var issue = _step4.value;
            if (issue.code === "invalid_union") {
              issue.unionErrors.map(_processError);
            } else if (issue.code === "invalid_return_type") {
              _processError(issue.returnTypeError);
            } else if (issue.code === "invalid_arguments") {
              _processError(issue.argumentsError);
            } else if (issue.path.length === 0) {
              fieldErrors._errors.push(mapper(issue));
            } else {
              var curr = fieldErrors;
              var i = 0;
              while (i < issue.path.length) {
                var el = issue.path[i];
                var terminal = i === issue.path.length - 1;
                if (!terminal) {
                  curr[el] = curr[el] || {
                    _errors: []
                  };
                  // if (typeof el === "string") {
                  //   curr[el] = curr[el] || { _errors: [] };
                  // } else if (typeof el === "number") {
                  //   const errorArray: any = [];
                  //   errorArray._errors = [];
                  //   curr[el] = curr[el] || errorArray;
                  // }
                } else {
                  curr[el] = curr[el] || {
                    _errors: []
                  };
                  curr[el]._errors.push(mapper(issue));
                }
                curr = curr[el];
                i++;
              }
            }
          }
        } catch (err) {
          _iterator4.e(err);
        } finally {
          _iterator4.f();
        }
      };
      _processError(this);
      return fieldErrors;
    }
  }, {
    key: "toString",
    value: function toString() {
      return this.message;
    }
  }, {
    key: "message",
    get: function get() {
      return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);
    }
  }, {
    key: "isEmpty",
    get: function get() {
      return this.issues.length === 0;
    }
  }, {
    key: "flatten",
    value: function flatten() {
      var mapper = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (issue) {
        return issue.message;
      };
      var fieldErrors = {};
      var formErrors = [];
      var _iterator5 = _createForOfIteratorHelper(this.issues),
        _step5;
      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
          var sub = _step5.value;
          if (sub.path.length > 0) {
            fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];
            fieldErrors[sub.path[0]].push(mapper(sub));
          } else {
            formErrors.push(mapper(sub));
          }
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
      return {
        formErrors: formErrors,
        fieldErrors: fieldErrors
      };
    }
  }, {
    key: "formErrors",
    get: function get() {
      return this.flatten();
    }
  }], [{
    key: "assert",
    value: function assert(value) {
      if (!(value instanceof ZodError)) {
        throw new Error("Not a ZodError: ".concat(value));
      }
    }
  }]);
}(/*#__PURE__*/_wrapNativeSuper(Error));
ZodError.create = function (issues) {
  var error = new ZodError(issues);
  return error;
};
var errorMap = exports.defaultErrorMap = function errorMap(issue, _ctx) {
  var message;
  switch (issue.code) {
    case ZodIssueCode.invalid_type:
      if (issue.received === ZodParsedType.undefined) {
        message = "Required";
      } else {
        message = "Expected ".concat(issue.expected, ", received ").concat(issue.received);
      }
      break;
    case ZodIssueCode.invalid_literal:
      message = "Invalid literal value, expected ".concat(JSON.stringify(issue.expected, util.jsonStringifyReplacer));
      break;
    case ZodIssueCode.unrecognized_keys:
      message = "Unrecognized key(s) in object: ".concat(util.joinValues(issue.keys, ", "));
      break;
    case ZodIssueCode.invalid_union:
      message = "Invalid input";
      break;
    case ZodIssueCode.invalid_union_discriminator:
      message = "Invalid discriminator value. Expected ".concat(util.joinValues(issue.options));
      break;
    case ZodIssueCode.invalid_enum_value:
      message = "Invalid enum value. Expected ".concat(util.joinValues(issue.options), ", received '").concat(issue.received, "'");
      break;
    case ZodIssueCode.invalid_arguments:
      message = "Invalid function arguments";
      break;
    case ZodIssueCode.invalid_return_type:
      message = "Invalid function return type";
      break;
    case ZodIssueCode.invalid_date:
      message = "Invalid date";
      break;
    case ZodIssueCode.invalid_string:
      if (_typeof(issue.validation) === "object") {
        if ("includes" in issue.validation) {
          message = "Invalid input: must include \"".concat(issue.validation.includes, "\"");
          if (typeof issue.validation.position === "number") {
            message = "".concat(message, " at one or more positions greater than or equal to ").concat(issue.validation.position);
          }
        } else if ("startsWith" in issue.validation) {
          message = "Invalid input: must start with \"".concat(issue.validation.startsWith, "\"");
        } else if ("endsWith" in issue.validation) {
          message = "Invalid input: must end with \"".concat(issue.validation.endsWith, "\"");
        } else {
          util.assertNever(issue.validation);
        }
      } else if (issue.validation !== "regex") {
        message = "Invalid ".concat(issue.validation);
      } else {
        message = "Invalid";
      }
      break;
    case ZodIssueCode.too_small:
      if (issue.type === "array") message = "Array must contain ".concat(issue.exact ? "exactly" : issue.inclusive ? "at least" : "more than", " ").concat(issue.minimum, " element(s)");else if (issue.type === "string") message = "String must contain ".concat(issue.exact ? "exactly" : issue.inclusive ? "at least" : "over", " ").concat(issue.minimum, " character(s)");else if (issue.type === "number") message = "Number must be ".concat(issue.exact ? "exactly equal to " : issue.inclusive ? "greater than or equal to " : "greater than ").concat(issue.minimum);else if (issue.type === "date") message = "Date must be ".concat(issue.exact ? "exactly equal to " : issue.inclusive ? "greater than or equal to " : "greater than ").concat(new Date(Number(issue.minimum)));else message = "Invalid input";
      break;
    case ZodIssueCode.too_big:
      if (issue.type === "array") message = "Array must contain ".concat(issue.exact ? "exactly" : issue.inclusive ? "at most" : "less than", " ").concat(issue.maximum, " element(s)");else if (issue.type === "string") message = "String must contain ".concat(issue.exact ? "exactly" : issue.inclusive ? "at most" : "under", " ").concat(issue.maximum, " character(s)");else if (issue.type === "number") message = "Number must be ".concat(issue.exact ? "exactly" : issue.inclusive ? "less than or equal to" : "less than", " ").concat(issue.maximum);else if (issue.type === "bigint") message = "BigInt must be ".concat(issue.exact ? "exactly" : issue.inclusive ? "less than or equal to" : "less than", " ").concat(issue.maximum);else if (issue.type === "date") message = "Date must be ".concat(issue.exact ? "exactly" : issue.inclusive ? "smaller than or equal to" : "smaller than", " ").concat(new Date(Number(issue.maximum)));else message = "Invalid input";
      break;
    case ZodIssueCode.custom:
      message = "Invalid input";
      break;
    case ZodIssueCode.invalid_intersection_types:
      message = "Intersection results could not be merged";
      break;
    case ZodIssueCode.not_multiple_of:
      message = "Number must be a multiple of ".concat(issue.multipleOf);
      break;
    case ZodIssueCode.not_finite:
      message = "Number must be finite";
      break;
    default:
      message = _ctx.defaultError;
      util.assertNever(issue);
  }
  return {
    message: message
  };
};
var overrideErrorMap = errorMap;
function setErrorMap(map) {
  overrideErrorMap = map;
}
function getErrorMap() {
  return overrideErrorMap;
}
var makeIssue = exports.makeIssue = function makeIssue(params) {
  var data = params.data,
    path = params.path,
    errorMaps = params.errorMaps,
    issueData = params.issueData;
  var fullPath = [].concat(_toConsumableArray(path), _toConsumableArray(issueData.path || []));
  var fullIssue = _objectSpread(_objectSpread({}, issueData), {}, {
    path: fullPath
  });
  if (issueData.message !== undefined) {
    return _objectSpread(_objectSpread({}, issueData), {}, {
      path: fullPath,
      message: issueData.message
    });
  }
  var errorMessage = "";
  var maps = errorMaps.filter(function (m) {
    return !!m;
  }).slice().reverse();
  var _iterator6 = _createForOfIteratorHelper(maps),
    _step6;
  try {
    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
      var map = _step6.value;
      errorMessage = map(fullIssue, {
        data: data,
        defaultError: errorMessage
      }).message;
    }
  } catch (err) {
    _iterator6.e(err);
  } finally {
    _iterator6.f();
  }
  return _objectSpread(_objectSpread({}, issueData), {}, {
    path: fullPath,
    message: errorMessage
  });
};
var EMPTY_PATH = exports.EMPTY_PATH = [];
function addIssueToContext(ctx, issueData) {
  var overrideMap = getErrorMap();
  var issue = makeIssue({
    issueData: issueData,
    data: ctx.data,
    path: ctx.path,
    errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, overrideMap, overrideMap === errorMap ? undefined : errorMap // then global default map
    ].filter(function (x) {
      return !!x;
    })
  });
  ctx.common.issues.push(issue);
}
var ParseStatus = exports.ParseStatus = /*#__PURE__*/function () {
  function ParseStatus() {
    _classCallCheck(this, ParseStatus);
    this.value = "valid";
  }
  return _createClass(ParseStatus, [{
    key: "dirty",
    value: function dirty() {
      if (this.value === "valid") this.value = "dirty";
    }
  }, {
    key: "abort",
    value: function abort() {
      if (this.value !== "aborted") this.value = "aborted";
    }
  }], [{
    key: "mergeArray",
    value: function mergeArray(status, results) {
      var arrayValue = [];
      var _iterator7 = _createForOfIteratorHelper(results),
        _step7;
      try {
        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
          var s = _step7.value;
          if (s.status === "aborted") return INVALID;
          if (s.status === "dirty") status.dirty();
          arrayValue.push(s.value);
        }
      } catch (err) {
        _iterator7.e(err);
      } finally {
        _iterator7.f();
      }
      return {
        status: status.value,
        value: arrayValue
      };
    }
  }, {
    key: "mergeObjectAsync",
    value: function () {
      var _mergeObjectAsync = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(status, pairs) {
        var syncPairs, _iterator8, _step8, pair, key, value;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              syncPairs = [];
              _iterator8 = _createForOfIteratorHelper(pairs);
              _context.prev = 2;
              _iterator8.s();
            case 4:
              if ((_step8 = _iterator8.n()).done) {
                _context.next = 15;
                break;
              }
              pair = _step8.value;
              _context.next = 8;
              return pair.key;
            case 8:
              key = _context.sent;
              _context.next = 11;
              return pair.value;
            case 11:
              value = _context.sent;
              syncPairs.push({
                key: key,
                value: value
              });
            case 13:
              _context.next = 4;
              break;
            case 15:
              _context.next = 20;
              break;
            case 17:
              _context.prev = 17;
              _context.t0 = _context["catch"](2);
              _iterator8.e(_context.t0);
            case 20:
              _context.prev = 20;
              _iterator8.f();
              return _context.finish(20);
            case 23:
              return _context.abrupt("return", ParseStatus.mergeObjectSync(status, syncPairs));
            case 24:
            case "end":
              return _context.stop();
          }
        }, _callee, null, [[2, 17, 20, 23]]);
      }));
      function mergeObjectAsync(_x2, _x3) {
        return _mergeObjectAsync.apply(this, arguments);
      }
      return mergeObjectAsync;
    }()
  }, {
    key: "mergeObjectSync",
    value: function mergeObjectSync(status, pairs) {
      var finalObject = {};
      var _iterator9 = _createForOfIteratorHelper(pairs),
        _step9;
      try {
        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
          var pair = _step9.value;
          var key = pair.key,
            value = pair.value;
          if (key.status === "aborted") return INVALID;
          if (value.status === "aborted") return INVALID;
          if (key.status === "dirty") status.dirty();
          if (value.status === "dirty") status.dirty();
          if (key.value !== "__proto__" && (typeof value.value !== "undefined" || pair.alwaysSet)) {
            finalObject[key.value] = value.value;
          }
        }
      } catch (err) {
        _iterator9.e(err);
      } finally {
        _iterator9.f();
      }
      return {
        status: status.value,
        value: finalObject
      };
    }
  }]);
}();
var INVALID = exports.INVALID = Object.freeze({
  status: "aborted"
});
var DIRTY = exports.DIRTY = function DIRTY(value) {
  return {
    status: "dirty",
    value: value
  };
};
var OK = exports.OK = function OK(value) {
  return {
    status: "valid",
    value: value
  };
};
var isAborted = exports.isAborted = function isAborted(x) {
  return x.status === "aborted";
};
var isDirty = exports.isDirty = function isDirty(x) {
  return x.status === "dirty";
};
var isValid = exports.isValid = function isValid(x) {
  return x.status === "valid";
};
var isAsync = exports.isAsync = function isAsync(x) {
  return typeof Promise !== "undefined" && x instanceof Promise;
};

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __classPrivateFieldGet(receiver, state, kind, f) {
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}
function __classPrivateFieldSet(receiver, state, value, kind, f) {
  if (kind === "m") throw new TypeError("Private method is not writable");
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
}
typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
  var e = new Error(message);
  return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};
var errorUtil;
(function (errorUtil) {
  errorUtil.errToObj = function (message) {
    return typeof message === "string" ? {
      message: message
    } : message || {};
  };
  errorUtil.toString = function (message) {
    return typeof message === "string" ? message : message === null || message === void 0 ? void 0 : message.message;
  };
})(errorUtil || (errorUtil = {}));
var _ZodEnum_cache, _ZodNativeEnum_cache;
var ParseInputLazyPath = /*#__PURE__*/function () {
  function ParseInputLazyPath(parent, value, path, key) {
    _classCallCheck(this, ParseInputLazyPath);
    this._cachedPath = [];
    this.parent = parent;
    this.data = value;
    this._path = path;
    this._key = key;
  }
  return _createClass(ParseInputLazyPath, [{
    key: "path",
    get: function get() {
      if (!this._cachedPath.length) {
        if (this._key instanceof Array) {
          var _this$_cachedPath;
          (_this$_cachedPath = this._cachedPath).push.apply(_this$_cachedPath, _toConsumableArray(this._path).concat(_toConsumableArray(this._key)));
        } else {
          var _this$_cachedPath2;
          (_this$_cachedPath2 = this._cachedPath).push.apply(_this$_cachedPath2, _toConsumableArray(this._path).concat([this._key]));
        }
      }
      return this._cachedPath;
    }
  }]);
}();
var handleResult = function handleResult(ctx, result) {
  if (isValid(result)) {
    return {
      success: true,
      data: result.value
    };
  } else {
    if (!ctx.common.issues.length) {
      throw new Error("Validation failed but no issues detected.");
    }
    return {
      success: false,
      get error() {
        if (this._error) return this._error;
        var error = new ZodError(ctx.common.issues);
        this._error = error;
        return this._error;
      }
    };
  }
};
function processCreateParams(params) {
  if (!params) return {};
  var errorMap = params.errorMap,
    invalid_type_error = params.invalid_type_error,
    required_error = params.required_error,
    description = params.description;
  if (errorMap && (invalid_type_error || required_error)) {
    throw new Error("Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.");
  }
  if (errorMap) return {
    errorMap: errorMap,
    description: description
  };
  var customMap = function customMap(iss, ctx) {
    var _a, _b;
    var message = params.message;
    if (iss.code === "invalid_enum_value") {
      return {
        message: message !== null && message !== void 0 ? message : ctx.defaultError
      };
    }
    if (typeof ctx.data === "undefined") {
      return {
        message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError
      };
    }
    if (iss.code !== "invalid_type") return {
      message: ctx.defaultError
    };
    return {
      message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError
    };
  };
  return {
    errorMap: customMap,
    description: description
  };
}
var ZodType = exports.ZodType = exports.ZodSchema = exports.Schema = /*#__PURE__*/function () {
  function ZodType(def) {
    _classCallCheck(this, ZodType);
    /** Alias of safeParseAsync */
    this.spa = this.safeParseAsync;
    this._def = def;
    this.parse = this.parse.bind(this);
    this.safeParse = this.safeParse.bind(this);
    this.parseAsync = this.parseAsync.bind(this);
    this.safeParseAsync = this.safeParseAsync.bind(this);
    this.spa = this.spa.bind(this);
    this.refine = this.refine.bind(this);
    this.refinement = this.refinement.bind(this);
    this.superRefine = this.superRefine.bind(this);
    this.optional = this.optional.bind(this);
    this.nullable = this.nullable.bind(this);
    this.nullish = this.nullish.bind(this);
    this.array = this.array.bind(this);
    this.promise = this.promise.bind(this);
    this.or = this.or.bind(this);
    this.and = this.and.bind(this);
    this.transform = this.transform.bind(this);
    this.brand = this.brand.bind(this);
    this["default"] = this["default"].bind(this);
    this["catch"] = this["catch"].bind(this);
    this.describe = this.describe.bind(this);
    this.pipe = this.pipe.bind(this);
    this.readonly = this.readonly.bind(this);
    this.isNullable = this.isNullable.bind(this);
    this.isOptional = this.isOptional.bind(this);
  }
  return _createClass(ZodType, [{
    key: "description",
    get: function get() {
      return this._def.description;
    }
  }, {
    key: "_getType",
    value: function _getType(input) {
      return getParsedType(input.data);
    }
  }, {
    key: "_getOrReturnCtx",
    value: function _getOrReturnCtx(input, ctx) {
      return ctx || {
        common: input.parent.common,
        data: input.data,
        parsedType: getParsedType(input.data),
        schemaErrorMap: this._def.errorMap,
        path: input.path,
        parent: input.parent
      };
    }
  }, {
    key: "_processInputParams",
    value: function _processInputParams(input) {
      return {
        status: new ParseStatus(),
        ctx: {
          common: input.parent.common,
          data: input.data,
          parsedType: getParsedType(input.data),
          schemaErrorMap: this._def.errorMap,
          path: input.path,
          parent: input.parent
        }
      };
    }
  }, {
    key: "_parseSync",
    value: function _parseSync(input) {
      var result = this._parse(input);
      if (isAsync(result)) {
        throw new Error("Synchronous parse encountered promise.");
      }
      return result;
    }
  }, {
    key: "_parseAsync",
    value: function _parseAsync(input) {
      var result = this._parse(input);
      return Promise.resolve(result);
    }
  }, {
    key: "parse",
    value: function parse(data, params) {
      var result = this.safeParse(data, params);
      if (result.success) return result.data;
      throw result.error;
    }
  }, {
    key: "safeParse",
    value: function safeParse(data, params) {
      var _a;
      var ctx = {
        common: {
          issues: [],
          async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,
          contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap
        },
        path: (params === null || params === void 0 ? void 0 : params.path) || [],
        schemaErrorMap: this._def.errorMap,
        parent: null,
        data: data,
        parsedType: getParsedType(data)
      };
      var result = this._parseSync({
        data: data,
        path: ctx.path,
        parent: ctx
      });
      return handleResult(ctx, result);
    }
  }, {
    key: "parseAsync",
    value: function () {
      var _parseAsync2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(data, params) {
        var result;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return this.safeParseAsync(data, params);
            case 2:
              result = _context2.sent;
              if (!result.success) {
                _context2.next = 5;
                break;
              }
              return _context2.abrupt("return", result.data);
            case 5:
              throw result.error;
            case 6:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function parseAsync(_x4, _x5) {
        return _parseAsync2.apply(this, arguments);
      }
      return parseAsync;
    }()
  }, {
    key: "safeParseAsync",
    value: function () {
      var _safeParseAsync = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(data, params) {
        var ctx, maybeAsyncResult, result;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              ctx = {
                common: {
                  issues: [],
                  contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,
                  async: true
                },
                path: (params === null || params === void 0 ? void 0 : params.path) || [],
                schemaErrorMap: this._def.errorMap,
                parent: null,
                data: data,
                parsedType: getParsedType(data)
              };
              maybeAsyncResult = this._parse({
                data: data,
                path: ctx.path,
                parent: ctx
              });
              _context3.next = 4;
              return isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult);
            case 4:
              result = _context3.sent;
              return _context3.abrupt("return", handleResult(ctx, result));
            case 6:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
      function safeParseAsync(_x6, _x7) {
        return _safeParseAsync.apply(this, arguments);
      }
      return safeParseAsync;
    }()
  }, {
    key: "refine",
    value: function refine(check, message) {
      var getIssueProperties = function getIssueProperties(val) {
        if (typeof message === "string" || typeof message === "undefined") {
          return {
            message: message
          };
        } else if (typeof message === "function") {
          return message(val);
        } else {
          return message;
        }
      };
      return this._refinement(function (val, ctx) {
        var result = check(val);
        var setError = function setError() {
          return ctx.addIssue(_objectSpread({
            code: ZodIssueCode.custom
          }, getIssueProperties(val)));
        };
        if (typeof Promise !== "undefined" && result instanceof Promise) {
          return result.then(function (data) {
            if (!data) {
              setError();
              return false;
            } else {
              return true;
            }
          });
        }
        if (!result) {
          setError();
          return false;
        } else {
          return true;
        }
      });
    }
  }, {
    key: "refinement",
    value: function refinement(check, refinementData) {
      return this._refinement(function (val, ctx) {
        if (!check(val)) {
          ctx.addIssue(typeof refinementData === "function" ? refinementData(val, ctx) : refinementData);
          return false;
        } else {
          return true;
        }
      });
    }
  }, {
    key: "_refinement",
    value: function _refinement(refinement) {
      return new ZodEffects({
        schema: this,
        typeName: ZodFirstPartyTypeKind.ZodEffects,
        effect: {
          type: "refinement",
          refinement: refinement
        }
      });
    }
  }, {
    key: "superRefine",
    value: function superRefine(refinement) {
      return this._refinement(refinement);
    }
  }, {
    key: "optional",
    value: function optional() {
      return ZodOptional.create(this, this._def);
    }
  }, {
    key: "nullable",
    value: function nullable() {
      return ZodNullable.create(this, this._def);
    }
  }, {
    key: "nullish",
    value: function nullish() {
      return this.nullable().optional();
    }
  }, {
    key: "array",
    value: function array() {
      return ZodArray.create(this, this._def);
    }
  }, {
    key: "promise",
    value: function promise() {
      return ZodPromise.create(this, this._def);
    }
  }, {
    key: "or",
    value: function or(option) {
      return ZodUnion.create([this, option], this._def);
    }
  }, {
    key: "and",
    value: function and(incoming) {
      return ZodIntersection.create(this, incoming, this._def);
    }
  }, {
    key: "transform",
    value: function transform(_transform) {
      return new ZodEffects(_objectSpread(_objectSpread({}, processCreateParams(this._def)), {}, {
        schema: this,
        typeName: ZodFirstPartyTypeKind.ZodEffects,
        effect: {
          type: "transform",
          transform: _transform
        }
      }));
    }
  }, {
    key: "default",
    value: function _default(def) {
      var defaultValueFunc = typeof def === "function" ? def : function () {
        return def;
      };
      return new ZodDefault(_objectSpread(_objectSpread({}, processCreateParams(this._def)), {}, {
        innerType: this,
        defaultValue: defaultValueFunc,
        typeName: ZodFirstPartyTypeKind.ZodDefault
      }));
    }
  }, {
    key: "brand",
    value: function brand() {
      return new ZodBranded(_objectSpread({
        typeName: ZodFirstPartyTypeKind.ZodBranded,
        type: this
      }, processCreateParams(this._def)));
    }
  }, {
    key: "catch",
    value: function _catch(def) {
      var catchValueFunc = typeof def === "function" ? def : function () {
        return def;
      };
      return new ZodCatch(_objectSpread(_objectSpread({}, processCreateParams(this._def)), {}, {
        innerType: this,
        catchValue: catchValueFunc,
        typeName: ZodFirstPartyTypeKind.ZodCatch
      }));
    }
  }, {
    key: "describe",
    value: function describe(description) {
      var This = this.constructor;
      return new This(_objectSpread(_objectSpread({}, this._def), {}, {
        description: description
      }));
    }
  }, {
    key: "pipe",
    value: function pipe(target) {
      return ZodPipeline.create(this, target);
    }
  }, {
    key: "readonly",
    value: function readonly() {
      return ZodReadonly.create(this);
    }
  }, {
    key: "isOptional",
    value: function isOptional() {
      return this.safeParse(undefined).success;
    }
  }, {
    key: "isNullable",
    value: function isNullable() {
      return this.safeParse(null).success;
    }
  }]);
}();
var cuidRegex = /^c[^\s-]{8,}$/i;
var cuid2Regex = /^[0-9a-z]+$/;
var ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/;
// const uuidRegex =
//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;
var uuidRegex = /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i;
var nanoidRegex = /^[a-z0-9_-]{21}$/i;
var durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/;
// from https://stackoverflow.com/a/46181/1550155
// old version: too slow, didn't support unicode
// const emailRegex = /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i;
//old email regex
// const emailRegex = /^(([^<>()[\].,;:\s@"]+(\.[^<>()[\].,;:\s@"]+)*)|(".+"))@((?!-)([^<>()[\].,;:\s@"]+\.)+[^<>()[\].,;:\s@"]{1,})[^-<>()[\].,;:\s@"]$/i;
// eslint-disable-next-line
// const emailRegex =
//   /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\])|(\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\.[A-Za-z]{2,})+))$/;
// const emailRegex =
//   /^[a-zA-Z0-9\.\!\#\$\%\&\'\*\+\/\=\?\^\_\`\{\|\}\~\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
// const emailRegex =
//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])$/i;
var emailRegex = /^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i;
// const emailRegex =
//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\.[a-z0-9\-]+)*$/i;
// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression
var _emojiRegex = "^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$";
var emojiRegex;
// faster, simpler, safer
var ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;
var ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;
// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript
var base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;
// simple
// const dateRegexSource = `\\d{4}-\\d{2}-\\d{2}`;
// no leap year validation
// const dateRegexSource = `\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\d|2\\d))`;
// with leap year validation
var dateRegexSource = "((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))";
var dateRegex = new RegExp("^".concat(dateRegexSource, "$"));
function timeRegexSource(args) {
  // let regex = `\\d{2}:\\d{2}:\\d{2}`;
  var regex = "([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";
  if (args.precision) {
    regex = "".concat(regex, "\\.\\d{").concat(args.precision, "}");
  } else if (args.precision == null) {
    regex = "".concat(regex, "(\\.\\d+)?");
  }
  return regex;
}
function timeRegex(args) {
  return new RegExp("^".concat(timeRegexSource(args), "$"));
}
// Adapted from https://stackoverflow.com/a/3143231
function datetimeRegex(args) {
  var regex = "".concat(dateRegexSource, "T").concat(timeRegexSource(args));
  var opts = [];
  opts.push(args.local ? "Z?" : "Z");
  if (args.offset) opts.push("([+-]\\d{2}:?\\d{2})");
  regex = "".concat(regex, "(").concat(opts.join("|"), ")");
  return new RegExp("^".concat(regex, "$"));
}
function isValidIP(ip, version) {
  if ((version === "v4" || !version) && ipv4Regex.test(ip)) {
    return true;
  }
  if ((version === "v6" || !version) && ipv6Regex.test(ip)) {
    return true;
  }
  return false;
}
var ZodString = exports.ZodString = /*#__PURE__*/function (_ZodType) {
  function ZodString() {
    _classCallCheck(this, ZodString);
    return _callSuper(this, ZodString, arguments);
  }
  _inherits(ZodString, _ZodType);
  return _createClass(ZodString, [{
    key: "_parse",
    value: function _parse(input) {
      if (this._def.coerce) {
        input.data = String(input.data);
      }
      var parsedType = this._getType(input);
      if (parsedType !== ZodParsedType.string) {
        var _ctx2 = this._getOrReturnCtx(input);
        addIssueToContext(_ctx2, {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType.string,
          received: _ctx2.parsedType
        });
        return INVALID;
      }
      var status = new ParseStatus();
      var ctx = undefined;
      var _iterator10 = _createForOfIteratorHelper(this._def.checks),
        _step10;
      try {
        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
          var check = _step10.value;
          if (check.kind === "min") {
            if (input.data.length < check.value) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.too_small,
                minimum: check.value,
                type: "string",
                inclusive: true,
                exact: false,
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "max") {
            if (input.data.length > check.value) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.too_big,
                maximum: check.value,
                type: "string",
                inclusive: true,
                exact: false,
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "length") {
            var tooBig = input.data.length > check.value;
            var tooSmall = input.data.length < check.value;
            if (tooBig || tooSmall) {
              ctx = this._getOrReturnCtx(input, ctx);
              if (tooBig) {
                addIssueToContext(ctx, {
                  code: ZodIssueCode.too_big,
                  maximum: check.value,
                  type: "string",
                  inclusive: true,
                  exact: true,
                  message: check.message
                });
              } else if (tooSmall) {
                addIssueToContext(ctx, {
                  code: ZodIssueCode.too_small,
                  minimum: check.value,
                  type: "string",
                  inclusive: true,
                  exact: true,
                  message: check.message
                });
              }
              status.dirty();
            }
          } else if (check.kind === "email") {
            if (!emailRegex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "email",
                code: ZodIssueCode.invalid_string,
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "emoji") {
            if (!emojiRegex) {
              emojiRegex = new RegExp(_emojiRegex, "u");
            }
            if (!emojiRegex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "emoji",
                code: ZodIssueCode.invalid_string,
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "uuid") {
            if (!uuidRegex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "uuid",
                code: ZodIssueCode.invalid_string,
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "nanoid") {
            if (!nanoidRegex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "nanoid",
                code: ZodIssueCode.invalid_string,
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "cuid") {
            if (!cuidRegex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "cuid",
                code: ZodIssueCode.invalid_string,
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "cuid2") {
            if (!cuid2Regex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "cuid2",
                code: ZodIssueCode.invalid_string,
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "ulid") {
            if (!ulidRegex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "ulid",
                code: ZodIssueCode.invalid_string,
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "url") {
            try {
              new URL(input.data);
            } catch (_a) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "url",
                code: ZodIssueCode.invalid_string,
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "regex") {
            check.regex.lastIndex = 0;
            var testResult = check.regex.test(input.data);
            if (!testResult) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "regex",
                code: ZodIssueCode.invalid_string,
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "trim") {
            input.data = input.data.trim();
          } else if (check.kind === "includes") {
            if (!input.data.includes(check.value, check.position)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.invalid_string,
                validation: {
                  includes: check.value,
                  position: check.position
                },
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "toLowerCase") {
            input.data = input.data.toLowerCase();
          } else if (check.kind === "toUpperCase") {
            input.data = input.data.toUpperCase();
          } else if (check.kind === "startsWith") {
            if (!input.data.startsWith(check.value)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.invalid_string,
                validation: {
                  startsWith: check.value
                },
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "endsWith") {
            if (!input.data.endsWith(check.value)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.invalid_string,
                validation: {
                  endsWith: check.value
                },
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "datetime") {
            var regex = datetimeRegex(check);
            if (!regex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.invalid_string,
                validation: "datetime",
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "date") {
            var _regex3 = dateRegex;
            if (!_regex3.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.invalid_string,
                validation: "date",
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "time") {
            var _regex4 = timeRegex(check);
            if (!_regex4.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.invalid_string,
                validation: "time",
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "duration") {
            if (!durationRegex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "duration",
                code: ZodIssueCode.invalid_string,
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "ip") {
            if (!isValidIP(input.data, check.version)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "ip",
                code: ZodIssueCode.invalid_string,
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "base64") {
            if (!base64Regex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "base64",
                code: ZodIssueCode.invalid_string,
                message: check.message
              });
              status.dirty();
            }
          } else {
            util.assertNever(check);
          }
        }
      } catch (err) {
        _iterator10.e(err);
      } finally {
        _iterator10.f();
      }
      return {
        status: status.value,
        value: input.data
      };
    }
  }, {
    key: "_regex",
    value: function _regex(regex, validation, message) {
      return this.refinement(function (data) {
        return regex.test(data);
      }, _objectSpread({
        validation: validation,
        code: ZodIssueCode.invalid_string
      }, errorUtil.errToObj(message)));
    }
  }, {
    key: "_addCheck",
    value: function _addCheck(check) {
      return new ZodString(_objectSpread(_objectSpread({}, this._def), {}, {
        checks: [].concat(_toConsumableArray(this._def.checks), [check])
      }));
    }
  }, {
    key: "email",
    value: function email(message) {
      return this._addCheck(_objectSpread({
        kind: "email"
      }, errorUtil.errToObj(message)));
    }
  }, {
    key: "url",
    value: function url(message) {
      return this._addCheck(_objectSpread({
        kind: "url"
      }, errorUtil.errToObj(message)));
    }
  }, {
    key: "emoji",
    value: function emoji(message) {
      return this._addCheck(_objectSpread({
        kind: "emoji"
      }, errorUtil.errToObj(message)));
    }
  }, {
    key: "uuid",
    value: function uuid(message) {
      return this._addCheck(_objectSpread({
        kind: "uuid"
      }, errorUtil.errToObj(message)));
    }
  }, {
    key: "nanoid",
    value: function nanoid(message) {
      return this._addCheck(_objectSpread({
        kind: "nanoid"
      }, errorUtil.errToObj(message)));
    }
  }, {
    key: "cuid",
    value: function cuid(message) {
      return this._addCheck(_objectSpread({
        kind: "cuid"
      }, errorUtil.errToObj(message)));
    }
  }, {
    key: "cuid2",
    value: function cuid2(message) {
      return this._addCheck(_objectSpread({
        kind: "cuid2"
      }, errorUtil.errToObj(message)));
    }
  }, {
    key: "ulid",
    value: function ulid(message) {
      return this._addCheck(_objectSpread({
        kind: "ulid"
      }, errorUtil.errToObj(message)));
    }
  }, {
    key: "base64",
    value: function base64(message) {
      return this._addCheck(_objectSpread({
        kind: "base64"
      }, errorUtil.errToObj(message)));
    }
  }, {
    key: "ip",
    value: function ip(options) {
      return this._addCheck(_objectSpread({
        kind: "ip"
      }, errorUtil.errToObj(options)));
    }
  }, {
    key: "datetime",
    value: function datetime(options) {
      var _a, _b;
      if (typeof options === "string") {
        return this._addCheck({
          kind: "datetime",
          precision: null,
          offset: false,
          local: false,
          message: options
        });
      }
      return this._addCheck(_objectSpread({
        kind: "datetime",
        precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === "undefined" ? null : options === null || options === void 0 ? void 0 : options.precision,
        offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,
        local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false
      }, errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message)));
    }
  }, {
    key: "date",
    value: function date(message) {
      return this._addCheck({
        kind: "date",
        message: message
      });
    }
  }, {
    key: "time",
    value: function time(options) {
      if (typeof options === "string") {
        return this._addCheck({
          kind: "time",
          precision: null,
          message: options
        });
      }
      return this._addCheck(_objectSpread({
        kind: "time",
        precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === "undefined" ? null : options === null || options === void 0 ? void 0 : options.precision
      }, errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message)));
    }
  }, {
    key: "duration",
    value: function duration(message) {
      return this._addCheck(_objectSpread({
        kind: "duration"
      }, errorUtil.errToObj(message)));
    }
  }, {
    key: "regex",
    value: function regex(_regex2, message) {
      return this._addCheck(_objectSpread({
        kind: "regex",
        regex: _regex2
      }, errorUtil.errToObj(message)));
    }
  }, {
    key: "includes",
    value: function includes(value, options) {
      return this._addCheck(_objectSpread({
        kind: "includes",
        value: value,
        position: options === null || options === void 0 ? void 0 : options.position
      }, errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message)));
    }
  }, {
    key: "startsWith",
    value: function startsWith(value, message) {
      return this._addCheck(_objectSpread({
        kind: "startsWith",
        value: value
      }, errorUtil.errToObj(message)));
    }
  }, {
    key: "endsWith",
    value: function endsWith(value, message) {
      return this._addCheck(_objectSpread({
        kind: "endsWith",
        value: value
      }, errorUtil.errToObj(message)));
    }
  }, {
    key: "min",
    value: function min(minLength, message) {
      return this._addCheck(_objectSpread({
        kind: "min",
        value: minLength
      }, errorUtil.errToObj(message)));
    }
  }, {
    key: "max",
    value: function max(maxLength, message) {
      return this._addCheck(_objectSpread({
        kind: "max",
        value: maxLength
      }, errorUtil.errToObj(message)));
    }
  }, {
    key: "length",
    value: function length(len, message) {
      return this._addCheck(_objectSpread({
        kind: "length",
        value: len
      }, errorUtil.errToObj(message)));
    }
    /**
     * @deprecated Use z.string().min(1) instead.
     * @see {@link ZodString.min}
     */
  }, {
    key: "nonempty",
    value: function nonempty(message) {
      return this.min(1, errorUtil.errToObj(message));
    }
  }, {
    key: "trim",
    value: function trim() {
      return new ZodString(_objectSpread(_objectSpread({}, this._def), {}, {
        checks: [].concat(_toConsumableArray(this._def.checks), [{
          kind: "trim"
        }])
      }));
    }
  }, {
    key: "toLowerCase",
    value: function toLowerCase() {
      return new ZodString(_objectSpread(_objectSpread({}, this._def), {}, {
        checks: [].concat(_toConsumableArray(this._def.checks), [{
          kind: "toLowerCase"
        }])
      }));
    }
  }, {
    key: "toUpperCase",
    value: function toUpperCase() {
      return new ZodString(_objectSpread(_objectSpread({}, this._def), {}, {
        checks: [].concat(_toConsumableArray(this._def.checks), [{
          kind: "toUpperCase"
        }])
      }));
    }
  }, {
    key: "isDatetime",
    get: function get() {
      return !!this._def.checks.find(function (ch) {
        return ch.kind === "datetime";
      });
    }
  }, {
    key: "isDate",
    get: function get() {
      return !!this._def.checks.find(function (ch) {
        return ch.kind === "date";
      });
    }
  }, {
    key: "isTime",
    get: function get() {
      return !!this._def.checks.find(function (ch) {
        return ch.kind === "time";
      });
    }
  }, {
    key: "isDuration",
    get: function get() {
      return !!this._def.checks.find(function (ch) {
        return ch.kind === "duration";
      });
    }
  }, {
    key: "isEmail",
    get: function get() {
      return !!this._def.checks.find(function (ch) {
        return ch.kind === "email";
      });
    }
  }, {
    key: "isURL",
    get: function get() {
      return !!this._def.checks.find(function (ch) {
        return ch.kind === "url";
      });
    }
  }, {
    key: "isEmoji",
    get: function get() {
      return !!this._def.checks.find(function (ch) {
        return ch.kind === "emoji";
      });
    }
  }, {
    key: "isUUID",
    get: function get() {
      return !!this._def.checks.find(function (ch) {
        return ch.kind === "uuid";
      });
    }
  }, {
    key: "isNANOID",
    get: function get() {
      return !!this._def.checks.find(function (ch) {
        return ch.kind === "nanoid";
      });
    }
  }, {
    key: "isCUID",
    get: function get() {
      return !!this._def.checks.find(function (ch) {
        return ch.kind === "cuid";
      });
    }
  }, {
    key: "isCUID2",
    get: function get() {
      return !!this._def.checks.find(function (ch) {
        return ch.kind === "cuid2";
      });
    }
  }, {
    key: "isULID",
    get: function get() {
      return !!this._def.checks.find(function (ch) {
        return ch.kind === "ulid";
      });
    }
  }, {
    key: "isIP",
    get: function get() {
      return !!this._def.checks.find(function (ch) {
        return ch.kind === "ip";
      });
    }
  }, {
    key: "isBase64",
    get: function get() {
      return !!this._def.checks.find(function (ch) {
        return ch.kind === "base64";
      });
    }
  }, {
    key: "minLength",
    get: function get() {
      var min = null;
      var _iterator11 = _createForOfIteratorHelper(this._def.checks),
        _step11;
      try {
        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
          var ch = _step11.value;
          if (ch.kind === "min") {
            if (min === null || ch.value > min) min = ch.value;
          }
        }
      } catch (err) {
        _iterator11.e(err);
      } finally {
        _iterator11.f();
      }
      return min;
    }
  }, {
    key: "maxLength",
    get: function get() {
      var max = null;
      var _iterator12 = _createForOfIteratorHelper(this._def.checks),
        _step12;
      try {
        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {
          var ch = _step12.value;
          if (ch.kind === "max") {
            if (max === null || ch.value < max) max = ch.value;
          }
        }
      } catch (err) {
        _iterator12.e(err);
      } finally {
        _iterator12.f();
      }
      return max;
    }
  }]);
}(ZodType);
ZodString.create = function (params) {
  var _a;
  return new ZodString(_objectSpread({
    checks: [],
    typeName: ZodFirstPartyTypeKind.ZodString,
    coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false
  }, processCreateParams(params)));
};
// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034
function floatSafeRemainder(val, step) {
  var valDecCount = (val.toString().split(".")[1] || "").length;
  var stepDecCount = (step.toString().split(".")[1] || "").length;
  var decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;
  var valInt = parseInt(val.toFixed(decCount).replace(".", ""));
  var stepInt = parseInt(step.toFixed(decCount).replace(".", ""));
  return valInt % stepInt / Math.pow(10, decCount);
}
var ZodNumber = exports.ZodNumber = /*#__PURE__*/function (_ZodType2) {
  function ZodNumber() {
    var _this2;
    _classCallCheck(this, ZodNumber);
    _this2 = _callSuper(this, ZodNumber, arguments);
    _this2.min = _this2.gte;
    _this2.max = _this2.lte;
    _this2.step = _this2.multipleOf;
    return _this2;
  }
  _inherits(ZodNumber, _ZodType2);
  return _createClass(ZodNumber, [{
    key: "_parse",
    value: function _parse(input) {
      if (this._def.coerce) {
        input.data = Number(input.data);
      }
      var parsedType = this._getType(input);
      if (parsedType !== ZodParsedType.number) {
        var _ctx3 = this._getOrReturnCtx(input);
        addIssueToContext(_ctx3, {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType.number,
          received: _ctx3.parsedType
        });
        return INVALID;
      }
      var ctx = undefined;
      var status = new ParseStatus();
      var _iterator13 = _createForOfIteratorHelper(this._def.checks),
        _step13;
      try {
        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {
          var check = _step13.value;
          if (check.kind === "int") {
            if (!util.isInteger(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.invalid_type,
                expected: "integer",
                received: "float",
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "min") {
            var tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;
            if (tooSmall) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.too_small,
                minimum: check.value,
                type: "number",
                inclusive: check.inclusive,
                exact: false,
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "max") {
            var tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;
            if (tooBig) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.too_big,
                maximum: check.value,
                type: "number",
                inclusive: check.inclusive,
                exact: false,
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "multipleOf") {
            if (floatSafeRemainder(input.data, check.value) !== 0) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.not_multiple_of,
                multipleOf: check.value,
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "finite") {
            if (!Number.isFinite(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.not_finite,
                message: check.message
              });
              status.dirty();
            }
          } else {
            util.assertNever(check);
          }
        }
      } catch (err) {
        _iterator13.e(err);
      } finally {
        _iterator13.f();
      }
      return {
        status: status.value,
        value: input.data
      };
    }
  }, {
    key: "gte",
    value: function gte(value, message) {
      return this.setLimit("min", value, true, errorUtil.toString(message));
    }
  }, {
    key: "gt",
    value: function gt(value, message) {
      return this.setLimit("min", value, false, errorUtil.toString(message));
    }
  }, {
    key: "lte",
    value: function lte(value, message) {
      return this.setLimit("max", value, true, errorUtil.toString(message));
    }
  }, {
    key: "lt",
    value: function lt(value, message) {
      return this.setLimit("max", value, false, errorUtil.toString(message));
    }
  }, {
    key: "setLimit",
    value: function setLimit(kind, value, inclusive, message) {
      return new ZodNumber(_objectSpread(_objectSpread({}, this._def), {}, {
        checks: [].concat(_toConsumableArray(this._def.checks), [{
          kind: kind,
          value: value,
          inclusive: inclusive,
          message: errorUtil.toString(message)
        }])
      }));
    }
  }, {
    key: "_addCheck",
    value: function _addCheck(check) {
      return new ZodNumber(_objectSpread(_objectSpread({}, this._def), {}, {
        checks: [].concat(_toConsumableArray(this._def.checks), [check])
      }));
    }
  }, {
    key: "int",
    value: function _int(message) {
      return this._addCheck({
        kind: "int",
        message: errorUtil.toString(message)
      });
    }
  }, {
    key: "positive",
    value: function positive(message) {
      return this._addCheck({
        kind: "min",
        value: 0,
        inclusive: false,
        message: errorUtil.toString(message)
      });
    }
  }, {
    key: "negative",
    value: function negative(message) {
      return this._addCheck({
        kind: "max",
        value: 0,
        inclusive: false,
        message: errorUtil.toString(message)
      });
    }
  }, {
    key: "nonpositive",
    value: function nonpositive(message) {
      return this._addCheck({
        kind: "max",
        value: 0,
        inclusive: true,
        message: errorUtil.toString(message)
      });
    }
  }, {
    key: "nonnegative",
    value: function nonnegative(message) {
      return this._addCheck({
        kind: "min",
        value: 0,
        inclusive: true,
        message: errorUtil.toString(message)
      });
    }
  }, {
    key: "multipleOf",
    value: function multipleOf(value, message) {
      return this._addCheck({
        kind: "multipleOf",
        value: value,
        message: errorUtil.toString(message)
      });
    }
  }, {
    key: "finite",
    value: function finite(message) {
      return this._addCheck({
        kind: "finite",
        message: errorUtil.toString(message)
      });
    }
  }, {
    key: "safe",
    value: function safe(message) {
      return this._addCheck({
        kind: "min",
        inclusive: true,
        value: Number.MIN_SAFE_INTEGER,
        message: errorUtil.toString(message)
      })._addCheck({
        kind: "max",
        inclusive: true,
        value: Number.MAX_SAFE_INTEGER,
        message: errorUtil.toString(message)
      });
    }
  }, {
    key: "minValue",
    get: function get() {
      var min = null;
      var _iterator14 = _createForOfIteratorHelper(this._def.checks),
        _step14;
      try {
        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {
          var ch = _step14.value;
          if (ch.kind === "min") {
            if (min === null || ch.value > min) min = ch.value;
          }
        }
      } catch (err) {
        _iterator14.e(err);
      } finally {
        _iterator14.f();
      }
      return min;
    }
  }, {
    key: "maxValue",
    get: function get() {
      var max = null;
      var _iterator15 = _createForOfIteratorHelper(this._def.checks),
        _step15;
      try {
        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {
          var ch = _step15.value;
          if (ch.kind === "max") {
            if (max === null || ch.value < max) max = ch.value;
          }
        }
      } catch (err) {
        _iterator15.e(err);
      } finally {
        _iterator15.f();
      }
      return max;
    }
  }, {
    key: "isInt",
    get: function get() {
      return !!this._def.checks.find(function (ch) {
        return ch.kind === "int" || ch.kind === "multipleOf" && util.isInteger(ch.value);
      });
    }
  }, {
    key: "isFinite",
    get: function get() {
      var max = null,
        min = null;
      var _iterator16 = _createForOfIteratorHelper(this._def.checks),
        _step16;
      try {
        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {
          var ch = _step16.value;
          if (ch.kind === "finite" || ch.kind === "int" || ch.kind === "multipleOf") {
            return true;
          } else if (ch.kind === "min") {
            if (min === null || ch.value > min) min = ch.value;
          } else if (ch.kind === "max") {
            if (max === null || ch.value < max) max = ch.value;
          }
        }
      } catch (err) {
        _iterator16.e(err);
      } finally {
        _iterator16.f();
      }
      return Number.isFinite(min) && Number.isFinite(max);
    }
  }]);
}(ZodType);
ZodNumber.create = function (params) {
  return new ZodNumber(_objectSpread({
    checks: [],
    typeName: ZodFirstPartyTypeKind.ZodNumber,
    coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false
  }, processCreateParams(params)));
};
var ZodBigInt = exports.ZodBigInt = /*#__PURE__*/function (_ZodType3) {
  function ZodBigInt() {
    var _this3;
    _classCallCheck(this, ZodBigInt);
    _this3 = _callSuper(this, ZodBigInt, arguments);
    _this3.min = _this3.gte;
    _this3.max = _this3.lte;
    return _this3;
  }
  _inherits(ZodBigInt, _ZodType3);
  return _createClass(ZodBigInt, [{
    key: "_parse",
    value: function _parse(input) {
      if (this._def.coerce) {
        input.data = BigInt(input.data);
      }
      var parsedType = this._getType(input);
      if (parsedType !== ZodParsedType.bigint) {
        var _ctx4 = this._getOrReturnCtx(input);
        addIssueToContext(_ctx4, {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType.bigint,
          received: _ctx4.parsedType
        });
        return INVALID;
      }
      var ctx = undefined;
      var status = new ParseStatus();
      var _iterator17 = _createForOfIteratorHelper(this._def.checks),
        _step17;
      try {
        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {
          var check = _step17.value;
          if (check.kind === "min") {
            var tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;
            if (tooSmall) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.too_small,
                type: "bigint",
                minimum: check.value,
                inclusive: check.inclusive,
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "max") {
            var tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;
            if (tooBig) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.too_big,
                type: "bigint",
                maximum: check.value,
                inclusive: check.inclusive,
                message: check.message
              });
              status.dirty();
            }
          } else if (check.kind === "multipleOf") {
            if (input.data % check.value !== BigInt(0)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.not_multiple_of,
                multipleOf: check.value,
                message: check.message
              });
              status.dirty();
            }
          } else {
            util.assertNever(check);
          }
        }
      } catch (err) {
        _iterator17.e(err);
      } finally {
        _iterator17.f();
      }
      return {
        status: status.value,
        value: input.data
      };
    }
  }, {
    key: "gte",
    value: function gte(value, message) {
      return this.setLimit("min", value, true, errorUtil.toString(message));
    }
  }, {
    key: "gt",
    value: function gt(value, message) {
      return this.setLimit("min", value, false, errorUtil.toString(message));
    }
  }, {
    key: "lte",
    value: function lte(value, message) {
      return this.setLimit("max", value, true, errorUtil.toString(message));
    }
  }, {
    key: "lt",
    value: function lt(value, message) {
      return this.setLimit("max", value, false, errorUtil.toString(message));
    }
  }, {
    key: "setLimit",
    value: function setLimit(kind, value, inclusive, message) {
      return new ZodBigInt(_objectSpread(_objectSpread({}, this._def), {}, {
        checks: [].concat(_toConsumableArray(this._def.checks), [{
          kind: kind,
          value: value,
          inclusive: inclusive,
          message: errorUtil.toString(message)
        }])
      }));
    }
  }, {
    key: "_addCheck",
    value: function _addCheck(check) {
      return new ZodBigInt(_objectSpread(_objectSpread({}, this._def), {}, {
        checks: [].concat(_toConsumableArray(this._def.checks), [check])
      }));
    }
  }, {
    key: "positive",
    value: function positive(message) {
      return this._addCheck({
        kind: "min",
        value: BigInt(0),
        inclusive: false,
        message: errorUtil.toString(message)
      });
    }
  }, {
    key: "negative",
    value: function negative(message) {
      return this._addCheck({
        kind: "max",
        value: BigInt(0),
        inclusive: false,
        message: errorUtil.toString(message)
      });
    }
  }, {
    key: "nonpositive",
    value: function nonpositive(message) {
      return this._addCheck({
        kind: "max",
        value: BigInt(0),
        inclusive: true,
        message: errorUtil.toString(message)
      });
    }
  }, {
    key: "nonnegative",
    value: function nonnegative(message) {
      return this._addCheck({
        kind: "min",
        value: BigInt(0),
        inclusive: true,
        message: errorUtil.toString(message)
      });
    }
  }, {
    key: "multipleOf",
    value: function multipleOf(value, message) {
      return this._addCheck({
        kind: "multipleOf",
        value: value,
        message: errorUtil.toString(message)
      });
    }
  }, {
    key: "minValue",
    get: function get() {
      var min = null;
      var _iterator18 = _createForOfIteratorHelper(this._def.checks),
        _step18;
      try {
        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {
          var ch = _step18.value;
          if (ch.kind === "min") {
            if (min === null || ch.value > min) min = ch.value;
          }
        }
      } catch (err) {
        _iterator18.e(err);
      } finally {
        _iterator18.f();
      }
      return min;
    }
  }, {
    key: "maxValue",
    get: function get() {
      var max = null;
      var _iterator19 = _createForOfIteratorHelper(this._def.checks),
        _step19;
      try {
        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {
          var ch = _step19.value;
          if (ch.kind === "max") {
            if (max === null || ch.value < max) max = ch.value;
          }
        }
      } catch (err) {
        _iterator19.e(err);
      } finally {
        _iterator19.f();
      }
      return max;
    }
  }]);
}(ZodType);
ZodBigInt.create = function (params) {
  var _a;
  return new ZodBigInt(_objectSpread({
    checks: [],
    typeName: ZodFirstPartyTypeKind.ZodBigInt,
    coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false
  }, processCreateParams(params)));
};
var ZodBoolean = exports.ZodBoolean = /*#__PURE__*/function (_ZodType4) {
  function ZodBoolean() {
    _classCallCheck(this, ZodBoolean);
    return _callSuper(this, ZodBoolean, arguments);
  }
  _inherits(ZodBoolean, _ZodType4);
  return _createClass(ZodBoolean, [{
    key: "_parse",
    value: function _parse(input) {
      if (this._def.coerce) {
        input.data = Boolean(input.data);
      }
      var parsedType = this._getType(input);
      if (parsedType !== ZodParsedType["boolean"]) {
        var ctx = this._getOrReturnCtx(input);
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType["boolean"],
          received: ctx.parsedType
        });
        return INVALID;
      }
      return OK(input.data);
    }
  }]);
}(ZodType);
ZodBoolean.create = function (params) {
  return new ZodBoolean(_objectSpread({
    typeName: ZodFirstPartyTypeKind.ZodBoolean,
    coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false
  }, processCreateParams(params)));
};
var ZodDate = exports.ZodDate = /*#__PURE__*/function (_ZodType5) {
  function ZodDate() {
    _classCallCheck(this, ZodDate);
    return _callSuper(this, ZodDate, arguments);
  }
  _inherits(ZodDate, _ZodType5);
  return _createClass(ZodDate, [{
    key: "_parse",
    value: function _parse(input) {
      if (this._def.coerce) {
        input.data = new Date(input.data);
      }
      var parsedType = this._getType(input);
      if (parsedType !== ZodParsedType.date) {
        var _ctx5 = this._getOrReturnCtx(input);
        addIssueToContext(_ctx5, {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType.date,
          received: _ctx5.parsedType
        });
        return INVALID;
      }
      if (isNaN(input.data.getTime())) {
        var _ctx6 = this._getOrReturnCtx(input);
        addIssueToContext(_ctx6, {
          code: ZodIssueCode.invalid_date
        });
        return INVALID;
      }
      var status = new ParseStatus();
      var ctx = undefined;
      var _iterator20 = _createForOfIteratorHelper(this._def.checks),
        _step20;
      try {
        for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {
          var check = _step20.value;
          if (check.kind === "min") {
            if (input.data.getTime() < check.value) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.too_small,
                message: check.message,
                inclusive: true,
                exact: false,
                minimum: check.value,
                type: "date"
              });
              status.dirty();
            }
          } else if (check.kind === "max") {
            if (input.data.getTime() > check.value) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.too_big,
                message: check.message,
                inclusive: true,
                exact: false,
                maximum: check.value,
                type: "date"
              });
              status.dirty();
            }
          } else {
            util.assertNever(check);
          }
        }
      } catch (err) {
        _iterator20.e(err);
      } finally {
        _iterator20.f();
      }
      return {
        status: status.value,
        value: new Date(input.data.getTime())
      };
    }
  }, {
    key: "_addCheck",
    value: function _addCheck(check) {
      return new ZodDate(_objectSpread(_objectSpread({}, this._def), {}, {
        checks: [].concat(_toConsumableArray(this._def.checks), [check])
      }));
    }
  }, {
    key: "min",
    value: function min(minDate, message) {
      return this._addCheck({
        kind: "min",
        value: minDate.getTime(),
        message: errorUtil.toString(message)
      });
    }
  }, {
    key: "max",
    value: function max(maxDate, message) {
      return this._addCheck({
        kind: "max",
        value: maxDate.getTime(),
        message: errorUtil.toString(message)
      });
    }
  }, {
    key: "minDate",
    get: function get() {
      var min = null;
      var _iterator21 = _createForOfIteratorHelper(this._def.checks),
        _step21;
      try {
        for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {
          var ch = _step21.value;
          if (ch.kind === "min") {
            if (min === null || ch.value > min) min = ch.value;
          }
        }
      } catch (err) {
        _iterator21.e(err);
      } finally {
        _iterator21.f();
      }
      return min != null ? new Date(min) : null;
    }
  }, {
    key: "maxDate",
    get: function get() {
      var max = null;
      var _iterator22 = _createForOfIteratorHelper(this._def.checks),
        _step22;
      try {
        for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {
          var ch = _step22.value;
          if (ch.kind === "max") {
            if (max === null || ch.value < max) max = ch.value;
          }
        }
      } catch (err) {
        _iterator22.e(err);
      } finally {
        _iterator22.f();
      }
      return max != null ? new Date(max) : null;
    }
  }]);
}(ZodType);
ZodDate.create = function (params) {
  return new ZodDate(_objectSpread({
    checks: [],
    coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,
    typeName: ZodFirstPartyTypeKind.ZodDate
  }, processCreateParams(params)));
};
var ZodSymbol = exports.ZodSymbol = /*#__PURE__*/function (_ZodType6) {
  function ZodSymbol() {
    _classCallCheck(this, ZodSymbol);
    return _callSuper(this, ZodSymbol, arguments);
  }
  _inherits(ZodSymbol, _ZodType6);
  return _createClass(ZodSymbol, [{
    key: "_parse",
    value: function _parse(input) {
      var parsedType = this._getType(input);
      if (parsedType !== ZodParsedType.symbol) {
        var ctx = this._getOrReturnCtx(input);
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType.symbol,
          received: ctx.parsedType
        });
        return INVALID;
      }
      return OK(input.data);
    }
  }]);
}(ZodType);
ZodSymbol.create = function (params) {
  return new ZodSymbol(_objectSpread({
    typeName: ZodFirstPartyTypeKind.ZodSymbol
  }, processCreateParams(params)));
};
var ZodUndefined = exports.ZodUndefined = /*#__PURE__*/function (_ZodType7) {
  function ZodUndefined() {
    _classCallCheck(this, ZodUndefined);
    return _callSuper(this, ZodUndefined, arguments);
  }
  _inherits(ZodUndefined, _ZodType7);
  return _createClass(ZodUndefined, [{
    key: "_parse",
    value: function _parse(input) {
      var parsedType = this._getType(input);
      if (parsedType !== ZodParsedType.undefined) {
        var ctx = this._getOrReturnCtx(input);
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType.undefined,
          received: ctx.parsedType
        });
        return INVALID;
      }
      return OK(input.data);
    }
  }]);
}(ZodType);
ZodUndefined.create = function (params) {
  return new ZodUndefined(_objectSpread({
    typeName: ZodFirstPartyTypeKind.ZodUndefined
  }, processCreateParams(params)));
};
var ZodNull = exports.ZodNull = /*#__PURE__*/function (_ZodType8) {
  function ZodNull() {
    _classCallCheck(this, ZodNull);
    return _callSuper(this, ZodNull, arguments);
  }
  _inherits(ZodNull, _ZodType8);
  return _createClass(ZodNull, [{
    key: "_parse",
    value: function _parse(input) {
      var parsedType = this._getType(input);
      if (parsedType !== ZodParsedType["null"]) {
        var ctx = this._getOrReturnCtx(input);
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType["null"],
          received: ctx.parsedType
        });
        return INVALID;
      }
      return OK(input.data);
    }
  }]);
}(ZodType);
ZodNull.create = function (params) {
  return new ZodNull(_objectSpread({
    typeName: ZodFirstPartyTypeKind.ZodNull
  }, processCreateParams(params)));
};
var ZodAny = exports.ZodAny = /*#__PURE__*/function (_ZodType9) {
  function ZodAny() {
    var _this4;
    _classCallCheck(this, ZodAny);
    _this4 = _callSuper(this, ZodAny, arguments);
    // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.
    _this4._any = true;
    return _this4;
  }
  _inherits(ZodAny, _ZodType9);
  return _createClass(ZodAny, [{
    key: "_parse",
    value: function _parse(input) {
      return OK(input.data);
    }
  }]);
}(ZodType);
ZodAny.create = function (params) {
  return new ZodAny(_objectSpread({
    typeName: ZodFirstPartyTypeKind.ZodAny
  }, processCreateParams(params)));
};
var ZodUnknown = exports.ZodUnknown = /*#__PURE__*/function (_ZodType10) {
  function ZodUnknown() {
    var _this5;
    _classCallCheck(this, ZodUnknown);
    _this5 = _callSuper(this, ZodUnknown, arguments);
    // required
    _this5._unknown = true;
    return _this5;
  }
  _inherits(ZodUnknown, _ZodType10);
  return _createClass(ZodUnknown, [{
    key: "_parse",
    value: function _parse(input) {
      return OK(input.data);
    }
  }]);
}(ZodType);
ZodUnknown.create = function (params) {
  return new ZodUnknown(_objectSpread({
    typeName: ZodFirstPartyTypeKind.ZodUnknown
  }, processCreateParams(params)));
};
var ZodNever = exports.ZodNever = /*#__PURE__*/function (_ZodType11) {
  function ZodNever() {
    _classCallCheck(this, ZodNever);
    return _callSuper(this, ZodNever, arguments);
  }
  _inherits(ZodNever, _ZodType11);
  return _createClass(ZodNever, [{
    key: "_parse",
    value: function _parse(input) {
      var ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.never,
        received: ctx.parsedType
      });
      return INVALID;
    }
  }]);
}(ZodType);
ZodNever.create = function (params) {
  return new ZodNever(_objectSpread({
    typeName: ZodFirstPartyTypeKind.ZodNever
  }, processCreateParams(params)));
};
var ZodVoid = exports.ZodVoid = /*#__PURE__*/function (_ZodType12) {
  function ZodVoid() {
    _classCallCheck(this, ZodVoid);
    return _callSuper(this, ZodVoid, arguments);
  }
  _inherits(ZodVoid, _ZodType12);
  return _createClass(ZodVoid, [{
    key: "_parse",
    value: function _parse(input) {
      var parsedType = this._getType(input);
      if (parsedType !== ZodParsedType.undefined) {
        var ctx = this._getOrReturnCtx(input);
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType["void"],
          received: ctx.parsedType
        });
        return INVALID;
      }
      return OK(input.data);
    }
  }]);
}(ZodType);
ZodVoid.create = function (params) {
  return new ZodVoid(_objectSpread({
    typeName: ZodFirstPartyTypeKind.ZodVoid
  }, processCreateParams(params)));
};
var ZodArray = exports.ZodArray = /*#__PURE__*/function (_ZodType13) {
  function ZodArray() {
    _classCallCheck(this, ZodArray);
    return _callSuper(this, ZodArray, arguments);
  }
  _inherits(ZodArray, _ZodType13);
  return _createClass(ZodArray, [{
    key: "_parse",
    value: function _parse(input) {
      var _this$_processInputPa = this._processInputParams(input),
        ctx = _this$_processInputPa.ctx,
        status = _this$_processInputPa.status;
      var def = this._def;
      if (ctx.parsedType !== ZodParsedType.array) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType.array,
          received: ctx.parsedType
        });
        return INVALID;
      }
      if (def.exactLength !== null) {
        var tooBig = ctx.data.length > def.exactLength.value;
        var tooSmall = ctx.data.length < def.exactLength.value;
        if (tooBig || tooSmall) {
          addIssueToContext(ctx, {
            code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,
            minimum: tooSmall ? def.exactLength.value : undefined,
            maximum: tooBig ? def.exactLength.value : undefined,
            type: "array",
            inclusive: true,
            exact: true,
            message: def.exactLength.message
          });
          status.dirty();
        }
      }
      if (def.minLength !== null) {
        if (ctx.data.length < def.minLength.value) {
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_small,
            minimum: def.minLength.value,
            type: "array",
            inclusive: true,
            exact: false,
            message: def.minLength.message
          });
          status.dirty();
        }
      }
      if (def.maxLength !== null) {
        if (ctx.data.length > def.maxLength.value) {
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_big,
            maximum: def.maxLength.value,
            type: "array",
            inclusive: true,
            exact: false,
            message: def.maxLength.message
          });
          status.dirty();
        }
      }
      if (ctx.common.async) {
        return Promise.all(_toConsumableArray(ctx.data).map(function (item, i) {
          return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));
        })).then(function (result) {
          return ParseStatus.mergeArray(status, result);
        });
      }
      var result = _toConsumableArray(ctx.data).map(function (item, i) {
        return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));
      });
      return ParseStatus.mergeArray(status, result);
    }
  }, {
    key: "element",
    get: function get() {
      return this._def.type;
    }
  }, {
    key: "min",
    value: function min(minLength, message) {
      return new ZodArray(_objectSpread(_objectSpread({}, this._def), {}, {
        minLength: {
          value: minLength,
          message: errorUtil.toString(message)
        }
      }));
    }
  }, {
    key: "max",
    value: function max(maxLength, message) {
      return new ZodArray(_objectSpread(_objectSpread({}, this._def), {}, {
        maxLength: {
          value: maxLength,
          message: errorUtil.toString(message)
        }
      }));
    }
  }, {
    key: "length",
    value: function length(len, message) {
      return new ZodArray(_objectSpread(_objectSpread({}, this._def), {}, {
        exactLength: {
          value: len,
          message: errorUtil.toString(message)
        }
      }));
    }
  }, {
    key: "nonempty",
    value: function nonempty(message) {
      return this.min(1, message);
    }
  }]);
}(ZodType);
ZodArray.create = function (schema, params) {
  return new ZodArray(_objectSpread({
    type: schema,
    minLength: null,
    maxLength: null,
    exactLength: null,
    typeName: ZodFirstPartyTypeKind.ZodArray
  }, processCreateParams(params)));
};
function deepPartialify(schema) {
  if (schema instanceof ZodObject) {
    var newShape = {};
    for (var key in schema.shape) {
      var fieldSchema = schema.shape[key];
      newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));
    }
    return new ZodObject(_objectSpread(_objectSpread({}, schema._def), {}, {
      shape: function shape() {
        return newShape;
      }
    }));
  } else if (schema instanceof ZodArray) {
    return new ZodArray(_objectSpread(_objectSpread({}, schema._def), {}, {
      type: deepPartialify(schema.element)
    }));
  } else if (schema instanceof ZodOptional) {
    return ZodOptional.create(deepPartialify(schema.unwrap()));
  } else if (schema instanceof ZodNullable) {
    return ZodNullable.create(deepPartialify(schema.unwrap()));
  } else if (schema instanceof ZodTuple) {
    return ZodTuple.create(schema.items.map(function (item) {
      return deepPartialify(item);
    }));
  } else {
    return schema;
  }
}
var ZodObject = exports.ZodObject = /*#__PURE__*/function (_ZodType14) {
  function ZodObject() {
    var _this6;
    _classCallCheck(this, ZodObject);
    _this6 = _callSuper(this, ZodObject, arguments);
    _this6._cached = null;
    /**
     * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.
     * If you want to pass through unknown properties, use `.passthrough()` instead.
     */
    _this6.nonstrict = _this6.passthrough;
    // extend<
    //   Augmentation extends ZodRawShape,
    //   NewOutput extends util.flatten<{
    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation
    //       ? Augmentation[k]["_output"]
    //       : k extends keyof Output
    //       ? Output[k]
    //       : never;
    //   }>,
    //   NewInput extends util.flatten<{
    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation
    //       ? Augmentation[k]["_input"]
    //       : k extends keyof Input
    //       ? Input[k]
    //       : never;
    //   }>
    // >(
    //   augmentation: Augmentation
    // ): ZodObject<
    //   extendShape<T, Augmentation>,
    //   UnknownKeys,
    //   Catchall,
    //   NewOutput,
    //   NewInput
    // > {
    //   return new ZodObject({
    //     ...this._def,
    //     shape: () => ({
    //       ...this._def.shape(),
    //       ...augmentation,
    //     }),
    //   }) as any;
    // }
    /**
     * @deprecated Use `.extend` instead
     *  */
    _this6.augment = _this6.extend;
    return _this6;
  }
  _inherits(ZodObject, _ZodType14);
  return _createClass(ZodObject, [{
    key: "_getCached",
    value: function _getCached() {
      if (this._cached !== null) return this._cached;
      var shape = this._def.shape();
      var keys = util.objectKeys(shape);
      return this._cached = {
        shape: shape,
        keys: keys
      };
    }
  }, {
    key: "_parse",
    value: function _parse(input) {
      var parsedType = this._getType(input);
      if (parsedType !== ZodParsedType.object) {
        var _ctx7 = this._getOrReturnCtx(input);
        addIssueToContext(_ctx7, {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType.object,
          received: _ctx7.parsedType
        });
        return INVALID;
      }
      var _this$_processInputPa2 = this._processInputParams(input),
        status = _this$_processInputPa2.status,
        ctx = _this$_processInputPa2.ctx;
      var _this$_getCached = this._getCached(),
        shape = _this$_getCached.shape,
        shapeKeys = _this$_getCached.keys;
      var extraKeys = [];
      if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === "strip")) {
        for (var key in ctx.data) {
          if (!shapeKeys.includes(key)) {
            extraKeys.push(key);
          }
        }
      }
      var pairs = [];
      var _iterator23 = _createForOfIteratorHelper(shapeKeys),
        _step23;
      try {
        for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {
          var _key4 = _step23.value;
          var keyValidator = shape[_key4];
          var _value2 = ctx.data[_key4];
          pairs.push({
            key: {
              status: "valid",
              value: _key4
            },
            value: keyValidator._parse(new ParseInputLazyPath(ctx, _value2, ctx.path, _key4)),
            alwaysSet: _key4 in ctx.data
          });
        }
      } catch (err) {
        _iterator23.e(err);
      } finally {
        _iterator23.f();
      }
      if (this._def.catchall instanceof ZodNever) {
        var unknownKeys = this._def.unknownKeys;
        if (unknownKeys === "passthrough") {
          var _iterator24 = _createForOfIteratorHelper(extraKeys),
            _step24;
          try {
            for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {
              var _key = _step24.value;
              pairs.push({
                key: {
                  status: "valid",
                  value: _key
                },
                value: {
                  status: "valid",
                  value: ctx.data[_key]
                }
              });
            }
          } catch (err) {
            _iterator24.e(err);
          } finally {
            _iterator24.f();
          }
        } else if (unknownKeys === "strict") {
          if (extraKeys.length > 0) {
            addIssueToContext(ctx, {
              code: ZodIssueCode.unrecognized_keys,
              keys: extraKeys
            });
            status.dirty();
          }
        } else if (unknownKeys === "strip") ;else {
          throw new Error("Internal ZodObject error: invalid unknownKeys value.");
        }
      } else {
        // run catchall validation
        var catchall = this._def.catchall;
        var _iterator25 = _createForOfIteratorHelper(extraKeys),
          _step25;
        try {
          for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {
            var _key2 = _step25.value;
            var value = ctx.data[_key2];
            pairs.push({
              key: {
                status: "valid",
                value: _key2
              },
              value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, _key2) //, ctx.child(key), value, getParsedType(value)
              ),
              alwaysSet: _key2 in ctx.data
            });
          }
        } catch (err) {
          _iterator25.e(err);
        } finally {
          _iterator25.f();
        }
      }
      if (ctx.common.async) {
        return Promise.resolve().then(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
          var syncPairs, _iterator26, _step26, pair, _key3, _value;
          return _regeneratorRuntime().wrap(function _callee4$(_context4) {
            while (1) switch (_context4.prev = _context4.next) {
              case 0:
                syncPairs = [];
                _iterator26 = _createForOfIteratorHelper(pairs);
                _context4.prev = 2;
                _iterator26.s();
              case 4:
                if ((_step26 = _iterator26.n()).done) {
                  _context4.next = 15;
                  break;
                }
                pair = _step26.value;
                _context4.next = 8;
                return pair.key;
              case 8:
                _key3 = _context4.sent;
                _context4.next = 11;
                return pair.value;
              case 11:
                _value = _context4.sent;
                syncPairs.push({
                  key: _key3,
                  value: _value,
                  alwaysSet: pair.alwaysSet
                });
              case 13:
                _context4.next = 4;
                break;
              case 15:
                _context4.next = 20;
                break;
              case 17:
                _context4.prev = 17;
                _context4.t0 = _context4["catch"](2);
                _iterator26.e(_context4.t0);
              case 20:
                _context4.prev = 20;
                _iterator26.f();
                return _context4.finish(20);
              case 23:
                return _context4.abrupt("return", syncPairs);
              case 24:
              case "end":
                return _context4.stop();
            }
          }, _callee4, null, [[2, 17, 20, 23]]);
        }))).then(function (syncPairs) {
          return ParseStatus.mergeObjectSync(status, syncPairs);
        });
      } else {
        return ParseStatus.mergeObjectSync(status, pairs);
      }
    }
  }, {
    key: "shape",
    get: function get() {
      return this._def.shape();
    }
  }, {
    key: "strict",
    value: function strict(message) {
      var _this7 = this;
      errorUtil.errToObj;
      return new ZodObject(_objectSpread(_objectSpread({}, this._def), {}, {
        unknownKeys: "strict"
      }, message !== undefined ? {
        errorMap: function errorMap(issue, ctx) {
          var _a, _b, _c, _d;
          var defaultError = (_c = (_b = (_a = _this7._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;
          if (issue.code === "unrecognized_keys") return {
            message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError
          };
          return {
            message: defaultError
          };
        }
      } : {}));
    }
  }, {
    key: "strip",
    value: function strip() {
      return new ZodObject(_objectSpread(_objectSpread({}, this._def), {}, {
        unknownKeys: "strip"
      }));
    }
  }, {
    key: "passthrough",
    value: function passthrough() {
      return new ZodObject(_objectSpread(_objectSpread({}, this._def), {}, {
        unknownKeys: "passthrough"
      }));
    }
    // const AugmentFactory =
    //   <Def extends ZodObjectDef>(def: Def) =>
    //   <Augmentation extends ZodRawShape>(
    //     augmentation: Augmentation
    //   ): ZodObject<
    //     extendShape<ReturnType<Def["shape"]>, Augmentation>,
    //     Def["unknownKeys"],
    //     Def["catchall"]
    //   > => {
    //     return new ZodObject({
    //       ...def,
    //       shape: () => ({
    //         ...def.shape(),
    //         ...augmentation,
    //       }),
    //     }) as any;
    //   };
  }, {
    key: "extend",
    value: function extend(augmentation) {
      var _this8 = this;
      return new ZodObject(_objectSpread(_objectSpread({}, this._def), {}, {
        shape: function shape() {
          return _objectSpread(_objectSpread({}, _this8._def.shape()), augmentation);
        }
      }));
    }
    /**
     * Prior to zod@1.0.12 there was a bug in the
     * inferred type of merged objects. Please
     * upgrade if you are experiencing issues.
     */
  }, {
    key: "merge",
    value: function merge(merging) {
      var _this9 = this;
      var merged = new ZodObject({
        unknownKeys: merging._def.unknownKeys,
        catchall: merging._def.catchall,
        shape: function shape() {
          return _objectSpread(_objectSpread({}, _this9._def.shape()), merging._def.shape());
        },
        typeName: ZodFirstPartyTypeKind.ZodObject
      });
      return merged;
    }
    // merge<
    //   Incoming extends AnyZodObject,
    //   Augmentation extends Incoming["shape"],
    //   NewOutput extends {
    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation
    //       ? Augmentation[k]["_output"]
    //       : k extends keyof Output
    //       ? Output[k]
    //       : never;
    //   },
    //   NewInput extends {
    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation
    //       ? Augmentation[k]["_input"]
    //       : k extends keyof Input
    //       ? Input[k]
    //       : never;
    //   }
    // >(
    //   merging: Incoming
    // ): ZodObject<
    //   extendShape<T, ReturnType<Incoming["_def"]["shape"]>>,
    //   Incoming["_def"]["unknownKeys"],
    //   Incoming["_def"]["catchall"],
    //   NewOutput,
    //   NewInput
    // > {
    //   const merged: any = new ZodObject({
    //     unknownKeys: merging._def.unknownKeys,
    //     catchall: merging._def.catchall,
    //     shape: () =>
    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),
    //     typeName: ZodFirstPartyTypeKind.ZodObject,
    //   }) as any;
    //   return merged;
    // }
  }, {
    key: "setKey",
    value: function setKey(key, schema) {
      return this.augment(_defineProperty({}, key, schema));
    }
    // merge<Incoming extends AnyZodObject>(
    //   merging: Incoming
    // ): //ZodObject<T & Incoming["_shape"], UnknownKeys, Catchall> = (merging) => {
    // ZodObject<
    //   extendShape<T, ReturnType<Incoming["_def"]["shape"]>>,
    //   Incoming["_def"]["unknownKeys"],
    //   Incoming["_def"]["catchall"]
    // > {
    //   // const mergedShape = objectUtil.mergeShapes(
    //   //   this._def.shape(),
    //   //   merging._def.shape()
    //   // );
    //   const merged: any = new ZodObject({
    //     unknownKeys: merging._def.unknownKeys,
    //     catchall: merging._def.catchall,
    //     shape: () =>
    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),
    //     typeName: ZodFirstPartyTypeKind.ZodObject,
    //   }) as any;
    //   return merged;
    // }
  }, {
    key: "catchall",
    value: function catchall(index) {
      return new ZodObject(_objectSpread(_objectSpread({}, this._def), {}, {
        catchall: index
      }));
    }
  }, {
    key: "pick",
    value: function pick(mask) {
      var _this10 = this;
      var _shape = {};
      util.objectKeys(mask).forEach(function (key) {
        if (mask[key] && _this10.shape[key]) {
          _shape[key] = _this10.shape[key];
        }
      });
      return new ZodObject(_objectSpread(_objectSpread({}, this._def), {}, {
        shape: function shape() {
          return _shape;
        }
      }));
    }
  }, {
    key: "omit",
    value: function omit(mask) {
      var _this11 = this;
      var _shape2 = {};
      util.objectKeys(this.shape).forEach(function (key) {
        if (!mask[key]) {
          _shape2[key] = _this11.shape[key];
        }
      });
      return new ZodObject(_objectSpread(_objectSpread({}, this._def), {}, {
        shape: function shape() {
          return _shape2;
        }
      }));
    }
    /**
     * @deprecated
     */
  }, {
    key: "deepPartial",
    value: function deepPartial() {
      return deepPartialify(this);
    }
  }, {
    key: "partial",
    value: function partial(mask) {
      var _this12 = this;
      var newShape = {};
      util.objectKeys(this.shape).forEach(function (key) {
        var fieldSchema = _this12.shape[key];
        if (mask && !mask[key]) {
          newShape[key] = fieldSchema;
        } else {
          newShape[key] = fieldSchema.optional();
        }
      });
      return new ZodObject(_objectSpread(_objectSpread({}, this._def), {}, {
        shape: function shape() {
          return newShape;
        }
      }));
    }
  }, {
    key: "required",
    value: function required(mask) {
      var _this13 = this;
      var newShape = {};
      util.objectKeys(this.shape).forEach(function (key) {
        if (mask && !mask[key]) {
          newShape[key] = _this13.shape[key];
        } else {
          var fieldSchema = _this13.shape[key];
          var newField = fieldSchema;
          while (newField instanceof ZodOptional) {
            newField = newField._def.innerType;
          }
          newShape[key] = newField;
        }
      });
      return new ZodObject(_objectSpread(_objectSpread({}, this._def), {}, {
        shape: function shape() {
          return newShape;
        }
      }));
    }
  }, {
    key: "keyof",
    value: function keyof() {
      return createZodEnum(util.objectKeys(this.shape));
    }
  }]);
}(ZodType);
ZodObject.create = function (_shape3, params) {
  return new ZodObject(_objectSpread({
    shape: function shape() {
      return _shape3;
    },
    unknownKeys: "strip",
    catchall: ZodNever.create(),
    typeName: ZodFirstPartyTypeKind.ZodObject
  }, processCreateParams(params)));
};
ZodObject.strictCreate = function (_shape4, params) {
  return new ZodObject(_objectSpread({
    shape: function shape() {
      return _shape4;
    },
    unknownKeys: "strict",
    catchall: ZodNever.create(),
    typeName: ZodFirstPartyTypeKind.ZodObject
  }, processCreateParams(params)));
};
ZodObject.lazycreate = function (shape, params) {
  return new ZodObject(_objectSpread({
    shape: shape,
    unknownKeys: "strip",
    catchall: ZodNever.create(),
    typeName: ZodFirstPartyTypeKind.ZodObject
  }, processCreateParams(params)));
};
var ZodUnion = exports.ZodUnion = /*#__PURE__*/function (_ZodType15) {
  function ZodUnion() {
    _classCallCheck(this, ZodUnion);
    return _callSuper(this, ZodUnion, arguments);
  }
  _inherits(ZodUnion, _ZodType15);
  return _createClass(ZodUnion, [{
    key: "_parse",
    value: function _parse(input) {
      var _this$_processInputPa3 = this._processInputParams(input),
        ctx = _this$_processInputPa3.ctx;
      var options = this._def.options;
      function handleResults(results) {
        // return first issue-free validation if it exists
        var _iterator27 = _createForOfIteratorHelper(results),
          _step27;
        try {
          for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {
            var result = _step27.value;
            if (result.result.status === "valid") {
              return result.result;
            }
          }
        } catch (err) {
          _iterator27.e(err);
        } finally {
          _iterator27.f();
        }
        var _iterator28 = _createForOfIteratorHelper(results),
          _step28;
        try {
          for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {
            var _result = _step28.value;
            if (_result.result.status === "dirty") {
              var _ctx$common$issues;
              // add issues from dirty option
              (_ctx$common$issues = ctx.common.issues).push.apply(_ctx$common$issues, _toConsumableArray(_result.ctx.common.issues));
              return _result.result;
            }
          }
          // return invalid
        } catch (err) {
          _iterator28.e(err);
        } finally {
          _iterator28.f();
        }
        var unionErrors = results.map(function (result) {
          return new ZodError(result.ctx.common.issues);
        });
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_union,
          unionErrors: unionErrors
        });
        return INVALID;
      }
      if (ctx.common.async) {
        return Promise.all(options.map(/*#__PURE__*/function () {
          var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(option) {
            var childCtx;
            return _regeneratorRuntime().wrap(function _callee5$(_context5) {
              while (1) switch (_context5.prev = _context5.next) {
                case 0:
                  childCtx = _objectSpread(_objectSpread({}, ctx), {}, {
                    common: _objectSpread(_objectSpread({}, ctx.common), {}, {
                      issues: []
                    }),
                    parent: null
                  });
                  _context5.next = 3;
                  return option._parseAsync({
                    data: ctx.data,
                    path: ctx.path,
                    parent: childCtx
                  });
                case 3:
                  _context5.t0 = _context5.sent;
                  _context5.t1 = childCtx;
                  return _context5.abrupt("return", {
                    result: _context5.t0,
                    ctx: _context5.t1
                  });
                case 6:
                case "end":
                  return _context5.stop();
              }
            }, _callee5);
          }));
          return function (_x8) {
            return _ref2.apply(this, arguments);
          };
        }())).then(handleResults);
      } else {
        var dirty = undefined;
        var issues = [];
        var _iterator29 = _createForOfIteratorHelper(options),
          _step29;
        try {
          for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {
            var option = _step29.value;
            var childCtx = _objectSpread(_objectSpread({}, ctx), {}, {
              common: _objectSpread(_objectSpread({}, ctx.common), {}, {
                issues: []
              }),
              parent: null
            });
            var result = option._parseSync({
              data: ctx.data,
              path: ctx.path,
              parent: childCtx
            });
            if (result.status === "valid") {
              return result;
            } else if (result.status === "dirty" && !dirty) {
              dirty = {
                result: result,
                ctx: childCtx
              };
            }
            if (childCtx.common.issues.length) {
              issues.push(childCtx.common.issues);
            }
          }
        } catch (err) {
          _iterator29.e(err);
        } finally {
          _iterator29.f();
        }
        if (dirty) {
          var _ctx$common$issues2;
          (_ctx$common$issues2 = ctx.common.issues).push.apply(_ctx$common$issues2, _toConsumableArray(dirty.ctx.common.issues));
          return dirty.result;
        }
        var unionErrors = issues.map(function (issues) {
          return new ZodError(issues);
        });
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_union,
          unionErrors: unionErrors
        });
        return INVALID;
      }
    }
  }, {
    key: "options",
    get: function get() {
      return this._def.options;
    }
  }]);
}(ZodType);
ZodUnion.create = function (types, params) {
  return new ZodUnion(_objectSpread({
    options: types,
    typeName: ZodFirstPartyTypeKind.ZodUnion
  }, processCreateParams(params)));
};
/////////////////////////////////////////////////////
/////////////////////////////////////////////////////
//////////                                 //////////
//////////      ZodDiscriminatedUnion      //////////
//////////                                 //////////
/////////////////////////////////////////////////////
/////////////////////////////////////////////////////
var _getDiscriminator = function getDiscriminator(type) {
  if (type instanceof ZodLazy) {
    return _getDiscriminator(type.schema);
  } else if (type instanceof ZodEffects) {
    return _getDiscriminator(type.innerType());
  } else if (type instanceof ZodLiteral) {
    return [type.value];
  } else if (type instanceof ZodEnum) {
    return type.options;
  } else if (type instanceof ZodNativeEnum) {
    // eslint-disable-next-line ban/ban
    return util.objectValues(type["enum"]);
  } else if (type instanceof ZodDefault) {
    return _getDiscriminator(type._def.innerType);
  } else if (type instanceof ZodUndefined) {
    return [undefined];
  } else if (type instanceof ZodNull) {
    return [null];
  } else if (type instanceof ZodOptional) {
    return [undefined].concat(_toConsumableArray(_getDiscriminator(type.unwrap())));
  } else if (type instanceof ZodNullable) {
    return [null].concat(_toConsumableArray(_getDiscriminator(type.unwrap())));
  } else if (type instanceof ZodBranded) {
    return _getDiscriminator(type.unwrap());
  } else if (type instanceof ZodReadonly) {
    return _getDiscriminator(type.unwrap());
  } else if (type instanceof ZodCatch) {
    return _getDiscriminator(type._def.innerType);
  } else {
    return [];
  }
};
var ZodDiscriminatedUnion = exports.ZodDiscriminatedUnion = /*#__PURE__*/function (_ZodType16) {
  function ZodDiscriminatedUnion() {
    _classCallCheck(this, ZodDiscriminatedUnion);
    return _callSuper(this, ZodDiscriminatedUnion, arguments);
  }
  _inherits(ZodDiscriminatedUnion, _ZodType16);
  return _createClass(ZodDiscriminatedUnion, [{
    key: "_parse",
    value: function _parse(input) {
      var _this$_processInputPa4 = this._processInputParams(input),
        ctx = _this$_processInputPa4.ctx;
      if (ctx.parsedType !== ZodParsedType.object) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType.object,
          received: ctx.parsedType
        });
        return INVALID;
      }
      var discriminator = this.discriminator;
      var discriminatorValue = ctx.data[discriminator];
      var option = this.optionsMap.get(discriminatorValue);
      if (!option) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_union_discriminator,
          options: Array.from(this.optionsMap.keys()),
          path: [discriminator]
        });
        return INVALID;
      }
      if (ctx.common.async) {
        return option._parseAsync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        });
      } else {
        return option._parseSync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        });
      }
    }
  }, {
    key: "discriminator",
    get: function get() {
      return this._def.discriminator;
    }
  }, {
    key: "options",
    get: function get() {
      return this._def.options;
    }
  }, {
    key: "optionsMap",
    get: function get() {
      return this._def.optionsMap;
    }
    /**
     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.
     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must
     * have a different value for each object in the union.
     * @param discriminator the name of the discriminator property
     * @param types an array of object schemas
     * @param params
     */
  }], [{
    key: "create",
    value: function create(discriminator, options, params) {
      // Get all the valid discriminator values
      var optionsMap = new Map();
      // try {
      var _iterator30 = _createForOfIteratorHelper(options),
        _step30;
      try {
        for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {
          var type = _step30.value;
          var discriminatorValues = _getDiscriminator(type.shape[discriminator]);
          if (!discriminatorValues.length) {
            throw new Error("A discriminator value for key `".concat(discriminator, "` could not be extracted from all schema options"));
          }
          var _iterator31 = _createForOfIteratorHelper(discriminatorValues),
            _step31;
          try {
            for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {
              var value = _step31.value;
              if (optionsMap.has(value)) {
                throw new Error("Discriminator property ".concat(String(discriminator), " has duplicate value ").concat(String(value)));
              }
              optionsMap.set(value, type);
            }
          } catch (err) {
            _iterator31.e(err);
          } finally {
            _iterator31.f();
          }
        }
      } catch (err) {
        _iterator30.e(err);
      } finally {
        _iterator30.f();
      }
      return new ZodDiscriminatedUnion(_objectSpread({
        typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,
        discriminator: discriminator,
        options: options,
        optionsMap: optionsMap
      }, processCreateParams(params)));
    }
  }]);
}(ZodType);
function mergeValues(a, b) {
  var aType = getParsedType(a);
  var bType = getParsedType(b);
  if (a === b) {
    return {
      valid: true,
      data: a
    };
  } else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {
    var bKeys = util.objectKeys(b);
    var sharedKeys = util.objectKeys(a).filter(function (key) {
      return bKeys.indexOf(key) !== -1;
    });
    var newObj = _objectSpread(_objectSpread({}, a), b);
    var _iterator32 = _createForOfIteratorHelper(sharedKeys),
      _step32;
    try {
      for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {
        var key = _step32.value;
        var sharedValue = mergeValues(a[key], b[key]);
        if (!sharedValue.valid) {
          return {
            valid: false
          };
        }
        newObj[key] = sharedValue.data;
      }
    } catch (err) {
      _iterator32.e(err);
    } finally {
      _iterator32.f();
    }
    return {
      valid: true,
      data: newObj
    };
  } else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {
    if (a.length !== b.length) {
      return {
        valid: false
      };
    }
    var newArray = [];
    for (var index = 0; index < a.length; index++) {
      var itemA = a[index];
      var itemB = b[index];
      var _sharedValue = mergeValues(itemA, itemB);
      if (!_sharedValue.valid) {
        return {
          valid: false
        };
      }
      newArray.push(_sharedValue.data);
    }
    return {
      valid: true,
      data: newArray
    };
  } else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a === +b) {
    return {
      valid: true,
      data: a
    };
  } else {
    return {
      valid: false
    };
  }
}
var ZodIntersection = exports.ZodIntersection = /*#__PURE__*/function (_ZodType17) {
  function ZodIntersection() {
    _classCallCheck(this, ZodIntersection);
    return _callSuper(this, ZodIntersection, arguments);
  }
  _inherits(ZodIntersection, _ZodType17);
  return _createClass(ZodIntersection, [{
    key: "_parse",
    value: function _parse(input) {
      var _this$_processInputPa5 = this._processInputParams(input),
        status = _this$_processInputPa5.status,
        ctx = _this$_processInputPa5.ctx;
      var handleParsed = function handleParsed(parsedLeft, parsedRight) {
        if (isAborted(parsedLeft) || isAborted(parsedRight)) {
          return INVALID;
        }
        var merged = mergeValues(parsedLeft.value, parsedRight.value);
        if (!merged.valid) {
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_intersection_types
          });
          return INVALID;
        }
        if (isDirty(parsedLeft) || isDirty(parsedRight)) {
          status.dirty();
        }
        return {
          status: status.value,
          value: merged.data
        };
      };
      if (ctx.common.async) {
        return Promise.all([this._def.left._parseAsync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        }), this._def.right._parseAsync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        })]).then(function (_ref3) {
          var _ref4 = _slicedToArray(_ref3, 2),
            left = _ref4[0],
            right = _ref4[1];
          return handleParsed(left, right);
        });
      } else {
        return handleParsed(this._def.left._parseSync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        }), this._def.right._parseSync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        }));
      }
    }
  }]);
}(ZodType);
ZodIntersection.create = function (left, right, params) {
  return new ZodIntersection(_objectSpread({
    left: left,
    right: right,
    typeName: ZodFirstPartyTypeKind.ZodIntersection
  }, processCreateParams(params)));
};
var ZodTuple = exports.ZodTuple = /*#__PURE__*/function (_ZodType18) {
  function ZodTuple() {
    _classCallCheck(this, ZodTuple);
    return _callSuper(this, ZodTuple, arguments);
  }
  _inherits(ZodTuple, _ZodType18);
  return _createClass(ZodTuple, [{
    key: "_parse",
    value: function _parse(input) {
      var _this14 = this;
      var _this$_processInputPa6 = this._processInputParams(input),
        status = _this$_processInputPa6.status,
        ctx = _this$_processInputPa6.ctx;
      if (ctx.parsedType !== ZodParsedType.array) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType.array,
          received: ctx.parsedType
        });
        return INVALID;
      }
      if (ctx.data.length < this._def.items.length) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.too_small,
          minimum: this._def.items.length,
          inclusive: true,
          exact: false,
          type: "array"
        });
        return INVALID;
      }
      var rest = this._def.rest;
      if (!rest && ctx.data.length > this._def.items.length) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.too_big,
          maximum: this._def.items.length,
          inclusive: true,
          exact: false,
          type: "array"
        });
        status.dirty();
      }
      var items = _toConsumableArray(ctx.data).map(function (item, itemIndex) {
        var schema = _this14._def.items[itemIndex] || _this14._def.rest;
        if (!schema) return null;
        return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));
      }).filter(function (x) {
        return !!x;
      }); // filter nulls
      if (ctx.common.async) {
        return Promise.all(items).then(function (results) {
          return ParseStatus.mergeArray(status, results);
        });
      } else {
        return ParseStatus.mergeArray(status, items);
      }
    }
  }, {
    key: "items",
    get: function get() {
      return this._def.items;
    }
  }, {
    key: "rest",
    value: function rest(_rest) {
      return new ZodTuple(_objectSpread(_objectSpread({}, this._def), {}, {
        rest: _rest
      }));
    }
  }]);
}(ZodType);
ZodTuple.create = function (schemas, params) {
  if (!Array.isArray(schemas)) {
    throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
  }
  return new ZodTuple(_objectSpread({
    items: schemas,
    typeName: ZodFirstPartyTypeKind.ZodTuple,
    rest: null
  }, processCreateParams(params)));
};
var ZodRecord = exports.ZodRecord = /*#__PURE__*/function (_ZodType19) {
  function ZodRecord() {
    _classCallCheck(this, ZodRecord);
    return _callSuper(this, ZodRecord, arguments);
  }
  _inherits(ZodRecord, _ZodType19);
  return _createClass(ZodRecord, [{
    key: "keySchema",
    get: function get() {
      return this._def.keyType;
    }
  }, {
    key: "valueSchema",
    get: function get() {
      return this._def.valueType;
    }
  }, {
    key: "_parse",
    value: function _parse(input) {
      var _this$_processInputPa7 = this._processInputParams(input),
        status = _this$_processInputPa7.status,
        ctx = _this$_processInputPa7.ctx;
      if (ctx.parsedType !== ZodParsedType.object) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType.object,
          received: ctx.parsedType
        });
        return INVALID;
      }
      var pairs = [];
      var keyType = this._def.keyType;
      var valueType = this._def.valueType;
      for (var key in ctx.data) {
        pairs.push({
          key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),
          value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),
          alwaysSet: key in ctx.data
        });
      }
      if (ctx.common.async) {
        return ParseStatus.mergeObjectAsync(status, pairs);
      } else {
        return ParseStatus.mergeObjectSync(status, pairs);
      }
    }
  }, {
    key: "element",
    get: function get() {
      return this._def.valueType;
    }
  }], [{
    key: "create",
    value: function create(first, second, third) {
      if (second instanceof ZodType) {
        return new ZodRecord(_objectSpread({
          keyType: first,
          valueType: second,
          typeName: ZodFirstPartyTypeKind.ZodRecord
        }, processCreateParams(third)));
      }
      return new ZodRecord(_objectSpread({
        keyType: ZodString.create(),
        valueType: first,
        typeName: ZodFirstPartyTypeKind.ZodRecord
      }, processCreateParams(second)));
    }
  }]);
}(ZodType);
var ZodMap = exports.ZodMap = /*#__PURE__*/function (_ZodType20) {
  function ZodMap() {
    _classCallCheck(this, ZodMap);
    return _callSuper(this, ZodMap, arguments);
  }
  _inherits(ZodMap, _ZodType20);
  return _createClass(ZodMap, [{
    key: "keySchema",
    get: function get() {
      return this._def.keyType;
    }
  }, {
    key: "valueSchema",
    get: function get() {
      return this._def.valueType;
    }
  }, {
    key: "_parse",
    value: function _parse(input) {
      var _this$_processInputPa8 = this._processInputParams(input),
        status = _this$_processInputPa8.status,
        ctx = _this$_processInputPa8.ctx;
      if (ctx.parsedType !== ZodParsedType.map) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType.map,
          received: ctx.parsedType
        });
        return INVALID;
      }
      var keyType = this._def.keyType;
      var valueType = this._def.valueType;
      var pairs = _toConsumableArray(ctx.data.entries()).map(function (_ref5, index) {
        var _ref6 = _slicedToArray(_ref5, 2),
          key = _ref6[0],
          value = _ref6[1];
        return {
          key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, "key"])),
          value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, "value"]))
        };
      });
      if (ctx.common.async) {
        var finalMap = new Map();
        return Promise.resolve().then(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {
          var _iterator33, _step33, pair, key, value;
          return _regeneratorRuntime().wrap(function _callee6$(_context6) {
            while (1) switch (_context6.prev = _context6.next) {
              case 0:
                _iterator33 = _createForOfIteratorHelper(pairs);
                _context6.prev = 1;
                _iterator33.s();
              case 3:
                if ((_step33 = _iterator33.n()).done) {
                  _context6.next = 17;
                  break;
                }
                pair = _step33.value;
                _context6.next = 7;
                return pair.key;
              case 7:
                key = _context6.sent;
                _context6.next = 10;
                return pair.value;
              case 10:
                value = _context6.sent;
                if (!(key.status === "aborted" || value.status === "aborted")) {
                  _context6.next = 13;
                  break;
                }
                return _context6.abrupt("return", INVALID);
              case 13:
                if (key.status === "dirty" || value.status === "dirty") {
                  status.dirty();
                }
                finalMap.set(key.value, value.value);
              case 15:
                _context6.next = 3;
                break;
              case 17:
                _context6.next = 22;
                break;
              case 19:
                _context6.prev = 19;
                _context6.t0 = _context6["catch"](1);
                _iterator33.e(_context6.t0);
              case 22:
                _context6.prev = 22;
                _iterator33.f();
                return _context6.finish(22);
              case 25:
                return _context6.abrupt("return", {
                  status: status.value,
                  value: finalMap
                });
              case 26:
              case "end":
                return _context6.stop();
            }
          }, _callee6, null, [[1, 19, 22, 25]]);
        })));
      } else {
        var _finalMap = new Map();
        var _iterator34 = _createForOfIteratorHelper(pairs),
          _step34;
        try {
          for (_iterator34.s(); !(_step34 = _iterator34.n()).done;) {
            var pair = _step34.value;
            var key = pair.key;
            var value = pair.value;
            if (key.status === "aborted" || value.status === "aborted") {
              return INVALID;
            }
            if (key.status === "dirty" || value.status === "dirty") {
              status.dirty();
            }
            _finalMap.set(key.value, value.value);
          }
        } catch (err) {
          _iterator34.e(err);
        } finally {
          _iterator34.f();
        }
        return {
          status: status.value,
          value: _finalMap
        };
      }
    }
  }]);
}(ZodType);
ZodMap.create = function (keyType, valueType, params) {
  return new ZodMap(_objectSpread({
    valueType: valueType,
    keyType: keyType,
    typeName: ZodFirstPartyTypeKind.ZodMap
  }, processCreateParams(params)));
};
var ZodSet = exports.ZodSet = /*#__PURE__*/function (_ZodType21) {
  function ZodSet() {
    _classCallCheck(this, ZodSet);
    return _callSuper(this, ZodSet, arguments);
  }
  _inherits(ZodSet, _ZodType21);
  return _createClass(ZodSet, [{
    key: "_parse",
    value: function _parse(input) {
      var _this$_processInputPa9 = this._processInputParams(input),
        status = _this$_processInputPa9.status,
        ctx = _this$_processInputPa9.ctx;
      if (ctx.parsedType !== ZodParsedType.set) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType.set,
          received: ctx.parsedType
        });
        return INVALID;
      }
      var def = this._def;
      if (def.minSize !== null) {
        if (ctx.data.size < def.minSize.value) {
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_small,
            minimum: def.minSize.value,
            type: "set",
            inclusive: true,
            exact: false,
            message: def.minSize.message
          });
          status.dirty();
        }
      }
      if (def.maxSize !== null) {
        if (ctx.data.size > def.maxSize.value) {
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_big,
            maximum: def.maxSize.value,
            type: "set",
            inclusive: true,
            exact: false,
            message: def.maxSize.message
          });
          status.dirty();
        }
      }
      var valueType = this._def.valueType;
      function finalizeSet(elements) {
        var parsedSet = new Set();
        var _iterator35 = _createForOfIteratorHelper(elements),
          _step35;
        try {
          for (_iterator35.s(); !(_step35 = _iterator35.n()).done;) {
            var element = _step35.value;
            if (element.status === "aborted") return INVALID;
            if (element.status === "dirty") status.dirty();
            parsedSet.add(element.value);
          }
        } catch (err) {
          _iterator35.e(err);
        } finally {
          _iterator35.f();
        }
        return {
          status: status.value,
          value: parsedSet
        };
      }
      var elements = _toConsumableArray(ctx.data.values()).map(function (item, i) {
        return valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i));
      });
      if (ctx.common.async) {
        return Promise.all(elements).then(function (elements) {
          return finalizeSet(elements);
        });
      } else {
        return finalizeSet(elements);
      }
    }
  }, {
    key: "min",
    value: function min(minSize, message) {
      return new ZodSet(_objectSpread(_objectSpread({}, this._def), {}, {
        minSize: {
          value: minSize,
          message: errorUtil.toString(message)
        }
      }));
    }
  }, {
    key: "max",
    value: function max(maxSize, message) {
      return new ZodSet(_objectSpread(_objectSpread({}, this._def), {}, {
        maxSize: {
          value: maxSize,
          message: errorUtil.toString(message)
        }
      }));
    }
  }, {
    key: "size",
    value: function size(_size, message) {
      return this.min(_size, message).max(_size, message);
    }
  }, {
    key: "nonempty",
    value: function nonempty(message) {
      return this.min(1, message);
    }
  }]);
}(ZodType);
ZodSet.create = function (valueType, params) {
  return new ZodSet(_objectSpread({
    valueType: valueType,
    minSize: null,
    maxSize: null,
    typeName: ZodFirstPartyTypeKind.ZodSet
  }, processCreateParams(params)));
};
var ZodFunction = exports.ZodFunction = /*#__PURE__*/function (_ZodType22) {
  function ZodFunction() {
    var _this15;
    _classCallCheck(this, ZodFunction);
    _this15 = _callSuper(this, ZodFunction, arguments);
    _this15.validate = _this15.implement;
    return _this15;
  }
  _inherits(ZodFunction, _ZodType22);
  return _createClass(ZodFunction, [{
    key: "_parse",
    value: function _parse(input) {
      var _this$_processInputPa10 = this._processInputParams(input),
        ctx = _this$_processInputPa10.ctx;
      if (ctx.parsedType !== ZodParsedType["function"]) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType["function"],
          received: ctx.parsedType
        });
        return INVALID;
      }
      function makeArgsIssue(args, error) {
        return makeIssue({
          data: args,
          path: ctx.path,
          errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), errorMap].filter(function (x) {
            return !!x;
          }),
          issueData: {
            code: ZodIssueCode.invalid_arguments,
            argumentsError: error
          }
        });
      }
      function makeReturnsIssue(returns, error) {
        return makeIssue({
          data: returns,
          path: ctx.path,
          errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), errorMap].filter(function (x) {
            return !!x;
          }),
          issueData: {
            code: ZodIssueCode.invalid_return_type,
            returnTypeError: error
          }
        });
      }
      var params = {
        errorMap: ctx.common.contextualErrorMap
      };
      var fn = ctx.data;
      if (this._def.returns instanceof ZodPromise) {
        // Would love a way to avoid disabling this rule, but we need
        // an alias (using an arrow function was what caused 2651).
        // eslint-disable-next-line @typescript-eslint/no-this-alias
        var me = this;
        return OK(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
          var _len,
            args,
            _key5,
            error,
            parsedArgs,
            result,
            parsedReturns,
            _args7 = arguments;
          return _regeneratorRuntime().wrap(function _callee7$(_context7) {
            while (1) switch (_context7.prev = _context7.next) {
              case 0:
                for (_len = _args7.length, args = new Array(_len), _key5 = 0; _key5 < _len; _key5++) {
                  args[_key5] = _args7[_key5];
                }
                error = new ZodError([]);
                _context7.next = 4;
                return me._def.args.parseAsync(args, params)["catch"](function (e) {
                  error.addIssue(makeArgsIssue(args, e));
                  throw error;
                });
              case 4:
                parsedArgs = _context7.sent;
                _context7.next = 7;
                return Reflect.apply(fn, this, parsedArgs);
              case 7:
                result = _context7.sent;
                _context7.next = 10;
                return me._def.returns._def.type.parseAsync(result, params)["catch"](function (e) {
                  error.addIssue(makeReturnsIssue(result, e));
                  throw error;
                });
              case 10:
                parsedReturns = _context7.sent;
                return _context7.abrupt("return", parsedReturns);
              case 12:
              case "end":
                return _context7.stop();
            }
          }, _callee7, this);
        })));
      } else {
        // Would love a way to avoid disabling this rule, but we need
        // an alias (using an arrow function was what caused 2651).
        // eslint-disable-next-line @typescript-eslint/no-this-alias
        var _me = this;
        return OK(function () {
          for (var _len2 = arguments.length, args = new Array(_len2), _key6 = 0; _key6 < _len2; _key6++) {
            args[_key6] = arguments[_key6];
          }
          var parsedArgs = _me._def.args.safeParse(args, params);
          if (!parsedArgs.success) {
            throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);
          }
          var result = Reflect.apply(fn, this, parsedArgs.data);
          var parsedReturns = _me._def.returns.safeParse(result, params);
          if (!parsedReturns.success) {
            throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);
          }
          return parsedReturns.data;
        });
      }
    }
  }, {
    key: "parameters",
    value: function parameters() {
      return this._def.args;
    }
  }, {
    key: "returnType",
    value: function returnType() {
      return this._def.returns;
    }
  }, {
    key: "args",
    value: function args() {
      for (var _len3 = arguments.length, items = new Array(_len3), _key7 = 0; _key7 < _len3; _key7++) {
        items[_key7] = arguments[_key7];
      }
      return new ZodFunction(_objectSpread(_objectSpread({}, this._def), {}, {
        args: ZodTuple.create(items).rest(ZodUnknown.create())
      }));
    }
  }, {
    key: "returns",
    value: function returns(returnType) {
      return new ZodFunction(_objectSpread(_objectSpread({}, this._def), {}, {
        returns: returnType
      }));
    }
  }, {
    key: "implement",
    value: function implement(func) {
      var validatedFunc = this.parse(func);
      return validatedFunc;
    }
  }, {
    key: "strictImplement",
    value: function strictImplement(func) {
      var validatedFunc = this.parse(func);
      return validatedFunc;
    }
  }], [{
    key: "create",
    value: function create(args, returns, params) {
      return new ZodFunction(_objectSpread({
        args: args ? args : ZodTuple.create([]).rest(ZodUnknown.create()),
        returns: returns || ZodUnknown.create(),
        typeName: ZodFirstPartyTypeKind.ZodFunction
      }, processCreateParams(params)));
    }
  }]);
}(ZodType);
var ZodLazy = exports.ZodLazy = /*#__PURE__*/function (_ZodType23) {
  function ZodLazy() {
    _classCallCheck(this, ZodLazy);
    return _callSuper(this, ZodLazy, arguments);
  }
  _inherits(ZodLazy, _ZodType23);
  return _createClass(ZodLazy, [{
    key: "schema",
    get: function get() {
      return this._def.getter();
    }
  }, {
    key: "_parse",
    value: function _parse(input) {
      var _this$_processInputPa11 = this._processInputParams(input),
        ctx = _this$_processInputPa11.ctx;
      var lazySchema = this._def.getter();
      return lazySchema._parse({
        data: ctx.data,
        path: ctx.path,
        parent: ctx
      });
    }
  }]);
}(ZodType);
ZodLazy.create = function (getter, params) {
  return new ZodLazy(_objectSpread({
    getter: getter,
    typeName: ZodFirstPartyTypeKind.ZodLazy
  }, processCreateParams(params)));
};
var ZodLiteral = exports.ZodLiteral = /*#__PURE__*/function (_ZodType24) {
  function ZodLiteral() {
    _classCallCheck(this, ZodLiteral);
    return _callSuper(this, ZodLiteral, arguments);
  }
  _inherits(ZodLiteral, _ZodType24);
  return _createClass(ZodLiteral, [{
    key: "_parse",
    value: function _parse(input) {
      if (input.data !== this._def.value) {
        var ctx = this._getOrReturnCtx(input);
        addIssueToContext(ctx, {
          received: ctx.data,
          code: ZodIssueCode.invalid_literal,
          expected: this._def.value
        });
        return INVALID;
      }
      return {
        status: "valid",
        value: input.data
      };
    }
  }, {
    key: "value",
    get: function get() {
      return this._def.value;
    }
  }]);
}(ZodType);
ZodLiteral.create = function (value, params) {
  return new ZodLiteral(_objectSpread({
    value: value,
    typeName: ZodFirstPartyTypeKind.ZodLiteral
  }, processCreateParams(params)));
};
function createZodEnum(values, params) {
  return new ZodEnum(_objectSpread({
    values: values,
    typeName: ZodFirstPartyTypeKind.ZodEnum
  }, processCreateParams(params)));
}
var ZodEnum = exports.ZodEnum = /*#__PURE__*/function (_ZodType25) {
  function ZodEnum() {
    var _this16;
    _classCallCheck(this, ZodEnum);
    _this16 = _callSuper(this, ZodEnum, arguments);
    _ZodEnum_cache.set(_this16, void 0);
    return _this16;
  }
  _inherits(ZodEnum, _ZodType25);
  return _createClass(ZodEnum, [{
    key: "_parse",
    value: function _parse(input) {
      if (typeof input.data !== "string") {
        var ctx = this._getOrReturnCtx(input);
        var expectedValues = this._def.values;
        addIssueToContext(ctx, {
          expected: util.joinValues(expectedValues),
          received: ctx.parsedType,
          code: ZodIssueCode.invalid_type
        });
        return INVALID;
      }
      if (!__classPrivateFieldGet(this, _ZodEnum_cache, "f")) {
        __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), "f");
      }
      if (!__classPrivateFieldGet(this, _ZodEnum_cache, "f").has(input.data)) {
        var _ctx8 = this._getOrReturnCtx(input);
        var _expectedValues = this._def.values;
        addIssueToContext(_ctx8, {
          received: _ctx8.data,
          code: ZodIssueCode.invalid_enum_value,
          options: _expectedValues
        });
        return INVALID;
      }
      return OK(input.data);
    }
  }, {
    key: "options",
    get: function get() {
      return this._def.values;
    }
  }, {
    key: "enum",
    get: function get() {
      var enumValues = {};
      var _iterator36 = _createForOfIteratorHelper(this._def.values),
        _step36;
      try {
        for (_iterator36.s(); !(_step36 = _iterator36.n()).done;) {
          var val = _step36.value;
          enumValues[val] = val;
        }
      } catch (err) {
        _iterator36.e(err);
      } finally {
        _iterator36.f();
      }
      return enumValues;
    }
  }, {
    key: "Values",
    get: function get() {
      var enumValues = {};
      var _iterator37 = _createForOfIteratorHelper(this._def.values),
        _step37;
      try {
        for (_iterator37.s(); !(_step37 = _iterator37.n()).done;) {
          var val = _step37.value;
          enumValues[val] = val;
        }
      } catch (err) {
        _iterator37.e(err);
      } finally {
        _iterator37.f();
      }
      return enumValues;
    }
  }, {
    key: "Enum",
    get: function get() {
      var enumValues = {};
      var _iterator38 = _createForOfIteratorHelper(this._def.values),
        _step38;
      try {
        for (_iterator38.s(); !(_step38 = _iterator38.n()).done;) {
          var val = _step38.value;
          enumValues[val] = val;
        }
      } catch (err) {
        _iterator38.e(err);
      } finally {
        _iterator38.f();
      }
      return enumValues;
    }
  }, {
    key: "extract",
    value: function extract(values) {
      var newDef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._def;
      return ZodEnum.create(values, _objectSpread(_objectSpread({}, this._def), newDef));
    }
  }, {
    key: "exclude",
    value: function exclude(values) {
      var newDef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._def;
      return ZodEnum.create(this.options.filter(function (opt) {
        return !values.includes(opt);
      }), _objectSpread(_objectSpread({}, this._def), newDef));
    }
  }]);
}(ZodType);
_ZodEnum_cache = new WeakMap();
ZodEnum.create = createZodEnum;
var ZodNativeEnum = exports.ZodNativeEnum = /*#__PURE__*/function (_ZodType26) {
  function ZodNativeEnum() {
    var _this17;
    _classCallCheck(this, ZodNativeEnum);
    _this17 = _callSuper(this, ZodNativeEnum, arguments);
    _ZodNativeEnum_cache.set(_this17, void 0);
    return _this17;
  }
  _inherits(ZodNativeEnum, _ZodType26);
  return _createClass(ZodNativeEnum, [{
    key: "_parse",
    value: function _parse(input) {
      var nativeEnumValues = util.getValidEnumValues(this._def.values);
      var ctx = this._getOrReturnCtx(input);
      if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {
        var expectedValues = util.objectValues(nativeEnumValues);
        addIssueToContext(ctx, {
          expected: util.joinValues(expectedValues),
          received: ctx.parsedType,
          code: ZodIssueCode.invalid_type
        });
        return INVALID;
      }
      if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, "f")) {
        __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util.getValidEnumValues(this._def.values)), "f");
      }
      if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, "f").has(input.data)) {
        var _expectedValues2 = util.objectValues(nativeEnumValues);
        addIssueToContext(ctx, {
          received: ctx.data,
          code: ZodIssueCode.invalid_enum_value,
          options: _expectedValues2
        });
        return INVALID;
      }
      return OK(input.data);
    }
  }, {
    key: "enum",
    get: function get() {
      return this._def.values;
    }
  }]);
}(ZodType);
_ZodNativeEnum_cache = new WeakMap();
ZodNativeEnum.create = function (values, params) {
  return new ZodNativeEnum(_objectSpread({
    values: values,
    typeName: ZodFirstPartyTypeKind.ZodNativeEnum
  }, processCreateParams(params)));
};
var ZodPromise = exports.ZodPromise = /*#__PURE__*/function (_ZodType27) {
  function ZodPromise() {
    _classCallCheck(this, ZodPromise);
    return _callSuper(this, ZodPromise, arguments);
  }
  _inherits(ZodPromise, _ZodType27);
  return _createClass(ZodPromise, [{
    key: "unwrap",
    value: function unwrap() {
      return this._def.type;
    }
  }, {
    key: "_parse",
    value: function _parse(input) {
      var _this18 = this;
      var _this$_processInputPa12 = this._processInputParams(input),
        ctx = _this$_processInputPa12.ctx;
      if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType.promise,
          received: ctx.parsedType
        });
        return INVALID;
      }
      var promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);
      return OK(promisified.then(function (data) {
        return _this18._def.type.parseAsync(data, {
          path: ctx.path,
          errorMap: ctx.common.contextualErrorMap
        });
      }));
    }
  }]);
}(ZodType);
ZodPromise.create = function (schema, params) {
  return new ZodPromise(_objectSpread({
    type: schema,
    typeName: ZodFirstPartyTypeKind.ZodPromise
  }, processCreateParams(params)));
};
var ZodEffects = exports.ZodTransformer = exports.ZodEffects = /*#__PURE__*/function (_ZodType28) {
  function ZodEffects() {
    _classCallCheck(this, ZodEffects);
    return _callSuper(this, ZodEffects, arguments);
  }
  _inherits(ZodEffects, _ZodType28);
  return _createClass(ZodEffects, [{
    key: "innerType",
    value: function innerType() {
      return this._def.schema;
    }
  }, {
    key: "sourceType",
    value: function sourceType() {
      return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects ? this._def.schema.sourceType() : this._def.schema;
    }
  }, {
    key: "_parse",
    value: function _parse(input) {
      var _this19 = this;
      var _this$_processInputPa13 = this._processInputParams(input),
        status = _this$_processInputPa13.status,
        ctx = _this$_processInputPa13.ctx;
      var effect = this._def.effect || null;
      var checkCtx = {
        addIssue: function addIssue(arg) {
          addIssueToContext(ctx, arg);
          if (arg.fatal) {
            status.abort();
          } else {
            status.dirty();
          }
        },
        get path() {
          return ctx.path;
        }
      };
      checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);
      if (effect.type === "preprocess") {
        var processed = effect.transform(ctx.data, checkCtx);
        if (ctx.common.async) {
          return Promise.resolve(processed).then(/*#__PURE__*/function () {
            var _ref9 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(processed) {
              var result;
              return _regeneratorRuntime().wrap(function _callee8$(_context8) {
                while (1) switch (_context8.prev = _context8.next) {
                  case 0:
                    if (!(status.value === "aborted")) {
                      _context8.next = 2;
                      break;
                    }
                    return _context8.abrupt("return", INVALID);
                  case 2:
                    _context8.next = 4;
                    return _this19._def.schema._parseAsync({
                      data: processed,
                      path: ctx.path,
                      parent: ctx
                    });
                  case 4:
                    result = _context8.sent;
                    if (!(result.status === "aborted")) {
                      _context8.next = 7;
                      break;
                    }
                    return _context8.abrupt("return", INVALID);
                  case 7:
                    if (!(result.status === "dirty")) {
                      _context8.next = 9;
                      break;
                    }
                    return _context8.abrupt("return", DIRTY(result.value));
                  case 9:
                    if (!(status.value === "dirty")) {
                      _context8.next = 11;
                      break;
                    }
                    return _context8.abrupt("return", DIRTY(result.value));
                  case 11:
                    return _context8.abrupt("return", result);
                  case 12:
                  case "end":
                    return _context8.stop();
                }
              }, _callee8);
            }));
            return function (_x9) {
              return _ref9.apply(this, arguments);
            };
          }());
        } else {
          if (status.value === "aborted") return INVALID;
          var result = this._def.schema._parseSync({
            data: processed,
            path: ctx.path,
            parent: ctx
          });
          if (result.status === "aborted") return INVALID;
          if (result.status === "dirty") return DIRTY(result.value);
          if (status.value === "dirty") return DIRTY(result.value);
          return result;
        }
      }
      if (effect.type === "refinement") {
        var executeRefinement = function executeRefinement(acc) {
          var result = effect.refinement(acc, checkCtx);
          if (ctx.common.async) {
            return Promise.resolve(result);
          }
          if (result instanceof Promise) {
            throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");
          }
          return acc;
        };
        if (ctx.common.async === false) {
          var inner = this._def.schema._parseSync({
            data: ctx.data,
            path: ctx.path,
            parent: ctx
          });
          if (inner.status === "aborted") return INVALID;
          if (inner.status === "dirty") status.dirty();
          // return value is ignored
          executeRefinement(inner.value);
          return {
            status: status.value,
            value: inner.value
          };
        } else {
          return this._def.schema._parseAsync({
            data: ctx.data,
            path: ctx.path,
            parent: ctx
          }).then(function (inner) {
            if (inner.status === "aborted") return INVALID;
            if (inner.status === "dirty") status.dirty();
            return executeRefinement(inner.value).then(function () {
              return {
                status: status.value,
                value: inner.value
              };
            });
          });
        }
      }
      if (effect.type === "transform") {
        if (ctx.common.async === false) {
          var base = this._def.schema._parseSync({
            data: ctx.data,
            path: ctx.path,
            parent: ctx
          });
          if (!isValid(base)) return base;
          var _result2 = effect.transform(base.value, checkCtx);
          if (_result2 instanceof Promise) {
            throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");
          }
          return {
            status: status.value,
            value: _result2
          };
        } else {
          return this._def.schema._parseAsync({
            data: ctx.data,
            path: ctx.path,
            parent: ctx
          }).then(function (base) {
            if (!isValid(base)) return base;
            return Promise.resolve(effect.transform(base.value, checkCtx)).then(function (result) {
              return {
                status: status.value,
                value: result
              };
            });
          });
        }
      }
      util.assertNever(effect);
    }
  }]);
}(ZodType);
ZodEffects.create = function (schema, effect, params) {
  return new ZodEffects(_objectSpread({
    schema: schema,
    typeName: ZodFirstPartyTypeKind.ZodEffects,
    effect: effect
  }, processCreateParams(params)));
};
ZodEffects.createWithPreprocess = function (preprocess, schema, params) {
  return new ZodEffects(_objectSpread({
    schema: schema,
    effect: {
      type: "preprocess",
      transform: preprocess
    },
    typeName: ZodFirstPartyTypeKind.ZodEffects
  }, processCreateParams(params)));
};
var ZodOptional = exports.ZodOptional = /*#__PURE__*/function (_ZodType29) {
  function ZodOptional() {
    _classCallCheck(this, ZodOptional);
    return _callSuper(this, ZodOptional, arguments);
  }
  _inherits(ZodOptional, _ZodType29);
  return _createClass(ZodOptional, [{
    key: "_parse",
    value: function _parse(input) {
      var parsedType = this._getType(input);
      if (parsedType === ZodParsedType.undefined) {
        return OK(undefined);
      }
      return this._def.innerType._parse(input);
    }
  }, {
    key: "unwrap",
    value: function unwrap() {
      return this._def.innerType;
    }
  }]);
}(ZodType);
ZodOptional.create = function (type, params) {
  return new ZodOptional(_objectSpread({
    innerType: type,
    typeName: ZodFirstPartyTypeKind.ZodOptional
  }, processCreateParams(params)));
};
var ZodNullable = exports.ZodNullable = /*#__PURE__*/function (_ZodType30) {
  function ZodNullable() {
    _classCallCheck(this, ZodNullable);
    return _callSuper(this, ZodNullable, arguments);
  }
  _inherits(ZodNullable, _ZodType30);
  return _createClass(ZodNullable, [{
    key: "_parse",
    value: function _parse(input) {
      var parsedType = this._getType(input);
      if (parsedType === ZodParsedType["null"]) {
        return OK(null);
      }
      return this._def.innerType._parse(input);
    }
  }, {
    key: "unwrap",
    value: function unwrap() {
      return this._def.innerType;
    }
  }]);
}(ZodType);
ZodNullable.create = function (type, params) {
  return new ZodNullable(_objectSpread({
    innerType: type,
    typeName: ZodFirstPartyTypeKind.ZodNullable
  }, processCreateParams(params)));
};
var ZodDefault = exports.ZodDefault = /*#__PURE__*/function (_ZodType31) {
  function ZodDefault() {
    _classCallCheck(this, ZodDefault);
    return _callSuper(this, ZodDefault, arguments);
  }
  _inherits(ZodDefault, _ZodType31);
  return _createClass(ZodDefault, [{
    key: "_parse",
    value: function _parse(input) {
      var _this$_processInputPa14 = this._processInputParams(input),
        ctx = _this$_processInputPa14.ctx;
      var data = ctx.data;
      if (ctx.parsedType === ZodParsedType.undefined) {
        data = this._def.defaultValue();
      }
      return this._def.innerType._parse({
        data: data,
        path: ctx.path,
        parent: ctx
      });
    }
  }, {
    key: "removeDefault",
    value: function removeDefault() {
      return this._def.innerType;
    }
  }]);
}(ZodType);
ZodDefault.create = function (type, params) {
  return new ZodDefault(_objectSpread({
    innerType: type,
    typeName: ZodFirstPartyTypeKind.ZodDefault,
    defaultValue: typeof params["default"] === "function" ? params["default"] : function () {
      return params["default"];
    }
  }, processCreateParams(params)));
};
var ZodCatch = exports.ZodCatch = /*#__PURE__*/function (_ZodType32) {
  function ZodCatch() {
    _classCallCheck(this, ZodCatch);
    return _callSuper(this, ZodCatch, arguments);
  }
  _inherits(ZodCatch, _ZodType32);
  return _createClass(ZodCatch, [{
    key: "_parse",
    value: function _parse(input) {
      var _this20 = this;
      var _this$_processInputPa15 = this._processInputParams(input),
        ctx = _this$_processInputPa15.ctx;
      // newCtx is used to not collect issues from inner types in ctx
      var newCtx = _objectSpread(_objectSpread({}, ctx), {}, {
        common: _objectSpread(_objectSpread({}, ctx.common), {}, {
          issues: []
        })
      });
      var result = this._def.innerType._parse({
        data: newCtx.data,
        path: newCtx.path,
        parent: _objectSpread({}, newCtx)
      });
      if (isAsync(result)) {
        return result.then(function (result) {
          return {
            status: "valid",
            value: result.status === "valid" ? result.value : _this20._def.catchValue({
              get error() {
                return new ZodError(newCtx.common.issues);
              },
              input: newCtx.data
            })
          };
        });
      } else {
        return {
          status: "valid",
          value: result.status === "valid" ? result.value : this._def.catchValue({
            get error() {
              return new ZodError(newCtx.common.issues);
            },
            input: newCtx.data
          })
        };
      }
    }
  }, {
    key: "removeCatch",
    value: function removeCatch() {
      return this._def.innerType;
    }
  }]);
}(ZodType);
ZodCatch.create = function (type, params) {
  return new ZodCatch(_objectSpread({
    innerType: type,
    typeName: ZodFirstPartyTypeKind.ZodCatch,
    catchValue: typeof params["catch"] === "function" ? params["catch"] : function () {
      return params["catch"];
    }
  }, processCreateParams(params)));
};
var ZodNaN = exports.ZodNaN = /*#__PURE__*/function (_ZodType33) {
  function ZodNaN() {
    _classCallCheck(this, ZodNaN);
    return _callSuper(this, ZodNaN, arguments);
  }
  _inherits(ZodNaN, _ZodType33);
  return _createClass(ZodNaN, [{
    key: "_parse",
    value: function _parse(input) {
      var parsedType = this._getType(input);
      if (parsedType !== ZodParsedType.nan) {
        var ctx = this._getOrReturnCtx(input);
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType.nan,
          received: ctx.parsedType
        });
        return INVALID;
      }
      return {
        status: "valid",
        value: input.data
      };
    }
  }]);
}(ZodType);
ZodNaN.create = function (params) {
  return new ZodNaN(_objectSpread({
    typeName: ZodFirstPartyTypeKind.ZodNaN
  }, processCreateParams(params)));
};
var BRAND = exports.BRAND = Symbol("zod_brand");
var ZodBranded = exports.ZodBranded = /*#__PURE__*/function (_ZodType34) {
  function ZodBranded() {
    _classCallCheck(this, ZodBranded);
    return _callSuper(this, ZodBranded, arguments);
  }
  _inherits(ZodBranded, _ZodType34);
  return _createClass(ZodBranded, [{
    key: "_parse",
    value: function _parse(input) {
      var _this$_processInputPa16 = this._processInputParams(input),
        ctx = _this$_processInputPa16.ctx;
      var data = ctx.data;
      return this._def.type._parse({
        data: data,
        path: ctx.path,
        parent: ctx
      });
    }
  }, {
    key: "unwrap",
    value: function unwrap() {
      return this._def.type;
    }
  }]);
}(ZodType);
var ZodPipeline = exports.ZodPipeline = /*#__PURE__*/function (_ZodType35) {
  function ZodPipeline() {
    _classCallCheck(this, ZodPipeline);
    return _callSuper(this, ZodPipeline, arguments);
  }
  _inherits(ZodPipeline, _ZodType35);
  return _createClass(ZodPipeline, [{
    key: "_parse",
    value: function _parse(input) {
      var _this21 = this;
      var _this$_processInputPa17 = this._processInputParams(input),
        status = _this$_processInputPa17.status,
        ctx = _this$_processInputPa17.ctx;
      if (ctx.common.async) {
        var handleAsync = /*#__PURE__*/function () {
          var _ref10 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {
            var inResult;
            return _regeneratorRuntime().wrap(function _callee9$(_context9) {
              while (1) switch (_context9.prev = _context9.next) {
                case 0:
                  _context9.next = 2;
                  return _this21._def["in"]._parseAsync({
                    data: ctx.data,
                    path: ctx.path,
                    parent: ctx
                  });
                case 2:
                  inResult = _context9.sent;
                  if (!(inResult.status === "aborted")) {
                    _context9.next = 5;
                    break;
                  }
                  return _context9.abrupt("return", INVALID);
                case 5:
                  if (!(inResult.status === "dirty")) {
                    _context9.next = 10;
                    break;
                  }
                  status.dirty();
                  return _context9.abrupt("return", DIRTY(inResult.value));
                case 10:
                  return _context9.abrupt("return", _this21._def.out._parseAsync({
                    data: inResult.value,
                    path: ctx.path,
                    parent: ctx
                  }));
                case 11:
                case "end":
                  return _context9.stop();
              }
            }, _callee9);
          }));
          return function handleAsync() {
            return _ref10.apply(this, arguments);
          };
        }();
        return handleAsync();
      } else {
        var inResult = this._def["in"]._parseSync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        });
        if (inResult.status === "aborted") return INVALID;
        if (inResult.status === "dirty") {
          status.dirty();
          return {
            status: "dirty",
            value: inResult.value
          };
        } else {
          return this._def.out._parseSync({
            data: inResult.value,
            path: ctx.path,
            parent: ctx
          });
        }
      }
    }
  }], [{
    key: "create",
    value: function create(a, b) {
      return new ZodPipeline({
        "in": a,
        out: b,
        typeName: ZodFirstPartyTypeKind.ZodPipeline
      });
    }
  }]);
}(ZodType);
var ZodReadonly = exports.ZodReadonly = /*#__PURE__*/function (_ZodType36) {
  function ZodReadonly() {
    _classCallCheck(this, ZodReadonly);
    return _callSuper(this, ZodReadonly, arguments);
  }
  _inherits(ZodReadonly, _ZodType36);
  return _createClass(ZodReadonly, [{
    key: "_parse",
    value: function _parse(input) {
      var result = this._def.innerType._parse(input);
      var freeze = function freeze(data) {
        if (isValid(data)) {
          data.value = Object.freeze(data.value);
        }
        return data;
      };
      return isAsync(result) ? result.then(function (data) {
        return freeze(data);
      }) : freeze(result);
    }
  }, {
    key: "unwrap",
    value: function unwrap() {
      return this._def.innerType;
    }
  }]);
}(ZodType);
ZodReadonly.create = function (type, params) {
  return new ZodReadonly(_objectSpread({
    innerType: type,
    typeName: ZodFirstPartyTypeKind.ZodReadonly
  }, processCreateParams(params)));
};
function custom(check) {
  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var
  /**
   * @deprecated
   *
   * Pass `fatal` into the params object instead:
   *
   * ```ts
   * z.string().custom((val) => val.length > 5, { fatal: false })
   * ```
   *
   */
  fatal = arguments.length > 2 ? arguments[2] : undefined;
  if (check) return ZodAny.create().superRefine(function (data, ctx) {
    var _a, _b;
    if (!check(data)) {
      var p = typeof params === "function" ? params(data) : typeof params === "string" ? {
        message: params
      } : params;
      var _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;
      var p2 = typeof p === "string" ? {
        message: p
      } : p;
      ctx.addIssue(_objectSpread(_objectSpread({
        code: "custom"
      }, p2), {}, {
        fatal: _fatal
      }));
    }
  });
  return ZodAny.create();
}
var late = exports.late = {
  object: ZodObject.lazycreate
};
var ZodFirstPartyTypeKind;
(function (ZodFirstPartyTypeKind) {
  ZodFirstPartyTypeKind["ZodString"] = "ZodString";
  ZodFirstPartyTypeKind["ZodNumber"] = "ZodNumber";
  ZodFirstPartyTypeKind["ZodNaN"] = "ZodNaN";
  ZodFirstPartyTypeKind["ZodBigInt"] = "ZodBigInt";
  ZodFirstPartyTypeKind["ZodBoolean"] = "ZodBoolean";
  ZodFirstPartyTypeKind["ZodDate"] = "ZodDate";
  ZodFirstPartyTypeKind["ZodSymbol"] = "ZodSymbol";
  ZodFirstPartyTypeKind["ZodUndefined"] = "ZodUndefined";
  ZodFirstPartyTypeKind["ZodNull"] = "ZodNull";
  ZodFirstPartyTypeKind["ZodAny"] = "ZodAny";
  ZodFirstPartyTypeKind["ZodUnknown"] = "ZodUnknown";
  ZodFirstPartyTypeKind["ZodNever"] = "ZodNever";
  ZodFirstPartyTypeKind["ZodVoid"] = "ZodVoid";
  ZodFirstPartyTypeKind["ZodArray"] = "ZodArray";
  ZodFirstPartyTypeKind["ZodObject"] = "ZodObject";
  ZodFirstPartyTypeKind["ZodUnion"] = "ZodUnion";
  ZodFirstPartyTypeKind["ZodDiscriminatedUnion"] = "ZodDiscriminatedUnion";
  ZodFirstPartyTypeKind["ZodIntersection"] = "ZodIntersection";
  ZodFirstPartyTypeKind["ZodTuple"] = "ZodTuple";
  ZodFirstPartyTypeKind["ZodRecord"] = "ZodRecord";
  ZodFirstPartyTypeKind["ZodMap"] = "ZodMap";
  ZodFirstPartyTypeKind["ZodSet"] = "ZodSet";
  ZodFirstPartyTypeKind["ZodFunction"] = "ZodFunction";
  ZodFirstPartyTypeKind["ZodLazy"] = "ZodLazy";
  ZodFirstPartyTypeKind["ZodLiteral"] = "ZodLiteral";
  ZodFirstPartyTypeKind["ZodEnum"] = "ZodEnum";
  ZodFirstPartyTypeKind["ZodEffects"] = "ZodEffects";
  ZodFirstPartyTypeKind["ZodNativeEnum"] = "ZodNativeEnum";
  ZodFirstPartyTypeKind["ZodOptional"] = "ZodOptional";
  ZodFirstPartyTypeKind["ZodNullable"] = "ZodNullable";
  ZodFirstPartyTypeKind["ZodDefault"] = "ZodDefault";
  ZodFirstPartyTypeKind["ZodCatch"] = "ZodCatch";
  ZodFirstPartyTypeKind["ZodPromise"] = "ZodPromise";
  ZodFirstPartyTypeKind["ZodBranded"] = "ZodBranded";
  ZodFirstPartyTypeKind["ZodPipeline"] = "ZodPipeline";
  ZodFirstPartyTypeKind["ZodReadonly"] = "ZodReadonly";
})(ZodFirstPartyTypeKind || (exports.ZodFirstPartyTypeKind = ZodFirstPartyTypeKind = {}));
var instanceOfType = exports["instanceof"] = function instanceOfType(
// const instanceOfType = <T extends new (...args: any[]) => any>(
cls) {
  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
    message: "Input not instance of ".concat(cls.name)
  };
  return custom(function (data) {
    return data instanceof cls;
  }, params);
};
var stringType = exports.string = ZodString.create;
var numberType = exports.number = ZodNumber.create;
var nanType = exports.nan = ZodNaN.create;
var bigIntType = exports.bigint = ZodBigInt.create;
var booleanType = exports["boolean"] = ZodBoolean.create;
var dateType = exports.date = ZodDate.create;
var symbolType = exports.symbol = ZodSymbol.create;
var undefinedType = exports.undefined = ZodUndefined.create;
var nullType = exports["null"] = ZodNull.create;
var anyType = exports.any = ZodAny.create;
var unknownType = exports.unknown = ZodUnknown.create;
var neverType = exports.never = ZodNever.create;
var voidType = exports["void"] = ZodVoid.create;
var arrayType = exports.array = ZodArray.create;
var objectType = exports.object = ZodObject.create;
var strictObjectType = exports.strictObject = ZodObject.strictCreate;
var unionType = exports.union = ZodUnion.create;
var discriminatedUnionType = exports.discriminatedUnion = ZodDiscriminatedUnion.create;
var intersectionType = exports.intersection = ZodIntersection.create;
var tupleType = exports.tuple = ZodTuple.create;
var recordType = exports.record = ZodRecord.create;
var mapType = exports.map = ZodMap.create;
var setType = exports.set = ZodSet.create;
var functionType = exports["function"] = ZodFunction.create;
var lazyType = exports.lazy = ZodLazy.create;
var literalType = exports.literal = ZodLiteral.create;
var enumType = exports["enum"] = ZodEnum.create;
var nativeEnumType = exports.nativeEnum = ZodNativeEnum.create;
var promiseType = exports.promise = ZodPromise.create;
var effectsType = exports.transformer = exports.effect = ZodEffects.create;
var optionalType = exports.optional = ZodOptional.create;
var nullableType = exports.nullable = ZodNullable.create;
var preprocessType = exports.preprocess = ZodEffects.createWithPreprocess;
var pipelineType = exports.pipeline = ZodPipeline.create;
var ostring = exports.ostring = function ostring() {
  return stringType().optional();
};
var onumber = exports.onumber = function onumber() {
  return numberType().optional();
};
var oboolean = exports.oboolean = function oboolean() {
  return booleanType().optional();
};
var coerce = exports.coerce = {
  string: function string(arg) {
    return ZodString.create(_objectSpread(_objectSpread({}, arg), {}, {
      coerce: true
    }));
  },
  number: function number(arg) {
    return ZodNumber.create(_objectSpread(_objectSpread({}, arg), {}, {
      coerce: true
    }));
  },
  "boolean": function boolean(arg) {
    return ZodBoolean.create(_objectSpread(_objectSpread({}, arg), {}, {
      coerce: true
    }));
  },
  bigint: function bigint(arg) {
    return ZodBigInt.create(_objectSpread(_objectSpread({}, arg), {}, {
      coerce: true
    }));
  },
  date: function date(arg) {
    return ZodDate.create(_objectSpread(_objectSpread({}, arg), {}, {
      coerce: true
    }));
  }
};
var NEVER = exports.NEVER = INVALID;
var z = exports.z = exports["default"] = /*#__PURE__*/Object.freeze({
  __proto__: null,
  defaultErrorMap: errorMap,
  setErrorMap: setErrorMap,
  getErrorMap: getErrorMap,
  makeIssue: makeIssue,
  EMPTY_PATH: EMPTY_PATH,
  addIssueToContext: addIssueToContext,
  ParseStatus: ParseStatus,
  INVALID: INVALID,
  DIRTY: DIRTY,
  OK: OK,
  isAborted: isAborted,
  isDirty: isDirty,
  isValid: isValid,
  isAsync: isAsync,
  get util() {
    return util;
  },
  get objectUtil() {
    return objectUtil;
  },
  ZodParsedType: ZodParsedType,
  getParsedType: getParsedType,
  ZodType: ZodType,
  datetimeRegex: datetimeRegex,
  ZodString: ZodString,
  ZodNumber: ZodNumber,
  ZodBigInt: ZodBigInt,
  ZodBoolean: ZodBoolean,
  ZodDate: ZodDate,
  ZodSymbol: ZodSymbol,
  ZodUndefined: ZodUndefined,
  ZodNull: ZodNull,
  ZodAny: ZodAny,
  ZodUnknown: ZodUnknown,
  ZodNever: ZodNever,
  ZodVoid: ZodVoid,
  ZodArray: ZodArray,
  ZodObject: ZodObject,
  ZodUnion: ZodUnion,
  ZodDiscriminatedUnion: ZodDiscriminatedUnion,
  ZodIntersection: ZodIntersection,
  ZodTuple: ZodTuple,
  ZodRecord: ZodRecord,
  ZodMap: ZodMap,
  ZodSet: ZodSet,
  ZodFunction: ZodFunction,
  ZodLazy: ZodLazy,
  ZodLiteral: ZodLiteral,
  ZodEnum: ZodEnum,
  ZodNativeEnum: ZodNativeEnum,
  ZodPromise: ZodPromise,
  ZodEffects: ZodEffects,
  ZodTransformer: ZodEffects,
  ZodOptional: ZodOptional,
  ZodNullable: ZodNullable,
  ZodDefault: ZodDefault,
  ZodCatch: ZodCatch,
  ZodNaN: ZodNaN,
  BRAND: BRAND,
  ZodBranded: ZodBranded,
  ZodPipeline: ZodPipeline,
  ZodReadonly: ZodReadonly,
  custom: custom,
  Schema: ZodType,
  ZodSchema: ZodType,
  late: late,
  get ZodFirstPartyTypeKind() {
    return ZodFirstPartyTypeKind;
  },
  coerce: coerce,
  any: anyType,
  array: arrayType,
  bigint: bigIntType,
  "boolean": booleanType,
  date: dateType,
  discriminatedUnion: discriminatedUnionType,
  effect: effectsType,
  'enum': enumType,
  'function': functionType,
  'instanceof': instanceOfType,
  intersection: intersectionType,
  lazy: lazyType,
  literal: literalType,
  map: mapType,
  nan: nanType,
  nativeEnum: nativeEnumType,
  never: neverType,
  'null': nullType,
  nullable: nullableType,
  number: numberType,
  object: objectType,
  oboolean: oboolean,
  onumber: onumber,
  optional: optionalType,
  ostring: ostring,
  pipeline: pipelineType,
  preprocess: preprocessType,
  promise: promiseType,
  record: recordType,
  set: setType,
  strictObject: strictObjectType,
  string: stringType,
  symbol: symbolType,
  transformer: effectsType,
  tuple: tupleType,
  'undefined': undefinedType,
  union: unionType,
  unknown: unknownType,
  'void': voidType,
  NEVER: NEVER,
  ZodIssueCode: ZodIssueCode,
  quotelessJson: quotelessJson,
  ZodError: ZodError
});

},{}],210:[function(require,module,exports){
"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
require("buffer");
var _require = require("@tonconnect/ui"),
  TonConnectUI = _require.TonConnectUI;
var _require2 = require("@ton/ton"),
  Address = _require2.Address,
  JettonMaster = _require2.JettonMaster,
  TonClient = _require2.TonClient;
var _require3 = require("@ton/core"),
  toNano = _require3.toNano;
var _require4 = require("./wrappers/JettonWallet.js"),
  JettonWallet = _require4.JettonWallet;
var IS_MAINNET = "0";
var JETTON_TRANSFER_GAS_FEES = toNano("0.038");
var TON_API_KEY = IS_MAINNET === "1" ? "ce3bc2ecbb46fadc220e408d8c3c81520efddf6f1ca876944468a47b1a1c9620" : "d6f13f48471eeb336b501ea04ec169f5cfdb70425c7f0472952b9e023d6f878a";
var USDT_MASTER_ADDRESS_TESTNET = Address.parse("kQD0GKBM8ZbryVk2aESmzfU6b9b_8era_IkvBSELujFZPsyy");
var USDT_MASTER_ADDRESS_MAINNET = Address.parse("EQCxE6mUtQJKFnGfaROTKOt1lZbDiiX1kCixRv7Nw2Id_sDs");
var TEST_WALLET = "0QDTWdtCCfl3w5b86pyVVx6g_7lSAWhTEQXIJeoScZnTJTEH";
var USDT_MASTER_ADDRESS = IS_MAINNET === "1" ? USDT_MASTER_ADDRESS_MAINNET : USDT_MASTER_ADDRESS_TESTNET,
  TON_API_ENDPOINT = IS_MAINNET === "1" ? "https://toncenter.com/api/v2/jsonRPC" : "https://testnet.toncenter.com/api/v2/jsonRPC";
var tonConnectUI = new TonConnectUI({
  manifestUrl: "https://ox-bot.s3.amazonaws.com/tonconnect-manifest.json",
  buttonRootId: "ton-connect"
});
var tonClient = new TonClient({
  apiKey: TON_API_KEY,
  endpoint: TON_API_ENDPOINT
});
function connectToWallet() {
  return _connectToWallet.apply(this, arguments);
} // Call the function
function _connectToWallet() {
  _connectToWallet = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
    var connectedWallet;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return tonConnectUI.connectWallet();
        case 2:
          connectedWallet = _context2.sent;
          console.log(connectedWallet);
        case 4:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return _connectToWallet.apply(this, arguments);
}
connectToWallet()["catch"](function (error) {
  console.error("Error connecting to wallet:", error);
});
function sendTransaction() {
  return _sendTransaction.apply(this, arguments);
}
function _sendTransaction() {
  _sendTransaction = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
    var amount, address, transaction, res;
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          amount = $("#deposit-amount").val() / $("#ton-price").val();
          address = $.trim($(".bank-listing .form-check-input:checked").parent().find(".address").text()) || TEST_WALLET;
          transaction = {
            validUntil: Math.round(Date.now() / 1000) + 10,
            messages: [{
              address: address,
              amount: amount.toFixed(2) * 1000000000
            }]
          };
          _context3.prev = 3;
          _context3.next = 6;
          return tonConnectUI.sendTransaction(transaction);
        case 6:
          res = _context3.sent;
          if (res.boc) {
            $("#boc").val(res.boc);
            document.getElementById("bank-transfer").submit();
            console.log(JSON.stringify(res));
          }
          _context3.next = 13;
          break;
        case 10:
          _context3.prev = 10;
          _context3.t0 = _context3["catch"](3);
          console.log(_context3.t0);
        case 13:
        case "end":
          return _context3.stop();
      }
    }, _callee3, null, [[3, 10]]);
  }));
  return _sendTransaction.apply(this, arguments);
}
function sendUSDTTransaction() {
  return _sendUSDTTransaction.apply(this, arguments);
}
function _sendUSDTTransaction() {
  _sendUSDTTransaction = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
    var _tonConnectUI$wallet;
    var walletAddress, amount, depositWallet, jettonMaster, userAddress, jettonWallet, depositJettonAddress, depositjettonWallet, sender;
    return _regeneratorRuntime().wrap(function _callee5$(_context5) {
      while (1) switch (_context5.prev = _context5.next) {
        case 0:
          console.log(1, tonConnectUI.wallet);
          walletAddress = (_tonConnectUI$wallet = tonConnectUI.wallet) !== null && _tonConnectUI$wallet !== void 0 && (_tonConnectUI$wallet = _tonConnectUI$wallet.account) !== null && _tonConnectUI$wallet !== void 0 && _tonConnectUI$wallet.address ? Address.parse(tonConnectUI.wallet.account.address) : undefined;
          amount = $("#deposit-amount").val();
          depositWallet = $.trim($(".bank-listing .form-check-input:checked").parent().find(".address").text()) || TEST_WALLET;
          console.log({
            depositWallet: depositWallet
          });
          console.log(1.1, USDT_MASTER_ADDRESS);
          jettonMaster = tonClient.open(JettonMaster.create(USDT_MASTER_ADDRESS));
          console.log(1.2, jettonMaster);
          _context5.next = 10;
          return jettonMaster.getWalletAddress(walletAddress);
        case 10:
          userAddress = _context5.sent;
          console.log(2, userAddress.toString());
          jettonWallet = tonClient.open(JettonWallet.createFromAddress(userAddress));
          console.log(3, jettonWallet, jettonWallet.address.toString());
          _context5.next = 16;
          return jettonMaster.getWalletAddress(Address.parse(depositWallet));
        case 16:
          depositJettonAddress = _context5.sent;
          depositjettonWallet = tonClient.open(JettonWallet.createFromAddress(depositJettonAddress));
          console.log(4, depositjettonWallet, depositjettonWallet.address.toString());
          sender = {
            send: function () {
              var _send = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(args) {
                var _args$body;
                return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                  while (1) switch (_context4.prev = _context4.next) {
                    case 0:
                      _context4.next = 2;
                      return tonConnectUI.sendTransaction({
                        messages: [{
                          address: args.to.toString(),
                          amount: args.value.toString(),
                          payload: (_args$body = args.body) === null || _args$body === void 0 || (_args$body = _args$body.toBoc()) === null || _args$body === void 0 ? void 0 : _args$body.toString("base64")
                        }],
                        validUntil: Date.now() + 5 * 60 * 1000 // 5 minutes for user to approve
                      });
                    case 2:
                    case "end":
                      return _context4.stop();
                  }
                }, _callee4);
              }));
              function send(_x2) {
                return _send.apply(this, arguments);
              }
              return send;
            }(),
            address: walletAddress
          };
          _context5.next = 22;
          return jettonWallet.sendTransfer(sender, {
            fwdAmount: BigInt(1),
            comment: "",
            jettonAmount: BigInt(Number(amount) * 100 * 10000),
            toAddress: Address.parse(depositWallet),
            value: JETTON_TRANSFER_GAS_FEES
          });
        case 22:
          return _context5.abrupt("return", {
            boc: "123123"
          });
        case 23:
        case "end":
          return _context5.stop();
      }
    }, _callee5);
  }));
  return _sendUSDTTransaction.apply(this, arguments);
}
$("#send-transaction").on("click", function (e) {
  sendTransaction();
});
$("#send-usdt-transaction").on("click", /*#__PURE__*/function () {
  var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {
    var _yield$sendUSDTTransa, boc;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return sendUSDTTransaction();
        case 2:
          _yield$sendUSDTTransa = _context.sent;
          boc = _yield$sendUSDTTransa.boc;
          if (boc) {
            document.getElementById("bank-transfer").submit();
          }
        case 5:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function (_x) {
    return _ref.apply(this, arguments);
  };
}());

},{"./wrappers/JettonWallet.js":211,"@ton/core":35,"@ton/ton":111,"@tonconnect/ui":143,"buffer":196}],211:[function(require,module,exports){
"use strict";

var __awaiter = void 0 && (void 0).__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator = void 0 && (void 0).__generator || function (thisArg, body) {
  var _ = {
      label: 0,
      sent: function sent() {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
    f,
    y,
    t,
    g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
  return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;
  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (g && (g = 0, op[0] && (_ = 0)), _) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };
        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;
        case 7:
          op = _.ops.pop();
          _.trys.pop();
          continue;
        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }
          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }
          if (t && _.label < t[2]) {
            _.label = t[2];
            _.ops.push(op);
            break;
          }
          if (t[2]) _.ops.pop();
          _.trys.pop();
          continue;
      }
      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.JettonWallet = void 0;
var core_1 = require("@ton/core");
var JettonWallet = /** @class */function () {
  function JettonWallet(address) {
    this.address = address;
  }
  JettonWallet.createFromAddress = function (address) {
    return new JettonWallet(address);
  };
  /**
   * Sends message of jetton transfer to jetton wallet. More about jetton transfers here https://docs.ton.org/develop/dapps/asset-processing/jettons
   */
  JettonWallet.prototype.sendTransfer = function (provider, via, opts) {
    return __awaiter(this, void 0, void 0, function () {
      var builder, commentPayload;
      var _a;
      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            builder = (0, core_1.beginCell)().storeUint(JettonWallet.OPCODES.TRANSFER, 32) // opcode for transfer. 0xf8a7ea5 is used
            .storeUint((_a = opts.queryId) !== null && _a !== void 0 ? _a : 0, 64).storeCoins(opts.jettonAmount) // jetton amount to transfer. Be aware of decimals. Almost all jettons has 9, but USDT has 6. More about decimals https://docs.ton.org/develop/dapps/asset-processing/metadata#jetton-metadata-attributes
            .storeAddress(opts.toAddress) // jetton destination address. Use wallet address, not jetton address itself
            .storeAddress(via.address) // excesses address. Extra tons, sent with message, will be transferred here.
            .storeUint(0, 1) // custom payload. Empty in standard jettons
            .storeCoins(opts.fwdAmount);
            // if comment needed, it stored as Cell ref
            if ("comment" in opts) {
              commentPayload = (0, core_1.beginCell)().storeUint(0, 32).storeStringTail(opts.comment).endCell();
              builder.storeBit(1);
              builder.storeRef(commentPayload);
            } else {
              // if not, store forward payload
              if (opts.forwardPayload instanceof core_1.Slice) {
                builder.storeBit(0);
                builder.storeSlice(opts.forwardPayload);
              } else if (opts.forwardPayload instanceof core_1.Cell) {
                builder.storeBit(1);
                builder.storeRef(opts.forwardPayload);
              } else {
                builder.storeBit(0);
              }
            }
            // provider often obtained via client.open(contract) method
            return [4 /*yield*/, provider.internal(via, {
              value: opts.value,
              // value to pay gas
              sendMode: core_1.SendMode.PAY_GAS_SEPARATELY,
              body: builder.endCell()
            })];
          case 1:
            // provider often obtained via client.open(contract) method
            _b.sent();
            return [2 /*return*/];
        }
      });
    });
  };
  JettonWallet.prototype.getWalletData = function (provider) {
    return __awaiter(this, void 0, void 0, function () {
      var stack;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4 /*yield*/, provider.get("get_wallet_data", [])];
          case 1:
            stack = _a.sent().stack;
            return [2 /*return*/, {
              balance: stack.readBigNumber(),
              ownerAddress: stack.readAddress(),
              jettonMasterAddress: stack.readAddress(),
              jettonWalletCode: stack.readCell()
            }];
        }
      });
    });
  };
  JettonWallet.OPCODES = {
    TRANSFER: 0xf8a7ea5
  };
  return JettonWallet;
}();
exports.JettonWallet = JettonWallet;

},{"@ton/core":35}]},{},[210]);
